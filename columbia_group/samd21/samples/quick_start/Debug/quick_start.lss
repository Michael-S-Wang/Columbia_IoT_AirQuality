
quick_start.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00012804  00000000  00000000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     000000c8  20000000  00012804  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000a68  200000c8  000128cc  000200c8  2**2
                  ALLOC
  3 .stack        00002000  20000b30  00013334  000200c8  2**0
                  ALLOC
  4 .ARM.attributes 00000028  00000000  00000000  000200c8  2**0
                  CONTENTS, READONLY
  5 .comment      0000005b  00000000  00000000  000200f0  2**0
                  CONTENTS, READONLY
  6 .debug_info   00063848  00000000  00000000  0002014b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00008c6e  00000000  00000000  00083993  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00016cbe  00000000  00000000  0008c601  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 000012f8  00000000  00000000  000a32bf  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00001600  00000000  00000000  000a45b7  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  00025f1e  00000000  00000000  000a5bb7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   000261d5  00000000  00000000  000cbad5  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00099d9e  00000000  00000000  000f1caa  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  00004478  00000000  00000000  0018ba48  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <_sfixed>:
       0:	20002b30 	.word	0x20002b30
       4:	00008da1 	.word	0x00008da1
       8:	00008d9d 	.word	0x00008d9d
       c:	00008d9d 	.word	0x00008d9d
	...
      2c:	00008d9d 	.word	0x00008d9d
	...
      38:	00008d9d 	.word	0x00008d9d
      3c:	00008d9d 	.word	0x00008d9d
      40:	00008d9d 	.word	0x00008d9d
      44:	00008d9d 	.word	0x00008d9d
      48:	00008d9d 	.word	0x00008d9d
      4c:	00008d9d 	.word	0x00008d9d
      50:	00007575 	.word	0x00007575
      54:	00008d9d 	.word	0x00008d9d
      58:	00008d9d 	.word	0x00008d9d
      5c:	00008d9d 	.word	0x00008d9d
      60:	00008d9d 	.word	0x00008d9d
      64:	00007b7d 	.word	0x00007b7d
      68:	00007b8d 	.word	0x00007b8d
      6c:	00007b9d 	.word	0x00007b9d
      70:	00007bad 	.word	0x00007bad
      74:	00007bbd 	.word	0x00007bbd
      78:	00007bcd 	.word	0x00007bcd
      7c:	000046d9 	.word	0x000046d9
      80:	000046e9 	.word	0x000046e9
      84:	000046f9 	.word	0x000046f9
      88:	00008d9d 	.word	0x00008d9d
      8c:	00008d9d 	.word	0x00008d9d
      90:	00008d9d 	.word	0x00008d9d
      94:	00008d9d 	.word	0x00008d9d
      98:	00008d9d 	.word	0x00008d9d
      9c:	000033c1 	.word	0x000033c1
      a0:	00008d9d 	.word	0x00008d9d
      a4:	00008d9d 	.word	0x00008d9d
      a8:	00008d9d 	.word	0x00008d9d
      ac:	00008d9d 	.word	0x00008d9d

000000b0 <__do_global_dtors_aux>:
      b0:	b510      	push	{r4, lr}
      b2:	4c06      	ldr	r4, [pc, #24]	; (cc <__do_global_dtors_aux+0x1c>)
      b4:	7823      	ldrb	r3, [r4, #0]
      b6:	2b00      	cmp	r3, #0
      b8:	d107      	bne.n	ca <__do_global_dtors_aux+0x1a>
      ba:	4b05      	ldr	r3, [pc, #20]	; (d0 <__do_global_dtors_aux+0x20>)
      bc:	2b00      	cmp	r3, #0
      be:	d002      	beq.n	c6 <__do_global_dtors_aux+0x16>
      c0:	4804      	ldr	r0, [pc, #16]	; (d4 <__do_global_dtors_aux+0x24>)
      c2:	e000      	b.n	c6 <__do_global_dtors_aux+0x16>
      c4:	bf00      	nop
      c6:	2301      	movs	r3, #1
      c8:	7023      	strb	r3, [r4, #0]
      ca:	bd10      	pop	{r4, pc}
      cc:	200000c8 	.word	0x200000c8
      d0:	00000000 	.word	0x00000000
      d4:	00012804 	.word	0x00012804

000000d8 <frame_dummy>:
      d8:	b508      	push	{r3, lr}
      da:	4b08      	ldr	r3, [pc, #32]	; (fc <frame_dummy+0x24>)
      dc:	2b00      	cmp	r3, #0
      de:	d003      	beq.n	e8 <frame_dummy+0x10>
      e0:	4807      	ldr	r0, [pc, #28]	; (100 <frame_dummy+0x28>)
      e2:	4908      	ldr	r1, [pc, #32]	; (104 <frame_dummy+0x2c>)
      e4:	e000      	b.n	e8 <frame_dummy+0x10>
      e6:	bf00      	nop
      e8:	4807      	ldr	r0, [pc, #28]	; (108 <frame_dummy+0x30>)
      ea:	6803      	ldr	r3, [r0, #0]
      ec:	2b00      	cmp	r3, #0
      ee:	d100      	bne.n	f2 <frame_dummy+0x1a>
      f0:	bd08      	pop	{r3, pc}
      f2:	4b06      	ldr	r3, [pc, #24]	; (10c <frame_dummy+0x34>)
      f4:	2b00      	cmp	r3, #0
      f6:	d0fb      	beq.n	f0 <frame_dummy+0x18>
      f8:	4798      	blx	r3
      fa:	e7f9      	b.n	f0 <frame_dummy+0x18>
      fc:	00000000 	.word	0x00000000
     100:	00012804 	.word	0x00012804
     104:	200000cc 	.word	0x200000cc
     108:	00012804 	.word	0x00012804
     10c:	00000000 	.word	0x00000000

00000110 <_http_client_send_wait>:
		module->cb(module, HTTP_CLIENT_CALLBACK_DISCONNECTED, &data);
	}
}

int _http_client_send_wait(void *_module, char *buffer, size_t buffer_len)
{
     110:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     112:	1c04      	adds	r4, r0, #0
     114:	1c0e      	adds	r6, r1, #0
     116:	1c15      	adds	r5, r2, #0
	int result;
	struct http_client_module *const module = (struct http_client_module *const)_module;
	
	module->sending = 1;
     118:	2241      	movs	r2, #65	; 0x41
     11a:	5c81      	ldrb	r1, [r0, r2]
     11c:	2301      	movs	r3, #1
     11e:	430b      	orrs	r3, r1
     120:	5483      	strb	r3, [r0, r2]

	print_to_terminal("\n\n\n\ Sending This Buffer over the socket \n%s\n\n\n", buffer);
     122:	4817      	ldr	r0, [pc, #92]	; (180 <_http_client_send_wait+0x70>)
     124:	1c31      	adds	r1, r6, #0
     126:	4b17      	ldr	r3, [pc, #92]	; (184 <_http_client_send_wait+0x74>)
     128:	4798      	blx	r3

	if ((result = send(module->sock, (void*)buffer, buffer_len, 0)) < 0) {
     12a:	2000      	movs	r0, #0
     12c:	5620      	ldrsb	r0, [r4, r0]
     12e:	b2aa      	uxth	r2, r5
     130:	1c31      	adds	r1, r6, #0
     132:	2300      	movs	r3, #0
     134:	4d14      	ldr	r5, [pc, #80]	; (188 <_http_client_send_wait+0x78>)
     136:	47a8      	blx	r5
     138:	2800      	cmp	r0, #0
     13a:	db08      	blt.n	14e <_http_client_send_wait+0x3e>
		module->sending = 0;
		return result;
	}
	while (module->sending == 1 && module->req.state > STATE_SOCK_CONNECTED){
     13c:	2341      	movs	r3, #65	; 0x41
     13e:	5ce3      	ldrb	r3, [r4, r3]
     140:	07db      	lsls	r3, r3, #31
     142:	d519      	bpl.n	178 <_http_client_send_wait+0x68>
     144:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
		m2m_wifi_handle_events(NULL);
		sw_timer_task(module->config.timer_inst);
	}

	return 0;
     146:	2000      	movs	r0, #0

	if ((result = send(module->sock, (void*)buffer, buffer_len, 0)) < 0) {
		module->sending = 0;
		return result;
	}
	while (module->sending == 1 && module->req.state > STATE_SOCK_CONNECTED){
     148:	2b02      	cmp	r3, #2
     14a:	d918      	bls.n	17e <_http_client_send_wait+0x6e>
     14c:	e005      	b.n	15a <_http_client_send_wait+0x4a>
	module->sending = 1;

	print_to_terminal("\n\n\n\ Sending This Buffer over the socket \n%s\n\n\n", buffer);

	if ((result = send(module->sock, (void*)buffer, buffer_len, 0)) < 0) {
		module->sending = 0;
     14e:	2241      	movs	r2, #65	; 0x41
     150:	5ca3      	ldrb	r3, [r4, r2]
     152:	2101      	movs	r1, #1
     154:	438b      	bics	r3, r1
     156:	54a3      	strb	r3, [r4, r2]
		return result;
     158:	e011      	b.n	17e <_http_client_send_wait+0x6e>
	}
	while (module->sending == 1 && module->req.state > STATE_SOCK_CONNECTED){
		m2m_wifi_handle_events(NULL);
     15a:	4f0c      	ldr	r7, [pc, #48]	; (18c <_http_client_send_wait+0x7c>)
		sw_timer_task(module->config.timer_inst);
     15c:	4e0c      	ldr	r6, [pc, #48]	; (190 <_http_client_send_wait+0x80>)

	if ((result = send(module->sock, (void*)buffer, buffer_len, 0)) < 0) {
		module->sending = 0;
		return result;
	}
	while (module->sending == 1 && module->req.state > STATE_SOCK_CONNECTED){
     15e:	2541      	movs	r5, #65	; 0x41
		m2m_wifi_handle_events(NULL);
     160:	2000      	movs	r0, #0
     162:	47b8      	blx	r7
		sw_timer_task(module->config.timer_inst);
     164:	6d60      	ldr	r0, [r4, #84]	; 0x54
     166:	47b0      	blx	r6

	if ((result = send(module->sock, (void*)buffer, buffer_len, 0)) < 0) {
		module->sending = 0;
		return result;
	}
	while (module->sending == 1 && module->req.state > STATE_SOCK_CONNECTED){
     168:	5d63      	ldrb	r3, [r4, r5]
     16a:	07db      	lsls	r3, r3, #31
     16c:	d506      	bpl.n	17c <_http_client_send_wait+0x6c>
     16e:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
     170:	2b02      	cmp	r3, #2
     172:	d8f5      	bhi.n	160 <_http_client_send_wait+0x50>
		m2m_wifi_handle_events(NULL);
		sw_timer_task(module->config.timer_inst);
	}

	return 0;
     174:	2000      	movs	r0, #0
     176:	e002      	b.n	17e <_http_client_send_wait+0x6e>
     178:	2000      	movs	r0, #0
     17a:	e000      	b.n	17e <_http_client_send_wait+0x6e>
     17c:	2000      	movs	r0, #0
}
     17e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     180:	0000e308 	.word	0x0000e308
     184:	000090f5 	.word	0x000090f5
     188:	000071f9 	.word	0x000071f9
     18c:	00005831 	.word	0x00005831
     190:	000013a9 	.word	0x000013a9

00000194 <http_client_get_config_defaults>:
 */
static struct http_client_module *module_ref_inst[TCP_SOCK_MAX] = {NULL,};

void http_client_get_config_defaults(struct http_client_config *const config)
{
	config->port = 80;
     194:	2350      	movs	r3, #80	; 0x50
     196:	8003      	strh	r3, [r0, #0]
	config->tls = 0;
     198:	2300      	movs	r3, #0
     19a:	7083      	strb	r3, [r0, #2]
	config->timeout = 2000;
     19c:	22fa      	movs	r2, #250	; 0xfa
     19e:	00d2      	lsls	r2, r2, #3
     1a0:	8102      	strh	r2, [r0, #8]
	config->timer_inst = NULL;
     1a2:	6043      	str	r3, [r0, #4]
	config->recv_buffer = NULL;
     1a4:	60c3      	str	r3, [r0, #12]
	config->recv_buffer_size = 256;
     1a6:	3301      	adds	r3, #1
     1a8:	33ff      	adds	r3, #255	; 0xff
     1aa:	6103      	str	r3, [r0, #16]
	config->send_buffer_size = MIN_SEND_BUFFER_SIZE;
     1ac:	3b6e      	subs	r3, #110	; 0x6e
     1ae:	6143      	str	r3, [r0, #20]
	config->user_agent = DEFAULT_USER_AGENT;
     1b0:	4b01      	ldr	r3, [pc, #4]	; (1b8 <http_client_get_config_defaults+0x24>)
     1b2:	6183      	str	r3, [r0, #24]
}
     1b4:	4770      	bx	lr
     1b6:	46c0      	nop			; (mov r8, r8)
     1b8:	0000e338 	.word	0x0000e338

000001bc <http_client_init>:

int http_client_init(struct http_client_module *const module, struct http_client_config *config)
{
     1bc:	b538      	push	{r3, r4, r5, lr}
	/* Checks the parameters. */
	if (module == NULL || config == NULL) {
     1be:	2800      	cmp	r0, #0
     1c0:	d038      	beq.n	234 <http_client_init+0x78>
     1c2:	2900      	cmp	r1, #0
     1c4:	d039      	beq.n	23a <http_client_init+0x7e>
		return -EINVAL;
	}

	if (config->recv_buffer_size == 0) {
     1c6:	690b      	ldr	r3, [r1, #16]
     1c8:	2b00      	cmp	r3, #0
     1ca:	d039      	beq.n	240 <http_client_init+0x84>
		return -EINVAL;
	}

	if (config->timer_inst == NULL) {
     1cc:	684b      	ldr	r3, [r1, #4]
     1ce:	2b00      	cmp	r3, #0
     1d0:	d039      	beq.n	246 <http_client_init+0x8a>
		return -EINVAL;
	}

	if (config->send_buffer_size < MIN_SEND_BUFFER_SIZE) {
     1d2:	694b      	ldr	r3, [r1, #20]
     1d4:	2b91      	cmp	r3, #145	; 0x91
     1d6:	d939      	bls.n	24c <http_client_init+0x90>
     1d8:	1c0d      	adds	r5, r1, #0
     1da:	1c04      	adds	r4, r0, #0
		return -EINVAL;
	}

	memset(module, 0, sizeof(struct http_client_module));
     1dc:	2100      	movs	r1, #0
     1de:	2294      	movs	r2, #148	; 0x94
     1e0:	0052      	lsls	r2, r2, #1
     1e2:	4b1f      	ldr	r3, [pc, #124]	; (260 <http_client_init+0xa4>)
     1e4:	4798      	blx	r3
	memcpy(&module->config, config, sizeof(struct http_client_config));
     1e6:	1c20      	adds	r0, r4, #0
     1e8:	3050      	adds	r0, #80	; 0x50
     1ea:	1c29      	adds	r1, r5, #0
     1ec:	221c      	movs	r2, #28
     1ee:	4b1d      	ldr	r3, [pc, #116]	; (264 <http_client_init+0xa8>)
     1f0:	4798      	blx	r3

	/* Allocate the buffer in the heap. */
	if (module->config.recv_buffer == NULL) {
     1f2:	6de3      	ldr	r3, [r4, #92]	; 0x5c
     1f4:	2b00      	cmp	r3, #0
     1f6:	d10a      	bne.n	20e <http_client_init+0x52>
		module->config.recv_buffer = malloc(config->recv_buffer_size);
     1f8:	6928      	ldr	r0, [r5, #16]
     1fa:	4b1b      	ldr	r3, [pc, #108]	; (268 <http_client_init+0xac>)
     1fc:	4798      	blx	r3
     1fe:	65e0      	str	r0, [r4, #92]	; 0x5c
		if (module->config.recv_buffer == NULL) {
     200:	2800      	cmp	r0, #0
     202:	d026      	beq.n	252 <http_client_init+0x96>
			return -ENOMEM;
		}
		module->alloc_buffer = 1;
     204:	2241      	movs	r2, #65	; 0x41
     206:	5ca1      	ldrb	r1, [r4, r2]
     208:	2304      	movs	r3, #4
     20a:	430b      	orrs	r3, r1
     20c:	54a3      	strb	r3, [r4, r2]
	}

	if (config->timeout > 0) {
     20e:	892b      	ldrh	r3, [r5, #8]
     210:	2b00      	cmp	r3, #0
     212:	d008      	beq.n	226 <http_client_init+0x6a>
		/* Enable the timer. */
		module->timer_id = sw_timer_register_callback(config->timer_inst, http_client_timer_callback, (void *)module, 0);
     214:	6868      	ldr	r0, [r5, #4]
     216:	4915      	ldr	r1, [pc, #84]	; (26c <http_client_init+0xb0>)
     218:	1c22      	adds	r2, r4, #0
     21a:	2300      	movs	r3, #0
     21c:	4d14      	ldr	r5, [pc, #80]	; (270 <http_client_init+0xb4>)
     21e:	47a8      	blx	r5
     220:	64a0      	str	r0, [r4, #72]	; 0x48

		if (module->timer_id < 0) {
     222:	2800      	cmp	r0, #0
     224:	db18      	blt.n	258 <http_client_init+0x9c>
			return -ENOSPC;
		}
	}

	module->req.state = STATE_INIT;
     226:	2300      	movs	r3, #0
     228:	66e3      	str	r3, [r4, #108]	; 0x6c
	module->resp.state = STATE_PARSE_HEADER;
     22a:	228c      	movs	r2, #140	; 0x8c
     22c:	0052      	lsls	r2, r2, #1
     22e:	50a3      	str	r3, [r4, r2]

	return 0;
     230:	2000      	movs	r0, #0
     232:	e013      	b.n	25c <http_client_init+0xa0>

int http_client_init(struct http_client_module *const module, struct http_client_config *config)
{
	/* Checks the parameters. */
	if (module == NULL || config == NULL) {
		return -EINVAL;
     234:	2016      	movs	r0, #22
     236:	4240      	negs	r0, r0
     238:	e010      	b.n	25c <http_client_init+0xa0>
     23a:	2016      	movs	r0, #22
     23c:	4240      	negs	r0, r0
     23e:	e00d      	b.n	25c <http_client_init+0xa0>
	}

	if (config->recv_buffer_size == 0) {
		return -EINVAL;
     240:	2016      	movs	r0, #22
     242:	4240      	negs	r0, r0
     244:	e00a      	b.n	25c <http_client_init+0xa0>
	}

	if (config->timer_inst == NULL) {
		return -EINVAL;
     246:	2016      	movs	r0, #22
     248:	4240      	negs	r0, r0
     24a:	e007      	b.n	25c <http_client_init+0xa0>
	}

	if (config->send_buffer_size < MIN_SEND_BUFFER_SIZE) {
		return -EINVAL;
     24c:	2016      	movs	r0, #22
     24e:	4240      	negs	r0, r0
     250:	e004      	b.n	25c <http_client_init+0xa0>

	/* Allocate the buffer in the heap. */
	if (module->config.recv_buffer == NULL) {
		module->config.recv_buffer = malloc(config->recv_buffer_size);
		if (module->config.recv_buffer == NULL) {
			return -ENOMEM;
     252:	200c      	movs	r0, #12
     254:	4240      	negs	r0, r0
     256:	e001      	b.n	25c <http_client_init+0xa0>
	if (config->timeout > 0) {
		/* Enable the timer. */
		module->timer_id = sw_timer_register_callback(config->timer_inst, http_client_timer_callback, (void *)module, 0);

		if (module->timer_id < 0) {
			return -ENOSPC;
     258:	201c      	movs	r0, #28
     25a:	4240      	negs	r0, r0

	module->req.state = STATE_INIT;
	module->resp.state = STATE_PARSE_HEADER;

	return 0;
}
     25c:	bd38      	pop	{r3, r4, r5, pc}
     25e:	46c0      	nop			; (mov r8, r8)
     260:	0000c0e1 	.word	0x0000c0e1
     264:	0000c0a7 	.word	0x0000c0a7
     268:	0000c069 	.word	0x0000c069
     26c:	0000038d 	.word	0x0000038d
     270:	00001331 	.word	0x00001331

00000274 <http_client_register_callback>:
}

int http_client_register_callback(struct http_client_module *const module, http_client_callback_t callback)
{
	/* Checks the parameters. */
	if (module == NULL) {
     274:	2800      	cmp	r0, #0
     276:	d002      	beq.n	27e <http_client_register_callback+0xa>
		return -EINVAL;
	}

	module->cb = callback;
     278:	64c1      	str	r1, [r0, #76]	; 0x4c

	return 0;
     27a:	2000      	movs	r0, #0
     27c:	e001      	b.n	282 <http_client_register_callback+0xe>

int http_client_register_callback(struct http_client_module *const module, http_client_callback_t callback)
{
	/* Checks the parameters. */
	if (module == NULL) {
		return -EINVAL;
     27e:	2016      	movs	r0, #22
     280:	4240      	negs	r0, r0
	}

	module->cb = callback;

	return 0;
}
     282:	4770      	bx	lr

00000284 <_http_client_clear_conn>:

	return 0;
}

void _http_client_clear_conn(struct http_client_module *const module, int reason)
{
     284:	b5f0      	push	{r4, r5, r6, r7, lr}
     286:	b085      	sub	sp, #20
     288:	1c04      	adds	r4, r0, #0
     28a:	1c0e      	adds	r6, r1, #0
	union http_client_data data;

	if (module->req.entity.close) {
     28c:	2380      	movs	r3, #128	; 0x80
     28e:	005b      	lsls	r3, r3, #1
     290:	58c3      	ldr	r3, [r0, r3]
     292:	2b00      	cmp	r3, #0
     294:	d003      	beq.n	29e <_http_client_clear_conn+0x1a>
		module->req.entity.close(module->req.entity.priv_data);
     296:	2282      	movs	r2, #130	; 0x82
     298:	0052      	lsls	r2, r2, #1
     29a:	5880      	ldr	r0, [r0, r2]
     29c:	4798      	blx	r3
	}

	memset(&module->req.entity, 0, sizeof(struct http_entity));
     29e:	1c20      	adds	r0, r4, #0
     2a0:	30f0      	adds	r0, #240	; 0xf0
     2a2:	2100      	movs	r1, #0
     2a4:	2218      	movs	r2, #24
     2a6:	4b18      	ldr	r3, [pc, #96]	; (308 <_http_client_clear_conn+0x84>)
     2a8:	4798      	blx	r3

	if (module->req.state >= STATE_TRY_SOCK_CONNECT) {
     2aa:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
     2ac:	2b00      	cmp	r3, #0
     2ae:	d003      	beq.n	2b8 <_http_client_clear_conn+0x34>
		close(module->sock);
     2b0:	2000      	movs	r0, #0
     2b2:	5620      	ldrsb	r0, [r4, r0]
     2b4:	4b15      	ldr	r3, [pc, #84]	; (30c <_http_client_clear_conn+0x88>)
     2b6:	4798      	blx	r3
	}

	module_ref_inst[module->sock] = NULL;
     2b8:	2300      	movs	r3, #0
     2ba:	56e3      	ldrsb	r3, [r4, r3]
     2bc:	009b      	lsls	r3, r3, #2
     2be:	2500      	movs	r5, #0
     2c0:	4a13      	ldr	r2, [pc, #76]	; (310 <_http_client_clear_conn+0x8c>)
     2c2:	509d      	str	r5, [r3, r2]
	memset(&module->req, 0, sizeof(struct http_client_req));
     2c4:	1c20      	adds	r0, r4, #0
     2c6:	306c      	adds	r0, #108	; 0x6c
     2c8:	2100      	movs	r1, #0
     2ca:	22ac      	movs	r2, #172	; 0xac
     2cc:	4f0e      	ldr	r7, [pc, #56]	; (308 <_http_client_clear_conn+0x84>)
     2ce:	47b8      	blx	r7
	memset(&module->resp, 0, sizeof(struct http_client_resp));
     2d0:	1c20      	adds	r0, r4, #0
     2d2:	3019      	adds	r0, #25
     2d4:	30ff      	adds	r0, #255	; 0xff
     2d6:	2100      	movs	r1, #0
     2d8:	2210      	movs	r2, #16
     2da:	47b8      	blx	r7
	module->req.state = STATE_INIT;
     2dc:	66e5      	str	r5, [r4, #108]	; 0x6c
	module->resp.state = STATE_PARSE_HEADER;
     2de:	238c      	movs	r3, #140	; 0x8c
     2e0:	005b      	lsls	r3, r3, #1
     2e2:	50e5      	str	r5, [r4, r3]

	module->sending = 0;
     2e4:	2241      	movs	r2, #65	; 0x41
     2e6:	5ca3      	ldrb	r3, [r4, r2]
	module->permanent = 0;
     2e8:	2101      	movs	r1, #1
     2ea:	438b      	bics	r3, r1
     2ec:	3101      	adds	r1, #1
     2ee:	438b      	bics	r3, r1
     2f0:	54a3      	strb	r3, [r4, r2]
	data.disconnected.reason = reason;
     2f2:	9601      	str	r6, [sp, #4]
	if (module->cb) {
     2f4:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
     2f6:	2b00      	cmp	r3, #0
     2f8:	d003      	beq.n	302 <_http_client_clear_conn+0x7e>
		module->cb(module, HTTP_CLIENT_CALLBACK_DISCONNECTED, &data);
     2fa:	1c20      	adds	r0, r4, #0
     2fc:	3102      	adds	r1, #2
     2fe:	aa01      	add	r2, sp, #4
     300:	4798      	blx	r3
	}
}
     302:	b005      	add	sp, #20
     304:	bdf0      	pop	{r4, r5, r6, r7, pc}
     306:	46c0      	nop			; (mov r8, r8)
     308:	0000c0e1 	.word	0x0000c0e1
     30c:	00007339 	.word	0x00007339
     310:	200000e4 	.word	0x200000e4

00000314 <http_client_socket_resolve_handler>:
	}

}

void http_client_socket_resolve_handler(uint8_t *doamin_name, uint32_t server_ip)
{
     314:	b5f0      	push	{r4, r5, r6, r7, lr}
     316:	b087      	sub	sp, #28
     318:	9000      	str	r0, [sp, #0]
     31a:	9101      	str	r1, [sp, #4]
     31c:	4c17      	ldr	r4, [pc, #92]	; (37c <http_client_socket_resolve_handler+0x68>)
     31e:	1c25      	adds	r5, r4, #0
     320:	351c      	adds	r5, #28
	struct sockaddr_in addr_in;

	for (i = 0; i < TCP_SOCK_MAX; i++) {
		if (module_ref_inst[i] != NULL) {
			module = module_ref_inst[i];
			if (!strcmp((const char*)doamin_name, module->host) && module->req.state == STATE_TRY_SOCK_CONNECT) {
     322:	4e17      	ldr	r6, [pc, #92]	; (380 <http_client_socket_resolve_handler+0x6c>)
	int i;
	struct http_client_module *module;
	struct sockaddr_in addr_in;

	for (i = 0; i < TCP_SOCK_MAX; i++) {
		if (module_ref_inst[i] != NULL) {
     324:	6827      	ldr	r7, [r4, #0]
     326:	2f00      	cmp	r7, #0
     328:	d023      	beq.n	372 <http_client_socket_resolve_handler+0x5e>
			module = module_ref_inst[i];
			if (!strcmp((const char*)doamin_name, module->host) && module->req.state == STATE_TRY_SOCK_CONNECT) {
     32a:	1c79      	adds	r1, r7, #1
     32c:	9800      	ldr	r0, [sp, #0]
     32e:	47b0      	blx	r6
     330:	2800      	cmp	r0, #0
     332:	d11e      	bne.n	372 <http_client_socket_resolve_handler+0x5e>
     334:	6efb      	ldr	r3, [r7, #108]	; 0x6c
     336:	2b01      	cmp	r3, #1
     338:	d11b      	bne.n	372 <http_client_socket_resolve_handler+0x5e>
				if (server_ip == 0) { /* Host was not found or was not reachable. */ 
     33a:	9b01      	ldr	r3, [sp, #4]
     33c:	2b00      	cmp	r3, #0
     33e:	d105      	bne.n	34c <http_client_socket_resolve_handler+0x38>
					_http_client_clear_conn(module, -EHOSTUNREACH);
     340:	1c38      	adds	r0, r7, #0
     342:	2176      	movs	r1, #118	; 0x76
     344:	4249      	negs	r1, r1
     346:	4b0f      	ldr	r3, [pc, #60]	; (384 <http_client_socket_resolve_handler+0x70>)
     348:	4798      	blx	r3
					return;
     34a:	e015      	b.n	378 <http_client_socket_resolve_handler+0x64>
				}
				addr_in.sin_family = AF_INET;
     34c:	2302      	movs	r3, #2
     34e:	aa02      	add	r2, sp, #8
     350:	8013      	strh	r3, [r2, #0]
				addr_in.sin_port = _htons(module->config.port);
     352:	334e      	adds	r3, #78	; 0x4e
     354:	5afb      	ldrh	r3, [r7, r3]
     356:	021a      	lsls	r2, r3, #8
     358:	0a1b      	lsrs	r3, r3, #8
     35a:	4313      	orrs	r3, r2
     35c:	aa02      	add	r2, sp, #8
     35e:	8053      	strh	r3, [r2, #2]
				addr_in.sin_addr.s_addr = server_ip;
     360:	9b01      	ldr	r3, [sp, #4]
     362:	9303      	str	r3, [sp, #12]
				connect(module->sock, (struct sockaddr *)&addr_in, sizeof(struct sockaddr_in));
     364:	2000      	movs	r0, #0
     366:	5638      	ldrsb	r0, [r7, r0]
     368:	1c11      	adds	r1, r2, #0
     36a:	2210      	movs	r2, #16
     36c:	4b06      	ldr	r3, [pc, #24]	; (388 <http_client_socket_resolve_handler+0x74>)
     36e:	4798      	blx	r3
				return;
     370:	e002      	b.n	378 <http_client_socket_resolve_handler+0x64>
     372:	3404      	adds	r4, #4
{
	int i;
	struct http_client_module *module;
	struct sockaddr_in addr_in;

	for (i = 0; i < TCP_SOCK_MAX; i++) {
     374:	42ac      	cmp	r4, r5
     376:	d1d5      	bne.n	324 <http_client_socket_resolve_handler+0x10>
				connect(module->sock, (struct sockaddr *)&addr_in, sizeof(struct sockaddr_in));
				return;
			}
		}
	}
}
     378:	b007      	add	sp, #28
     37a:	bdf0      	pop	{r4, r5, r6, r7, pc}
     37c:	200000e4 	.word	0x200000e4
     380:	0000ca31 	.word	0x0000ca31
     384:	00000285 	.word	0x00000285
     388:	00007161 	.word	0x00007161

0000038c <http_client_timer_callback>:

void http_client_timer_callback(struct sw_timer_module *const module, int timer_id, void *context, int period)
{
     38c:	b508      	push	{r3, lr}
	struct http_client_module *module_inst = (struct http_client_module *)context;

	/* Checks invalid arguments. */
	if (module_inst == NULL) {
     38e:	2a00      	cmp	r2, #0
     390:	d004      	beq.n	39c <http_client_timer_callback+0x10>
     392:	1c10      	adds	r0, r2, #0
		return;
	}

	_http_client_clear_conn(module_inst, -ETIME);
     394:	213e      	movs	r1, #62	; 0x3e
     396:	4249      	negs	r1, r1
     398:	4b01      	ldr	r3, [pc, #4]	; (3a0 <http_client_timer_callback+0x14>)
     39a:	4798      	blx	r3
}
     39c:	bd08      	pop	{r3, pc}
     39e:	46c0      	nop			; (mov r8, r8)
     3a0:	00000285 	.word	0x00000285

000003a4 <_http_client_request>:

	return 0;
}

void _http_client_request(struct http_client_module *const module)
{
     3a4:	b5f0      	push	{r4, r5, r6, r7, lr}
     3a6:	4657      	mov	r7, sl
     3a8:	464e      	mov	r6, r9
     3aa:	4645      	mov	r5, r8
     3ac:	b4e0      	push	{r5, r6, r7}
     3ae:	b094      	sub	sp, #80	; 0x50
     3b0:	af02      	add	r7, sp, #8
     3b2:	1c04      	adds	r4, r0, #0
     3b4:	46e9      	mov	r9, sp
	struct stream_writer writer;
	int size;
	int result;
	char length[11];
	char *ptr;
	const char CH_LUT[] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'};
     3b6:	2310      	movs	r3, #16
     3b8:	2208      	movs	r2, #8
     3ba:	18ba      	adds	r2, r7, r2
     3bc:	18d0      	adds	r0, r2, r3
     3be:	49e2      	ldr	r1, [pc, #904]	; (748 <_http_client_request+0x3a4>)
     3c0:	2210      	movs	r2, #16
     3c2:	4be2      	ldr	r3, [pc, #904]	; (74c <_http_client_request+0x3a8>)
     3c4:	4798      	blx	r3
	struct http_entity * entity;
	union http_client_data data;
#define HTTP_CHUNKED_MAX_LENGTH 3 /*TCP MTU is 1400(0x578) */
	char buffer[module->config.send_buffer_size];
     3c6:	6e62      	ldr	r2, [r4, #100]	; 0x64
     3c8:	1dd3      	adds	r3, r2, #7
     3ca:	08db      	lsrs	r3, r3, #3
     3cc:	00db      	lsls	r3, r3, #3
     3ce:	4669      	mov	r1, sp
     3d0:	1acb      	subs	r3, r1, r3
     3d2:	469d      	mov	sp, r3
     3d4:	ae02      	add	r6, sp, #8

	if (module == NULL) {
     3d6:	2c00      	cmp	r4, #0
     3d8:	d100      	bne.n	3dc <_http_client_request+0x38>
     3da:	e271      	b.n	8c0 <_http_client_request+0x51c>
		return;
	}

	if (module->sending != 0) {
     3dc:	2341      	movs	r3, #65	; 0x41
     3de:	5ce3      	ldrb	r3, [r4, r3]
     3e0:	07db      	lsls	r3, r3, #31
     3e2:	d500      	bpl.n	3e6 <_http_client_request+0x42>
     3e4:	e26c      	b.n	8c0 <_http_client_request+0x51c>
		return;
	}

	entity = &module->req.entity;

	switch (module->req.state) {
     3e6:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
     3e8:	2b03      	cmp	r3, #3
     3ea:	d003      	beq.n	3f4 <_http_client_request+0x50>
     3ec:	2b04      	cmp	r3, #4
     3ee:	d100      	bne.n	3f2 <_http_client_request+0x4e>
     3f0:	e142      	b.n	678 <_http_client_request+0x2d4>
     3f2:	e263      	b.n	8bc <_http_client_request+0x518>
	case STATE_REQ_SEND_HEADER:
		/* Initializing variables. */
		module->req.content_length = 0;
     3f4:	2300      	movs	r3, #0
     3f6:	2186      	movs	r1, #134	; 0x86
     3f8:	0049      	lsls	r1, r1, #1
     3fa:	5063      	str	r3, [r4, r1]
		module->req.sent_length = 0;
     3fc:	3104      	adds	r1, #4
     3fe:	5063      	str	r3, [r4, r1]

		stream_writer_init(&writer, buffer, module->config.send_buffer_size, _http_client_send_wait, (void *)module);
     400:	9400      	str	r4, [sp, #0]
     402:	332c      	adds	r3, #44	; 0x2c
     404:	3909      	subs	r1, #9
     406:	39ff      	subs	r1, #255	; 0xff
     408:	1879      	adds	r1, r7, r1
     40a:	18c8      	adds	r0, r1, r3
     40c:	1c31      	adds	r1, r6, #0
     40e:	4bd0      	ldr	r3, [pc, #832]	; (750 <_http_client_request+0x3ac>)
     410:	4dd0      	ldr	r5, [pc, #832]	; (754 <_http_client_request+0x3b0>)
     412:	47a8      	blx	r5
		/* Write Method. */
		if (module->req.method == HTTP_METHOD_GET) {
     414:	2384      	movs	r3, #132	; 0x84
     416:	005b      	lsls	r3, r3, #1
     418:	5ce3      	ldrb	r3, [r4, r3]
     41a:	2b01      	cmp	r3, #1
     41c:	d108      	bne.n	430 <_http_client_request+0x8c>
			stream_writer_send_buffer(&writer, "GET ", 4);
     41e:	332b      	adds	r3, #43	; 0x2b
     420:	2208      	movs	r2, #8
     422:	18ba      	adds	r2, r7, r2
     424:	18d0      	adds	r0, r2, r3
     426:	49cc      	ldr	r1, [pc, #816]	; (758 <_http_client_request+0x3b4>)
     428:	2204      	movs	r2, #4
     42a:	4bcc      	ldr	r3, [pc, #816]	; (75c <_http_client_request+0x3b8>)
     42c:	4798      	blx	r3
     42e:	e035      	b.n	49c <_http_client_request+0xf8>
		} else if (module->req.method == HTTP_METHOD_POST) {
     430:	2b02      	cmp	r3, #2
     432:	d108      	bne.n	446 <_http_client_request+0xa2>
			stream_writer_send_buffer(&writer, "POST ", 5);
     434:	332a      	adds	r3, #42	; 0x2a
     436:	2208      	movs	r2, #8
     438:	18ba      	adds	r2, r7, r2
     43a:	18d0      	adds	r0, r2, r3
     43c:	49c8      	ldr	r1, [pc, #800]	; (760 <_http_client_request+0x3bc>)
     43e:	2205      	movs	r2, #5
     440:	4bc6      	ldr	r3, [pc, #792]	; (75c <_http_client_request+0x3b8>)
     442:	4798      	blx	r3
     444:	e02a      	b.n	49c <_http_client_request+0xf8>
		} else if (module->req.method == HTTP_METHOD_DELETE) {
     446:	2b03      	cmp	r3, #3
     448:	d108      	bne.n	45c <_http_client_request+0xb8>
			stream_writer_send_buffer(&writer, "DELETE ", 7);
     44a:	3329      	adds	r3, #41	; 0x29
     44c:	2208      	movs	r2, #8
     44e:	18ba      	adds	r2, r7, r2
     450:	18d0      	adds	r0, r2, r3
     452:	49c4      	ldr	r1, [pc, #784]	; (764 <_http_client_request+0x3c0>)
     454:	2207      	movs	r2, #7
     456:	4bc1      	ldr	r3, [pc, #772]	; (75c <_http_client_request+0x3b8>)
     458:	4798      	blx	r3
     45a:	e01f      	b.n	49c <_http_client_request+0xf8>
		} else if (module->req.method == HTTP_METHOD_PUT) {
     45c:	2b04      	cmp	r3, #4
     45e:	d108      	bne.n	472 <_http_client_request+0xce>
			stream_writer_send_buffer(&writer, "PUT ", 4);
     460:	3328      	adds	r3, #40	; 0x28
     462:	2208      	movs	r2, #8
     464:	18ba      	adds	r2, r7, r2
     466:	18d0      	adds	r0, r2, r3
     468:	49bf      	ldr	r1, [pc, #764]	; (768 <_http_client_request+0x3c4>)
     46a:	2204      	movs	r2, #4
     46c:	4bbb      	ldr	r3, [pc, #748]	; (75c <_http_client_request+0x3b8>)
     46e:	4798      	blx	r3
     470:	e014      	b.n	49c <_http_client_request+0xf8>
		} else if (module->req.method == HTTP_METHOD_OPTIONS) {
     472:	2b05      	cmp	r3, #5
     474:	d108      	bne.n	488 <_http_client_request+0xe4>
			stream_writer_send_buffer(&writer, "OPTIONS ", 8);
     476:	3327      	adds	r3, #39	; 0x27
     478:	2208      	movs	r2, #8
     47a:	18ba      	adds	r2, r7, r2
     47c:	18d0      	adds	r0, r2, r3
     47e:	49bb      	ldr	r1, [pc, #748]	; (76c <_http_client_request+0x3c8>)
     480:	2208      	movs	r2, #8
     482:	4bb6      	ldr	r3, [pc, #728]	; (75c <_http_client_request+0x3b8>)
     484:	4798      	blx	r3
     486:	e009      	b.n	49c <_http_client_request+0xf8>
		} else if (module->req.method == HTTP_METHOD_HEAD) {
     488:	2b06      	cmp	r3, #6
     48a:	d107      	bne.n	49c <_http_client_request+0xf8>
			stream_writer_send_buffer(&writer, "HEAD ", 5);
     48c:	3326      	adds	r3, #38	; 0x26
     48e:	2208      	movs	r2, #8
     490:	18ba      	adds	r2, r7, r2
     492:	18d0      	adds	r0, r2, r3
     494:	49b6      	ldr	r1, [pc, #728]	; (770 <_http_client_request+0x3cc>)
     496:	2205      	movs	r2, #5
     498:	4bb0      	ldr	r3, [pc, #704]	; (75c <_http_client_request+0x3b8>)
     49a:	4798      	blx	r3
		}

		/* Write URI. */
		stream_writer_send_buffer(&writer, module->req.uri, strlen(module->req.uri));
     49c:	1c25      	adds	r5, r4, #0
     49e:	3570      	adds	r5, #112	; 0x70
     4a0:	1c28      	adds	r0, r5, #0
     4a2:	4bb4      	ldr	r3, [pc, #720]	; (774 <_http_client_request+0x3d0>)
     4a4:	469a      	mov	sl, r3
     4a6:	4798      	blx	r3
     4a8:	1c02      	adds	r2, r0, #0
     4aa:	232c      	movs	r3, #44	; 0x2c
     4ac:	2108      	movs	r1, #8
     4ae:	1879      	adds	r1, r7, r1
     4b0:	18c8      	adds	r0, r1, r3
     4b2:	1c29      	adds	r1, r5, #0
     4b4:	4ba9      	ldr	r3, [pc, #676]	; (75c <_http_client_request+0x3b8>)
     4b6:	4698      	mov	r8, r3
     4b8:	4798      	blx	r3

		stream_writer_send_buffer(&writer, " "HTTP_PROTO_NAME"\r\n", strlen(" "HTTP_PROTO_NAME"\r\n"));
     4ba:	232c      	movs	r3, #44	; 0x2c
     4bc:	2208      	movs	r2, #8
     4be:	18ba      	adds	r2, r7, r2
     4c0:	18d0      	adds	r0, r2, r3
     4c2:	49ad      	ldr	r1, [pc, #692]	; (778 <_http_client_request+0x3d4>)
     4c4:	220b      	movs	r2, #11
     4c6:	47c0      	blx	r8

		/* Write HTTP headers. */
		/* Default value. */
		stream_writer_send_buffer(&writer, "User-Agent: ", strlen("User-agent: "));
     4c8:	232c      	movs	r3, #44	; 0x2c
     4ca:	2208      	movs	r2, #8
     4cc:	18ba      	adds	r2, r7, r2
     4ce:	18d0      	adds	r0, r2, r3
     4d0:	49aa      	ldr	r1, [pc, #680]	; (77c <_http_client_request+0x3d8>)
     4d2:	220c      	movs	r2, #12
     4d4:	47c0      	blx	r8
		stream_writer_send_buffer(&writer, (char *)module->config.user_agent, strlen(module->config.user_agent));
     4d6:	6ea5      	ldr	r5, [r4, #104]	; 0x68
     4d8:	1c28      	adds	r0, r5, #0
     4da:	47d0      	blx	sl
     4dc:	1c02      	adds	r2, r0, #0
     4de:	232c      	movs	r3, #44	; 0x2c
     4e0:	2108      	movs	r1, #8
     4e2:	1879      	adds	r1, r7, r1
     4e4:	18c8      	adds	r0, r1, r3
     4e6:	1c29      	adds	r1, r5, #0
     4e8:	47c0      	blx	r8
		stream_writer_send_buffer(&writer, "\r\n", strlen("\r\n"));
     4ea:	232c      	movs	r3, #44	; 0x2c
     4ec:	2208      	movs	r2, #8
     4ee:	18ba      	adds	r2, r7, r2
     4f0:	18d0      	adds	r0, r2, r3
     4f2:	49a3      	ldr	r1, [pc, #652]	; (780 <_http_client_request+0x3dc>)
     4f4:	2202      	movs	r2, #2
     4f6:	47c0      	blx	r8
		stream_writer_send_buffer(&writer, "Host: ", strlen("Host: "));
     4f8:	232c      	movs	r3, #44	; 0x2c
     4fa:	2208      	movs	r2, #8
     4fc:	18ba      	adds	r2, r7, r2
     4fe:	18d0      	adds	r0, r2, r3
     500:	49a0      	ldr	r1, [pc, #640]	; (784 <_http_client_request+0x3e0>)
     502:	2206      	movs	r2, #6
     504:	47c0      	blx	r8
		stream_writer_send_buffer(&writer, module->host, strlen(module->host));
     506:	1c65      	adds	r5, r4, #1
     508:	1c28      	adds	r0, r5, #0
     50a:	47d0      	blx	sl
     50c:	1c02      	adds	r2, r0, #0
     50e:	232c      	movs	r3, #44	; 0x2c
     510:	2108      	movs	r1, #8
     512:	1879      	adds	r1, r7, r1
     514:	18c8      	adds	r0, r1, r3
     516:	1c29      	adds	r1, r5, #0
     518:	47c0      	blx	r8
		stream_writer_send_buffer(&writer, "\r\n", strlen("\r\n"));
     51a:	232c      	movs	r3, #44	; 0x2c
     51c:	2208      	movs	r2, #8
     51e:	18ba      	adds	r2, r7, r2
     520:	18d0      	adds	r0, r2, r3
     522:	4997      	ldr	r1, [pc, #604]	; (780 <_http_client_request+0x3dc>)
     524:	2202      	movs	r2, #2
     526:	47c0      	blx	r8
		/* It supported persistent connection. */
		stream_writer_send_buffer(&writer, "Connection: Keep-Alive\r\n", strlen("Connection: Keep-Alive\r\n"));
     528:	232c      	movs	r3, #44	; 0x2c
     52a:	2208      	movs	r2, #8
     52c:	18ba      	adds	r2, r7, r2
     52e:	18d0      	adds	r0, r2, r3
     530:	4995      	ldr	r1, [pc, #596]	; (788 <_http_client_request+0x3e4>)
     532:	2218      	movs	r2, #24
     534:	47c0      	blx	r8
		/* Notify supported encoding type and character set. */
		
		stream_writer_send_buffer(&writer, "Content-Type: ", strlen("Content-Type: "));
     536:	232c      	movs	r3, #44	; 0x2c
     538:	2208      	movs	r2, #8
     53a:	18ba      	adds	r2, r7, r2
     53c:	18d0      	adds	r0, r2, r3
     53e:	4993      	ldr	r1, [pc, #588]	; (78c <_http_client_request+0x3e8>)
     540:	220e      	movs	r2, #14
     542:	47c0      	blx	r8
		stream_writer_send_buffer(&writer, entity->get_contents_type(""), strlen(entity->get_contents_type("")));
     544:	35ef      	adds	r5, #239	; 0xef
     546:	4892      	ldr	r0, [pc, #584]	; (790 <_http_client_request+0x3ec>)
     548:	686b      	ldr	r3, [r5, #4]
     54a:	4798      	blx	r3
     54c:	6078      	str	r0, [r7, #4]
     54e:	4890      	ldr	r0, [pc, #576]	; (790 <_http_client_request+0x3ec>)
     550:	686b      	ldr	r3, [r5, #4]
     552:	4798      	blx	r3
     554:	47d0      	blx	sl
     556:	1c02      	adds	r2, r0, #0
     558:	232c      	movs	r3, #44	; 0x2c
     55a:	2108      	movs	r1, #8
     55c:	468c      	mov	ip, r1
     55e:	44bc      	add	ip, r7
     560:	4463      	add	r3, ip
     562:	1c18      	adds	r0, r3, #0
     564:	6879      	ldr	r1, [r7, #4]
     566:	47c0      	blx	r8
		stream_writer_send_buffer(&writer, "\r\n", strlen("\r\n"));
     568:	232c      	movs	r3, #44	; 0x2c
     56a:	2208      	movs	r2, #8
     56c:	18ba      	adds	r2, r7, r2
     56e:	18d0      	adds	r0, r2, r3
     570:	4983      	ldr	r1, [pc, #524]	; (780 <_http_client_request+0x3dc>)
     572:	2202      	movs	r2, #2
     574:	47c0      	blx	r8
		
		stream_writer_send_buffer(&writer, "Accept-Encoding: \r\n", strlen("Accept-Encoding: \r\n"));
     576:	232c      	movs	r3, #44	; 0x2c
     578:	2208      	movs	r2, #8
     57a:	18ba      	adds	r2, r7, r2
     57c:	18d0      	adds	r0, r2, r3
     57e:	4985      	ldr	r1, [pc, #532]	; (794 <_http_client_request+0x3f0>)
     580:	2213      	movs	r2, #19
     582:	47c0      	blx	r8
		stream_writer_send_buffer(&writer, "Accept-Charset: utf-8\r\n", strlen("Accept-Charset: utf-8\r\n"));
     584:	232c      	movs	r3, #44	; 0x2c
     586:	2208      	movs	r2, #8
     588:	18ba      	adds	r2, r7, r2
     58a:	18d0      	adds	r0, r2, r3
     58c:	4982      	ldr	r1, [pc, #520]	; (798 <_http_client_request+0x3f4>)
     58e:	2217      	movs	r2, #23
     590:	47c0      	blx	r8

		if (entity->read != NULL) {
     592:	68eb      	ldr	r3, [r5, #12]
     594:	2b00      	cmp	r3, #0
     596:	d049      	beq.n	62c <_http_client_request+0x288>
			/* HTTP Entity is exist. */
			if (entity->is_chunked) {
     598:	23f0      	movs	r3, #240	; 0xf0
     59a:	5ce3      	ldrb	r3, [r4, r3]
     59c:	2b00      	cmp	r3, #0
     59e:	d00d      	beq.n	5bc <_http_client_request+0x218>
				/* Chunked mode. */
				module->req.content_length = -1;
     5a0:	2201      	movs	r2, #1
     5a2:	4252      	negs	r2, r2
     5a4:	2386      	movs	r3, #134	; 0x86
     5a6:	005b      	lsls	r3, r3, #1
     5a8:	50e2      	str	r2, [r4, r3]
				stream_writer_send_buffer(&writer, "Transfer-Encoding: chunked\r\n", strlen("Transfer-Encoding: chunked\r\n"));
     5aa:	3be0      	subs	r3, #224	; 0xe0
     5ac:	3209      	adds	r2, #9
     5ae:	18ba      	adds	r2, r7, r2
     5b0:	18d0      	adds	r0, r2, r3
     5b2:	497a      	ldr	r1, [pc, #488]	; (79c <_http_client_request+0x3f8>)
     5b4:	221c      	movs	r2, #28
     5b6:	4b69      	ldr	r3, [pc, #420]	; (75c <_http_client_request+0x3b8>)
     5b8:	4798      	blx	r3
     5ba:	e037      	b.n	62c <_http_client_request+0x288>
			} else if(entity->get_contents_length) {
     5bc:	1c23      	adds	r3, r4, #0
     5be:	33f0      	adds	r3, #240	; 0xf0
     5c0:	689b      	ldr	r3, [r3, #8]
     5c2:	2b00      	cmp	r3, #0
     5c4:	d032      	beq.n	62c <_http_client_request+0x288>
				module->req.content_length = entity->get_contents_length(entity->priv_data);
     5c6:	1c22      	adds	r2, r4, #0
     5c8:	32f0      	adds	r2, #240	; 0xf0
     5ca:	6950      	ldr	r0, [r2, #20]
     5cc:	4798      	blx	r3
     5ce:	1c02      	adds	r2, r0, #0
     5d0:	2386      	movs	r3, #134	; 0x86
     5d2:	005b      	lsls	r3, r3, #1
     5d4:	50e0      	str	r0, [r4, r3]
				if (module->req.content_length < 0) {
     5d6:	2800      	cmp	r0, #0
     5d8:	da02      	bge.n	5e0 <_http_client_request+0x23c>
					/* Error was occurred. */
					/* Does not send any entity. */
					module->req.content_length = 0;
     5da:	2200      	movs	r2, #0
     5dc:	50e2      	str	r2, [r4, r3]
     5de:	e025      	b.n	62c <_http_client_request+0x288>
				} else {
					sprintf(length, "%u", (unsigned int)module->req.content_length);
     5e0:	2320      	movs	r3, #32
     5e2:	2108      	movs	r1, #8
     5e4:	1879      	adds	r1, r7, r1
     5e6:	18c8      	adds	r0, r1, r3
     5e8:	496d      	ldr	r1, [pc, #436]	; (7a0 <_http_client_request+0x3fc>)
     5ea:	4b6e      	ldr	r3, [pc, #440]	; (7a4 <_http_client_request+0x400>)
     5ec:	4798      	blx	r3
					stream_writer_send_buffer(&writer, "Content-Length: ", strlen("Content-Length: "));
     5ee:	232c      	movs	r3, #44	; 0x2c
     5f0:	2208      	movs	r2, #8
     5f2:	18ba      	adds	r2, r7, r2
     5f4:	18d0      	adds	r0, r2, r3
     5f6:	496c      	ldr	r1, [pc, #432]	; (7a8 <_http_client_request+0x404>)
     5f8:	2210      	movs	r2, #16
     5fa:	4d58      	ldr	r5, [pc, #352]	; (75c <_http_client_request+0x3b8>)
     5fc:	47a8      	blx	r5
					stream_writer_send_buffer(&writer, length, strlen(length));
     5fe:	2320      	movs	r3, #32
     600:	2208      	movs	r2, #8
     602:	18ba      	adds	r2, r7, r2
     604:	18d0      	adds	r0, r2, r3
     606:	4b5b      	ldr	r3, [pc, #364]	; (774 <_http_client_request+0x3d0>)
     608:	4798      	blx	r3
     60a:	1c02      	adds	r2, r0, #0
     60c:	232c      	movs	r3, #44	; 0x2c
     60e:	2108      	movs	r1, #8
     610:	1879      	adds	r1, r7, r1
     612:	18c8      	adds	r0, r1, r3
     614:	3b0c      	subs	r3, #12
     616:	2108      	movs	r1, #8
     618:	1879      	adds	r1, r7, r1
     61a:	18c9      	adds	r1, r1, r3
     61c:	47a8      	blx	r5
					stream_writer_send_buffer(&writer, "\r\n", strlen("\r\n"));
     61e:	232c      	movs	r3, #44	; 0x2c
     620:	2208      	movs	r2, #8
     622:	18ba      	adds	r2, r7, r2
     624:	18d0      	adds	r0, r2, r3
     626:	4956      	ldr	r1, [pc, #344]	; (780 <_http_client_request+0x3dc>)
     628:	2202      	movs	r2, #2
     62a:	47a8      	blx	r5
				}
			}
		}
		if (module->req.ext_header != NULL ) {
     62c:	238a      	movs	r3, #138	; 0x8a
     62e:	005b      	lsls	r3, r3, #1
     630:	58e5      	ldr	r5, [r4, r3]
     632:	2d00      	cmp	r5, #0
     634:	d00a      	beq.n	64c <_http_client_request+0x2a8>
			stream_writer_send_buffer(&writer,
     636:	1c28      	adds	r0, r5, #0
     638:	4b4e      	ldr	r3, [pc, #312]	; (774 <_http_client_request+0x3d0>)
     63a:	4798      	blx	r3
     63c:	1c02      	adds	r2, r0, #0
     63e:	232c      	movs	r3, #44	; 0x2c
     640:	2108      	movs	r1, #8
     642:	1879      	adds	r1, r7, r1
     644:	18c8      	adds	r0, r1, r3
     646:	1c29      	adds	r1, r5, #0
     648:	4b44      	ldr	r3, [pc, #272]	; (75c <_http_client_request+0x3b8>)
     64a:	4798      	blx	r3
				module->req.ext_header,
				strlen(module->req.ext_header));
		}

		print_to_terminal("\n\nWriter.buffer: \n%s\n\n", writer.buffer);
     64c:	6c7b      	ldr	r3, [r7, #68]	; 0x44
     64e:	607b      	str	r3, [r7, #4]
     650:	4856      	ldr	r0, [pc, #344]	; (7ac <_http_client_request+0x408>)
     652:	1c19      	adds	r1, r3, #0
     654:	4b56      	ldr	r3, [pc, #344]	; (7b0 <_http_client_request+0x40c>)
     656:	4798      	blx	r3

		//See the module->header
		stream_writer_send_buffer(&writer, "\r\n", strlen("\r\n"));
     658:	232c      	movs	r3, #44	; 0x2c
     65a:	2208      	movs	r2, #8
     65c:	18ba      	adds	r2, r7, r2
     65e:	18d0      	adds	r0, r2, r3
     660:	4947      	ldr	r1, [pc, #284]	; (780 <_http_client_request+0x3dc>)
     662:	2202      	movs	r2, #2
     664:	4b3d      	ldr	r3, [pc, #244]	; (75c <_http_client_request+0x3b8>)
     666:	4798      	blx	r3
		stream_writer_send_remain(&writer);
     668:	232c      	movs	r3, #44	; 0x2c
     66a:	2208      	movs	r2, #8
     66c:	18ba      	adds	r2, r7, r2
     66e:	18d0      	adds	r0, r2, r3
     670:	4b50      	ldr	r3, [pc, #320]	; (7b4 <_http_client_request+0x410>)
     672:	4798      	blx	r3

		module->req.state = STATE_REQ_SEND_ENTITY;
     674:	2304      	movs	r3, #4
     676:	66e3      	str	r3, [r4, #108]	; 0x6c
		/* Send first part of entity. */
	case STATE_REQ_SEND_ENTITY:
		if (module->req.content_length < 0 && entity->read) {
     678:	2386      	movs	r3, #134	; 0x86
     67a:	005b      	lsls	r3, r3, #1
     67c:	58e2      	ldr	r2, [r4, r3]
     67e:	2a00      	cmp	r2, #0
     680:	db00      	blt.n	684 <_http_client_request+0x2e0>
     682:	e0b7      	b.n	7f4 <_http_client_request+0x450>
     684:	1c23      	adds	r3, r4, #0
     686:	33f0      	adds	r3, #240	; 0xf0
     688:	68dd      	ldr	r5, [r3, #12]
     68a:	2d00      	cmp	r5, #0
     68c:	d100      	bne.n	690 <_http_client_request+0x2ec>
     68e:	e10b      	b.n	8a8 <_http_client_request+0x504>
			/* Send chunked packet. */
			/*  Chunked header (size + \r\n) tail (\r\n) */
			size = entity->read(entity->priv_data, buffer + HTTP_CHUNKED_MAX_LENGTH + 2,
     690:	6958      	ldr	r0, [r3, #20]
     692:	1d71      	adds	r1, r6, #5
     694:	6e63      	ldr	r3, [r4, #100]	; 0x64
     696:	1fda      	subs	r2, r3, #7
				module->config.send_buffer_size - HTTP_CHUNKED_MAX_LENGTH - 4, module->req.sent_length);
     698:	2388      	movs	r3, #136	; 0x88
     69a:	005b      	lsls	r3, r3, #1
		/* Send first part of entity. */
	case STATE_REQ_SEND_ENTITY:
		if (module->req.content_length < 0 && entity->read) {
			/* Send chunked packet. */
			/*  Chunked header (size + \r\n) tail (\r\n) */
			size = entity->read(entity->priv_data, buffer + HTTP_CHUNKED_MAX_LENGTH + 2,
     69c:	58e3      	ldr	r3, [r4, r3]
     69e:	47a8      	blx	r5
     6a0:	1c05      	adds	r5, r0, #0
     6a2:	43c3      	mvns	r3, r0
     6a4:	17db      	asrs	r3, r3, #31
     6a6:	401d      	ands	r5, r3
				module->config.send_buffer_size - HTTP_CHUNKED_MAX_LENGTH - 4, module->req.sent_length);
			if (size < 0) {
				/* If occurs problem during the operation, Close this socket. */
				size = 0;
			}
			buffer[HTTP_CHUNKED_MAX_LENGTH + 1] = '\n';
     6a8:	220a      	movs	r2, #10
     6aa:	7132      	strb	r2, [r6, #4]
			buffer[HTTP_CHUNKED_MAX_LENGTH] = '\r';
     6ac:	210d      	movs	r1, #13
     6ae:	70f1      	strb	r1, [r6, #3]
			buffer[size + HTTP_CHUNKED_MAX_LENGTH + 2] = '\r';
     6b0:	1973      	adds	r3, r6, r5
     6b2:	7159      	strb	r1, [r3, #5]
			buffer[size + HTTP_CHUNKED_MAX_LENGTH + 3] = '\n';
     6b4:	719a      	strb	r2, [r3, #6]
			if (size >= 0) {
				ptr = buffer + 2;
				*ptr = CH_LUT[size % 16];
     6b6:	17eb      	asrs	r3, r5, #31
     6b8:	0f19      	lsrs	r1, r3, #28
     6ba:	186a      	adds	r2, r5, r1
     6bc:	230f      	movs	r3, #15
     6be:	4013      	ands	r3, r2
     6c0:	1a5b      	subs	r3, r3, r1
     6c2:	2210      	movs	r2, #16
     6c4:	2108      	movs	r1, #8
     6c6:	468c      	mov	ip, r1
     6c8:	44bc      	add	ip, r7
     6ca:	4462      	add	r2, ip
     6cc:	5cd3      	ldrb	r3, [r2, r3]
     6ce:	70b3      	strb	r3, [r6, #2]
			buffer[HTTP_CHUNKED_MAX_LENGTH + 1] = '\n';
			buffer[HTTP_CHUNKED_MAX_LENGTH] = '\r';
			buffer[size + HTTP_CHUNKED_MAX_LENGTH + 2] = '\r';
			buffer[size + HTTP_CHUNKED_MAX_LENGTH + 3] = '\n';
			if (size >= 0) {
				ptr = buffer + 2;
     6d0:	1cb1      	adds	r1, r6, #2
				*ptr = CH_LUT[size % 16];
			}
			if (size >= 0x10) {
     6d2:	2d0f      	cmp	r5, #15
     6d4:	dd11      	ble.n	6fa <_http_client_request+0x356>
				ptr = buffer + 1;
     6d6:	1c71      	adds	r1, r6, #1
				*ptr = CH_LUT[(size / 0x10) % 16];
     6d8:	17eb      	asrs	r3, r5, #31
     6da:	0f1b      	lsrs	r3, r3, #28
     6dc:	195b      	adds	r3, r3, r5
     6de:	111a      	asrs	r2, r3, #4
     6e0:	17db      	asrs	r3, r3, #31
     6e2:	0f1b      	lsrs	r3, r3, #28
     6e4:	18d2      	adds	r2, r2, r3
     6e6:	200f      	movs	r0, #15
     6e8:	4002      	ands	r2, r0
     6ea:	1ad3      	subs	r3, r2, r3
     6ec:	2210      	movs	r2, #16
     6ee:	3807      	subs	r0, #7
     6f0:	4684      	mov	ip, r0
     6f2:	44bc      	add	ip, r7
     6f4:	4462      	add	r2, ip
     6f6:	5cd3      	ldrb	r3, [r2, r3]
     6f8:	7073      	strb	r3, [r6, #1]
			}
			if (size >= 0x100) {
     6fa:	2dff      	cmp	r5, #255	; 0xff
     6fc:	dd11      	ble.n	722 <_http_client_request+0x37e>
				ptr = buffer;
				*ptr = CH_LUT[(size / 0x100) % 16];
     6fe:	17eb      	asrs	r3, r5, #31
     700:	0e1b      	lsrs	r3, r3, #24
     702:	195b      	adds	r3, r3, r5
     704:	121a      	asrs	r2, r3, #8
     706:	17db      	asrs	r3, r3, #31
     708:	0f1b      	lsrs	r3, r3, #28
     70a:	18d2      	adds	r2, r2, r3
     70c:	210f      	movs	r1, #15
     70e:	400a      	ands	r2, r1
     710:	1ad3      	subs	r3, r2, r3
     712:	2210      	movs	r2, #16
     714:	3907      	subs	r1, #7
     716:	468c      	mov	ip, r1
     718:	44bc      	add	ip, r7
     71a:	4462      	add	r2, ip
     71c:	5cd3      	ldrb	r3, [r2, r3]
     71e:	7033      	strb	r3, [r6, #0]
			if (size >= 0x10) {
				ptr = buffer + 1;
				*ptr = CH_LUT[(size / 0x10) % 16];
			}
			if (size >= 0x100) {
				ptr = buffer;
     720:	1c31      	adds	r1, r6, #0
				*ptr = CH_LUT[(size / 0x100) % 16];
			}		
			//module->sending = 1;
			if ((result = send(module->sock, (void*)ptr, ptr + HTTP_CHUNKED_MAX_LENGTH - buffer + size + 4, 0)) < 0) {	
     722:	2000      	movs	r0, #0
     724:	5620      	ldrsb	r0, [r4, r0]
     726:	1d2a      	adds	r2, r5, #4
     728:	1ccb      	adds	r3, r1, #3
     72a:	1b9b      	subs	r3, r3, r6
     72c:	18d2      	adds	r2, r2, r3
     72e:	b292      	uxth	r2, r2
     730:	2300      	movs	r3, #0
     732:	4e21      	ldr	r6, [pc, #132]	; (7b8 <_http_client_request+0x414>)
     734:	47b0      	blx	r6
     736:	2800      	cmp	r0, #0
     738:	da42      	bge.n	7c0 <_http_client_request+0x41c>
				_http_client_clear_conn(module, -EIO);
     73a:	1c20      	adds	r0, r4, #0
     73c:	2105      	movs	r1, #5
     73e:	4249      	negs	r1, r1
     740:	4b1e      	ldr	r3, [pc, #120]	; (7bc <_http_client_request+0x418>)
     742:	4798      	blx	r3
				return;
     744:	e0bc      	b.n	8c0 <_http_client_request+0x51c>
     746:	46c0      	nop			; (mov r8, r8)
     748:	0000e2f8 	.word	0x0000e2f8
     74c:	0000c0a7 	.word	0x0000c0a7
     750:	00000111 	.word	0x00000111
     754:	000011e5 	.word	0x000011e5
     758:	0000e344 	.word	0x0000e344
     75c:	00001231 	.word	0x00001231
     760:	0000e34c 	.word	0x0000e34c
     764:	0000e354 	.word	0x0000e354
     768:	0000e35c 	.word	0x0000e35c
     76c:	0000e364 	.word	0x0000e364
     770:	0000e370 	.word	0x0000e370
     774:	0000cde5 	.word	0x0000cde5
     778:	0000e378 	.word	0x0000e378
     77c:	0000e384 	.word	0x0000e384
     780:	00011ae0 	.word	0x00011ae0
     784:	0000e394 	.word	0x0000e394
     788:	0000e39c 	.word	0x0000e39c
     78c:	0000e3b8 	.word	0x0000e3b8
     790:	00011d80 	.word	0x00011d80
     794:	0000e3c8 	.word	0x0000e3c8
     798:	0000e3dc 	.word	0x0000e3dc
     79c:	0000e3f4 	.word	0x0000e3f4
     7a0:	0000e414 	.word	0x0000e414
     7a4:	0000c901 	.word	0x0000c901
     7a8:	0000e418 	.word	0x0000e418
     7ac:	0000e42c 	.word	0x0000e42c
     7b0:	000090f5 	.word	0x000090f5
     7b4:	000011f5 	.word	0x000011f5
     7b8:	000071f9 	.word	0x000071f9
     7bc:	00000285 	.word	0x00000285
			}

			module->req.sent_length += size;
     7c0:	2288      	movs	r2, #136	; 0x88
     7c2:	0052      	lsls	r2, r2, #1
     7c4:	58a3      	ldr	r3, [r4, r2]
     7c6:	195b      	adds	r3, r3, r5
     7c8:	50a3      	str	r3, [r4, r2]

			if(size == 0) {
     7ca:	2d00      	cmp	r5, #0
     7cc:	d176      	bne.n	8bc <_http_client_request+0x518>
				if (module->req.entity.close) {
     7ce:	2380      	movs	r3, #128	; 0x80
     7d0:	005b      	lsls	r3, r3, #1
     7d2:	58e3      	ldr	r3, [r4, r3]
     7d4:	2b00      	cmp	r3, #0
     7d6:	d002      	beq.n	7de <_http_client_request+0x43a>
					module->req.entity.close(module->req.entity.priv_data);
     7d8:	3a0c      	subs	r2, #12
     7da:	58a0      	ldr	r0, [r4, r2]
     7dc:	4798      	blx	r3
				}
				module->req.state = STATE_SOCK_CONNECTED;
     7de:	2302      	movs	r3, #2
     7e0:	66e3      	str	r3, [r4, #108]	; 0x6c
				if (module->cb) {
     7e2:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
     7e4:	2b00      	cmp	r3, #0
     7e6:	d069      	beq.n	8bc <_http_client_request+0x518>
					module->cb(module, HTTP_CLIENT_CALLBACK_REQUESTED, &data);
     7e8:	1c20      	adds	r0, r4, #0
     7ea:	2101      	movs	r1, #1
     7ec:	220c      	movs	r2, #12
     7ee:	18ba      	adds	r2, r7, r2
     7f0:	4798      	blx	r3
     7f2:	e063      	b.n	8bc <_http_client_request+0x518>
				}
				break;
			}
		} else if (module->req.content_length > 0 && entity->read) {
     7f4:	2a00      	cmp	r2, #0
     7f6:	dd57      	ble.n	8a8 <_http_client_request+0x504>
     7f8:	1c23      	adds	r3, r4, #0
     7fa:	33f0      	adds	r3, #240	; 0xf0
     7fc:	68dd      	ldr	r5, [r3, #12]
     7fe:	2d00      	cmp	r5, #0
     800:	d052      	beq.n	8a8 <_http_client_request+0x504>
			/* Send entity. */
			if (module->req.sent_length >= module->req.content_length) {
     802:	2388      	movs	r3, #136	; 0x88
     804:	005b      	lsls	r3, r3, #1
     806:	58e3      	ldr	r3, [r4, r3]
     808:	429a      	cmp	r2, r3
     80a:	dc13      	bgt.n	834 <_http_client_request+0x490>
				/* Complete to send the buffer. */
				if (module->req.entity.close) {
     80c:	2380      	movs	r3, #128	; 0x80
     80e:	005b      	lsls	r3, r3, #1
     810:	58e3      	ldr	r3, [r4, r3]
     812:	2b00      	cmp	r3, #0
     814:	d003      	beq.n	81e <_http_client_request+0x47a>
					module->req.entity.close(module->req.entity.priv_data);
     816:	2282      	movs	r2, #130	; 0x82
     818:	0052      	lsls	r2, r2, #1
     81a:	58a0      	ldr	r0, [r4, r2]
     81c:	4798      	blx	r3
				}
				module->req.state = STATE_SOCK_CONNECTED;
     81e:	2302      	movs	r3, #2
     820:	66e3      	str	r3, [r4, #108]	; 0x6c
				if (module->cb) {
     822:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
     824:	2b00      	cmp	r3, #0
     826:	d049      	beq.n	8bc <_http_client_request+0x518>
					module->cb(module, HTTP_CLIENT_CALLBACK_REQUESTED, &data);
     828:	1c20      	adds	r0, r4, #0
     82a:	2101      	movs	r1, #1
     82c:	220c      	movs	r2, #12
     82e:	18ba      	adds	r2, r7, r2
     830:	4798      	blx	r3
     832:	e043      	b.n	8bc <_http_client_request+0x518>
				}
				break;
			}
			size = entity->read(entity->priv_data, buffer, module->config.send_buffer_size, module->req.sent_length);
     834:	1c22      	adds	r2, r4, #0
     836:	32f0      	adds	r2, #240	; 0xf0
     838:	6950      	ldr	r0, [r2, #20]
     83a:	1c31      	adds	r1, r6, #0
     83c:	6e62      	ldr	r2, [r4, #100]	; 0x64
     83e:	47a8      	blx	r5

			if (size < 0) {
     840:	2800      	cmp	r0, #0
     842:	da09      	bge.n	858 <_http_client_request+0x4b4>
				/* Entity occurs errors or EOS. */
				/* Disconnect it. */
				_http_client_clear_conn(module, (size == 0)?-EBADMSG:-EIO);
     844:	d002      	beq.n	84c <_http_client_request+0x4a8>
     846:	2105      	movs	r1, #5
     848:	4249      	negs	r1, r1
     84a:	e001      	b.n	850 <_http_client_request+0x4ac>
     84c:	214d      	movs	r1, #77	; 0x4d
     84e:	4249      	negs	r1, r1
     850:	1c20      	adds	r0, r4, #0
     852:	4b1f      	ldr	r3, [pc, #124]	; (8d0 <_http_client_request+0x52c>)
     854:	4798      	blx	r3
     856:	e031      	b.n	8bc <_http_client_request+0x518>
			} else {
				if (size > module->req.content_length - module->req.sent_length) {
     858:	2386      	movs	r3, #134	; 0x86
     85a:	005b      	lsls	r3, r3, #1
     85c:	58e3      	ldr	r3, [r4, r3]
     85e:	2288      	movs	r2, #136	; 0x88
     860:	0052      	lsls	r2, r2, #1
     862:	58a2      	ldr	r2, [r4, r2]
     864:	1a9b      	subs	r3, r3, r2
     866:	1e05      	subs	r5, r0, #0
     868:	429d      	cmp	r5, r3
     86a:	dd00      	ble.n	86e <_http_client_request+0x4ca>
     86c:	1c1d      	adds	r5, r3, #0
					size = module->req.content_length - module->req.sent_length;
				}
				
				buffer[size]='\0';
     86e:	2300      	movs	r3, #0
     870:	5573      	strb	r3, [r6, r5]
				
				print_to_terminal("\n\nAlso Sending\n%s\n%d\n\n", buffer, size);
     872:	4818      	ldr	r0, [pc, #96]	; (8d4 <_http_client_request+0x530>)
     874:	1c31      	adds	r1, r6, #0
     876:	1c2a      	adds	r2, r5, #0
     878:	4b17      	ldr	r3, [pc, #92]	; (8d8 <_http_client_request+0x534>)
     87a:	4798      	blx	r3
				
				//module->sending = 1;
				if ((result = send(module->sock, (void*)buffer, size, 0)) < 0) {
     87c:	2000      	movs	r0, #0
     87e:	5620      	ldrsb	r0, [r4, r0]
     880:	b2aa      	uxth	r2, r5
     882:	1c31      	adds	r1, r6, #0
     884:	2300      	movs	r3, #0
     886:	4e15      	ldr	r6, [pc, #84]	; (8dc <_http_client_request+0x538>)
     888:	47b0      	blx	r6
     88a:	2800      	cmp	r0, #0
     88c:	da05      	bge.n	89a <_http_client_request+0x4f6>
					_http_client_clear_conn(module, -EIO);
     88e:	1c20      	adds	r0, r4, #0
     890:	2105      	movs	r1, #5
     892:	4249      	negs	r1, r1
     894:	4b0e      	ldr	r3, [pc, #56]	; (8d0 <_http_client_request+0x52c>)
     896:	4798      	blx	r3
					return;
     898:	e012      	b.n	8c0 <_http_client_request+0x51c>
				}
				module->req.sent_length += size;
     89a:	2388      	movs	r3, #136	; 0x88
     89c:	005b      	lsls	r3, r3, #1
     89e:	58e2      	ldr	r2, [r4, r3]
     8a0:	4694      	mov	ip, r2
     8a2:	4465      	add	r5, ip
     8a4:	50e5      	str	r5, [r4, r3]
     8a6:	e009      	b.n	8bc <_http_client_request+0x518>
			}
		} else {
			/* Has not any entity. */
			module->req.state = STATE_SOCK_CONNECTED;
     8a8:	2302      	movs	r3, #2
     8aa:	66e3      	str	r3, [r4, #108]	; 0x6c
			if (module->cb) {
     8ac:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
     8ae:	2b00      	cmp	r3, #0
     8b0:	d004      	beq.n	8bc <_http_client_request+0x518>
				module->cb(module, HTTP_CLIENT_CALLBACK_REQUESTED, &data);
     8b2:	1c20      	adds	r0, r4, #0
     8b4:	2101      	movs	r1, #1
     8b6:	220c      	movs	r2, #12
     8b8:	18ba      	adds	r2, r7, r2
     8ba:	4798      	blx	r3
     8bc:	46cd      	mov	sp, r9
     8be:	e000      	b.n	8c2 <_http_client_request+0x51e>
	union http_client_data data;
#define HTTP_CHUNKED_MAX_LENGTH 3 /*TCP MTU is 1400(0x578) */
	char buffer[module->config.send_buffer_size];

	if (module == NULL) {
		return;
     8c0:	46cd      	mov	sp, r9
		break;
	default:
		/* Invalid status. */
		break;
	}
}
     8c2:	46bd      	mov	sp, r7
     8c4:	b012      	add	sp, #72	; 0x48
     8c6:	bc1c      	pop	{r2, r3, r4}
     8c8:	4690      	mov	r8, r2
     8ca:	4699      	mov	r9, r3
     8cc:	46a2      	mov	sl, r4
     8ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
     8d0:	00000285 	.word	0x00000285
     8d4:	0000e444 	.word	0x0000e444
     8d8:	000090f5 	.word	0x000090f5
     8dc:	000071f9 	.word	0x000071f9

000008e0 <http_client_send_request>:
	return 1;
}

int http_client_send_request(struct http_client_module *const module, const char *url,
	enum http_method method, struct http_entity *const entity, const char *ext_header)
{
     8e0:	b5f0      	push	{r4, r5, r6, r7, lr}
     8e2:	4647      	mov	r7, r8
     8e4:	b480      	push	{r7}
     8e6:	b088      	sub	sp, #32
     8e8:	1c04      	adds	r4, r0, #0
     8ea:	1c0e      	adds	r6, r1, #0
     8ec:	4690      	mov	r8, r2
     8ee:	9302      	str	r3, [sp, #8]
	uint8_t flag = 0;
	struct sockaddr_in addr_in;
	const char *uri = NULL;
	int i = 0, j = 0, reconnect = 0;

	if (module == NULL) {
     8f0:	2800      	cmp	r0, #0
     8f2:	d100      	bne.n	8f6 <http_client_send_request+0x16>
     8f4:	e0d7      	b.n	aa6 <http_client_send_request+0x1c6>
		return -EINVAL;
	}

	if (module->req.state > STATE_SOCK_CONNECTED) {
     8f6:	6ec3      	ldr	r3, [r0, #108]	; 0x6c
     8f8:	2b02      	cmp	r3, #2
     8fa:	d900      	bls.n	8fe <http_client_send_request+0x1e>
     8fc:	e0d6      	b.n	aac <http_client_send_request+0x1cc>
		return -EBUSY;
	}

	/* Separate host and uri */
	if (!strncmp(url, "http://", 7)) {
     8fe:	1c08      	adds	r0, r1, #0
     900:	4982      	ldr	r1, [pc, #520]	; (b0c <http_client_send_request+0x22c>)
     902:	2207      	movs	r2, #7
     904:	4b82      	ldr	r3, [pc, #520]	; (b10 <http_client_send_request+0x230>)
     906:	4798      	blx	r3
		i = 7;
     908:	2707      	movs	r7, #7
	if (module->req.state > STATE_SOCK_CONNECTED) {
		return -EBUSY;
	}

	/* Separate host and uri */
	if (!strncmp(url, "http://", 7)) {
     90a:	2800      	cmp	r0, #0
     90c:	d007      	beq.n	91e <http_client_send_request+0x3e>
		i = 7;
	} else if (!strncmp(url, "https://", 8)) {
     90e:	1c30      	adds	r0, r6, #0
     910:	4980      	ldr	r1, [pc, #512]	; (b14 <http_client_send_request+0x234>)
     912:	2208      	movs	r2, #8
     914:	4b7e      	ldr	r3, [pc, #504]	; (b10 <http_client_send_request+0x230>)
     916:	4798      	blx	r3
		i = 8;
     918:	4241      	negs	r1, r0
     91a:	4141      	adcs	r1, r0
     91c:	00cf      	lsls	r7, r1, #3
	}
	reconnect = strncmp(module->host, url + i, strlen(module->host));
     91e:	19f5      	adds	r5, r6, r7
     920:	1c63      	adds	r3, r4, #1
     922:	9301      	str	r3, [sp, #4]
     924:	1c18      	adds	r0, r3, #0
     926:	4b7c      	ldr	r3, [pc, #496]	; (b18 <http_client_send_request+0x238>)
     928:	4798      	blx	r3
     92a:	1c02      	adds	r2, r0, #0
     92c:	9801      	ldr	r0, [sp, #4]
     92e:	1c29      	adds	r1, r5, #0
     930:	4b77      	ldr	r3, [pc, #476]	; (b10 <http_client_send_request+0x230>)
     932:	4798      	blx	r3
     934:	9003      	str	r0, [sp, #12]

	for (; url[i] != '\0' && url[i] != '/'; i++) {
     936:	782b      	ldrb	r3, [r5, #0]
     938:	2b00      	cmp	r3, #0
     93a:	d00e      	beq.n	95a <http_client_send_request+0x7a>
     93c:	2b2f      	cmp	r3, #47	; 0x2f
     93e:	d00e      	beq.n	95e <http_client_send_request+0x7e>
     940:	1c79      	adds	r1, r7, #1
     942:	1871      	adds	r1, r6, r1
     944:	2200      	movs	r2, #0
		module->host[j++] = url[i];
     946:	3201      	adds	r2, #1
     948:	54a3      	strb	r3, [r4, r2]
	} else if (!strncmp(url, "https://", 8)) {
		i = 8;
	}
	reconnect = strncmp(module->host, url + i, strlen(module->host));

	for (; url[i] != '\0' && url[i] != '/'; i++) {
     94a:	1c0d      	adds	r5, r1, #0
     94c:	780b      	ldrb	r3, [r1, #0]
     94e:	2b00      	cmp	r3, #0
     950:	d006      	beq.n	960 <http_client_send_request+0x80>
     952:	3101      	adds	r1, #1
     954:	2b2f      	cmp	r3, #47	; 0x2f
     956:	d1f6      	bne.n	946 <http_client_send_request+0x66>
     958:	e002      	b.n	960 <http_client_send_request+0x80>
	enum http_method method, struct http_entity *const entity, const char *ext_header)
{
	uint8_t flag = 0;
	struct sockaddr_in addr_in;
	const char *uri = NULL;
	int i = 0, j = 0, reconnect = 0;
     95a:	2200      	movs	r2, #0
     95c:	e000      	b.n	960 <http_client_send_request+0x80>
     95e:	2200      	movs	r2, #0
	reconnect = strncmp(module->host, url + i, strlen(module->host));

	for (; url[i] != '\0' && url[i] != '/'; i++) {
		module->host[j++] = url[i];
	}
	module->host[j] = '\0';
     960:	18a2      	adds	r2, r4, r2
     962:	2300      	movs	r3, #0
     964:	7053      	strb	r3, [r2, #1]
	uri = url + i;

	/* Checks the parameters. */
	if (strlen(module->host) == 0) {
     966:	7863      	ldrb	r3, [r4, #1]
     968:	2b00      	cmp	r3, #0
     96a:	d100      	bne.n	96e <http_client_send_request+0x8e>
     96c:	e0a1      	b.n	ab2 <http_client_send_request+0x1d2>
		return -EINVAL;
	}

	if (strlen(uri) >= HTTP_MAX_URI_LENGTH) {
     96e:	1c28      	adds	r0, r5, #0
     970:	4b69      	ldr	r3, [pc, #420]	; (b18 <http_client_send_request+0x238>)
     972:	4798      	blx	r3
     974:	287f      	cmp	r0, #127	; 0x7f
     976:	d900      	bls.n	97a <http_client_send_request+0x9a>
     978:	e09e      	b.n	ab8 <http_client_send_request+0x1d8>
		return -ENAMETOOLONG;
	}

	if (module->req.ext_header != NULL) {
     97a:	238a      	movs	r3, #138	; 0x8a
     97c:	005b      	lsls	r3, r3, #1
     97e:	58e0      	ldr	r0, [r4, r3]
     980:	2800      	cmp	r0, #0
     982:	d001      	beq.n	988 <http_client_send_request+0xa8>
		free(module->req.ext_header);
     984:	4b65      	ldr	r3, [pc, #404]	; (b1c <http_client_send_request+0x23c>)
     986:	4798      	blx	r3
	}
	if (ext_header != NULL) {
     988:	9b0e      	ldr	r3, [sp, #56]	; 0x38
     98a:	2b00      	cmp	r3, #0
     98c:	d008      	beq.n	9a0 <http_client_send_request+0xc0>
		module->req.ext_header = strdup(ext_header);
     98e:	1c18      	adds	r0, r3, #0
     990:	4b63      	ldr	r3, [pc, #396]	; (b20 <http_client_send_request+0x240>)
     992:	4798      	blx	r3
     994:	238a      	movs	r3, #138	; 0x8a
     996:	005b      	lsls	r3, r3, #1
     998:	50e0      	str	r0, [r4, r3]
		if (module->req.ext_header == NULL) {
     99a:	2800      	cmp	r0, #0
     99c:	d104      	bne.n	9a8 <http_client_send_request+0xc8>
     99e:	e08e      	b.n	abe <http_client_send_request+0x1de>
			return -ENOMEM;
		}
	} else {
		module->req.ext_header = NULL;
     9a0:	2200      	movs	r2, #0
     9a2:	238a      	movs	r3, #138	; 0x8a
     9a4:	005b      	lsls	r3, r3, #1
     9a6:	50e2      	str	r2, [r4, r3]
	}

	module->sending = 0;
     9a8:	2241      	movs	r2, #65	; 0x41
     9aa:	5ca3      	ldrb	r3, [r4, r2]
     9ac:	2101      	movs	r1, #1
     9ae:	438b      	bics	r3, r1
     9b0:	54a3      	strb	r3, [r4, r2]
	module->recved_size = 0;
     9b2:	2300      	movs	r3, #0
     9b4:	6463      	str	r3, [r4, #68]	; 0x44
	if (uri[0] == '/') {
     9b6:	782b      	ldrb	r3, [r5, #0]
     9b8:	2b2f      	cmp	r3, #47	; 0x2f
     9ba:	d105      	bne.n	9c8 <http_client_send_request+0xe8>
		strcpy(module->req.uri, uri);
     9bc:	1c20      	adds	r0, r4, #0
     9be:	3070      	adds	r0, #112	; 0x70
     9c0:	1c29      	adds	r1, r5, #0
     9c2:	4b58      	ldr	r3, [pc, #352]	; (b24 <http_client_send_request+0x244>)
     9c4:	4798      	blx	r3
     9c6:	e00a      	b.n	9de <http_client_send_request+0xfe>
		} else {
		module->req.uri[0] = '/';
     9c8:	222f      	movs	r2, #47	; 0x2f
     9ca:	2370      	movs	r3, #112	; 0x70
     9cc:	54e2      	strb	r2, [r4, r3]
		if (uri[0] != 0) {
     9ce:	782b      	ldrb	r3, [r5, #0]
     9d0:	2b00      	cmp	r3, #0
     9d2:	d004      	beq.n	9de <http_client_send_request+0xfe>
			strcpy(module->req.uri + 1, uri);
     9d4:	1c20      	adds	r0, r4, #0
     9d6:	3071      	adds	r0, #113	; 0x71
     9d8:	1c29      	adds	r1, r5, #0
     9da:	4b52      	ldr	r3, [pc, #328]	; (b24 <http_client_send_request+0x244>)
     9dc:	4798      	blx	r3
		}
	}

	if (entity != NULL) {
     9de:	9b02      	ldr	r3, [sp, #8]
     9e0:	2b00      	cmp	r3, #0
     9e2:	d006      	beq.n	9f2 <http_client_send_request+0x112>
		memcpy(&module->req.entity, entity, sizeof(struct http_entity));
     9e4:	1c20      	adds	r0, r4, #0
     9e6:	30f0      	adds	r0, #240	; 0xf0
     9e8:	1c19      	adds	r1, r3, #0
     9ea:	2218      	movs	r2, #24
     9ec:	4b4e      	ldr	r3, [pc, #312]	; (b28 <http_client_send_request+0x248>)
     9ee:	4798      	blx	r3
     9f0:	e005      	b.n	9fe <http_client_send_request+0x11e>
	} else {
		memset(&module->req.entity, 0, sizeof(struct http_entity));
     9f2:	1c20      	adds	r0, r4, #0
     9f4:	30f0      	adds	r0, #240	; 0xf0
     9f6:	2100      	movs	r1, #0
     9f8:	2218      	movs	r2, #24
     9fa:	4b4c      	ldr	r3, [pc, #304]	; (b2c <http_client_send_request+0x24c>)
     9fc:	4798      	blx	r3
	}

	module->req.method = method;
     9fe:	2384      	movs	r3, #132	; 0x84
     a00:	005b      	lsls	r3, r3, #1
     a02:	4642      	mov	r2, r8
     a04:	54e2      	strb	r2, [r4, r3]
	
	switch (module->req.state) {
     a06:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
     a08:	2b01      	cmp	r3, #1
     a0a:	d004      	beq.n	a16 <http_client_send_request+0x136>
     a0c:	2b00      	cmp	r3, #0
     a0e:	d015      	beq.n	a3c <http_client_send_request+0x15c>
     a10:	2b02      	cmp	r3, #2
     a12:	d005      	beq.n	a20 <http_client_send_request+0x140>
     a14:	e056      	b.n	ac4 <http_client_send_request+0x1e4>
		/* STATE_RECV_RESP */
		/* Session was busy. Try again later. */
		return -EAGAIN;
	}

	return 0;
     a16:	2000      	movs	r0, #0

	module->req.method = method;
	
	switch (module->req.state) {
	case STATE_TRY_SOCK_CONNECT:
		if (!reconnect) {
     a18:	9b03      	ldr	r3, [sp, #12]
     a1a:	2b00      	cmp	r3, #0
     a1c:	d10a      	bne.n	a34 <http_client_send_request+0x154>
     a1e:	e070      	b.n	b02 <http_client_send_request+0x222>
			break; /* Currently try to connect to the same server. */
		}
	case STATE_SOCK_CONNECTED:
		if (!reconnect) {
     a20:	9b03      	ldr	r3, [sp, #12]
     a22:	2b00      	cmp	r3, #0
     a24:	d106      	bne.n	a34 <http_client_send_request+0x154>
			module->req.state = STATE_REQ_SEND_HEADER;
     a26:	3303      	adds	r3, #3
     a28:	66e3      	str	r3, [r4, #108]	; 0x6c
			/* Send request immediately. */
			_http_client_request(module);
     a2a:	1c20      	adds	r0, r4, #0
     a2c:	4b40      	ldr	r3, [pc, #256]	; (b30 <http_client_send_request+0x250>)
     a2e:	4798      	blx	r3
		/* STATE_RECV_RESP */
		/* Session was busy. Try again later. */
		return -EAGAIN;
	}

	return 0;
     a30:	2000      	movs	r0, #0
	case STATE_SOCK_CONNECTED:
		if (!reconnect) {
			module->req.state = STATE_REQ_SEND_HEADER;
			/* Send request immediately. */
			_http_client_request(module);
			break;
     a32:	e066      	b.n	b02 <http_client_send_request+0x222>
		} else {
			/* Request to another peer. Disconnect and try connect again. */
			_http_client_clear_conn(module, 0);
     a34:	1c20      	adds	r0, r4, #0
     a36:	2100      	movs	r1, #0
     a38:	4b3e      	ldr	r3, [pc, #248]	; (b34 <http_client_send_request+0x254>)
     a3a:	4798      	blx	r3
		}
	case STATE_INIT:
		if (module->config.tls) {
     a3c:	2352      	movs	r3, #82	; 0x52
     a3e:	5ce2      	ldrb	r2, [r4, r3]
     a40:	1e53      	subs	r3, r2, #1
     a42:	419a      	sbcs	r2, r3
			flag |= SOCKET_FLAGS_SSL;
		}
		module->sock = socket(AF_INET, SOCK_STREAM, flag);
     a44:	b2d2      	uxtb	r2, r2
     a46:	2002      	movs	r0, #2
     a48:	2101      	movs	r1, #1
     a4a:	4b3b      	ldr	r3, [pc, #236]	; (b38 <http_client_send_request+0x258>)
     a4c:	4798      	blx	r3
     a4e:	7020      	strb	r0, [r4, #0]
		if (module->sock >= 0) {
     a50:	2800      	cmp	r0, #0
     a52:	db3a      	blt.n	aca <http_client_send_request+0x1ea>
			module_ref_inst[module->sock] = module;
     a54:	0080      	lsls	r0, r0, #2
     a56:	4b39      	ldr	r3, [pc, #228]	; (b3c <http_client_send_request+0x25c>)
     a58:	50c4      	str	r4, [r0, r3]
     a5a:	9d01      	ldr	r5, [sp, #4]
	_http_client_clear_conn(module_inst, -ETIME);
}

static int _is_ip(const char *host)
{
	uint32_t isv6 = 0;
     a5c:	2100      	movs	r1, #0
	char ch;

	while (*host != '\0') {
		ch = *host++;
		if ((ch >= 'a' && ch <= 'f') || (ch >= 'A' && ch <= 'F') || ch == ':' || ch == '/') {
     a5e:	2620      	movs	r6, #32
			isv6 = 1;
     a60:	2001      	movs	r0, #1
		} else if (ch == '.') {
			if (isv6) {
				return 0;
			}
		} else if ((ch & 0x30) != 0x30) {
     a62:	2730      	movs	r7, #48	; 0x30
     a64:	e017      	b.n	a96 <http_client_send_request+0x1b6>
{
	uint32_t isv6 = 0;
	char ch;

	while (*host != '\0') {
		ch = *host++;
     a66:	3501      	adds	r5, #1
		if ((ch >= 'a' && ch <= 'f') || (ch >= 'A' && ch <= 'F') || ch == ':' || ch == '/') {
     a68:	1c13      	adds	r3, r2, #0
     a6a:	43b3      	bics	r3, r6
     a6c:	3b41      	subs	r3, #65	; 0x41
     a6e:	2b05      	cmp	r3, #5
     a70:	d90c      	bls.n	a8c <http_client_send_request+0x1ac>
     a72:	2a3a      	cmp	r2, #58	; 0x3a
     a74:	d00c      	beq.n	a90 <http_client_send_request+0x1b0>
     a76:	2a2f      	cmp	r2, #47	; 0x2f
     a78:	d00c      	beq.n	a94 <http_client_send_request+0x1b4>
			isv6 = 1;
		} else if (ch == '.') {
     a7a:	2a2e      	cmp	r2, #46	; 0x2e
     a7c:	d102      	bne.n	a84 <http_client_send_request+0x1a4>
			if (isv6) {
     a7e:	2900      	cmp	r1, #0
     a80:	d009      	beq.n	a96 <http_client_send_request+0x1b6>
     a82:	e03a      	b.n	afa <http_client_send_request+0x21a>
				return 0;
			}
		} else if ((ch & 0x30) != 0x30) {
     a84:	403a      	ands	r2, r7
     a86:	2a30      	cmp	r2, #48	; 0x30
     a88:	d005      	beq.n	a96 <http_client_send_request+0x1b6>
     a8a:	e036      	b.n	afa <http_client_send_request+0x21a>
	char ch;

	while (*host != '\0') {
		ch = *host++;
		if ((ch >= 'a' && ch <= 'f') || (ch >= 'A' && ch <= 'F') || ch == ':' || ch == '/') {
			isv6 = 1;
     a8c:	1c01      	adds	r1, r0, #0
     a8e:	e002      	b.n	a96 <http_client_send_request+0x1b6>
     a90:	1c01      	adds	r1, r0, #0
     a92:	e000      	b.n	a96 <http_client_send_request+0x1b6>
     a94:	1c01      	adds	r1, r0, #0
static int _is_ip(const char *host)
{
	uint32_t isv6 = 0;
	char ch;

	while (*host != '\0') {
     a96:	782a      	ldrb	r2, [r5, #0]
     a98:	2a00      	cmp	r2, #0
     a9a:	d1e4      	bne.n	a66 <http_client_send_request+0x186>
     a9c:	e018      	b.n	ad0 <http_client_send_request+0x1f0>
				addr_in.sin_addr.s_addr = nmi_inet_addr((char *)module->host);
				connect(module->sock, (struct sockaddr *)&addr_in, sizeof(struct sockaddr_in));
			} else {
				gethostbyname((uint8*)module->host);
			}
			module->req.state = STATE_TRY_SOCK_CONNECT;
     a9e:	2301      	movs	r3, #1
     aa0:	66e3      	str	r3, [r4, #108]	; 0x6c
		/* STATE_RECV_RESP */
		/* Session was busy. Try again later. */
		return -EAGAIN;
	}

	return 0;
     aa2:	2000      	movs	r0, #0
			}
			module->req.state = STATE_TRY_SOCK_CONNECT;
		} else {
			return -ENOSPC;
		}
		break;
     aa4:	e02d      	b.n	b02 <http_client_send_request+0x222>
	struct sockaddr_in addr_in;
	const char *uri = NULL;
	int i = 0, j = 0, reconnect = 0;

	if (module == NULL) {
		return -EINVAL;
     aa6:	2016      	movs	r0, #22
     aa8:	4240      	negs	r0, r0
     aaa:	e02a      	b.n	b02 <http_client_send_request+0x222>
	}

	if (module->req.state > STATE_SOCK_CONNECTED) {
		return -EBUSY;
     aac:	2010      	movs	r0, #16
     aae:	4240      	negs	r0, r0
     ab0:	e027      	b.n	b02 <http_client_send_request+0x222>
	module->host[j] = '\0';
	uri = url + i;

	/* Checks the parameters. */
	if (strlen(module->host) == 0) {
		return -EINVAL;
     ab2:	2016      	movs	r0, #22
     ab4:	4240      	negs	r0, r0
     ab6:	e024      	b.n	b02 <http_client_send_request+0x222>
	}

	if (strlen(uri) >= HTTP_MAX_URI_LENGTH) {
		return -ENAMETOOLONG;
     ab8:	205b      	movs	r0, #91	; 0x5b
     aba:	4240      	negs	r0, r0
     abc:	e021      	b.n	b02 <http_client_send_request+0x222>
		free(module->req.ext_header);
	}
	if (ext_header != NULL) {
		module->req.ext_header = strdup(ext_header);
		if (module->req.ext_header == NULL) {
			return -ENOMEM;
     abe:	200c      	movs	r0, #12
     ac0:	4240      	negs	r0, r0
     ac2:	e01e      	b.n	b02 <http_client_send_request+0x222>
	default:
		/* STATE_TRY_REQ */
		/* STATE_WAIT_RESP */
		/* STATE_RECV_RESP */
		/* Session was busy. Try again later. */
		return -EAGAIN;
     ac4:	200b      	movs	r0, #11
     ac6:	4240      	negs	r0, r0
     ac8:	e01b      	b.n	b02 <http_client_send_request+0x222>
			} else {
				gethostbyname((uint8*)module->host);
			}
			module->req.state = STATE_TRY_SOCK_CONNECT;
		} else {
			return -ENOSPC;
     aca:	201c      	movs	r0, #28
     acc:	4240      	negs	r0, r0
     ace:	e018      	b.n	b02 <http_client_send_request+0x222>
		}
		module->sock = socket(AF_INET, SOCK_STREAM, flag);
		if (module->sock >= 0) {
			module_ref_inst[module->sock] = module;
			if (_is_ip(module->host)) {
				addr_in.sin_family = AF_INET;
     ad0:	2302      	movs	r3, #2
     ad2:	aa04      	add	r2, sp, #16
     ad4:	8013      	strh	r3, [r2, #0]
				addr_in.sin_port = _htons(module->config.port);
     ad6:	334e      	adds	r3, #78	; 0x4e
     ad8:	5ae3      	ldrh	r3, [r4, r3]
     ada:	021a      	lsls	r2, r3, #8
     adc:	0a1b      	lsrs	r3, r3, #8
     ade:	4313      	orrs	r3, r2
     ae0:	aa04      	add	r2, sp, #16
     ae2:	8053      	strh	r3, [r2, #2]
				addr_in.sin_addr.s_addr = nmi_inet_addr((char *)module->host);
     ae4:	9801      	ldr	r0, [sp, #4]
     ae6:	4b16      	ldr	r3, [pc, #88]	; (b40 <http_client_send_request+0x260>)
     ae8:	4798      	blx	r3
     aea:	9005      	str	r0, [sp, #20]
				connect(module->sock, (struct sockaddr *)&addr_in, sizeof(struct sockaddr_in));
     aec:	2000      	movs	r0, #0
     aee:	5620      	ldrsb	r0, [r4, r0]
     af0:	a904      	add	r1, sp, #16
     af2:	2210      	movs	r2, #16
     af4:	4b13      	ldr	r3, [pc, #76]	; (b44 <http_client_send_request+0x264>)
     af6:	4798      	blx	r3
     af8:	e7d1      	b.n	a9e <http_client_send_request+0x1be>
			} else {
				gethostbyname((uint8*)module->host);
     afa:	9801      	ldr	r0, [sp, #4]
     afc:	4b12      	ldr	r3, [pc, #72]	; (b48 <http_client_send_request+0x268>)
     afe:	4798      	blx	r3
     b00:	e7cd      	b.n	a9e <http_client_send_request+0x1be>
		/* Session was busy. Try again later. */
		return -EAGAIN;
	}

	return 0;
}
     b02:	b008      	add	sp, #32
     b04:	bc04      	pop	{r2}
     b06:	4690      	mov	r8, r2
     b08:	bdf0      	pop	{r4, r5, r6, r7, pc}
     b0a:	46c0      	nop			; (mov r8, r8)
     b0c:	0000e45c 	.word	0x0000e45c
     b10:	0000cdf3 	.word	0x0000cdf3
     b14:	0000e464 	.word	0x0000e464
     b18:	0000cde5 	.word	0x0000cde5
     b1c:	0000c07d 	.word	0x0000c07d
     b20:	0000ca55 	.word	0x0000ca55
     b24:	0000ca45 	.word	0x0000ca45
     b28:	0000c0a7 	.word	0x0000c0a7
     b2c:	0000c0e1 	.word	0x0000c0e1
     b30:	000003a5 	.word	0x000003a5
     b34:	00000285 	.word	0x00000285
     b38:	00006fa1 	.word	0x00006fa1
     b3c:	200000e4 	.word	0x200000e4
     b40:	000073b5 	.word	0x000073b5
     b44:	00007161 	.word	0x00007161
     b48:	00007421 	.word	0x00007421

00000b4c <_http_client_recv_packet>:
		break;
	}
}

void _http_client_recv_packet(struct http_client_module *const module)
{
     b4c:	b510      	push	{r4, lr}
	if (module == NULL) {
     b4e:	2800      	cmp	r0, #0
     b50:	d012      	beq.n	b78 <_http_client_recv_packet+0x2c>
     b52:	1c03      	adds	r3, r0, #0
		return;
	}
	
	if (module->recved_size >= module->config.recv_buffer_size) {
     b54:	6c44      	ldr	r4, [r0, #68]	; 0x44
     b56:	6e02      	ldr	r2, [r0, #96]	; 0x60
     b58:	4294      	cmp	r4, r2
     b5a:	d304      	bcc.n	b66 <_http_client_recv_packet+0x1a>
		/* Has not enough memory. */
		_http_client_clear_conn(module, -EOVERFLOW);
     b5c:	218b      	movs	r1, #139	; 0x8b
     b5e:	4249      	negs	r1, r1
     b60:	4b06      	ldr	r3, [pc, #24]	; (b7c <_http_client_recv_packet+0x30>)
     b62:	4798      	blx	r3
		return;
     b64:	e008      	b.n	b78 <_http_client_recv_packet+0x2c>
	/*
	while (recv(module->sock,
		module->config.recv_buffer + module->recved_size,
		module->config.recv_buffer_size - module->recved_size, 0) != 0);
	*/
	recv(module->sock,
     b66:	2000      	movs	r0, #0
     b68:	5618      	ldrsb	r0, [r3, r0]
     b6a:	6dd9      	ldr	r1, [r3, #92]	; 0x5c
     b6c:	1909      	adds	r1, r1, r4
     b6e:	1b12      	subs	r2, r2, r4
     b70:	b292      	uxth	r2, r2
     b72:	2300      	movs	r3, #0
     b74:	4c02      	ldr	r4, [pc, #8]	; (b80 <_http_client_recv_packet+0x34>)
     b76:	47a0      	blx	r4
		module->config.recv_buffer + module->recved_size,
		module->config.recv_buffer_size - module->recved_size, 0);
}
     b78:	bd10      	pop	{r4, pc}
     b7a:	46c0      	nop			; (mov r8, r8)
     b7c:	00000285 	.word	0x00000285
     b80:	00007295 	.word	0x00007295

00000b84 <_http_client_move_buffer>:

	return 0;
}

void _http_client_move_buffer(struct http_client_module *const module, char *base)
{
     b84:	b538      	push	{r3, r4, r5, lr}
	char *buffer = module->config.recv_buffer;
     b86:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
	int remain = (int)module->recved_size - (int)base + (int)buffer;
     b88:	6c42      	ldr	r2, [r0, #68]	; 0x44
     b8a:	1a54      	subs	r4, r2, r1
     b8c:	191c      	adds	r4, r3, r4

	if (remain > 0) {
     b8e:	2c00      	cmp	r4, #0
     b90:	dd06      	ble.n	ba0 <_http_client_move_buffer+0x1c>
     b92:	1c05      	adds	r5, r0, #0
		memmove(buffer, base, remain);
     b94:	1c18      	adds	r0, r3, #0
     b96:	1c22      	adds	r2, r4, #0
     b98:	4b03      	ldr	r3, [pc, #12]	; (ba8 <_http_client_move_buffer+0x24>)
     b9a:	4798      	blx	r3
		module->recved_size = remain;
     b9c:	646c      	str	r4, [r5, #68]	; 0x44
     b9e:	e001      	b.n	ba4 <_http_client_move_buffer+0x20>
	} else {
		module->recved_size = 0;
     ba0:	2300      	movs	r3, #0
     ba2:	6443      	str	r3, [r0, #68]	; 0x44
	}
}
     ba4:	bd38      	pop	{r3, r4, r5, pc}
     ba6:	46c0      	nop			; (mov r8, r8)
     ba8:	0000c0b9 	.word	0x0000c0b9

00000bac <_http_client_handle_header>:
	}
	return 0;
}

int _http_client_handle_header(struct http_client_module *const module)
{
     bac:	b5f0      	push	{r4, r5, r6, r7, lr}
     bae:	464f      	mov	r7, r9
     bb0:	b480      	push	{r7}
     bb2:	b084      	sub	sp, #16
     bb4:	1c07      	adds	r7, r0, #0
	/* New line character only used in this function. So variable registered in the code region. */
	static const char *new_line = "\r\n";

	//TODO : header filter

	for (ptr = module->config.recv_buffer ; ; ) {
     bb6:	6dc4      	ldr	r4, [r0, #92]	; 0x5c
		ptr_line_end = strstr(ptr, new_line);
     bb8:	4b67      	ldr	r3, [pc, #412]	; (d58 <_http_client_handle_header+0x1ac>)
     bba:	4699      	mov	r9, r3
     bbc:	1c20      	adds	r0, r4, #0
     bbe:	4967      	ldr	r1, [pc, #412]	; (d5c <_http_client_handle_header+0x1b0>)
     bc0:	47c8      	blx	r9
     bc2:	1e05      	subs	r5, r0, #0
		if (ptr_line_end == NULL || ptr_line_end >= module->config.recv_buffer + module->recved_size) {
     bc4:	d005      	beq.n	bd2 <_http_client_handle_header+0x26>
     bc6:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
     bc8:	6c7a      	ldr	r2, [r7, #68]	; 0x44
     bca:	4694      	mov	ip, r2
     bcc:	4463      	add	r3, ip
     bce:	4298      	cmp	r0, r3
     bd0:	d305      	bcc.n	bde <_http_client_handle_header+0x32>
			/* not enough buffer. */
			_http_client_move_buffer(module, ptr);
     bd2:	1c38      	adds	r0, r7, #0
     bd4:	1c21      	adds	r1, r4, #0
     bd6:	4b62      	ldr	r3, [pc, #392]	; (d60 <_http_client_handle_header+0x1b4>)
     bd8:	4798      	blx	r3
			return 0;
     bda:	2600      	movs	r6, #0
     bdc:	e0b6      	b.n	d4c <_http_client_handle_header+0x1a0>
		}

		if (!strncmp(ptr, new_line, strlen(new_line))) {
     bde:	1c20      	adds	r0, r4, #0
     be0:	495e      	ldr	r1, [pc, #376]	; (d5c <_http_client_handle_header+0x1b0>)
     be2:	2202      	movs	r2, #2
     be4:	4b5f      	ldr	r3, [pc, #380]	; (d64 <_http_client_handle_header+0x1b8>)
     be6:	4798      	blx	r3
     be8:	2800      	cmp	r0, #0
     bea:	d130      	bne.n	c4e <_http_client_handle_header+0xa2>
			/* Move remain data to forward part of buffer. */
			_http_client_move_buffer(module, ptr + strlen(new_line));
     bec:	1ca1      	adds	r1, r4, #2
     bee:	1c38      	adds	r0, r7, #0
     bf0:	4b5b      	ldr	r3, [pc, #364]	; (d60 <_http_client_handle_header+0x1b4>)
     bf2:	4798      	blx	r3

			/* Check validation first. */
			if (module->cb && module->resp.response_code) {
     bf4:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
     bf6:	2b00      	cmp	r3, #0
     bf8:	d023      	beq.n	c42 <_http_client_handle_header+0x96>
     bfa:	2292      	movs	r2, #146	; 0x92
     bfc:	0052      	lsls	r2, r2, #1
     bfe:	5ab9      	ldrh	r1, [r7, r2]
     c00:	2900      	cmp	r1, #0
     c02:	d01e      	beq.n	c42 <_http_client_handle_header+0x96>
				/* Chunked transfer */
				if (module->resp.content_length < 0) {
     c04:	3a08      	subs	r2, #8
     c06:	58b8      	ldr	r0, [r7, r2]
     c08:	2800      	cmp	r0, #0
     c0a:	da0c      	bge.n	c26 <_http_client_handle_header+0x7a>
					data.recv_response.response_code = module->resp.response_code;
     c0c:	aa01      	add	r2, sp, #4
     c0e:	8011      	strh	r1, [r2, #0]
					data.recv_response.is_chunked = 1;
     c10:	2101      	movs	r1, #1
     c12:	7091      	strb	r1, [r2, #2]
					module->resp.read_length = 0;
     c14:	2100      	movs	r1, #0
     c16:	2090      	movs	r0, #144	; 0x90
     c18:	0040      	lsls	r0, r0, #1
     c1a:	5039      	str	r1, [r7, r0]
					data.recv_response.content = NULL;
     c1c:	6091      	str	r1, [r2, #8]
					module->cb(module, HTTP_CLIENT_CALLBACK_RECV_RESPONSE, &data);
     c1e:	1c38      	adds	r0, r7, #0
     c20:	3102      	adds	r1, #2
     c22:	4798      	blx	r3
     c24:	e00d      	b.n	c42 <_http_client_handle_header+0x96>
				} else if (module->resp.content_length > (int)module->config.recv_buffer_size) {
     c26:	6e3a      	ldr	r2, [r7, #96]	; 0x60
     c28:	4290      	cmp	r0, r2
     c2a:	dd0a      	ble.n	c42 <_http_client_handle_header+0x96>
					/* Entity is bigger than receive buffer. Sending the buffer to user like chunked transfer. */
					data.recv_response.response_code = module->resp.response_code;
     c2c:	aa01      	add	r2, sp, #4
     c2e:	8011      	strh	r1, [r2, #0]
					data.recv_response.content_length = module->resp.content_length;
     c30:	6050      	str	r0, [r2, #4]
					data.recv_response.content = NULL;
     c32:	2100      	movs	r1, #0
     c34:	6091      	str	r1, [r2, #8]
					module->resp.read_length = 0;
     c36:	2090      	movs	r0, #144	; 0x90
     c38:	0040      	lsls	r0, r0, #1
     c3a:	5039      	str	r1, [r7, r0]
					module->cb(module, HTTP_CLIENT_CALLBACK_RECV_RESPONSE, &data);
     c3c:	1c38      	adds	r0, r7, #0
     c3e:	3102      	adds	r1, #2
     c40:	4798      	blx	r3
				}
			}

			module->resp.state = STATE_PARSE_ENTITY;
     c42:	2201      	movs	r2, #1
     c44:	238c      	movs	r3, #140	; 0x8c
     c46:	005b      	lsls	r3, r3, #1
     c48:	50fa      	str	r2, [r7, r3]
			return 1;
     c4a:	2601      	movs	r6, #1
     c4c:	e07e      	b.n	d4c <_http_client_handle_header+0x1a0>
		} else if (!strncmp(ptr, "Content-Length: ", strlen("Content-Length: "))) {
     c4e:	1c20      	adds	r0, r4, #0
     c50:	4945      	ldr	r1, [pc, #276]	; (d68 <_http_client_handle_header+0x1bc>)
     c52:	2210      	movs	r2, #16
     c54:	4b43      	ldr	r3, [pc, #268]	; (d64 <_http_client_handle_header+0x1b8>)
     c56:	4798      	blx	r3
     c58:	2800      	cmp	r0, #0
     c5a:	d107      	bne.n	c6c <_http_client_handle_header+0xc0>
			module->resp.content_length = atoi(ptr + strlen("Content-Length: "));
     c5c:	1c20      	adds	r0, r4, #0
     c5e:	3010      	adds	r0, #16
     c60:	4b42      	ldr	r3, [pc, #264]	; (d6c <_http_client_handle_header+0x1c0>)
     c62:	4798      	blx	r3
     c64:	238e      	movs	r3, #142	; 0x8e
     c66:	005b      	lsls	r3, r3, #1
     c68:	50f8      	str	r0, [r7, r3]
     c6a:	e06d      	b.n	d48 <_http_client_handle_header+0x19c>
		} else if (!strncmp(ptr, "Transfer-Encoding: ", strlen("Transfer-Encoding: "))) {
     c6c:	1c20      	adds	r0, r4, #0
     c6e:	4940      	ldr	r1, [pc, #256]	; (d70 <_http_client_handle_header+0x1c4>)
     c70:	2213      	movs	r2, #19
     c72:	4b3c      	ldr	r3, [pc, #240]	; (d64 <_http_client_handle_header+0x1b8>)
     c74:	4798      	blx	r3
     c76:	1e06      	subs	r6, r0, #0
     c78:	d11d      	bne.n	cb6 <_http_client_handle_header+0x10a>
			/* Currently does not support gzip or deflate encoding. If received this header, disconnect session immediately*/
			char *type_ptr = ptr + strlen("Transfer-Encoding: ");
     c7a:	1c22      	adds	r2, r4, #0
     c7c:	3213      	adds	r2, #19
			for (; ptr_line_end > type_ptr; type_ptr++) {
     c7e:	4295      	cmp	r5, r2
     c80:	d815      	bhi.n	cae <_http_client_handle_header+0x102>
     c82:	e061      	b.n	d48 <_http_client_handle_header+0x19c>
				if (*type_ptr == ' ') {
     c84:	7813      	ldrb	r3, [r2, #0]
     c86:	2b20      	cmp	r3, #32
     c88:	d103      	bne.n	c92 <_http_client_handle_header+0xe6>
		} else if (!strncmp(ptr, "Content-Length: ", strlen("Content-Length: "))) {
			module->resp.content_length = atoi(ptr + strlen("Content-Length: "));
		} else if (!strncmp(ptr, "Transfer-Encoding: ", strlen("Transfer-Encoding: "))) {
			/* Currently does not support gzip or deflate encoding. If received this header, disconnect session immediately*/
			char *type_ptr = ptr + strlen("Transfer-Encoding: ");
			for (; ptr_line_end > type_ptr; type_ptr++) {
     c8a:	3201      	adds	r2, #1
     c8c:	42aa      	cmp	r2, r5
     c8e:	d1f9      	bne.n	c84 <_http_client_handle_header+0xd8>
     c90:	e05a      	b.n	d48 <_http_client_handle_header+0x19c>
				if (*type_ptr == ' ') {
					continue;
				} else if (*type_ptr == 'C' || *type_ptr == 'c') {
     c92:	2220      	movs	r2, #32
     c94:	4393      	bics	r3, r2
     c96:	2b43      	cmp	r3, #67	; 0x43
     c98:	d103      	bne.n	ca2 <_http_client_handle_header+0xf6>
					/* Chunked transfer */
					module->req.content_length = -1;
     c9a:	3a21      	subs	r2, #33	; 0x21
     c9c:	33c9      	adds	r3, #201	; 0xc9
     c9e:	50fa      	str	r2, [r7, r3]
				} else {
					_http_client_clear_conn(module, -ENOTSUP);
					return 0;
				}
				break;
     ca0:	e052      	b.n	d48 <_http_client_handle_header+0x19c>
					continue;
				} else if (*type_ptr == 'C' || *type_ptr == 'c') {
					/* Chunked transfer */
					module->req.content_length = -1;
				} else {
					_http_client_clear_conn(module, -ENOTSUP);
     ca2:	1c38      	adds	r0, r7, #0
     ca4:	2186      	movs	r1, #134	; 0x86
     ca6:	4249      	negs	r1, r1
     ca8:	4b32      	ldr	r3, [pc, #200]	; (d74 <_http_client_handle_header+0x1c8>)
     caa:	4798      	blx	r3
					return 0;
     cac:	e04e      	b.n	d4c <_http_client_handle_header+0x1a0>
			module->resp.content_length = atoi(ptr + strlen("Content-Length: "));
		} else if (!strncmp(ptr, "Transfer-Encoding: ", strlen("Transfer-Encoding: "))) {
			/* Currently does not support gzip or deflate encoding. If received this header, disconnect session immediately*/
			char *type_ptr = ptr + strlen("Transfer-Encoding: ");
			for (; ptr_line_end > type_ptr; type_ptr++) {
				if (*type_ptr == ' ') {
     cae:	7ce3      	ldrb	r3, [r4, #19]
     cb0:	2b20      	cmp	r3, #32
     cb2:	d1ee      	bne.n	c92 <_http_client_handle_header+0xe6>
     cb4:	e7e9      	b.n	c8a <_http_client_handle_header+0xde>
					_http_client_clear_conn(module, -ENOTSUP);
					return 0;
				}
				break;
			}
		} else if (!strncmp(ptr, "Connection: ", strlen("Connection: "))) {
     cb6:	1c20      	adds	r0, r4, #0
     cb8:	492f      	ldr	r1, [pc, #188]	; (d78 <_http_client_handle_header+0x1cc>)
     cba:	220c      	movs	r2, #12
     cbc:	4b29      	ldr	r3, [pc, #164]	; (d64 <_http_client_handle_header+0x1b8>)
     cbe:	4798      	blx	r3
     cc0:	2800      	cmp	r0, #0
     cc2:	d11f      	bne.n	d04 <_http_client_handle_header+0x158>
			char *type_ptr = ptr + strlen("Connection: ");
     cc4:	1c22      	adds	r2, r4, #0
     cc6:	320c      	adds	r2, #12
			for (; ptr_line_end > type_ptr; type_ptr++) {
     cc8:	4295      	cmp	r5, r2
     cca:	d817      	bhi.n	cfc <_http_client_handle_header+0x150>
     ccc:	e03c      	b.n	d48 <_http_client_handle_header+0x19c>
				if (*type_ptr == ' ') {
     cce:	7813      	ldrb	r3, [r2, #0]
     cd0:	2b20      	cmp	r3, #32
     cd2:	d103      	bne.n	cdc <_http_client_handle_header+0x130>
				}
				break;
			}
		} else if (!strncmp(ptr, "Connection: ", strlen("Connection: "))) {
			char *type_ptr = ptr + strlen("Connection: ");
			for (; ptr_line_end > type_ptr; type_ptr++) {
     cd4:	3201      	adds	r2, #1
     cd6:	42aa      	cmp	r2, r5
     cd8:	d1f9      	bne.n	cce <_http_client_handle_header+0x122>
     cda:	e035      	b.n	d48 <_http_client_handle_header+0x19c>
				if (*type_ptr == ' ') {
					continue;
				} else if (*type_ptr == 'K' || *type_ptr == 'k') {
     cdc:	2220      	movs	r2, #32
     cde:	4393      	bics	r3, r2
     ce0:	2b4b      	cmp	r3, #75	; 0x4b
     ce2:	d105      	bne.n	cf0 <_http_client_handle_header+0x144>
					module->permanent = 1;
     ce4:	3221      	adds	r2, #33	; 0x21
     ce6:	5cb9      	ldrb	r1, [r7, r2]
     ce8:	2302      	movs	r3, #2
     cea:	430b      	orrs	r3, r1
     cec:	54bb      	strb	r3, [r7, r2]
     cee:	e02b      	b.n	d48 <_http_client_handle_header+0x19c>
				} else {
					module->permanent = 0;
     cf0:	2241      	movs	r2, #65	; 0x41
     cf2:	5cbb      	ldrb	r3, [r7, r2]
     cf4:	2102      	movs	r1, #2
     cf6:	438b      	bics	r3, r1
     cf8:	54bb      	strb	r3, [r7, r2]
     cfa:	e025      	b.n	d48 <_http_client_handle_header+0x19c>
				break;
			}
		} else if (!strncmp(ptr, "Connection: ", strlen("Connection: "))) {
			char *type_ptr = ptr + strlen("Connection: ");
			for (; ptr_line_end > type_ptr; type_ptr++) {
				if (*type_ptr == ' ') {
     cfc:	7b23      	ldrb	r3, [r4, #12]
     cfe:	2b20      	cmp	r3, #32
     d00:	d1ec      	bne.n	cdc <_http_client_handle_header+0x130>
     d02:	e7e7      	b.n	cd4 <_http_client_handle_header+0x128>
				} else {
					module->permanent = 0;
				}
				break;
			}
		} else if (!strncmp(ptr, "HTTP/", 5)) {
     d04:	1c20      	adds	r0, r4, #0
     d06:	491d      	ldr	r1, [pc, #116]	; (d7c <_http_client_handle_header+0x1d0>)
     d08:	2205      	movs	r2, #5
     d0a:	4b16      	ldr	r3, [pc, #88]	; (d64 <_http_client_handle_header+0x1b8>)
     d0c:	4798      	blx	r3
     d0e:	2800      	cmp	r0, #0
     d10:	d11a      	bne.n	d48 <_http_client_handle_header+0x19c>
			module->resp.response_code = atoi(ptr + 9); /* HTTP/{Ver} {Code} {Desc} : HTTP/1.1 200 OK */
     d12:	1c20      	adds	r0, r4, #0
     d14:	3009      	adds	r0, #9
     d16:	4b15      	ldr	r3, [pc, #84]	; (d6c <_http_client_handle_header+0x1c0>)
     d18:	4798      	blx	r3
     d1a:	2392      	movs	r3, #146	; 0x92
     d1c:	005b      	lsls	r3, r3, #1
     d1e:	52f8      	strh	r0, [r7, r3]
			/* Initializing the variables */
			module->resp.content_length = 0;
     d20:	2200      	movs	r2, #0
     d22:	3b08      	subs	r3, #8
     d24:	50fa      	str	r2, [r7, r3]
			/* persistent connection is turn on in the HTTP 1.1 or above version of protocols. */  
			if (ptr [5] > '1' || ptr[7] > '0') {
     d26:	7963      	ldrb	r3, [r4, #5]
     d28:	2b31      	cmp	r3, #49	; 0x31
     d2a:	d802      	bhi.n	d32 <_http_client_handle_header+0x186>
     d2c:	79e3      	ldrb	r3, [r4, #7]
     d2e:	2b30      	cmp	r3, #48	; 0x30
     d30:	d905      	bls.n	d3e <_http_client_handle_header+0x192>
				module->permanent = 1;
     d32:	2241      	movs	r2, #65	; 0x41
     d34:	5cb9      	ldrb	r1, [r7, r2]
     d36:	2302      	movs	r3, #2
     d38:	430b      	orrs	r3, r1
     d3a:	54bb      	strb	r3, [r7, r2]
     d3c:	e004      	b.n	d48 <_http_client_handle_header+0x19c>
			} else {
				module->permanent = 0;
     d3e:	2241      	movs	r2, #65	; 0x41
     d40:	5cbb      	ldrb	r3, [r7, r2]
     d42:	2102      	movs	r1, #2
     d44:	438b      	bics	r3, r1
     d46:	54bb      	strb	r3, [r7, r2]
			}
		}

		ptr = ptr_line_end + strlen(new_line);
     d48:	1cac      	adds	r4, r5, #2
	}
     d4a:	e737      	b.n	bbc <_http_client_handle_header+0x10>
}
     d4c:	1c30      	adds	r0, r6, #0
     d4e:	b004      	add	sp, #16
     d50:	bc04      	pop	{r2}
     d52:	4691      	mov	r9, r2
     d54:	bdf0      	pop	{r4, r5, r6, r7, pc}
     d56:	46c0      	nop			; (mov r8, r8)
     d58:	0000ce43 	.word	0x0000ce43
     d5c:	00011ae0 	.word	0x00011ae0
     d60:	00000b85 	.word	0x00000b85
     d64:	0000cdf3 	.word	0x0000cdf3
     d68:	0000e418 	.word	0x0000e418
     d6c:	0000c005 	.word	0x0000c005
     d70:	0000e470 	.word	0x0000e470
     d74:	00000285 	.word	0x00000285
     d78:	0000e484 	.word	0x0000e484
     d7c:	0000e494 	.word	0x0000e494

00000d80 <_http_client_handle_entity>:
		}
	} while(module->recved_size > 0);
}

int _http_client_handle_entity(struct http_client_module *const module)
{
     d80:	b5f0      	push	{r4, r5, r6, r7, lr}
     d82:	464f      	mov	r7, r9
     d84:	4646      	mov	r6, r8
     d86:	b4c0      	push	{r6, r7}
     d88:	b087      	sub	sp, #28
     d8a:	1c04      	adds	r4, r0, #0
	union http_client_data data;
	char *buffer = module->config.recv_buffer;
     d8c:	6dc5      	ldr	r5, [r0, #92]	; 0x5c

	/* If data size is lesser than buffer size, read all buffer and retransmission it to application. */
	if (module->resp.content_length >= 0 && module->resp.content_length <= (int)module->config.recv_buffer_size) {
     d8e:	238e      	movs	r3, #142	; 0x8e
     d90:	005b      	lsls	r3, r3, #1
     d92:	58c3      	ldr	r3, [r0, r3]
     d94:	2b00      	cmp	r3, #0
     d96:	db6c      	blt.n	e72 <_http_client_handle_entity+0xf2>
     d98:	6e02      	ldr	r2, [r0, #96]	; 0x60
     d9a:	4293      	cmp	r3, r2
     d9c:	dc2e      	bgt.n	dfc <_http_client_handle_entity+0x7c>
		} else {
			_http_client_read_chuked_entity(module);
		}
	}

	return 0;
     d9e:	2000      	movs	r0, #0
	union http_client_data data;
	char *buffer = module->config.recv_buffer;

	/* If data size is lesser than buffer size, read all buffer and retransmission it to application. */
	if (module->resp.content_length >= 0 && module->resp.content_length <= (int)module->config.recv_buffer_size) {
		if ((int)module->recved_size >= module->resp.content_length) {
     da0:	6c62      	ldr	r2, [r4, #68]	; 0x44
     da2:	4293      	cmp	r3, r2
     da4:	dd00      	ble.n	da8 <_http_client_handle_entity+0x28>
     da6:	e100      	b.n	faa <_http_client_handle_entity+0x22a>
			if (module->cb && module->resp.response_code) {
     da8:	6ce6      	ldr	r6, [r4, #76]	; 0x4c
     daa:	2e00      	cmp	r6, #0
     dac:	d00d      	beq.n	dca <_http_client_handle_entity+0x4a>
     dae:	2292      	movs	r2, #146	; 0x92
     db0:	0052      	lsls	r2, r2, #1
     db2:	5aa1      	ldrh	r1, [r4, r2]
     db4:	2900      	cmp	r1, #0
     db6:	d008      	beq.n	dca <_http_client_handle_entity+0x4a>
				data.recv_response.response_code = module->resp.response_code;
     db8:	aa03      	add	r2, sp, #12
     dba:	8011      	strh	r1, [r2, #0]
				data.recv_response.is_chunked = 0;
     dbc:	2100      	movs	r1, #0
     dbe:	7091      	strb	r1, [r2, #2]
				data.recv_response.content_length = module->resp.content_length;
     dc0:	6053      	str	r3, [r2, #4]
				data.recv_response.content = buffer;
     dc2:	6095      	str	r5, [r2, #8]
				module->cb(module, HTTP_CLIENT_CALLBACK_RECV_RESPONSE, &data);
     dc4:	1c20      	adds	r0, r4, #0
     dc6:	3102      	adds	r1, #2
     dc8:	47b0      	blx	r6
			}
			module->resp.state = STATE_PARSE_HEADER;
     dca:	2300      	movs	r3, #0
     dcc:	228c      	movs	r2, #140	; 0x8c
     dce:	0052      	lsls	r2, r2, #1
     dd0:	50a3      	str	r3, [r4, r2]
			module->resp.response_code = 0;
     dd2:	320c      	adds	r2, #12
     dd4:	52a3      	strh	r3, [r4, r2]
			
			if (module->permanent == 0) {
     dd6:	3341      	adds	r3, #65	; 0x41
     dd8:	5ce3      	ldrb	r3, [r4, r3]
     dda:	079b      	lsls	r3, r3, #30
     ddc:	d405      	bmi.n	dea <_http_client_handle_entity+0x6a>
				/* This server was not supported keep alive. */
				_http_client_clear_conn(module, 0);
     dde:	1c20      	adds	r0, r4, #0
     de0:	2100      	movs	r1, #0
     de2:	4b74      	ldr	r3, [pc, #464]	; (fb4 <_http_client_handle_entity+0x234>)
     de4:	4798      	blx	r3
		} else {
			_http_client_read_chuked_entity(module);
		}
	}

	return 0;
     de6:	2000      	movs	r0, #0
     de8:	e0df      	b.n	faa <_http_client_handle_entity+0x22a>
			
			if (module->permanent == 0) {
				/* This server was not supported keep alive. */
				_http_client_clear_conn(module, 0);
			} else {
				_http_client_move_buffer(module, buffer + module->resp.content_length);
     dea:	238e      	movs	r3, #142	; 0x8e
     dec:	005b      	lsls	r3, r3, #1
     dee:	58e1      	ldr	r1, [r4, r3]
     df0:	1869      	adds	r1, r5, r1
     df2:	1c20      	adds	r0, r4, #0
     df4:	4b70      	ldr	r3, [pc, #448]	; (fb8 <_http_client_handle_entity+0x238>)
     df6:	4798      	blx	r3
				return module->recved_size;
     df8:	6c60      	ldr	r0, [r4, #68]	; 0x44
     dfa:	e0d6      	b.n	faa <_http_client_handle_entity+0x22a>
			}
		}
		/* else, buffer was not received enough size yet. */
	} else {
		if (module->resp.content_length >= 0) {
			data.recv_chunked_data.length = module->recved_size;
     dfc:	6c42      	ldr	r2, [r0, #68]	; 0x44
     dfe:	9203      	str	r2, [sp, #12]
			data.recv_chunked_data.data = buffer;
     e00:	9504      	str	r5, [sp, #16]
			module->resp.read_length += (int)module->recved_size;
     e02:	2190      	movs	r1, #144	; 0x90
     e04:	0049      	lsls	r1, r1, #1
     e06:	5840      	ldr	r0, [r0, r1]
     e08:	4684      	mov	ip, r0
     e0a:	4462      	add	r2, ip
     e0c:	5062      	str	r2, [r4, r1]
			if (module->resp.content_length <= module->resp.read_length) {
     e0e:	4293      	cmp	r3, r2
     e10:	dc0d      	bgt.n	e2e <_http_client_handle_entity+0xae>
				/* Complete to receive the buffer. */
				module->resp.state = STATE_PARSE_HEADER;
     e12:	2300      	movs	r3, #0
     e14:	228c      	movs	r2, #140	; 0x8c
     e16:	0052      	lsls	r2, r2, #1
     e18:	50a3      	str	r3, [r4, r2]
				module->resp.response_code = 0;
     e1a:	320c      	adds	r2, #12
     e1c:	52a3      	strh	r3, [r4, r2]
				data.recv_chunked_data.is_complete = 1;
     e1e:	3a24      	subs	r2, #36	; 0x24
     e20:	3aff      	subs	r2, #255	; 0xff
     e22:	ab03      	add	r3, sp, #12
     e24:	721a      	strb	r2, [r3, #8]
			} else {
				data.recv_chunked_data.is_complete = 0;
			}

			if (module->cb) {
     e26:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
     e28:	2b00      	cmp	r3, #0
     e2a:	d106      	bne.n	e3a <_http_client_handle_entity+0xba>
     e2c:	e00d      	b.n	e4a <_http_client_handle_entity+0xca>
				/* Complete to receive the buffer. */
				module->resp.state = STATE_PARSE_HEADER;
				module->resp.response_code = 0;
				data.recv_chunked_data.is_complete = 1;
			} else {
				data.recv_chunked_data.is_complete = 0;
     e2e:	2200      	movs	r2, #0
     e30:	ab03      	add	r3, sp, #12
     e32:	721a      	strb	r2, [r3, #8]
			}

			if (module->cb) {
     e34:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
     e36:	2b00      	cmp	r3, #0
     e38:	d014      	beq.n	e64 <_http_client_handle_entity+0xe4>
				module->cb(module, HTTP_CLIENT_CALLBACK_RECV_CHUNKED_DATA, &data);
     e3a:	ae03      	add	r6, sp, #12
     e3c:	1c20      	adds	r0, r4, #0
     e3e:	2103      	movs	r1, #3
     e40:	1c32      	adds	r2, r6, #0
     e42:	4798      	blx	r3
			}
			
			if (data.recv_chunked_data.is_complete == 1) {
     e44:	7a33      	ldrb	r3, [r6, #8]
     e46:	2b01      	cmp	r3, #1
     e48:	d10c      	bne.n	e64 <_http_client_handle_entity+0xe4>
				if (module->permanent == 0) {
     e4a:	2341      	movs	r3, #65	; 0x41
     e4c:	5ce3      	ldrb	r3, [r4, r3]
     e4e:	079b      	lsls	r3, r3, #30
     e50:	d408      	bmi.n	e64 <_http_client_handle_entity+0xe4>
					/* This server was not supported keep alive. */
					print_to_terminal("1\r\n");
     e52:	485a      	ldr	r0, [pc, #360]	; (fbc <_http_client_handle_entity+0x23c>)
     e54:	4b5a      	ldr	r3, [pc, #360]	; (fc0 <_http_client_handle_entity+0x240>)
     e56:	4798      	blx	r3
					_http_client_clear_conn(module, 0);
     e58:	1c20      	adds	r0, r4, #0
     e5a:	2100      	movs	r1, #0
     e5c:	4b55      	ldr	r3, [pc, #340]	; (fb4 <_http_client_handle_entity+0x234>)
     e5e:	4798      	blx	r3
					return 0;
     e60:	2000      	movs	r0, #0
     e62:	e0a2      	b.n	faa <_http_client_handle_entity+0x22a>
				}
			}
			_http_client_move_buffer(module, buffer + module->recved_size);
     e64:	6c63      	ldr	r3, [r4, #68]	; 0x44
     e66:	18e9      	adds	r1, r5, r3
     e68:	1c20      	adds	r0, r4, #0
     e6a:	4b53      	ldr	r3, [pc, #332]	; (fb8 <_http_client_handle_entity+0x238>)
     e6c:	4798      	blx	r3
		} else {
			_http_client_read_chuked_entity(module);
		}
	}

	return 0;
     e6e:	2000      	movs	r0, #0
     e70:	e09b      	b.n	faa <_http_client_handle_entity+0x22a>

static void _http_client_read_chuked_entity(struct http_client_module *const module)
{
	/* In chunked mode, read_length variable is means to remain data in the chunk. */
	union http_client_data data;
	int length = (int)module->recved_size;
     e72:	6c47      	ldr	r7, [r0, #68]	; 0x44
	int extension = 0;
     e74:	2300      	movs	r3, #0
     e76:	4699      	mov	r9, r3
	char *buffer= module->config.recv_buffer;

	do {
		if (module->resp.read_length >= 0) {
     e78:	2690      	movs	r6, #144	; 0x90
     e7a:	0076      	lsls	r6, r6, #1
				if (module->permanent == 0) {
					/* This server was not supported keep alive. */
					_http_client_clear_conn(module, 0);
					return;
				}
				_http_client_move_buffer(module, buffer + 2);
     e7c:	4b4e      	ldr	r3, [pc, #312]	; (fb8 <_http_client_handle_entity+0x238>)
     e7e:	4698      	mov	r8, r3
	int length = (int)module->recved_size;
	int extension = 0;
	char *buffer= module->config.recv_buffer;

	do {
		if (module->resp.read_length >= 0) {
     e80:	59a3      	ldr	r3, [r4, r6]
     e82:	2b00      	cmp	r3, #0
     e84:	db38      	blt.n	ef8 <_http_client_handle_entity+0x178>
			if (module->resp.read_length == 0) {
     e86:	d11e      	bne.n	ec6 <_http_client_handle_entity+0x146>
				/* Complete to receive the buffer. */
				module->resp.state = STATE_PARSE_HEADER;
     e88:	228c      	movs	r2, #140	; 0x8c
     e8a:	0052      	lsls	r2, r2, #1
     e8c:	50a3      	str	r3, [r4, r2]
				module->resp.response_code = 0;
     e8e:	320c      	adds	r2, #12
     e90:	52a3      	strh	r3, [r4, r2]
				data.recv_chunked_data.is_complete = 1;
     e92:	3a24      	subs	r2, #36	; 0x24
     e94:	3aff      	subs	r2, #255	; 0xff
     e96:	4669      	mov	r1, sp
     e98:	720a      	strb	r2, [r1, #8]
				data.recv_chunked_data.length = 0;
     e9a:	9300      	str	r3, [sp, #0]
				data.recv_chunked_data.data = NULL;
     e9c:	9301      	str	r3, [sp, #4]
				if (module->cb) {
     e9e:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
     ea0:	2b00      	cmp	r3, #0
     ea2:	d003      	beq.n	eac <_http_client_handle_entity+0x12c>
					module->cb(module, HTTP_CLIENT_CALLBACK_RECV_CHUNKED_DATA, &data);
     ea4:	1c20      	adds	r0, r4, #0
     ea6:	2103      	movs	r1, #3
     ea8:	466a      	mov	r2, sp
     eaa:	4798      	blx	r3
				}
				if (module->permanent == 0) {
     eac:	2341      	movs	r3, #65	; 0x41
     eae:	5ce3      	ldrb	r3, [r4, r3]
     eb0:	079b      	lsls	r3, r3, #30
     eb2:	d404      	bmi.n	ebe <_http_client_handle_entity+0x13e>
					/* This server was not supported keep alive. */
					_http_client_clear_conn(module, 0);
     eb4:	1c20      	adds	r0, r4, #0
     eb6:	2100      	movs	r1, #0
     eb8:	4b3e      	ldr	r3, [pc, #248]	; (fb4 <_http_client_handle_entity+0x234>)
     eba:	4798      	blx	r3
     ebc:	e06c      	b.n	f98 <_http_client_handle_entity+0x218>
					return;
				}
				_http_client_move_buffer(module, buffer + 2);
     ebe:	1ca9      	adds	r1, r5, #2
     ec0:	1c20      	adds	r0, r4, #0
     ec2:	47c0      	blx	r8
     ec4:	e062      	b.n	f8c <_http_client_handle_entity+0x20c>
			} else if (module->resp.read_length <= length) {
     ec6:	42bb      	cmp	r3, r7
     ec8:	dc60      	bgt.n	f8c <_http_client_handle_entity+0x20c>
				data.recv_chunked_data.length = module->resp.read_length;
     eca:	9300      	str	r3, [sp, #0]
				data.recv_chunked_data.data = buffer;
     ecc:	9501      	str	r5, [sp, #4]
				data.recv_chunked_data.is_complete = 0;
     ece:	2300      	movs	r3, #0
     ed0:	466a      	mov	r2, sp
     ed2:	7213      	strb	r3, [r2, #8]

				if (module->cb) {
     ed4:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
     ed6:	2b00      	cmp	r3, #0
     ed8:	d002      	beq.n	ee0 <_http_client_handle_entity+0x160>
					module->cb(module, HTTP_CLIENT_CALLBACK_RECV_CHUNKED_DATA, &data);
     eda:	1c20      	adds	r0, r4, #0
     edc:	2103      	movs	r1, #3
     ede:	4798      	blx	r3
				}
				/* Last two character in the chunk is '\r\n'. */
				_http_client_move_buffer(module, buffer + module->resp.read_length + 2 /* sizeof newline character */);
     ee0:	59a3      	ldr	r3, [r4, r6]
     ee2:	1c99      	adds	r1, r3, #2
     ee4:	1869      	adds	r1, r5, r1
     ee6:	1c20      	adds	r0, r4, #0
     ee8:	4b33      	ldr	r3, [pc, #204]	; (fb8 <_http_client_handle_entity+0x238>)
     eea:	4798      	blx	r3
				length = (int)module->recved_size;
     eec:	6c67      	ldr	r7, [r4, #68]	; 0x44
				buffer = module->config.recv_buffer;
     eee:	6de5      	ldr	r5, [r4, #92]	; 0x5c
				module->resp.read_length = -1;
     ef0:	2301      	movs	r3, #1
     ef2:	425b      	negs	r3, r3
     ef4:	51a3      	str	r3, [r4, r6]
     ef6:	e049      	b.n	f8c <_http_client_handle_entity+0x20c>
			}
		} else {
			/* Read chunked length. */
			module->resp.read_length = 0;
     ef8:	2300      	movs	r3, #0
     efa:	51a3      	str	r3, [r4, r6]
			for (; length > 0; buffer++, length--) {
     efc:	2f00      	cmp	r7, #0
     efe:	dd33      	ble.n	f68 <_http_client_handle_entity+0x1e8>
				if (*buffer == '\n') {
     f00:	782b      	ldrb	r3, [r5, #0]
     f02:	2b0a      	cmp	r3, #10
     f04:	d003      	beq.n	f0e <_http_client_handle_entity+0x18e>
     f06:	e005      	b.n	f14 <_http_client_handle_entity+0x194>
     f08:	782b      	ldrb	r3, [r5, #0]
     f0a:	2b0a      	cmp	r3, #10
     f0c:	d102      	bne.n	f14 <_http_client_handle_entity+0x194>
					buffer++;
     f0e:	3501      	adds	r5, #1
					length--;
     f10:	3f01      	subs	r7, #1
     f12:	e029      	b.n	f68 <_http_client_handle_entity+0x1e8>
					break;
				}
				if (extension != 0) {
     f14:	464a      	mov	r2, r9
     f16:	2a00      	cmp	r2, #0
     f18:	d121      	bne.n	f5e <_http_client_handle_entity+0x1de>
					continue;
				}
				if (*buffer >= '0' && *buffer <= '9') {
     f1a:	1c1a      	adds	r2, r3, #0
     f1c:	3a30      	subs	r2, #48	; 0x30
     f1e:	2a09      	cmp	r2, #9
     f20:	d805      	bhi.n	f2e <_http_client_handle_entity+0x1ae>
					module->resp.read_length = module->resp.read_length * 0x10 + *buffer - '0';
     f22:	59a2      	ldr	r2, [r4, r6]
     f24:	0112      	lsls	r2, r2, #4
     f26:	18d3      	adds	r3, r2, r3
     f28:	3b30      	subs	r3, #48	; 0x30
     f2a:	51a3      	str	r3, [r4, r6]
     f2c:	e017      	b.n	f5e <_http_client_handle_entity+0x1de>
				} else if (*buffer >= 'a' && *buffer <= 'f') {
     f2e:	1c1a      	adds	r2, r3, #0
     f30:	3a61      	subs	r2, #97	; 0x61
     f32:	2a05      	cmp	r2, #5
     f34:	d805      	bhi.n	f42 <_http_client_handle_entity+0x1c2>
					module->resp.read_length = module->resp.read_length * 0x10 + *buffer - 'a';
     f36:	59a2      	ldr	r2, [r4, r6]
     f38:	0112      	lsls	r2, r2, #4
     f3a:	18d3      	adds	r3, r2, r3
     f3c:	3b61      	subs	r3, #97	; 0x61
     f3e:	51a3      	str	r3, [r4, r6]
     f40:	e00d      	b.n	f5e <_http_client_handle_entity+0x1de>
				} else if (*buffer >= 'A' && *buffer <= 'F') {
     f42:	1c1a      	adds	r2, r3, #0
     f44:	3a41      	subs	r2, #65	; 0x41
     f46:	2a05      	cmp	r2, #5
     f48:	d805      	bhi.n	f56 <_http_client_handle_entity+0x1d6>
					module->resp.read_length = module->resp.read_length * 0x10 + *buffer - 'A';
     f4a:	59a2      	ldr	r2, [r4, r6]
     f4c:	0112      	lsls	r2, r2, #4
     f4e:	18d3      	adds	r3, r2, r3
     f50:	3b41      	subs	r3, #65	; 0x41
     f52:	51a3      	str	r3, [r4, r6]
     f54:	e003      	b.n	f5e <_http_client_handle_entity+0x1de>
				} else if (*buffer == ';') {
     f56:	3b3b      	subs	r3, #59	; 0x3b
     f58:	425a      	negs	r2, r3
     f5a:	415a      	adcs	r2, r3
     f5c:	4691      	mov	r9, r2
				module->resp.read_length = -1;
			}
		} else {
			/* Read chunked length. */
			module->resp.read_length = 0;
			for (; length > 0; buffer++, length--) {
     f5e:	3501      	adds	r5, #1
     f60:	3f01      	subs	r7, #1
     f62:	2f00      	cmp	r7, #0
     f64:	d1d0      	bne.n	f08 <_http_client_handle_entity+0x188>
     f66:	e019      	b.n	f9c <_http_client_handle_entity+0x21c>
				} else if (*buffer == ';') {
					extension = 1;
				}
			}

			if (module->resp.read_length > (int)module->config.recv_buffer_size) {
     f68:	59a3      	ldr	r3, [r4, r6]
     f6a:	6e22      	ldr	r2, [r4, #96]	; 0x60
     f6c:	4293      	cmp	r3, r2
     f6e:	dd05      	ble.n	f7c <_http_client_handle_entity+0x1fc>
				/* Chunked size is too big. */
				/* Through exception. */
				_http_client_clear_conn(module, -EOVERFLOW);
     f70:	1c20      	adds	r0, r4, #0
     f72:	218b      	movs	r1, #139	; 0x8b
     f74:	4249      	negs	r1, r1
     f76:	4b0f      	ldr	r3, [pc, #60]	; (fb4 <_http_client_handle_entity+0x234>)
     f78:	4798      	blx	r3
     f7a:	e00d      	b.n	f98 <_http_client_handle_entity+0x218>
				return;
			}

			if (length  == 0) {
     f7c:	2f00      	cmp	r7, #0
     f7e:	d105      	bne.n	f8c <_http_client_handle_entity+0x20c>
				/* currently not received packet yet. */
				module->resp.read_length = -1;
     f80:	2201      	movs	r2, #1
     f82:	4252      	negs	r2, r2
     f84:	2390      	movs	r3, #144	; 0x90
     f86:	005b      	lsls	r3, r3, #1
     f88:	50e2      	str	r2, [r4, r3]
     f8a:	e005      	b.n	f98 <_http_client_handle_entity+0x218>
				return;
			}
		}
	} while(module->recved_size > 0);
     f8c:	6c63      	ldr	r3, [r4, #68]	; 0x44
     f8e:	2b00      	cmp	r3, #0
     f90:	d000      	beq.n	f94 <_http_client_handle_entity+0x214>
     f92:	e775      	b.n	e80 <_http_client_handle_entity+0x100>
		} else {
			_http_client_read_chuked_entity(module);
		}
	}

	return 0;
     f94:	2000      	movs	r0, #0
     f96:	e008      	b.n	faa <_http_client_handle_entity+0x22a>
     f98:	2000      	movs	r0, #0
     f9a:	e006      	b.n	faa <_http_client_handle_entity+0x22a>
				} else if (*buffer == ';') {
					extension = 1;
				}
			}

			if (module->resp.read_length > (int)module->config.recv_buffer_size) {
     f9c:	2390      	movs	r3, #144	; 0x90
     f9e:	005b      	lsls	r3, r3, #1
     fa0:	58e3      	ldr	r3, [r4, r3]
     fa2:	6e22      	ldr	r2, [r4, #96]	; 0x60
     fa4:	4293      	cmp	r3, r2
     fa6:	ddeb      	ble.n	f80 <_http_client_handle_entity+0x200>
     fa8:	e7e2      	b.n	f70 <_http_client_handle_entity+0x1f0>
			_http_client_read_chuked_entity(module);
		}
	}

	return 0;
}
     faa:	b007      	add	sp, #28
     fac:	bc0c      	pop	{r2, r3}
     fae:	4690      	mov	r8, r2
     fb0:	4699      	mov	r9, r3
     fb2:	bdf0      	pop	{r4, r5, r6, r7, pc}
     fb4:	00000285 	.word	0x00000285
     fb8:	00000b85 	.word	0x00000b85
     fbc:	0000e380 	.word	0x0000e380
     fc0:	000090f5 	.word	0x000090f5

00000fc4 <_http_client_handle_response>:
	/* Recursive function call can be occurred overflow. */
	while(_http_client_handle_response(module) != 0);
}

int _http_client_handle_response(struct http_client_module *const module)
{
     fc4:	b508      	push	{r3, lr}
	switch(module->resp.state) {
     fc6:	238c      	movs	r3, #140	; 0x8c
     fc8:	005b      	lsls	r3, r3, #1
     fca:	58c3      	ldr	r3, [r0, r3]
     fcc:	2b00      	cmp	r3, #0
     fce:	d002      	beq.n	fd6 <_http_client_handle_response+0x12>
     fd0:	2b01      	cmp	r3, #1
     fd2:	d003      	beq.n	fdc <_http_client_handle_response+0x18>
     fd4:	e005      	b.n	fe2 <_http_client_handle_response+0x1e>
	case STATE_PARSE_HEADER:
		return _http_client_handle_header(module);
     fd6:	4b04      	ldr	r3, [pc, #16]	; (fe8 <_http_client_handle_response+0x24>)
     fd8:	4798      	blx	r3
     fda:	e003      	b.n	fe4 <_http_client_handle_response+0x20>
	case STATE_PARSE_ENTITY:
		return _http_client_handle_entity(module);
     fdc:	4b03      	ldr	r3, [pc, #12]	; (fec <_http_client_handle_response+0x28>)
     fde:	4798      	blx	r3
     fe0:	e000      	b.n	fe4 <_http_client_handle_response+0x20>
	}
	return 0;
     fe2:	2000      	movs	r0, #0
}
     fe4:	bd08      	pop	{r3, pc}
     fe6:	46c0      	nop			; (mov r8, r8)
     fe8:	00000bad 	.word	0x00000bad
     fec:	00000d81 	.word	0x00000d81

00000ff0 <_http_client_recved_packet>:
		module->config.recv_buffer + module->recved_size,
		module->config.recv_buffer_size - module->recved_size, 0);
}

void _http_client_recved_packet(struct http_client_module *const module, int read_len)
{
     ff0:	b538      	push	{r3, r4, r5, lr}
     ff2:	1c04      	adds	r4, r0, #0
	module->recved_size += read_len;
     ff4:	6c43      	ldr	r3, [r0, #68]	; 0x44
     ff6:	469c      	mov	ip, r3
     ff8:	4461      	add	r1, ip
     ffa:	6441      	str	r1, [r0, #68]	; 0x44
	if (module->config.timeout > 0) {
     ffc:	2358      	movs	r3, #88	; 0x58
     ffe:	5ac3      	ldrh	r3, [r0, r3]
    1000:	2b00      	cmp	r3, #0
    1002:	d003      	beq.n	100c <_http_client_recved_packet+0x1c>
		sw_timer_disable_callback(module->config.timer_inst, module->timer_id);
    1004:	6d40      	ldr	r0, [r0, #84]	; 0x54
    1006:	6ca1      	ldr	r1, [r4, #72]	; 0x48
    1008:	4b03      	ldr	r3, [pc, #12]	; (1018 <_http_client_recved_packet+0x28>)
    100a:	4798      	blx	r3
	}

	/* Recursive function call can be occurred overflow. */
	while(_http_client_handle_response(module) != 0);
    100c:	4d03      	ldr	r5, [pc, #12]	; (101c <_http_client_recved_packet+0x2c>)
    100e:	1c20      	adds	r0, r4, #0
    1010:	47a8      	blx	r5
    1012:	2800      	cmp	r0, #0
    1014:	d1fb      	bne.n	100e <_http_client_recved_packet+0x1e>
}
    1016:	bd38      	pop	{r3, r4, r5, pc}
    1018:	00001399 	.word	0x00001399
    101c:	00000fc5 	.word	0x00000fc5

00001020 <http_client_socket_event_handler>:
			return 0;
	}
}

void http_client_socket_event_handler(SOCKET sock, uint8_t msg_type, void *msg_data)
{
    1020:	b510      	push	{r4, lr}
    1022:	b084      	sub	sp, #16
	tstrSocketRecvMsg *msg_recv;
	int16_t send_ret;
	union http_client_data data;

	/* Find instance using the socket descriptor. */
	struct http_client_module *module = module_ref_inst[sock];
    1024:	0080      	lsls	r0, r0, #2
    1026:	4b66      	ldr	r3, [pc, #408]	; (11c0 <http_client_socket_event_handler+0x1a0>)
    1028:	58c4      	ldr	r4, [r0, r3]
	/* If cannot found reference, This socket is not HTTP client socket. */
	if (module == NULL) {
    102a:	2c00      	cmp	r4, #0
    102c:	d100      	bne.n	1030 <http_client_socket_event_handler+0x10>
    102e:	e0c5      	b.n	11bc <http_client_socket_event_handler+0x19c>
		return;
	}

	switch (msg_type) {
    1030:	2906      	cmp	r1, #6
    1032:	d050      	beq.n	10d6 <http_client_socket_event_handler+0xb6>
    1034:	2907      	cmp	r1, #7
    1036:	d100      	bne.n	103a <http_client_socket_event_handler+0x1a>
    1038:	e08b      	b.n	1152 <http_client_socket_event_handler+0x132>
    103a:	2905      	cmp	r1, #5
    103c:	d000      	beq.n	1040 <http_client_socket_event_handler+0x20>
    103e:	e0bd      	b.n	11bc <http_client_socket_event_handler+0x19c>
	case SOCKET_MSG_CONNECT:
    	msg_connect = (tstrSocketConnectMsg*)msg_data;
    	data.sock_connected.result = msg_connect->s8Error;
    1040:	7852      	ldrb	r2, [r2, #1]
    1042:	b253      	sxtb	r3, r2
    1044:	9301      	str	r3, [sp, #4]
    	if (msg_connect->s8Error < 0) {
    1046:	2b00      	cmp	r3, #0
    1048:	da2f      	bge.n	10aa <http_client_socket_event_handler+0x8a>
/**
 * \brief change HW error type to standard error.
 */
static inline int _hwerr_to_stderr(int err)
{
	switch (err) {
    104a:	320e      	adds	r2, #14
    104c:	b2d1      	uxtb	r1, r2
    104e:	290e      	cmp	r1, #14
    1050:	d81e      	bhi.n	1090 <http_client_socket_event_handler+0x70>
    1052:	008a      	lsls	r2, r1, #2
    1054:	495b      	ldr	r1, [pc, #364]	; (11c4 <http_client_socket_event_handler+0x1a4>)
    1056:	588a      	ldr	r2, [r1, r2]
    1058:	4697      	mov	pc, r2
		case 0:
			return -EIO;
		case SOCK_ERR_INVALID_ADDRESS:
			return -ENOENT;
    105a:	2102      	movs	r1, #2
    105c:	4249      	negs	r1, r1
    105e:	e020      	b.n	10a2 <http_client_socket_event_handler+0x82>
		case SOCK_ERR_ADDR_ALREADY_IN_USE:
			return -EADDRINUSE;
    1060:	2170      	movs	r1, #112	; 0x70
    1062:	4249      	negs	r1, r1
    1064:	e01d      	b.n	10a2 <http_client_socket_event_handler+0x82>
		case SOCK_ERR_MAX_TCP_SOCK:
		case SOCK_ERR_MAX_UDP_SOCK:
			return -ENOMEM;
    1066:	210c      	movs	r1, #12
    1068:	4249      	negs	r1, r1
    106a:	e01a      	b.n	10a2 <http_client_socket_event_handler+0x82>
		case SOCK_ERR_INVALID_ARG:
			return -EINVAL;
    106c:	2116      	movs	r1, #22
    106e:	4249      	negs	r1, r1
    1070:	e017      	b.n	10a2 <http_client_socket_event_handler+0x82>
		case SOCK_ERR_MAX_LISTEN_SOCK:
			return -ENOMEM;
    1072:	210c      	movs	r1, #12
    1074:	4249      	negs	r1, r1
    1076:	e014      	b.n	10a2 <http_client_socket_event_handler+0x82>
		case SOCK_ERR_INVALID:
			return -EIO;
		case SOCK_ERR_ADDR_IS_REQUIRED:
			return -EDESTADDRREQ;
    1078:	2179      	movs	r1, #121	; 0x79
    107a:	4249      	negs	r1, r1
    107c:	e011      	b.n	10a2 <http_client_socket_event_handler+0x82>
		case SOCK_ERR_CONN_ABORTED:
			return -ECONNRESET;
    107e:	2168      	movs	r1, #104	; 0x68
    1080:	4249      	negs	r1, r1
    1082:	e00e      	b.n	10a2 <http_client_socket_event_handler+0x82>
		case SOCK_ERR_TIMEOUT:
			return -EAGAIN;
    1084:	210b      	movs	r1, #11
    1086:	4249      	negs	r1, r1
    1088:	e00b      	b.n	10a2 <http_client_socket_event_handler+0x82>
		case SOCK_ERR_BUFFER_FULL:
			return -EBUSY; /* HW error occurred. Retry it*/
    108a:	2110      	movs	r1, #16
    108c:	4249      	negs	r1, r1
    108e:	e008      	b.n	10a2 <http_client_socket_event_handler+0x82>
		default:
			if (err < 0) {
    1090:	2b00      	cmp	r3, #0
    1092:	db04      	blt.n	109e <http_client_socket_event_handler+0x7e>
				return -EIO;
			}
			return 0;
    1094:	2100      	movs	r1, #0
    1096:	e004      	b.n	10a2 <http_client_socket_event_handler+0x82>
 */
static inline int _hwerr_to_stderr(int err)
{
	switch (err) {
		case 0:
			return -EIO;
    1098:	2105      	movs	r1, #5
    109a:	4249      	negs	r1, r1
    109c:	e001      	b.n	10a2 <http_client_socket_event_handler+0x82>
			return -EAGAIN;
		case SOCK_ERR_BUFFER_FULL:
			return -EBUSY; /* HW error occurred. Retry it*/
		default:
			if (err < 0) {
				return -EIO;
    109e:	2105      	movs	r1, #5
    10a0:	4249      	negs	r1, r1
	case SOCKET_MSG_CONNECT:
    	msg_connect = (tstrSocketConnectMsg*)msg_data;
    	data.sock_connected.result = msg_connect->s8Error;
    	if (msg_connect->s8Error < 0) {
			/* Remove reference. */
			_http_client_clear_conn(module, _hwerr_to_stderr(msg_connect->s8Error));
    10a2:	1c20      	adds	r0, r4, #0
    10a4:	4b48      	ldr	r3, [pc, #288]	; (11c8 <http_client_socket_event_handler+0x1a8>)
    10a6:	4798      	blx	r3
    10a8:	e088      	b.n	11bc <http_client_socket_event_handler+0x19c>
		} else {
			/* Send event to callback. */
			if (module->cb != NULL) {
    10aa:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
    10ac:	2b00      	cmp	r3, #0
    10ae:	d003      	beq.n	10b8 <http_client_socket_event_handler+0x98>
				module->cb(module, HTTP_CLIENT_CALLBACK_SOCK_CONNECTED, &data);
    10b0:	1c20      	adds	r0, r4, #0
    10b2:	2100      	movs	r1, #0
    10b4:	aa01      	add	r2, sp, #4
    10b6:	4798      	blx	r3
			}
			module->req.state = STATE_REQ_SEND_HEADER;
    10b8:	2303      	movs	r3, #3
    10ba:	66e3      	str	r3, [r4, #108]	; 0x6c
			/* Start timer. */
			sw_timer_enable_callback(module->config.timer_inst, module->timer_id, module->config.timeout);
    10bc:	3355      	adds	r3, #85	; 0x55
    10be:	5ae2      	ldrh	r2, [r4, r3]
    10c0:	6d60      	ldr	r0, [r4, #84]	; 0x54
    10c2:	6ca1      	ldr	r1, [r4, #72]	; 0x48
    10c4:	4b41      	ldr	r3, [pc, #260]	; (11cc <http_client_socket_event_handler+0x1ac>)
    10c6:	4798      	blx	r3
    		/* Start receive packet. */
    		_http_client_recv_packet(module);
    10c8:	1c20      	adds	r0, r4, #0
    10ca:	4b41      	ldr	r3, [pc, #260]	; (11d0 <http_client_socket_event_handler+0x1b0>)
    10cc:	4798      	blx	r3
			/* Try to check the FSM. */
			_http_client_request(module);
    10ce:	1c20      	adds	r0, r4, #0
    10d0:	4b40      	ldr	r3, [pc, #256]	; (11d4 <http_client_socket_event_handler+0x1b4>)
    10d2:	4798      	blx	r3
    10d4:	e072      	b.n	11bc <http_client_socket_event_handler+0x19c>
		}
    	break;
	case SOCKET_MSG_RECV:
    	msg_recv = (tstrSocketRecvMsg*)msg_data;
    	/* Start post processing. */
    	if (msg_recv->s16BufferSize > 0) {
    10d6:	8891      	ldrh	r1, [r2, #4]
    10d8:	b20b      	sxth	r3, r1
    10da:	2b00      	cmp	r3, #0
    10dc:	dd04      	ble.n	10e8 <http_client_socket_event_handler+0xc8>
    		_http_client_recved_packet(module, msg_recv->s16BufferSize);
    10de:	1c19      	adds	r1, r3, #0
    10e0:	1c20      	adds	r0, r4, #0
    10e2:	4b3d      	ldr	r3, [pc, #244]	; (11d8 <http_client_socket_event_handler+0x1b8>)
    10e4:	4798      	blx	r3
    10e6:	e030      	b.n	114a <http_client_socket_event_handler+0x12a>
/**
 * \brief change HW error type to standard error.
 */
static inline int _hwerr_to_stderr(int err)
{
	switch (err) {
    10e8:	1c0b      	adds	r3, r1, #0
    10ea:	330e      	adds	r3, #14
    10ec:	b29a      	uxth	r2, r3
    10ee:	2a0e      	cmp	r2, #14
    10f0:	d81e      	bhi.n	1130 <http_client_socket_event_handler+0x110>
    10f2:	0093      	lsls	r3, r2, #2
    10f4:	4a39      	ldr	r2, [pc, #228]	; (11dc <http_client_socket_event_handler+0x1bc>)
    10f6:	58d3      	ldr	r3, [r2, r3]
    10f8:	469f      	mov	pc, r3
		case 0:
			return -EIO;
		case SOCK_ERR_INVALID_ADDRESS:
			return -ENOENT;
    10fa:	2102      	movs	r1, #2
    10fc:	4249      	negs	r1, r1
    10fe:	e021      	b.n	1144 <http_client_socket_event_handler+0x124>
		case SOCK_ERR_ADDR_ALREADY_IN_USE:
			return -EADDRINUSE;
    1100:	2170      	movs	r1, #112	; 0x70
    1102:	4249      	negs	r1, r1
    1104:	e01e      	b.n	1144 <http_client_socket_event_handler+0x124>
		case SOCK_ERR_MAX_TCP_SOCK:
		case SOCK_ERR_MAX_UDP_SOCK:
			return -ENOMEM;
    1106:	210c      	movs	r1, #12
    1108:	4249      	negs	r1, r1
    110a:	e01b      	b.n	1144 <http_client_socket_event_handler+0x124>
		case SOCK_ERR_INVALID_ARG:
			return -EINVAL;
    110c:	2116      	movs	r1, #22
    110e:	4249      	negs	r1, r1
    1110:	e018      	b.n	1144 <http_client_socket_event_handler+0x124>
		case SOCK_ERR_MAX_LISTEN_SOCK:
			return -ENOMEM;
    1112:	210c      	movs	r1, #12
    1114:	4249      	negs	r1, r1
    1116:	e015      	b.n	1144 <http_client_socket_event_handler+0x124>
		case SOCK_ERR_INVALID:
			return -EIO;
		case SOCK_ERR_ADDR_IS_REQUIRED:
			return -EDESTADDRREQ;
    1118:	2179      	movs	r1, #121	; 0x79
    111a:	4249      	negs	r1, r1
    111c:	e012      	b.n	1144 <http_client_socket_event_handler+0x124>
		case SOCK_ERR_CONN_ABORTED:
			return -ECONNRESET;
    111e:	2168      	movs	r1, #104	; 0x68
    1120:	4249      	negs	r1, r1
    1122:	e00f      	b.n	1144 <http_client_socket_event_handler+0x124>
		case SOCK_ERR_TIMEOUT:
			return -EAGAIN;
    1124:	210b      	movs	r1, #11
    1126:	4249      	negs	r1, r1
    1128:	e00c      	b.n	1144 <http_client_socket_event_handler+0x124>
		case SOCK_ERR_BUFFER_FULL:
			return -EBUSY; /* HW error occurred. Retry it*/
    112a:	2110      	movs	r1, #16
    112c:	4249      	negs	r1, r1
    112e:	e009      	b.n	1144 <http_client_socket_event_handler+0x124>
		default:
			if (err < 0) {
    1130:	b209      	sxth	r1, r1
    1132:	2900      	cmp	r1, #0
    1134:	db04      	blt.n	1140 <http_client_socket_event_handler+0x120>
				return -EIO;
			}
			return 0;
    1136:	2100      	movs	r1, #0
    1138:	e004      	b.n	1144 <http_client_socket_event_handler+0x124>
 */
static inline int _hwerr_to_stderr(int err)
{
	switch (err) {
		case 0:
			return -EIO;
    113a:	2105      	movs	r1, #5
    113c:	4249      	negs	r1, r1
    113e:	e001      	b.n	1144 <http_client_socket_event_handler+0x124>
			return -EAGAIN;
		case SOCK_ERR_BUFFER_FULL:
			return -EBUSY; /* HW error occurred. Retry it*/
		default:
			if (err < 0) {
				return -EIO;
    1140:	2105      	movs	r1, #5
    1142:	4249      	negs	r1, r1
    	/* Start post processing. */
    	if (msg_recv->s16BufferSize > 0) {
    		_http_client_recved_packet(module, msg_recv->s16BufferSize);
		} else {
			/* Socket was occurred errors. Close this session. */
			_http_client_clear_conn(module, _hwerr_to_stderr(msg_recv->s16BufferSize));
    1144:	1c20      	adds	r0, r4, #0
    1146:	4b20      	ldr	r3, [pc, #128]	; (11c8 <http_client_socket_event_handler+0x1a8>)
    1148:	4798      	blx	r3
		}
		/* COntinue to receive the packet. */
		_http_client_recv_packet(module);
    114a:	1c20      	adds	r0, r4, #0
    114c:	4b20      	ldr	r3, [pc, #128]	; (11d0 <http_client_socket_event_handler+0x1b0>)
    114e:	4798      	blx	r3
		break;
    1150:	e034      	b.n	11bc <http_client_socket_event_handler+0x19c>
	case SOCKET_MSG_SEND:
		send_ret = *(int16_t*)msg_data;
    1152:	8813      	ldrh	r3, [r2, #0]
		if (send_ret < 0) {
    1154:	b21a      	sxth	r2, r3
    1156:	2a00      	cmp	r2, #0
    1158:	da28      	bge.n	11ac <http_client_socket_event_handler+0x18c>
/**
 * \brief change HW error type to standard error.
 */
static inline int _hwerr_to_stderr(int err)
{
	switch (err) {
    115a:	330e      	adds	r3, #14
    115c:	b29a      	uxth	r2, r3
    115e:	2a0d      	cmp	r2, #13
    1160:	d81e      	bhi.n	11a0 <http_client_socket_event_handler+0x180>
    1162:	0093      	lsls	r3, r2, #2
    1164:	4a1e      	ldr	r2, [pc, #120]	; (11e0 <http_client_socket_event_handler+0x1c0>)
    1166:	58d3      	ldr	r3, [r2, r3]
    1168:	469f      	mov	pc, r3
		case 0:
			return -EIO;
		case SOCK_ERR_INVALID_ADDRESS:
			return -ENOENT;
    116a:	2102      	movs	r1, #2
    116c:	4249      	negs	r1, r1
    116e:	e019      	b.n	11a4 <http_client_socket_event_handler+0x184>
		case SOCK_ERR_ADDR_ALREADY_IN_USE:
			return -EADDRINUSE;
    1170:	2170      	movs	r1, #112	; 0x70
    1172:	4249      	negs	r1, r1
    1174:	e016      	b.n	11a4 <http_client_socket_event_handler+0x184>
		case SOCK_ERR_MAX_TCP_SOCK:
		case SOCK_ERR_MAX_UDP_SOCK:
			return -ENOMEM;
    1176:	210c      	movs	r1, #12
    1178:	4249      	negs	r1, r1
    117a:	e013      	b.n	11a4 <http_client_socket_event_handler+0x184>
		case SOCK_ERR_INVALID_ARG:
			return -EINVAL;
    117c:	2116      	movs	r1, #22
    117e:	4249      	negs	r1, r1
    1180:	e010      	b.n	11a4 <http_client_socket_event_handler+0x184>
		case SOCK_ERR_MAX_LISTEN_SOCK:
			return -ENOMEM;
    1182:	210c      	movs	r1, #12
    1184:	4249      	negs	r1, r1
    1186:	e00d      	b.n	11a4 <http_client_socket_event_handler+0x184>
		case SOCK_ERR_INVALID:
			return -EIO;
		case SOCK_ERR_ADDR_IS_REQUIRED:
			return -EDESTADDRREQ;
    1188:	2179      	movs	r1, #121	; 0x79
    118a:	4249      	negs	r1, r1
    118c:	e00a      	b.n	11a4 <http_client_socket_event_handler+0x184>
		case SOCK_ERR_CONN_ABORTED:
			return -ECONNRESET;
    118e:	2168      	movs	r1, #104	; 0x68
    1190:	4249      	negs	r1, r1
    1192:	e007      	b.n	11a4 <http_client_socket_event_handler+0x184>
		case SOCK_ERR_TIMEOUT:
			return -EAGAIN;
    1194:	210b      	movs	r1, #11
    1196:	4249      	negs	r1, r1
    1198:	e004      	b.n	11a4 <http_client_socket_event_handler+0x184>
		case SOCK_ERR_BUFFER_FULL:
			return -EBUSY; /* HW error occurred. Retry it*/
    119a:	2110      	movs	r1, #16
    119c:	4249      	negs	r1, r1
    119e:	e001      	b.n	11a4 <http_client_socket_event_handler+0x184>
 */
static inline int _hwerr_to_stderr(int err)
{
	switch (err) {
		case 0:
			return -EIO;
    11a0:	2105      	movs	r1, #5
    11a2:	4249      	negs	r1, r1
		break;
	case SOCKET_MSG_SEND:
		send_ret = *(int16_t*)msg_data;
		if (send_ret < 0) {
			/* Send failed. */
			_http_client_clear_conn(module, _hwerr_to_stderr(send_ret));
    11a4:	1c20      	adds	r0, r4, #0
    11a6:	4b08      	ldr	r3, [pc, #32]	; (11c8 <http_client_socket_event_handler+0x1a8>)
    11a8:	4798      	blx	r3
    11aa:	e002      	b.n	11b2 <http_client_socket_event_handler+0x192>
		} else {
			/* Try to check the FSM. */
    		_http_client_request(module);
    11ac:	1c20      	adds	r0, r4, #0
    11ae:	4b09      	ldr	r3, [pc, #36]	; (11d4 <http_client_socket_event_handler+0x1b4>)
    11b0:	4798      	blx	r3
		}
		/* Disable sending flag. */
		module->sending = 0;
    11b2:	2241      	movs	r2, #65	; 0x41
    11b4:	5ca3      	ldrb	r3, [r4, r2]
    11b6:	2101      	movs	r1, #1
    11b8:	438b      	bics	r3, r1
    11ba:	54a3      	strb	r3, [r4, r2]
    	break;
	default:
		break;
	}

}
    11bc:	b004      	add	sp, #16
    11be:	bd10      	pop	{r4, pc}
    11c0:	200000e4 	.word	0x200000e4
    11c4:	0000e248 	.word	0x0000e248
    11c8:	00000285 	.word	0x00000285
    11cc:	00001369 	.word	0x00001369
    11d0:	00000b4d 	.word	0x00000b4d
    11d4:	000003a5 	.word	0x000003a5
    11d8:	00000ff1 	.word	0x00000ff1
    11dc:	0000e284 	.word	0x0000e284
    11e0:	0000e2c0 	.word	0x0000e2c0

000011e4 <stream_writer_init>:
    11e4:	6002      	str	r2, [r0, #0]
    11e6:	6101      	str	r1, [r0, #16]
    11e8:	2200      	movs	r2, #0
    11ea:	6042      	str	r2, [r0, #4]
    11ec:	6083      	str	r3, [r0, #8]
    11ee:	9b00      	ldr	r3, [sp, #0]
    11f0:	60c3      	str	r3, [r0, #12]
    11f2:	4770      	bx	lr

000011f4 <stream_writer_send_remain>:
    11f4:	b510      	push	{r4, lr}
    11f6:	6842      	ldr	r2, [r0, #4]
    11f8:	2a00      	cmp	r2, #0
    11fa:	d006      	beq.n	120a <stream_writer_send_remain+0x16>
    11fc:	1c04      	adds	r4, r0, #0
    11fe:	68c0      	ldr	r0, [r0, #12]
    1200:	6921      	ldr	r1, [r4, #16]
    1202:	68a3      	ldr	r3, [r4, #8]
    1204:	4798      	blx	r3
    1206:	2300      	movs	r3, #0
    1208:	6063      	str	r3, [r4, #4]
    120a:	bd10      	pop	{r4, pc}

0000120c <stream_writer_send_8>:
    120c:	b538      	push	{r3, r4, r5, lr}
    120e:	1c04      	adds	r4, r0, #0
    1210:	1c0d      	adds	r5, r1, #0
    1212:	6803      	ldr	r3, [r0, #0]
    1214:	6842      	ldr	r2, [r0, #4]
    1216:	1a9b      	subs	r3, r3, r2
    1218:	2b00      	cmp	r3, #0
    121a:	dc01      	bgt.n	1220 <stream_writer_send_8+0x14>
    121c:	4b03      	ldr	r3, [pc, #12]	; (122c <stream_writer_send_8+0x20>)
    121e:	4798      	blx	r3
    1220:	6922      	ldr	r2, [r4, #16]
    1222:	6863      	ldr	r3, [r4, #4]
    1224:	1c59      	adds	r1, r3, #1
    1226:	6061      	str	r1, [r4, #4]
    1228:	54d5      	strb	r5, [r2, r3]
    122a:	bd38      	pop	{r3, r4, r5, pc}
    122c:	000011f5 	.word	0x000011f5

00001230 <stream_writer_send_buffer>:
    1230:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1232:	1c06      	adds	r6, r0, #0
    1234:	1c0d      	adds	r5, r1, #0
    1236:	1e14      	subs	r4, r2, #0
    1238:	d008      	beq.n	124c <stream_writer_send_buffer+0x1c>
    123a:	4f05      	ldr	r7, [pc, #20]	; (1250 <stream_writer_send_buffer+0x20>)
    123c:	2100      	movs	r1, #0
    123e:	5669      	ldrsb	r1, [r5, r1]
    1240:	1c30      	adds	r0, r6, #0
    1242:	47b8      	blx	r7
    1244:	3c01      	subs	r4, #1
    1246:	3501      	adds	r5, #1
    1248:	2c00      	cmp	r4, #0
    124a:	d1f7      	bne.n	123c <stream_writer_send_buffer+0xc>
    124c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    124e:	46c0      	nop			; (mov r8, r8)
    1250:	0000120d 	.word	0x0000120d

00001254 <sw_timer_tcc_callback>:
    1254:	4a02      	ldr	r2, [pc, #8]	; (1260 <sw_timer_tcc_callback+0xc>)
    1256:	6813      	ldr	r3, [r2, #0]
    1258:	3301      	adds	r3, #1
    125a:	6013      	str	r3, [r2, #0]
    125c:	4770      	bx	lr
    125e:	46c0      	nop			; (mov r8, r8)
    1260:	20000100 	.word	0x20000100

00001264 <sw_timer_get_config_defaults>:
    1264:	2364      	movs	r3, #100	; 0x64
    1266:	8043      	strh	r3, [r0, #2]
    1268:	2300      	movs	r3, #0
    126a:	7003      	strb	r3, [r0, #0]
    126c:	7043      	strb	r3, [r0, #1]
    126e:	4770      	bx	lr

00001270 <sw_timer_init>:
    1270:	b5f0      	push	{r4, r5, r6, r7, lr}
    1272:	4647      	mov	r7, r8
    1274:	b480      	push	{r7}
    1276:	b0ac      	sub	sp, #176	; 0xb0
    1278:	1c0d      	adds	r5, r1, #0
    127a:	466e      	mov	r6, sp
    127c:	4b1d      	ldr	r3, [pc, #116]	; (12f4 <sw_timer_init+0x84>)
    127e:	466a      	mov	r2, sp
    1280:	cb92      	ldmia	r3!, {r1, r4, r7}
    1282:	c292      	stmia	r2!, {r1, r4, r7}
    1284:	886b      	ldrh	r3, [r5, #2]
    1286:	6543      	str	r3, [r0, #84]	; 0x54
    1288:	3014      	adds	r0, #20
    128a:	1c04      	adds	r4, r0, #0
    128c:	1c17      	adds	r7, r2, #0
    128e:	782b      	ldrb	r3, [r5, #0]
    1290:	009b      	lsls	r3, r3, #2
    1292:	5999      	ldr	r1, [r3, r6]
    1294:	1c10      	adds	r0, r2, #0
    1296:	4b18      	ldr	r3, [pc, #96]	; (12f8 <sw_timer_init+0x88>)
    1298:	4798      	blx	r3
    129a:	2000      	movs	r0, #0
    129c:	4b17      	ldr	r3, [pc, #92]	; (12fc <sw_timer_init+0x8c>)
    129e:	4798      	blx	r3
    12a0:	4b17      	ldr	r3, [pc, #92]	; (1300 <sw_timer_init+0x90>)
    12a2:	7a1b      	ldrb	r3, [r3, #8]
    12a4:	b2db      	uxtb	r3, r3
    12a6:	40d8      	lsrs	r0, r3
    12a8:	4680      	mov	r8, r0
    12aa:	8869      	ldrh	r1, [r5, #2]
    12ac:	20fa      	movs	r0, #250	; 0xfa
    12ae:	0200      	lsls	r0, r0, #8
    12b0:	4b14      	ldr	r3, [pc, #80]	; (1304 <sw_timer_init+0x94>)
    12b2:	4798      	blx	r3
    12b4:	1c01      	adds	r1, r0, #0
    12b6:	4640      	mov	r0, r8
    12b8:	4b13      	ldr	r3, [pc, #76]	; (1308 <sw_timer_init+0x98>)
    12ba:	4798      	blx	r3
    12bc:	6078      	str	r0, [r7, #4]
    12be:	2305      	movs	r3, #5
    12c0:	72fb      	strb	r3, [r7, #11]
    12c2:	782b      	ldrb	r3, [r5, #0]
    12c4:	009b      	lsls	r3, r3, #2
    12c6:	5999      	ldr	r1, [r3, r6]
    12c8:	1c20      	adds	r0, r4, #0
    12ca:	1c3a      	adds	r2, r7, #0
    12cc:	4b0f      	ldr	r3, [pc, #60]	; (130c <sw_timer_init+0x9c>)
    12ce:	4798      	blx	r3
    12d0:	786a      	ldrb	r2, [r5, #1]
    12d2:	3208      	adds	r2, #8
    12d4:	b2d2      	uxtb	r2, r2
    12d6:	1c20      	adds	r0, r4, #0
    12d8:	490d      	ldr	r1, [pc, #52]	; (1310 <sw_timer_init+0xa0>)
    12da:	4b0e      	ldr	r3, [pc, #56]	; (1314 <sw_timer_init+0xa4>)
    12dc:	4798      	blx	r3
    12de:	7869      	ldrb	r1, [r5, #1]
    12e0:	3108      	adds	r1, #8
    12e2:	b2c9      	uxtb	r1, r1
    12e4:	1c20      	adds	r0, r4, #0
    12e6:	4b0c      	ldr	r3, [pc, #48]	; (1318 <sw_timer_init+0xa8>)
    12e8:	4798      	blx	r3
    12ea:	b02c      	add	sp, #176	; 0xb0
    12ec:	bc04      	pop	{r2}
    12ee:	4690      	mov	r8, r2
    12f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    12f2:	46c0      	nop			; (mov r8, r8)
    12f4:	0000e49c 	.word	0x0000e49c
    12f8:	000040c5 	.word	0x000040c5
    12fc:	00008b2d 	.word	0x00008b2d
    1300:	40000400 	.word	0x40000400
    1304:	00009d95 	.word	0x00009d95
    1308:	00009c75 	.word	0x00009c75
    130c:	00004211 	.word	0x00004211
    1310:	00001255 	.word	0x00001255
    1314:	00004639 	.word	0x00004639
    1318:	00004651 	.word	0x00004651

0000131c <sw_timer_enable>:
    131c:	6942      	ldr	r2, [r0, #20]
    131e:	2102      	movs	r1, #2
    1320:	6893      	ldr	r3, [r2, #8]
    1322:	4219      	tst	r1, r3
    1324:	d1fc      	bne.n	1320 <sw_timer_enable+0x4>
    1326:	6811      	ldr	r1, [r2, #0]
    1328:	2302      	movs	r3, #2
    132a:	430b      	orrs	r3, r1
    132c:	6013      	str	r3, [r2, #0]
    132e:	4770      	bx	lr

00001330 <sw_timer_register_callback>:
    1330:	b510      	push	{r4, lr}
    1332:	7804      	ldrb	r4, [r0, #0]
    1334:	07e4      	lsls	r4, r4, #31
    1336:	d411      	bmi.n	135c <sw_timer_register_callback+0x2c>
    1338:	1c04      	adds	r4, r0, #0
    133a:	6041      	str	r1, [r0, #4]
    133c:	7801      	ldrb	r1, [r0, #0]
    133e:	2002      	movs	r0, #2
    1340:	4381      	bics	r1, r0
    1342:	7021      	strb	r1, [r4, #0]
    1344:	60a2      	str	r2, [r4, #8]
    1346:	1c18      	adds	r0, r3, #0
    1348:	6d61      	ldr	r1, [r4, #84]	; 0x54
    134a:	4b06      	ldr	r3, [pc, #24]	; (1364 <sw_timer_register_callback+0x34>)
    134c:	4798      	blx	r3
    134e:	60e0      	str	r0, [r4, #12]
    1350:	7822      	ldrb	r2, [r4, #0]
    1352:	2301      	movs	r3, #1
    1354:	4313      	orrs	r3, r2
    1356:	7023      	strb	r3, [r4, #0]
    1358:	2000      	movs	r0, #0
    135a:	e001      	b.n	1360 <sw_timer_register_callback+0x30>
    135c:	2001      	movs	r0, #1
    135e:	4240      	negs	r0, r0
    1360:	bd10      	pop	{r4, pc}
    1362:	46c0      	nop			; (mov r8, r8)
    1364:	00009c75 	.word	0x00009c75

00001368 <sw_timer_enable_callback>:
    1368:	b570      	push	{r4, r5, r6, lr}
    136a:	1c03      	adds	r3, r0, #0
    136c:	008c      	lsls	r4, r1, #2
    136e:	1865      	adds	r5, r4, r1
    1370:	00ad      	lsls	r5, r5, #2
    1372:	5c2e      	ldrb	r6, [r5, r0]
    1374:	2002      	movs	r0, #2
    1376:	4330      	orrs	r0, r6
    1378:	54e8      	strb	r0, [r5, r3]
    137a:	195c      	adds	r4, r3, r5
    137c:	1c10      	adds	r0, r2, #0
    137e:	6d59      	ldr	r1, [r3, #84]	; 0x54
    1380:	4b03      	ldr	r3, [pc, #12]	; (1390 <sw_timer_enable_callback+0x28>)
    1382:	4798      	blx	r3
    1384:	4b03      	ldr	r3, [pc, #12]	; (1394 <sw_timer_enable_callback+0x2c>)
    1386:	681b      	ldr	r3, [r3, #0]
    1388:	18c0      	adds	r0, r0, r3
    138a:	6120      	str	r0, [r4, #16]
    138c:	bd70      	pop	{r4, r5, r6, pc}
    138e:	46c0      	nop			; (mov r8, r8)
    1390:	00009c75 	.word	0x00009c75
    1394:	20000100 	.word	0x20000100

00001398 <sw_timer_disable_callback>:
    1398:	008b      	lsls	r3, r1, #2
    139a:	1859      	adds	r1, r3, r1
    139c:	0089      	lsls	r1, r1, #2
    139e:	5c0b      	ldrb	r3, [r1, r0]
    13a0:	2202      	movs	r2, #2
    13a2:	4393      	bics	r3, r2
    13a4:	540b      	strb	r3, [r1, r0]
    13a6:	4770      	bx	lr

000013a8 <sw_timer_task>:
    13a8:	b538      	push	{r3, r4, r5, lr}
    13aa:	7803      	ldrb	r3, [r0, #0]
    13ac:	07db      	lsls	r3, r3, #31
    13ae:	d524      	bpl.n	13fa <sw_timer_task+0x52>
    13b0:	7803      	ldrb	r3, [r0, #0]
    13b2:	079b      	lsls	r3, r3, #30
    13b4:	d521      	bpl.n	13fa <sw_timer_task+0x52>
    13b6:	4b11      	ldr	r3, [pc, #68]	; (13fc <sw_timer_task+0x54>)
    13b8:	681b      	ldr	r3, [r3, #0]
    13ba:	6902      	ldr	r2, [r0, #16]
    13bc:	1ad3      	subs	r3, r2, r3
    13be:	d51c      	bpl.n	13fa <sw_timer_task+0x52>
    13c0:	7803      	ldrb	r3, [r0, #0]
    13c2:	075b      	lsls	r3, r3, #29
    13c4:	d419      	bmi.n	13fa <sw_timer_task+0x52>
    13c6:	1c04      	adds	r4, r0, #0
    13c8:	7802      	ldrb	r2, [r0, #0]
    13ca:	2304      	movs	r3, #4
    13cc:	4313      	orrs	r3, r2
    13ce:	7003      	strb	r3, [r0, #0]
    13d0:	2100      	movs	r1, #0
    13d2:	68a2      	ldr	r2, [r4, #8]
    13d4:	68e3      	ldr	r3, [r4, #12]
    13d6:	6865      	ldr	r5, [r4, #4]
    13d8:	47a8      	blx	r5
    13da:	68e3      	ldr	r3, [r4, #12]
    13dc:	2b00      	cmp	r3, #0
    13de:	d004      	beq.n	13ea <sw_timer_task+0x42>
    13e0:	4a06      	ldr	r2, [pc, #24]	; (13fc <sw_timer_task+0x54>)
    13e2:	6812      	ldr	r2, [r2, #0]
    13e4:	18d3      	adds	r3, r2, r3
    13e6:	6123      	str	r3, [r4, #16]
    13e8:	e003      	b.n	13f2 <sw_timer_task+0x4a>
    13ea:	7823      	ldrb	r3, [r4, #0]
    13ec:	2202      	movs	r2, #2
    13ee:	4393      	bics	r3, r2
    13f0:	7023      	strb	r3, [r4, #0]
    13f2:	7823      	ldrb	r3, [r4, #0]
    13f4:	2204      	movs	r2, #4
    13f6:	4393      	bics	r3, r2
    13f8:	7023      	strb	r3, [r4, #0]
    13fa:	bd38      	pop	{r3, r4, r5, pc}
    13fc:	20000100 	.word	0x20000100

00001400 <fluffy_wifi_noti_cb>:
#define NVM_ADDR_FLUFFY_KEY					NVM_ADDR(6)
#define NVM_ADDR_FLUFFY_KEY_VALUE			NVM_ADDR_FLUFFY_KEY - NVM_ADDR_ROW_INTERVAL(MAX_KEY_COUNT)


void fluffy_wifi_noti_cb(uint8_t u8MsgType, void * pvMsg)
{
    1400:	b5f0      	push	{r4, r5, r6, r7, lr}
    1402:	b083      	sub	sp, #12
    1404:	1c0c      	adds	r4, r1, #0
	switch (u8MsgType) 
    1406:	282c      	cmp	r0, #44	; 0x2c
    1408:	d00c      	beq.n	1424 <fluffy_wifi_noti_cb+0x24>
    140a:	d804      	bhi.n	1416 <fluffy_wifi_noti_cb+0x16>
    140c:	2809      	cmp	r0, #9
    140e:	d056      	beq.n	14be <fluffy_wifi_noti_cb+0xbe>
    1410:	282b      	cmp	r0, #43	; 0x2b
    1412:	d04d      	beq.n	14b0 <fluffy_wifi_noti_cb+0xb0>
    1414:	e080      	b.n	1518 <fluffy_wifi_noti_cb+0x118>
    1416:	2846      	cmp	r0, #70	; 0x46
    1418:	d077      	beq.n	150a <fluffy_wifi_noti_cb+0x10a>
    141a:	2847      	cmp	r0, #71	; 0x47
    141c:	d079      	beq.n	1512 <fluffy_wifi_noti_cb+0x112>
    141e:	2836      	cmp	r0, #54	; 0x36
    1420:	d17a      	bne.n	1518 <fluffy_wifi_noti_cb+0x118>
    1422:	e025      	b.n	1470 <fluffy_wifi_noti_cb+0x70>
	{
		/* M2M_STA_CMD_BASE */
		case M2M_WIFI_RESP_CON_STATE_CHANGED:
		{
			tstrM2mWifiStateChanged *pstrWifiState = (tstrM2mWifiStateChanged *)pvMsg;
			if (pstrWifiState->u8CurrState == M2M_WIFI_CONNECTED)
    1424:	780b      	ldrb	r3, [r1, #0]
    1426:	2b01      	cmp	r3, #1
    1428:	d105      	bne.n	1436 <fluffy_wifi_noti_cb+0x36>
			{
				print_to_terminal("wifi_cb: [STA] M2M_WIFI_RESP_CON_STATE_CHANGED: CONNECTED\r\n");
    142a:	483c      	ldr	r0, [pc, #240]	; (151c <fluffy_wifi_noti_cb+0x11c>)
    142c:	4b3c      	ldr	r3, [pc, #240]	; (1520 <fluffy_wifi_noti_cb+0x120>)
    142e:	4798      	blx	r3
				m2m_wifi_request_dhcp_client();
    1430:	4b3c      	ldr	r3, [pc, #240]	; (1524 <fluffy_wifi_noti_cb+0x124>)
    1432:	4798      	blx	r3
    1434:	e070      	b.n	1518 <fluffy_wifi_noti_cb+0x118>
			}
			else if (pstrWifiState->u8CurrState == M2M_WIFI_DISCONNECTED)
    1436:	2b00      	cmp	r3, #0
    1438:	d16e      	bne.n	1518 <fluffy_wifi_noti_cb+0x118>
			{
				if (gWifiConnected)
    143a:	4b3b      	ldr	r3, [pc, #236]	; (1528 <fluffy_wifi_noti_cb+0x128>)
    143c:	781b      	ldrb	r3, [r3, #0]
    143e:	2b00      	cmp	r3, #0
    1440:	d007      	beq.n	1452 <fluffy_wifi_noti_cb+0x52>
				{
					gWifiConnected = 0;
    1442:	2200      	movs	r2, #0
    1444:	4b38      	ldr	r3, [pc, #224]	; (1528 <fluffy_wifi_noti_cb+0x128>)
    1446:	701a      	strb	r2, [r3, #0]
					print_to_terminal("wifi_cb: [STA] M2M_WIFI_RESP_CON_STATE_CHANGED: DISCONNECTED\r\n");
    1448:	4838      	ldr	r0, [pc, #224]	; (152c <fluffy_wifi_noti_cb+0x12c>)
    144a:	4c35      	ldr	r4, [pc, #212]	; (1520 <fluffy_wifi_noti_cb+0x120>)
    144c:	47a0      	blx	r4
					print_to_terminal("wifi_cb: [STA] M2M_WIFI_RESP_CON_STATE_CHANGED: Reconnecting....\r\n");
    144e:	4838      	ldr	r0, [pc, #224]	; (1530 <fluffy_wifi_noti_cb+0x130>)
    1450:	47a0      	blx	r4
				}
				m2m_wifi_connect((char *)gHomeAPInfo.apSSID,strlen(gHomeAPInfo.apSSID),gHomeAPInfo.apSecType,(char *)gHomeAPInfo.apPW,M2M_WIFI_CH_ALL);
    1452:	4c38      	ldr	r4, [pc, #224]	; (1534 <fluffy_wifi_noti_cb+0x134>)
    1454:	1c20      	adds	r0, r4, #0
    1456:	4b38      	ldr	r3, [pc, #224]	; (1538 <fluffy_wifi_noti_cb+0x138>)
    1458:	4798      	blx	r3
    145a:	b2c1      	uxtb	r1, r0
    145c:	2362      	movs	r3, #98	; 0x62
    145e:	5ce2      	ldrb	r2, [r4, r3]
    1460:	1c23      	adds	r3, r4, #0
    1462:	3321      	adds	r3, #33	; 0x21
    1464:	20ff      	movs	r0, #255	; 0xff
    1466:	9000      	str	r0, [sp, #0]
    1468:	1c20      	adds	r0, r4, #0
    146a:	4c34      	ldr	r4, [pc, #208]	; (153c <fluffy_wifi_noti_cb+0x13c>)
    146c:	47a0      	blx	r4
    146e:	e053      	b.n	1518 <fluffy_wifi_noti_cb+0x118>
		}

		case M2M_WIFI_REQ_DHCP_CONF:
		{
			uint8_t *pu8IPAddress = (uint8_t *)pvMsg;
			gWifiConnected = 1;
    1470:	2201      	movs	r2, #1
    1472:	4b2d      	ldr	r3, [pc, #180]	; (1528 <fluffy_wifi_noti_cb+0x128>)
    1474:	701a      	strb	r2, [r3, #0]
			
			print_to_terminal("wifi_cb: [STA] M2M_WIFI_REQ_DHCP_CONF: IP is %u.%u.%u.%u\r\n",
    1476:	7809      	ldrb	r1, [r1, #0]
    1478:	7862      	ldrb	r2, [r4, #1]
    147a:	78a3      	ldrb	r3, [r4, #2]
    147c:	78e0      	ldrb	r0, [r4, #3]
    147e:	9000      	str	r0, [sp, #0]
    1480:	482f      	ldr	r0, [pc, #188]	; (1540 <fluffy_wifi_noti_cb+0x140>)
    1482:	4d27      	ldr	r5, [pc, #156]	; (1520 <fluffy_wifi_noti_cb+0x120>)
    1484:	47a8      	blx	r5
			pu8IPAddress[0], pu8IPAddress[1], pu8IPAddress[2], pu8IPAddress[3]);

			memset( gIpAddressFromAp, 0, 36 );
    1486:	482f      	ldr	r0, [pc, #188]	; (1544 <fluffy_wifi_noti_cb+0x144>)
    1488:	2300      	movs	r3, #0
    148a:	6003      	str	r3, [r0, #0]
    148c:	6043      	str	r3, [r0, #4]
    148e:	6083      	str	r3, [r0, #8]
    1490:	60c3      	str	r3, [r0, #12]
    1492:	6103      	str	r3, [r0, #16]
    1494:	6143      	str	r3, [r0, #20]
    1496:	6183      	str	r3, [r0, #24]
    1498:	61c3      	str	r3, [r0, #28]
    149a:	6203      	str	r3, [r0, #32]
			sprintf( gIpAddressFromAp, "%d.%d.%d.%d", pu8IPAddress[0], pu8IPAddress[1], pu8IPAddress[2], pu8IPAddress[3] );
    149c:	7822      	ldrb	r2, [r4, #0]
    149e:	7863      	ldrb	r3, [r4, #1]
    14a0:	78a1      	ldrb	r1, [r4, #2]
    14a2:	9100      	str	r1, [sp, #0]
    14a4:	78e1      	ldrb	r1, [r4, #3]
    14a6:	9101      	str	r1, [sp, #4]
    14a8:	4927      	ldr	r1, [pc, #156]	; (1548 <fluffy_wifi_noti_cb+0x148>)
    14aa:	4c28      	ldr	r4, [pc, #160]	; (154c <fluffy_wifi_noti_cb+0x14c>)
    14ac:	47a0      	blx	r4

			break;
    14ae:	e033      	b.n	1518 <fluffy_wifi_noti_cb+0x118>
		}
		
		case M2M_WIFI_REQ_DISCONNECT:
		{
			print_to_terminal("wifi_cb: [AP] M2M_WIFI_REQ_DISCONNECT\r\n");
    14b0:	4827      	ldr	r0, [pc, #156]	; (1550 <fluffy_wifi_noti_cb+0x150>)
    14b2:	4b1b      	ldr	r3, [pc, #108]	; (1520 <fluffy_wifi_noti_cb+0x120>)
    14b4:	4798      	blx	r3
			gWifiConnected = 0;
    14b6:	2200      	movs	r2, #0
    14b8:	4b1b      	ldr	r3, [pc, #108]	; (1528 <fluffy_wifi_noti_cb+0x128>)
    14ba:	701a      	strb	r2, [r3, #0]
			break;
    14bc:	e02c      	b.n	1518 <fluffy_wifi_noti_cb+0x118>
		
		
		case M2M_WIFI_RESP_PROVISION_INFO:
		{
			tstrM2MProvisionInfo *pstrProvInfo = (tstrM2MProvisionInfo *)pvMsg;
			printf("wifi_cb: M2M_WIFI_RESP_PROVISION_INFO.\r\n");
    14be:	4825      	ldr	r0, [pc, #148]	; (1554 <fluffy_wifi_noti_cb+0x154>)
    14c0:	4b17      	ldr	r3, [pc, #92]	; (1520 <fluffy_wifi_noti_cb+0x120>)
    14c2:	4798      	blx	r3
			if (pstrProvInfo->u8Status == M2M_SUCCESS) {
    14c4:	2363      	movs	r3, #99	; 0x63
    14c6:	5ce3      	ldrb	r3, [r4, r3]
    14c8:	2b00      	cmp	r3, #0
    14ca:	d11a      	bne.n	1502 <fluffy_wifi_noti_cb+0x102>
				/*m2m_wifi_connect((char *)pstrProvInfo->au8SSID, strlen((char *)pstrProvInfo->au8SSID), pstrProvInfo->u8SecType,
				pstrProvInfo->au8Password, M2M_WIFI_CH_ALL);*/
				strcpy(gHomeAPInfo.apSSID,pstrProvInfo->au8SSID);
    14cc:	4d19      	ldr	r5, [pc, #100]	; (1534 <fluffy_wifi_noti_cb+0x134>)
    14ce:	1c28      	adds	r0, r5, #0
    14d0:	1c21      	adds	r1, r4, #0
    14d2:	4f21      	ldr	r7, [pc, #132]	; (1558 <fluffy_wifi_noti_cb+0x158>)
    14d4:	47b8      	blx	r7
				decode(gHomeAPInfo.apSSID,gHomeAPInfo.apSSID);
    14d6:	1c28      	adds	r0, r5, #0
    14d8:	1c29      	adds	r1, r5, #0
    14da:	4b20      	ldr	r3, [pc, #128]	; (155c <fluffy_wifi_noti_cb+0x15c>)
    14dc:	4798      	blx	r3
				gHomeAPInfo.apSecType=pstrProvInfo->u8SecType;
    14de:	2362      	movs	r3, #98	; 0x62
    14e0:	5ce2      	ldrb	r2, [r4, r3]
    14e2:	54ea      	strb	r2, [r5, r3]
				strcpy(gHomeAPInfo.apPW,pstrProvInfo->au8Password);
    14e4:	1c26      	adds	r6, r4, #0
    14e6:	3621      	adds	r6, #33	; 0x21
    14e8:	1c28      	adds	r0, r5, #0
    14ea:	3021      	adds	r0, #33	; 0x21
    14ec:	1c31      	adds	r1, r6, #0
    14ee:	47b8      	blx	r7
				print_to_terminal("apSSID: %s, PW: %s\n",pstrProvInfo->au8SSID,pstrProvInfo->au8Password);
    14f0:	481b      	ldr	r0, [pc, #108]	; (1560 <fluffy_wifi_noti_cb+0x160>)
    14f2:	1c21      	adds	r1, r4, #0
    14f4:	1c32      	adds	r2, r6, #0
    14f6:	4b0a      	ldr	r3, [pc, #40]	; (1520 <fluffy_wifi_noti_cb+0x120>)
    14f8:	4798      	blx	r3
				provisioning = 0;
    14fa:	2200      	movs	r2, #0
    14fc:	4b19      	ldr	r3, [pc, #100]	; (1564 <fluffy_wifi_noti_cb+0x164>)
    14fe:	701a      	strb	r2, [r3, #0]
    1500:	e00a      	b.n	1518 <fluffy_wifi_noti_cb+0x118>
				} else {
				printf("wifi_cb: Provision failed.\r\n");
    1502:	4819      	ldr	r0, [pc, #100]	; (1568 <fluffy_wifi_noti_cb+0x168>)
    1504:	4b06      	ldr	r3, [pc, #24]	; (1520 <fluffy_wifi_noti_cb+0x120>)
    1506:	4798      	blx	r3
    1508:	e006      	b.n	1518 <fluffy_wifi_noti_cb+0x118>
		}
		break;
		/* M2M_AP_CMD_BASE */
		case M2M_WIFI_REQ_ENABLE_AP:
		{
			print_to_terminal("wifi_cb: [AP] M2M_WIFI_REQ_ENABLE_AP\r\n");
    150a:	4818      	ldr	r0, [pc, #96]	; (156c <fluffy_wifi_noti_cb+0x16c>)
    150c:	4b04      	ldr	r3, [pc, #16]	; (1520 <fluffy_wifi_noti_cb+0x120>)
    150e:	4798      	blx	r3
			break;
    1510:	e002      	b.n	1518 <fluffy_wifi_noti_cb+0x118>
		}
		
		case M2M_WIFI_REQ_DISABLE_AP:
		{
			print_to_terminal("wifi_cb: [AP] M2M_WIFI_REQ_DISABLE_AP\r\n");
    1512:	4817      	ldr	r0, [pc, #92]	; (1570 <fluffy_wifi_noti_cb+0x170>)
    1514:	4b02      	ldr	r3, [pc, #8]	; (1520 <fluffy_wifi_noti_cb+0x120>)
    1516:	4798      	blx	r3
		default:
		{
			break;
		}
	}
}
    1518:	b003      	add	sp, #12
    151a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    151c:	0000e4b8 	.word	0x0000e4b8
    1520:	000090f5 	.word	0x000090f5
    1524:	00005a49 	.word	0x00005a49
    1528:	20000128 	.word	0x20000128
    152c:	0000e4f4 	.word	0x0000e4f4
    1530:	0000e534 	.word	0x0000e534
    1534:	2000012c 	.word	0x2000012c
    1538:	0000cde5 	.word	0x0000cde5
    153c:	00005a0d 	.word	0x00005a0d
    1540:	0000e578 	.word	0x0000e578
    1544:	20000104 	.word	0x20000104
    1548:	0000e5b4 	.word	0x0000e5b4
    154c:	0000c901 	.word	0x0000c901
    1550:	0000e5c0 	.word	0x0000e5c0
    1554:	0000e5e8 	.word	0x0000e5e8
    1558:	0000ca45 	.word	0x0000ca45
    155c:	00009139 	.word	0x00009139
    1560:	0000e614 	.word	0x0000e614
    1564:	20000000 	.word	0x20000000
    1568:	0000e628 	.word	0x0000e628
    156c:	0000e648 	.word	0x0000e648
    1570:	0000e670 	.word	0x0000e670

00001574 <fluffy_set_home_ap_info>:
		return 0;
	}
}

void fluffy_set_home_ap_info(char* ssid, char* pw, uint8_t secType, uint8_t fileWrite)
{
    1574:	b5f0      	push	{r4, r5, r6, r7, lr}
    1576:	b095      	sub	sp, #84	; 0x54
    1578:	1c05      	adds	r5, r0, #0
    157a:	1c0e      	adds	r6, r1, #0
    157c:	9300      	str	r3, [sp, #0]
    157e:	466b      	mov	r3, sp
    1580:	71da      	strb	r2, [r3, #7]
	if( !ssid || !pw )
    1582:	2800      	cmp	r0, #0
    1584:	d001      	beq.n	158a <fluffy_set_home_ap_info+0x16>
    1586:	2900      	cmp	r1, #0
    1588:	d103      	bne.n	1592 <fluffy_set_home_ap_info+0x1e>
	{
		print_to_terminal("fluffy_set_home_ap_info / Input param error !!!!!\r\n");
    158a:	4830      	ldr	r0, [pc, #192]	; (164c <fluffy_set_home_ap_info+0xd8>)
    158c:	4b30      	ldr	r3, [pc, #192]	; (1650 <fluffy_set_home_ap_info+0xdc>)
    158e:	4798      	blx	r3
		return;
    1590:	e05a      	b.n	1648 <fluffy_set_home_ap_info+0xd4>
	}
	
	memset(&gHomeAPInfo, 0, sizeof(tHomeAPInfo));
    1592:	4c30      	ldr	r4, [pc, #192]	; (1654 <fluffy_set_home_ap_info+0xe0>)
    1594:	1c20      	adds	r0, r4, #0
    1596:	2100      	movs	r1, #0
    1598:	2264      	movs	r2, #100	; 0x64
    159a:	4b2f      	ldr	r3, [pc, #188]	; (1658 <fluffy_set_home_ap_info+0xe4>)
    159c:	4798      	blx	r3
	
	strcpy(gHomeAPInfo.apSSID, ssid);
    159e:	1c20      	adds	r0, r4, #0
    15a0:	1c29      	adds	r1, r5, #0
    15a2:	4f2e      	ldr	r7, [pc, #184]	; (165c <fluffy_set_home_ap_info+0xe8>)
    15a4:	47b8      	blx	r7
	strcpy(gHomeAPInfo.apPW, pw);
    15a6:	1c20      	adds	r0, r4, #0
    15a8:	3021      	adds	r0, #33	; 0x21
    15aa:	1c31      	adds	r1, r6, #0
    15ac:	47b8      	blx	r7
	gHomeAPInfo.apSecType = secType;
    15ae:	466b      	mov	r3, sp
    15b0:	79da      	ldrb	r2, [r3, #7]
    15b2:	2362      	movs	r3, #98	; 0x62
    15b4:	54e2      	strb	r2, [r4, r3]
	gHomeAPInfo.loaded = 1;
    15b6:	2201      	movs	r2, #1
    15b8:	3301      	adds	r3, #1
    15ba:	54e2      	strb	r2, [r4, r3]

	/* file write : home ap information */
	if( fileWrite )
    15bc:	9b00      	ldr	r3, [sp, #0]
    15be:	2b00      	cmp	r3, #0
    15c0:	d042      	beq.n	1648 <fluffy_set_home_ap_info+0xd4>
	{
		uint8_t writeBuffer_Temp[NVMCTRL_PAGE_SIZE] = {0, };
    15c2:	a804      	add	r0, sp, #16
    15c4:	2100      	movs	r1, #0
    15c6:	323f      	adds	r2, #63	; 0x3f
    15c8:	4b23      	ldr	r3, [pc, #140]	; (1658 <fluffy_set_home_ap_info+0xe4>)
    15ca:	4798      	blx	r3
		uint8_t saved = true;
    15cc:	210f      	movs	r1, #15
    15ce:	4469      	add	r1, sp
    15d0:	2301      	movs	r3, #1
    15d2:	700b      	strb	r3, [r1, #0]
		
		enum status_code status = nvm_write_buffer(NVM_ADDR_HOME_AP_INFO_SAVED, &saved, 1);
    15d4:	4822      	ldr	r0, [pc, #136]	; (1660 <fluffy_set_home_ap_info+0xec>)
    15d6:	2201      	movs	r2, #1
    15d8:	4b22      	ldr	r3, [pc, #136]	; (1664 <fluffy_set_home_ap_info+0xf0>)
    15da:	4798      	blx	r3
		
		if(status == STATUS_OK)
    15dc:	2800      	cmp	r0, #0
    15de:	d130      	bne.n	1642 <fluffy_set_home_ap_info+0xce>
		{
			writeBuffer_Temp[0] = strlen(ssid);
    15e0:	1c28      	adds	r0, r5, #0
    15e2:	4f21      	ldr	r7, [pc, #132]	; (1668 <fluffy_set_home_ap_info+0xf4>)
    15e4:	47b8      	blx	r7
    15e6:	ac04      	add	r4, sp, #16
    15e8:	7020      	strb	r0, [r4, #0]
			memcpy(&writeBuffer_Temp[1], ssid, strlen(ssid));
    15ea:	1c28      	adds	r0, r5, #0
    15ec:	47b8      	blx	r7
    15ee:	1c02      	adds	r2, r0, #0
    15f0:	2011      	movs	r0, #17
    15f2:	4468      	add	r0, sp
    15f4:	1c29      	adds	r1, r5, #0
    15f6:	4b1d      	ldr	r3, [pc, #116]	; (166c <fluffy_set_home_ap_info+0xf8>)
    15f8:	4798      	blx	r3
			status = nvm_write_buffer(NVM_ADDR_HOME_AP_SSID, writeBuffer_Temp, NVMCTRL_PAGE_SIZE);
    15fa:	481d      	ldr	r0, [pc, #116]	; (1670 <fluffy_set_home_ap_info+0xfc>)
    15fc:	1c21      	adds	r1, r4, #0
    15fe:	2240      	movs	r2, #64	; 0x40
    1600:	4b18      	ldr	r3, [pc, #96]	; (1664 <fluffy_set_home_ap_info+0xf0>)
    1602:	4798      	blx	r3
		}
		
		if(status == STATUS_OK)
    1604:	2800      	cmp	r0, #0
    1606:	d11c      	bne.n	1642 <fluffy_set_home_ap_info+0xce>
		{
			writeBuffer_Temp[0] = strlen(pw);
    1608:	1c30      	adds	r0, r6, #0
    160a:	4d17      	ldr	r5, [pc, #92]	; (1668 <fluffy_set_home_ap_info+0xf4>)
    160c:	47a8      	blx	r5
    160e:	ac04      	add	r4, sp, #16
    1610:	7020      	strb	r0, [r4, #0]
			memcpy(&writeBuffer_Temp[1], pw, strlen(pw));
    1612:	1c30      	adds	r0, r6, #0
    1614:	47a8      	blx	r5
    1616:	1c02      	adds	r2, r0, #0
    1618:	2011      	movs	r0, #17
    161a:	4468      	add	r0, sp
    161c:	1c31      	adds	r1, r6, #0
    161e:	4b13      	ldr	r3, [pc, #76]	; (166c <fluffy_set_home_ap_info+0xf8>)
    1620:	4798      	blx	r3
			status = nvm_write_buffer(NVM_ADDR_HOME_AP_PASSWORD, writeBuffer_Temp, NVMCTRL_PAGE_SIZE);
    1622:	4814      	ldr	r0, [pc, #80]	; (1674 <fluffy_set_home_ap_info+0x100>)
    1624:	1c21      	adds	r1, r4, #0
    1626:	2240      	movs	r2, #64	; 0x40
    1628:	4b0e      	ldr	r3, [pc, #56]	; (1664 <fluffy_set_home_ap_info+0xf0>)
    162a:	4798      	blx	r3
		}
			
		if(status == STATUS_OK)
    162c:	2800      	cmp	r0, #0
    162e:	d108      	bne.n	1642 <fluffy_set_home_ap_info+0xce>
			status = nvm_write_buffer(NVM_ADDR_HOME_AP_SECTYPE, &secType, 1);
    1630:	20f9      	movs	r0, #249	; 0xf9
    1632:	0280      	lsls	r0, r0, #10
    1634:	466b      	mov	r3, sp
    1636:	1dd9      	adds	r1, r3, #7
    1638:	2201      	movs	r2, #1
    163a:	4b0a      	ldr	r3, [pc, #40]	; (1664 <fluffy_set_home_ap_info+0xf0>)
    163c:	4798      	blx	r3
		
		if(status != STATUS_OK)
    163e:	2800      	cmp	r0, #0
    1640:	d002      	beq.n	1648 <fluffy_set_home_ap_info+0xd4>
			print_to_terminal("fluffy_set_home_ap_info / nvm write Error!!!!!\r\n");
    1642:	480d      	ldr	r0, [pc, #52]	; (1678 <fluffy_set_home_ap_info+0x104>)
    1644:	4b02      	ldr	r3, [pc, #8]	; (1650 <fluffy_set_home_ap_info+0xdc>)
    1646:	4798      	blx	r3
	}
}
    1648:	b015      	add	sp, #84	; 0x54
    164a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    164c:	0000e698 	.word	0x0000e698
    1650:	000090f5 	.word	0x000090f5
    1654:	2000012c 	.word	0x2000012c
    1658:	0000c0e1 	.word	0x0000c0e1
    165c:	0000ca45 	.word	0x0000ca45
    1660:	0003e700 	.word	0x0003e700
    1664:	00003591 	.word	0x00003591
    1668:	0000cde5 	.word	0x0000cde5
    166c:	0000c0a7 	.word	0x0000c0a7
    1670:	0003e500 	.word	0x0003e500
    1674:	0003e300 	.word	0x0003e300
    1678:	0000e6cc 	.word	0x0000e6cc

0000167c <fluffy_remove_fluffy_info>:
		}
	}
}

int fluffy_remove_fluffy_info(void)
{	
    167c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	enum status_code status = nvm_erase_row(NVM_ADDR_FLUFFY_INFO_SAVED);
    167e:	480d      	ldr	r0, [pc, #52]	; (16b4 <fluffy_remove_fluffy_info+0x38>)
    1680:	4b0d      	ldr	r3, [pc, #52]	; (16b8 <fluffy_remove_fluffy_info+0x3c>)
    1682:	4798      	blx	r3
	
	if(status == STATUS_OK) {
    1684:	2800      	cmp	r0, #0
    1686:	d110      	bne.n	16aa <fluffy_remove_fluffy_info+0x2e>
    1688:	4c0c      	ldr	r4, [pc, #48]	; (16bc <fluffy_remove_fluffy_info+0x40>)
		for(int i=0; i<MAX_KEY_COUNT; i++) {
			status = nvm_erase_row( NVM_ADDR_FLUFFY_KEY - NVM_ADDR_ROW_INTERVAL(i) );
    168a:	4d0b      	ldr	r5, [pc, #44]	; (16b8 <fluffy_remove_fluffy_info+0x3c>)
			if(status == STATUS_OK)
				status = nvm_erase_row( NVM_ADDR_FLUFFY_KEY_VALUE - NVM_ADDR_ROW_INTERVAL(i) );
    168c:	1c2f      	adds	r7, r5, #0
int fluffy_remove_fluffy_info(void)
{	
	enum status_code status = nvm_erase_row(NVM_ADDR_FLUFFY_INFO_SAVED);
	
	if(status == STATUS_OK) {
		for(int i=0; i<MAX_KEY_COUNT; i++) {
    168e:	4e0c      	ldr	r6, [pc, #48]	; (16c0 <fluffy_remove_fluffy_info+0x44>)
			status = nvm_erase_row( NVM_ADDR_FLUFFY_KEY - NVM_ADDR_ROW_INTERVAL(i) );
    1690:	1c20      	adds	r0, r4, #0
    1692:	47a8      	blx	r5
			if(status == STATUS_OK)
    1694:	2800      	cmp	r0, #0
    1696:	d108      	bne.n	16aa <fluffy_remove_fluffy_info+0x2e>
    1698:	4b0a      	ldr	r3, [pc, #40]	; (16c4 <fluffy_remove_fluffy_info+0x48>)
    169a:	18e0      	adds	r0, r4, r3
				status = nvm_erase_row( NVM_ADDR_FLUFFY_KEY_VALUE - NVM_ADDR_ROW_INTERVAL(i) );
    169c:	47b8      	blx	r7
    169e:	3c01      	subs	r4, #1
    16a0:	3cff      	subs	r4, #255	; 0xff
int fluffy_remove_fluffy_info(void)
{	
	enum status_code status = nvm_erase_row(NVM_ADDR_FLUFFY_INFO_SAVED);
	
	if(status == STATUS_OK) {
		for(int i=0; i<MAX_KEY_COUNT; i++) {
    16a2:	42b4      	cmp	r4, r6
    16a4:	d1f4      	bne.n	1690 <fluffy_remove_fluffy_info+0x14>
			else
				break;
		}
	}
	
	if(status != STATUS_OK)
    16a6:	2800      	cmp	r0, #0
    16a8:	d002      	beq.n	16b0 <fluffy_remove_fluffy_info+0x34>
		print_to_terminal("fluffy_remove_fluffy_info / nvm erase error!!! \r\n");
    16aa:	4807      	ldr	r0, [pc, #28]	; (16c8 <fluffy_remove_fluffy_info+0x4c>)
    16ac:	4b07      	ldr	r3, [pc, #28]	; (16cc <fluffy_remove_fluffy_info+0x50>)
    16ae:	4798      	blx	r3

	return true;
}
    16b0:	2001      	movs	r0, #1
    16b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    16b4:	0003e600 	.word	0x0003e600
    16b8:	000036a9 	.word	0x000036a9
    16bc:	0003e200 	.word	0x0003e200
    16c0:	0003d200 	.word	0x0003d200
    16c4:	fffff000 	.word	0xfffff000
    16c8:	0000e734 	.word	0x0000e734
    16cc:	000090f5 	.word	0x000090f5

000016d0 <fluffy_set_fluffy_info>:

	return true;
}

void fluffy_set_fluffy_info( uint8_t fileWrite )
{
    16d0:	b5f0      	push	{r4, r5, r6, r7, lr}
    16d2:	4657      	mov	r7, sl
    16d4:	464e      	mov	r6, r9
    16d6:	4645      	mov	r5, r8
    16d8:	b4e0      	push	{r5, r6, r7}
    16da:	b092      	sub	sp, #72	; 0x48
	if( fileWrite )
    16dc:	2800      	cmp	r0, #0
    16de:	d056      	beq.n	178e <fluffy_set_fluffy_info+0xbe>
	{
		enum status_code status;
		uint8_t writeBuffer_Temp[NVMCTRL_PAGE_SIZE] = {0, };
    16e0:	a802      	add	r0, sp, #8
    16e2:	2100      	movs	r1, #0
    16e4:	2240      	movs	r2, #64	; 0x40
    16e6:	4b2d      	ldr	r3, [pc, #180]	; (179c <fluffy_set_fluffy_info+0xcc>)
    16e8:	4798      	blx	r3
		
		fluffy_remove_fluffy_info();
    16ea:	4b2d      	ldr	r3, [pc, #180]	; (17a0 <fluffy_set_fluffy_info+0xd0>)
    16ec:	4798      	blx	r3
	
		status = nvm_write_buffer(NVM_ADDR_FLUFFY_INFO_SAVED, &(gAddKeys.count), 1);
    16ee:	482d      	ldr	r0, [pc, #180]	; (17a4 <fluffy_set_fluffy_info+0xd4>)
    16f0:	492d      	ldr	r1, [pc, #180]	; (17a8 <fluffy_set_fluffy_info+0xd8>)
    16f2:	2201      	movs	r2, #1
    16f4:	4b2d      	ldr	r3, [pc, #180]	; (17ac <fluffy_set_fluffy_info+0xdc>)
    16f6:	4798      	blx	r3
    16f8:	1e01      	subs	r1, r0, #0
		
		if(status == STATUS_OK) {
    16fa:	d142      	bne.n	1782 <fluffy_set_fluffy_info+0xb2>
			for( int i = 0; i < gAddKeys.count; i++ )
    16fc:	23c0      	movs	r3, #192	; 0xc0
    16fe:	4a2c      	ldr	r2, [pc, #176]	; (17b0 <fluffy_set_fluffy_info+0xe0>)
    1700:	5cd3      	ldrb	r3, [r2, r3]
    1702:	2b00      	cmp	r3, #0
    1704:	dd43      	ble.n	178e <fluffy_set_fluffy_info+0xbe>
    1706:	1c16      	adds	r6, r2, #0
    1708:	4d2a      	ldr	r5, [pc, #168]	; (17b4 <fluffy_set_fluffy_info+0xe4>)
    170a:	2700      	movs	r7, #0
			{
				writeBuffer_Temp[0] = strlen(gAddKeys.key[ i ]);
    170c:	4b2a      	ldr	r3, [pc, #168]	; (17b8 <fluffy_set_fluffy_info+0xe8>)
    170e:	4698      	mov	r8, r3
				memcpy(&writeBuffer_Temp[1], gAddKeys.key[ i ], strlen(gAddKeys.key[ i ]));
    1710:	4b2a      	ldr	r3, [pc, #168]	; (17bc <fluffy_set_fluffy_info+0xec>)
    1712:	469a      	mov	sl, r3
				status = nvm_write_buffer(NVM_ADDR_FLUFFY_KEY - NVM_ADDR_ROW_INTERVAL(i), writeBuffer_Temp, NVMCTRL_PAGE_SIZE);
    1714:	4b25      	ldr	r3, [pc, #148]	; (17ac <fluffy_set_fluffy_info+0xdc>)
    1716:	4699      	mov	r9, r3
		status = nvm_write_buffer(NVM_ADDR_FLUFFY_INFO_SAVED, &(gAddKeys.count), 1);
		
		if(status == STATUS_OK) {
			for( int i = 0; i < gAddKeys.count; i++ )
			{
				writeBuffer_Temp[0] = strlen(gAddKeys.key[ i ]);
    1718:	6834      	ldr	r4, [r6, #0]
    171a:	1c20      	adds	r0, r4, #0
    171c:	47c0      	blx	r8
    171e:	ab02      	add	r3, sp, #8
    1720:	7018      	strb	r0, [r3, #0]
				memcpy(&writeBuffer_Temp[1], gAddKeys.key[ i ], strlen(gAddKeys.key[ i ]));
    1722:	1c20      	adds	r0, r4, #0
    1724:	47c0      	blx	r8
    1726:	1c02      	adds	r2, r0, #0
    1728:	ab02      	add	r3, sp, #8
    172a:	1c58      	adds	r0, r3, #1
    172c:	1c21      	adds	r1, r4, #0
    172e:	47d0      	blx	sl
				status = nvm_write_buffer(NVM_ADDR_FLUFFY_KEY - NVM_ADDR_ROW_INTERVAL(i), writeBuffer_Temp, NVMCTRL_PAGE_SIZE);
    1730:	1c28      	adds	r0, r5, #0
    1732:	a902      	add	r1, sp, #8
    1734:	2240      	movs	r2, #64	; 0x40
    1736:	47c8      	blx	r9
    1738:	1e01      	subs	r1, r0, #0
				if(status == STATUS_OK)
    173a:	d126      	bne.n	178a <fluffy_set_fluffy_info+0xba>
    173c:	1c33      	adds	r3, r6, #0
    173e:	3380      	adds	r3, #128	; 0x80
				{
					writeBuffer_Temp[0] = strlen(gAddKeys.value[ i ]);
    1740:	681b      	ldr	r3, [r3, #0]
    1742:	9301      	str	r3, [sp, #4]
    1744:	1c18      	adds	r0, r3, #0
    1746:	4c1c      	ldr	r4, [pc, #112]	; (17b8 <fluffy_set_fluffy_info+0xe8>)
    1748:	47a0      	blx	r4
    174a:	aa02      	add	r2, sp, #8
    174c:	7010      	strb	r0, [r2, #0]
					memcpy(&writeBuffer_Temp[1], gAddKeys.value[ i ], strlen(gAddKeys.value[ i ]));
    174e:	9801      	ldr	r0, [sp, #4]
    1750:	47a0      	blx	r4
    1752:	1c02      	adds	r2, r0, #0
    1754:	a802      	add	r0, sp, #8
    1756:	3001      	adds	r0, #1
    1758:	9901      	ldr	r1, [sp, #4]
    175a:	4b18      	ldr	r3, [pc, #96]	; (17bc <fluffy_set_fluffy_info+0xec>)
    175c:	4798      	blx	r3
    175e:	4b18      	ldr	r3, [pc, #96]	; (17c0 <fluffy_set_fluffy_info+0xf0>)
    1760:	18e8      	adds	r0, r5, r3
					status = nvm_write_buffer(NVM_ADDR_FLUFFY_KEY_VALUE - NVM_ADDR_ROW_INTERVAL(i), writeBuffer_Temp, NVMCTRL_PAGE_SIZE);
    1762:	a902      	add	r1, sp, #8
    1764:	2240      	movs	r2, #64	; 0x40
    1766:	4b11      	ldr	r3, [pc, #68]	; (17ac <fluffy_set_fluffy_info+0xdc>)
    1768:	4798      	blx	r3
    176a:	1e01      	subs	r1, r0, #0
				}
					
				if(status != STATUS_OK)
    176c:	d109      	bne.n	1782 <fluffy_set_fluffy_info+0xb2>
		fluffy_remove_fluffy_info();
	
		status = nvm_write_buffer(NVM_ADDR_FLUFFY_INFO_SAVED, &(gAddKeys.count), 1);
		
		if(status == STATUS_OK) {
			for( int i = 0; i < gAddKeys.count; i++ )
    176e:	3701      	adds	r7, #1
    1770:	3604      	adds	r6, #4
    1772:	3d01      	subs	r5, #1
    1774:	3dff      	subs	r5, #255	; 0xff
    1776:	23c0      	movs	r3, #192	; 0xc0
    1778:	4a0d      	ldr	r2, [pc, #52]	; (17b0 <fluffy_set_fluffy_info+0xe0>)
    177a:	5cd3      	ldrb	r3, [r2, r3]
    177c:	42bb      	cmp	r3, r7
    177e:	dccb      	bgt.n	1718 <fluffy_set_fluffy_info+0x48>
    1780:	e005      	b.n	178e <fluffy_set_fluffy_info+0xbe>
			}
		}

		if(status != STATUS_OK)
		{
			print_to_terminal("fluffy_set_fluffy_info / nvm write error ( %d ) Error!!!!!\r\n", status );
    1782:	4810      	ldr	r0, [pc, #64]	; (17c4 <fluffy_set_fluffy_info+0xf4>)
    1784:	4b10      	ldr	r3, [pc, #64]	; (17c8 <fluffy_set_fluffy_info+0xf8>)
    1786:	4798      	blx	r3
    1788:	e001      	b.n	178e <fluffy_set_fluffy_info+0xbe>
				print_to_terminal("fluffy_set_fluffy_info / write ok. key = %s, value = %s\r\n", gAddKeys.key[ i ], gAddKeys.value[ i ]);
#endif
			}
		}

		if(status != STATUS_OK)
    178a:	2800      	cmp	r0, #0
    178c:	d1f9      	bne.n	1782 <fluffy_set_fluffy_info+0xb2>
		{
			print_to_terminal("fluffy_set_fluffy_info / nvm write error ( %d ) Error!!!!!\r\n", status );
		}
	}
}
    178e:	b012      	add	sp, #72	; 0x48
    1790:	bc1c      	pop	{r2, r3, r4}
    1792:	4690      	mov	r8, r2
    1794:	4699      	mov	r9, r3
    1796:	46a2      	mov	sl, r4
    1798:	bdf0      	pop	{r4, r5, r6, r7, pc}
    179a:	46c0      	nop			; (mov r8, r8)
    179c:	0000c0e1 	.word	0x0000c0e1
    17a0:	0000167d 	.word	0x0000167d
    17a4:	0003e600 	.word	0x0003e600
    17a8:	200007ac 	.word	0x200007ac
    17ac:	00003591 	.word	0x00003591
    17b0:	200006ec 	.word	0x200006ec
    17b4:	0003e200 	.word	0x0003e200
    17b8:	0000cde5 	.word	0x0000cde5
    17bc:	0000c0a7 	.word	0x0000c0a7
    17c0:	fffff000 	.word	0xfffff000
    17c4:	0000e768 	.word	0x0000e768
    17c8:	000090f5 	.word	0x000090f5

000017cc <fluffy_device_config_add_key>:

	return true;
}

int fluffy_device_config_add_key( const char* key, const char* label, const char* value )
{
    17cc:	b5f0      	push	{r4, r5, r6, r7, lr}
    17ce:	465f      	mov	r7, fp
    17d0:	4656      	mov	r6, sl
    17d2:	464d      	mov	r5, r9
    17d4:	4644      	mov	r4, r8
    17d6:	b4f0      	push	{r4, r5, r6, r7}
    17d8:	b085      	sub	sp, #20
	if( key == NULL || (label == NULL && value == NULL) )
    17da:	2800      	cmp	r0, #0
    17dc:	d021      	beq.n	1822 <fluffy_device_config_add_key+0x56>
    17de:	1c14      	adds	r4, r2, #0
    17e0:	9101      	str	r1, [sp, #4]
    17e2:	9000      	str	r0, [sp, #0]
    17e4:	2900      	cmp	r1, #0
    17e6:	d139      	bne.n	185c <fluffy_device_config_add_key+0x90>
    17e8:	2a00      	cmp	r2, #0
    17ea:	d11e      	bne.n	182a <fluffy_device_config_add_key+0x5e>
    17ec:	e01b      	b.n	1826 <fluffy_device_config_add_key+0x5a>
		gAddKeys.label[ gAddKeys.count ] = malloc( labelLength + 1 );
		strcpy( gAddKeys.label[ gAddKeys.count ], label );
		gAddKeys.label[ gAddKeys.count ][ labelLength ] = 0;
	}
	
	if(value) {
    17ee:	2c00      	cmp	r4, #0
    17f0:	d010      	beq.n	1814 <fluffy_device_config_add_key+0x48>
		gAddKeys.value[ gAddKeys.count ] = malloc( valueLength + 1 );
    17f2:	4f34      	ldr	r7, [pc, #208]	; (18c4 <fluffy_device_config_add_key+0xf8>)
    17f4:	23c0      	movs	r3, #192	; 0xc0
    17f6:	5cfd      	ldrb	r5, [r7, r3]
    17f8:	9b02      	ldr	r3, [sp, #8]
    17fa:	1c58      	adds	r0, r3, #1
    17fc:	4b32      	ldr	r3, [pc, #200]	; (18c8 <fluffy_device_config_add_key+0xfc>)
    17fe:	4798      	blx	r3
    1800:	1c06      	adds	r6, r0, #0
    1802:	3520      	adds	r5, #32
    1804:	00ad      	lsls	r5, r5, #2
    1806:	51e8      	str	r0, [r5, r7]
		strcpy( gAddKeys.value[ gAddKeys.count ], value );
    1808:	1c21      	adds	r1, r4, #0
    180a:	4b30      	ldr	r3, [pc, #192]	; (18cc <fluffy_device_config_add_key+0x100>)
    180c:	4798      	blx	r3
		gAddKeys.value[ gAddKeys.count ][ valueLength ] = 0;
    180e:	2300      	movs	r3, #0
    1810:	9a02      	ldr	r2, [sp, #8]
    1812:	54b3      	strb	r3, [r6, r2]
	}

	gAddKeys.count++;
    1814:	492b      	ldr	r1, [pc, #172]	; (18c4 <fluffy_device_config_add_key+0xf8>)
    1816:	22c0      	movs	r2, #192	; 0xc0
    1818:	5c8b      	ldrb	r3, [r1, r2]
    181a:	3301      	adds	r3, #1
    181c:	548b      	strb	r3, [r1, r2]

	return true;
    181e:	2001      	movs	r0, #1
    1820:	e049      	b.n	18b6 <fluffy_device_config_add_key+0xea>
}

int fluffy_device_config_add_key( const char* key, const char* label, const char* value )
{
	if( key == NULL || (label == NULL && value == NULL) )
		return false;
    1822:	2000      	movs	r0, #0
    1824:	e047      	b.n	18b6 <fluffy_device_config_add_key+0xea>
    1826:	2000      	movs	r0, #0
    1828:	e045      	b.n	18b6 <fluffy_device_config_add_key+0xea>
	
	int keyLength = strlen( key );
    182a:	9800      	ldr	r0, [sp, #0]
    182c:	4d28      	ldr	r5, [pc, #160]	; (18d0 <fluffy_device_config_add_key+0x104>)
    182e:	47a8      	blx	r5
    1830:	1c07      	adds	r7, r0, #0
	int labelLength = strlen( label );
	int valueLength = strlen( value );
    1832:	1c20      	adds	r0, r4, #0
    1834:	47a8      	blx	r5
    1836:	9002      	str	r0, [sp, #8]
	
	gAddKeys.key[ gAddKeys.count ] = malloc( keyLength + 1 );
    1838:	4b22      	ldr	r3, [pc, #136]	; (18c4 <fluffy_device_config_add_key+0xf8>)
    183a:	4698      	mov	r8, r3
    183c:	23c0      	movs	r3, #192	; 0xc0
    183e:	4642      	mov	r2, r8
    1840:	5cd6      	ldrb	r6, [r2, r3]
    1842:	1c78      	adds	r0, r7, #1
    1844:	4b20      	ldr	r3, [pc, #128]	; (18c8 <fluffy_device_config_add_key+0xfc>)
    1846:	4798      	blx	r3
    1848:	1c05      	adds	r5, r0, #0
    184a:	00b6      	lsls	r6, r6, #2
    184c:	4643      	mov	r3, r8
    184e:	50f0      	str	r0, [r6, r3]
	strcpy( gAddKeys.key[ gAddKeys.count ], key );
    1850:	9900      	ldr	r1, [sp, #0]
    1852:	4b1e      	ldr	r3, [pc, #120]	; (18cc <fluffy_device_config_add_key+0x100>)
    1854:	4798      	blx	r3
	gAddKeys.key[ gAddKeys.count ][ keyLength ] = 0;
    1856:	2300      	movs	r3, #0
    1858:	55eb      	strb	r3, [r5, r7]
    185a:	e7c8      	b.n	17ee <fluffy_device_config_add_key+0x22>
int fluffy_device_config_add_key( const char* key, const char* label, const char* value )
{
	if( key == NULL || (label == NULL && value == NULL) )
		return false;
	
	int keyLength = strlen( key );
    185c:	9800      	ldr	r0, [sp, #0]
    185e:	4d1c      	ldr	r5, [pc, #112]	; (18d0 <fluffy_device_config_add_key+0x104>)
    1860:	47a8      	blx	r5
    1862:	4683      	mov	fp, r0
	int labelLength = strlen( label );
    1864:	9801      	ldr	r0, [sp, #4]
    1866:	47a8      	blx	r5
    1868:	9003      	str	r0, [sp, #12]
	int valueLength = strlen( value );
    186a:	1c20      	adds	r0, r4, #0
    186c:	47a8      	blx	r5
    186e:	9002      	str	r0, [sp, #8]
	
	gAddKeys.key[ gAddKeys.count ] = malloc( keyLength + 1 );
    1870:	4d14      	ldr	r5, [pc, #80]	; (18c4 <fluffy_device_config_add_key+0xf8>)
    1872:	22c0      	movs	r2, #192	; 0xc0
    1874:	4692      	mov	sl, r2
    1876:	5caf      	ldrb	r7, [r5, r2]
    1878:	465a      	mov	r2, fp
    187a:	1c50      	adds	r0, r2, #1
    187c:	4a12      	ldr	r2, [pc, #72]	; (18c8 <fluffy_device_config_add_key+0xfc>)
    187e:	4691      	mov	r9, r2
    1880:	4790      	blx	r2
    1882:	1c06      	adds	r6, r0, #0
    1884:	00bb      	lsls	r3, r7, #2
    1886:	5158      	str	r0, [r3, r5]
	strcpy( gAddKeys.key[ gAddKeys.count ], key );
    1888:	9900      	ldr	r1, [sp, #0]
    188a:	4a10      	ldr	r2, [pc, #64]	; (18cc <fluffy_device_config_add_key+0x100>)
    188c:	4690      	mov	r8, r2
    188e:	4790      	blx	r2
	gAddKeys.key[ gAddKeys.count ][ keyLength ] = 0;
    1890:	2700      	movs	r7, #0
    1892:	465a      	mov	r2, fp
    1894:	54b7      	strb	r7, [r6, r2]
	
	if(label) {
		gAddKeys.label[ gAddKeys.count ] = malloc( labelLength + 1 );
    1896:	4652      	mov	r2, sl
    1898:	5caa      	ldrb	r2, [r5, r2]
    189a:	4692      	mov	sl, r2
    189c:	9b03      	ldr	r3, [sp, #12]
    189e:	1c58      	adds	r0, r3, #1
    18a0:	47c8      	blx	r9
    18a2:	1c06      	adds	r6, r0, #0
    18a4:	4652      	mov	r2, sl
    18a6:	3210      	adds	r2, #16
    18a8:	0093      	lsls	r3, r2, #2
    18aa:	5158      	str	r0, [r3, r5]
		strcpy( gAddKeys.label[ gAddKeys.count ], label );
    18ac:	9901      	ldr	r1, [sp, #4]
    18ae:	47c0      	blx	r8
		gAddKeys.label[ gAddKeys.count ][ labelLength ] = 0;
    18b0:	9b03      	ldr	r3, [sp, #12]
    18b2:	54f7      	strb	r7, [r6, r3]
    18b4:	e79b      	b.n	17ee <fluffy_device_config_add_key+0x22>
	}

	gAddKeys.count++;

	return true;
}
    18b6:	b005      	add	sp, #20
    18b8:	bc3c      	pop	{r2, r3, r4, r5}
    18ba:	4690      	mov	r8, r2
    18bc:	4699      	mov	r9, r3
    18be:	46a2      	mov	sl, r4
    18c0:	46ab      	mov	fp, r5
    18c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    18c4:	200006ec 	.word	0x200006ec
    18c8:	0000c069 	.word	0x0000c069
    18cc:	0000ca45 	.word	0x0000ca45
    18d0:	0000cde5 	.word	0x0000cde5

000018d4 <fluffy_load_fluffy_info>:
		
	return true;
}

uint8_t fluffy_load_fluffy_info(void)
{
    18d4:	b5f0      	push	{r4, r5, r6, r7, lr}
    18d6:	464f      	mov	r7, r9
    18d8:	4646      	mov	r6, r8
    18da:	b4c0      	push	{r6, r7}
    18dc:	b0b3      	sub	sp, #204	; 0xcc
	uint8_t count = 0;
    18de:	24c7      	movs	r4, #199	; 0xc7
    18e0:	446c      	add	r4, sp
    18e2:	2300      	movs	r3, #0
    18e4:	7023      	strb	r3, [r4, #0]
	
	enum status_code status = nvm_read_buffer(NVM_ADDR_FLUFFY_INFO_SAVED, &count, 1);
    18e6:	4839      	ldr	r0, [pc, #228]	; (19cc <fluffy_load_fluffy_info+0xf8>)
    18e8:	1c21      	adds	r1, r4, #0
    18ea:	2201      	movs	r2, #1
    18ec:	4b38      	ldr	r3, [pc, #224]	; (19d0 <fluffy_load_fluffy_info+0xfc>)
    18ee:	4798      	blx	r3
    18f0:	1c01      	adds	r1, r0, #0
	
	if(count == 255)
    18f2:	7823      	ldrb	r3, [r4, #0]
    18f4:	2bff      	cmp	r3, #255	; 0xff
    18f6:	d106      	bne.n	1906 <fluffy_load_fluffy_info+0x32>
		count = 0;
    18f8:	2000      	movs	r0, #0
    18fa:	3b38      	subs	r3, #56	; 0x38
    18fc:	446b      	add	r3, sp
    18fe:	7018      	strb	r0, [r3, #0]
		
	if(status != STATUS_OK) {
    1900:	2900      	cmp	r1, #0
    1902:	d00b      	beq.n	191c <fluffy_load_fluffy_info+0x48>
    1904:	e001      	b.n	190a <fluffy_load_fluffy_info+0x36>
    1906:	2800      	cmp	r0, #0
    1908:	d004      	beq.n	1914 <fluffy_load_fluffy_info+0x40>
		print_to_terminal("fluffy_load_fluffy_info / nvm_read_buffer error (%d) fail\r\n", status);
    190a:	4832      	ldr	r0, [pc, #200]	; (19d4 <fluffy_load_fluffy_info+0x100>)
    190c:	4b32      	ldr	r3, [pc, #200]	; (19d8 <fluffy_load_fluffy_info+0x104>)
    190e:	4798      	blx	r3
		return false;
    1910:	2000      	movs	r0, #0
    1912:	e055      	b.n	19c0 <fluffy_load_fluffy_info+0xec>
	}
	
	if(count <= 0) {
    1914:	2b00      	cmp	r3, #0
    1916:	d001      	beq.n	191c <fluffy_load_fluffy_info+0x48>
		print_to_terminal("fluffy_load_fluffy_info / fluffy info is not exist in nvm.\r\n");
		return false;
	}

	for(int i=0; i<count; i++) {
    1918:	dc05      	bgt.n	1926 <fluffy_load_fluffy_info+0x52>
    191a:	e04a      	b.n	19b2 <fluffy_load_fluffy_info+0xde>
		print_to_terminal("fluffy_load_fluffy_info / nvm_read_buffer error (%d) fail\r\n", status);
		return false;
	}
	
	if(count <= 0) {
		print_to_terminal("fluffy_load_fluffy_info / fluffy info is not exist in nvm.\r\n");
    191c:	482f      	ldr	r0, [pc, #188]	; (19dc <fluffy_load_fluffy_info+0x108>)
    191e:	4b2e      	ldr	r3, [pc, #184]	; (19d8 <fluffy_load_fluffy_info+0x104>)
    1920:	4798      	blx	r3
		return false;
    1922:	2000      	movs	r0, #0
    1924:	e04c      	b.n	19c0 <fluffy_load_fluffy_info+0xec>
	}

	for(int i=0; i<count; i++) {
    1926:	4c2e      	ldr	r4, [pc, #184]	; (19e0 <fluffy_load_fluffy_info+0x10c>)
    1928:	2600      	movs	r6, #0
		
		uint8_t readBuffer_Temp[NVMCTRL_PAGE_SIZE] = {0, };
    192a:	4d2e      	ldr	r5, [pc, #184]	; (19e4 <fluffy_load_fluffy_info+0x110>)
		uint8_t key[NVMCTRL_PAGE_SIZE] = {0, };
		uint8_t value[NVMCTRL_PAGE_SIZE] = {0, };
		
		status = nvm_read_buffer(NVM_ADDR_FLUFFY_KEY - NVM_ADDR_ROW_INTERVAL(i), readBuffer_Temp, NVMCTRL_PAGE_SIZE);
    192c:	4b28      	ldr	r3, [pc, #160]	; (19d0 <fluffy_load_fluffy_info+0xfc>)
    192e:	4699      	mov	r9, r3
		if(status != STATUS_OK){
			print_to_terminal("fluffy_load_fluffy_info / read NVM_ADDR_FLUFFY_KEY error (0x%x)\r\n", status);
			return false;
		}
		memcpy(key, &readBuffer_Temp[1], readBuffer_Temp[0]);
    1930:	4b2d      	ldr	r3, [pc, #180]	; (19e8 <fluffy_load_fluffy_info+0x114>)
    1932:	4698      	mov	r8, r3
		return false;
	}

	for(int i=0; i<count; i++) {
		
		uint8_t readBuffer_Temp[NVMCTRL_PAGE_SIZE] = {0, };
    1934:	a801      	add	r0, sp, #4
    1936:	2100      	movs	r1, #0
    1938:	2240      	movs	r2, #64	; 0x40
    193a:	47a8      	blx	r5
		uint8_t key[NVMCTRL_PAGE_SIZE] = {0, };
    193c:	a811      	add	r0, sp, #68	; 0x44
    193e:	2100      	movs	r1, #0
    1940:	2240      	movs	r2, #64	; 0x40
    1942:	47a8      	blx	r5
		uint8_t value[NVMCTRL_PAGE_SIZE] = {0, };
    1944:	a821      	add	r0, sp, #132	; 0x84
    1946:	2100      	movs	r1, #0
    1948:	2240      	movs	r2, #64	; 0x40
    194a:	47a8      	blx	r5
		
		status = nvm_read_buffer(NVM_ADDR_FLUFFY_KEY - NVM_ADDR_ROW_INTERVAL(i), readBuffer_Temp, NVMCTRL_PAGE_SIZE);
    194c:	1c20      	adds	r0, r4, #0
    194e:	a901      	add	r1, sp, #4
    1950:	2240      	movs	r2, #64	; 0x40
    1952:	47c8      	blx	r9
    1954:	1e01      	subs	r1, r0, #0
		if(status != STATUS_OK){
    1956:	d003      	beq.n	1960 <fluffy_load_fluffy_info+0x8c>
			print_to_terminal("fluffy_load_fluffy_info / read NVM_ADDR_FLUFFY_KEY error (0x%x)\r\n", status);
    1958:	4824      	ldr	r0, [pc, #144]	; (19ec <fluffy_load_fluffy_info+0x118>)
    195a:	4b1f      	ldr	r3, [pc, #124]	; (19d8 <fluffy_load_fluffy_info+0x104>)
    195c:	4798      	blx	r3
			return false;
    195e:	e026      	b.n	19ae <fluffy_load_fluffy_info+0xda>
		}
		memcpy(key, &readBuffer_Temp[1], readBuffer_Temp[0]);
    1960:	af01      	add	r7, sp, #4
    1962:	783a      	ldrb	r2, [r7, #0]
    1964:	a811      	add	r0, sp, #68	; 0x44
    1966:	466b      	mov	r3, sp
    1968:	1d59      	adds	r1, r3, #5
    196a:	47c0      	blx	r8
    196c:	4b20      	ldr	r3, [pc, #128]	; (19f0 <fluffy_load_fluffy_info+0x11c>)
    196e:	18e0      	adds	r0, r4, r3
		
		status = nvm_read_buffer(NVM_ADDR_FLUFFY_KEY_VALUE - NVM_ADDR_ROW_INTERVAL(i), readBuffer_Temp, NVMCTRL_PAGE_SIZE);
    1970:	1c39      	adds	r1, r7, #0
    1972:	2240      	movs	r2, #64	; 0x40
    1974:	4b16      	ldr	r3, [pc, #88]	; (19d0 <fluffy_load_fluffy_info+0xfc>)
    1976:	4798      	blx	r3
    1978:	1e01      	subs	r1, r0, #0
		if(status != STATUS_OK){
    197a:	d003      	beq.n	1984 <fluffy_load_fluffy_info+0xb0>
			print_to_terminal("fluffy_load_fluffy_info / read NVM_ADDR_FLUFFY_KEY_VALUE error (0x%x)\r\n", status);
    197c:	481d      	ldr	r0, [pc, #116]	; (19f4 <fluffy_load_fluffy_info+0x120>)
    197e:	4b16      	ldr	r3, [pc, #88]	; (19d8 <fluffy_load_fluffy_info+0x104>)
    1980:	4798      	blx	r3
			return false;
    1982:	e014      	b.n	19ae <fluffy_load_fluffy_info+0xda>
		}
		memcpy(value, &readBuffer_Temp[1], readBuffer_Temp[0]);
    1984:	ab01      	add	r3, sp, #4
    1986:	781a      	ldrb	r2, [r3, #0]
    1988:	a821      	add	r0, sp, #132	; 0x84
    198a:	466b      	mov	r3, sp
    198c:	1d59      	adds	r1, r3, #5
    198e:	4b16      	ldr	r3, [pc, #88]	; (19e8 <fluffy_load_fluffy_info+0x114>)
    1990:	4798      	blx	r3

		fluffy_device_config_add_key(key, NULL, value);
    1992:	a811      	add	r0, sp, #68	; 0x44
    1994:	2100      	movs	r1, #0
    1996:	aa21      	add	r2, sp, #132	; 0x84
    1998:	4b17      	ldr	r3, [pc, #92]	; (19f8 <fluffy_load_fluffy_info+0x124>)
    199a:	4798      	blx	r3
	if(count <= 0) {
		print_to_terminal("fluffy_load_fluffy_info / fluffy info is not exist in nvm.\r\n");
		return false;
	}

	for(int i=0; i<count; i++) {
    199c:	3601      	adds	r6, #1
    199e:	3c01      	subs	r4, #1
    19a0:	3cff      	subs	r4, #255	; 0xff
    19a2:	23c7      	movs	r3, #199	; 0xc7
    19a4:	446b      	add	r3, sp
    19a6:	781b      	ldrb	r3, [r3, #0]
    19a8:	42b3      	cmp	r3, r6
    19aa:	dcc3      	bgt.n	1934 <fluffy_load_fluffy_info+0x60>
    19ac:	e001      	b.n	19b2 <fluffy_load_fluffy_info+0xde>
		uint8_t value[NVMCTRL_PAGE_SIZE] = {0, };
		
		status = nvm_read_buffer(NVM_ADDR_FLUFFY_KEY - NVM_ADDR_ROW_INTERVAL(i), readBuffer_Temp, NVMCTRL_PAGE_SIZE);
		if(status != STATUS_OK){
			print_to_terminal("fluffy_load_fluffy_info / read NVM_ADDR_FLUFFY_KEY error (0x%x)\r\n", status);
			return false;
    19ae:	2000      	movs	r0, #0
    19b0:	e006      	b.n	19c0 <fluffy_load_fluffy_info+0xec>
#if 0
		print_to_terminal("fluffy_load_fluffy_info / key = %s, value = %s \r\n", key, value);
#endif			
	}

	print_to_terminal( "fluffy_load_fluffy_info / %d\r\n", gAddKeys.count );
    19b2:	23c0      	movs	r3, #192	; 0xc0
    19b4:	4a11      	ldr	r2, [pc, #68]	; (19fc <fluffy_load_fluffy_info+0x128>)
    19b6:	5cd1      	ldrb	r1, [r2, r3]
    19b8:	4811      	ldr	r0, [pc, #68]	; (1a00 <fluffy_load_fluffy_info+0x12c>)
    19ba:	4b07      	ldr	r3, [pc, #28]	; (19d8 <fluffy_load_fluffy_info+0x104>)
    19bc:	4798      	blx	r3
	
	return true;
    19be:	2001      	movs	r0, #1
}
    19c0:	b033      	add	sp, #204	; 0xcc
    19c2:	bc0c      	pop	{r2, r3}
    19c4:	4690      	mov	r8, r2
    19c6:	4699      	mov	r9, r3
    19c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    19ca:	46c0      	nop			; (mov r8, r8)
    19cc:	0003e600 	.word	0x0003e600
    19d0:	00003639 	.word	0x00003639
    19d4:	0000e7a8 	.word	0x0000e7a8
    19d8:	000090f5 	.word	0x000090f5
    19dc:	0000e7e4 	.word	0x0000e7e4
    19e0:	0003e200 	.word	0x0003e200
    19e4:	0000c0e1 	.word	0x0000c0e1
    19e8:	0000c0a7 	.word	0x0000c0a7
    19ec:	0000e824 	.word	0x0000e824
    19f0:	fffff000 	.word	0xfffff000
    19f4:	0000e868 	.word	0x0000e868
    19f8:	000017cd 	.word	0x000017cd
    19fc:	200006ec 	.word	0x200006ec
    1a00:	0000e8b0 	.word	0x0000e8b0

00001a04 <fluffy_check_home_ap>:

uint8_t fluffy_check_home_ap(char* ssid, char* pw, uint8_t secType)
{
    1a04:	b570      	push	{r4, r5, r6, lr}
    1a06:	b0ac      	sub	sp, #176	; 0xb0
    1a08:	1c04      	adds	r4, r0, #0
    1a0a:	1c0e      	adds	r6, r1, #0
    1a0c:	1c15      	adds	r5, r2, #0
	memset(&gAddKeys, 0, sizeof(gAddKeys) );
    1a0e:	4843      	ldr	r0, [pc, #268]	; (1b1c <fluffy_check_home_ap+0x118>)
    1a10:	2100      	movs	r1, #0
    1a12:	22c4      	movs	r2, #196	; 0xc4
    1a14:	4b42      	ldr	r3, [pc, #264]	; (1b20 <fluffy_check_home_ap+0x11c>)
    1a16:	4798      	blx	r3

	if( ssid )
    1a18:	2c00      	cmp	r4, #0
    1a1a:	d007      	beq.n	1a2c <fluffy_check_home_ap+0x28>
	{
		fluffy_set_home_ap_info(ssid, pw, secType, false);
    1a1c:	1c20      	adds	r0, r4, #0
    1a1e:	1c31      	adds	r1, r6, #0
    1a20:	1c2a      	adds	r2, r5, #0
    1a22:	2300      	movs	r3, #0
    1a24:	4c3f      	ldr	r4, [pc, #252]	; (1b24 <fluffy_check_home_ap+0x120>)
    1a26:	47a0      	blx	r4

		//print_to_terminal("debug_1: ssid is true.\r\n");

		return 1;
    1a28:	2401      	movs	r4, #1
    1a2a:	e073      	b.n	1b14 <fluffy_check_home_ap+0x110>

static uint8_t load_home_ap_info(void)
{
	char *cp = NULL;
	uint8_t buf[NVMCTRL_PAGE_SIZE] = {0, };
	uint8_t saved = false;
    1a2c:	466b      	mov	r3, sp
    1a2e:	1d99      	adds	r1, r3, #6
    1a30:	2300      	movs	r3, #0
    1a32:	700b      	strb	r3, [r1, #0]
		
	enum status_code status = nvm_read_buffer(NVM_ADDR_HOME_AP_INFO_SAVED, &saved, 1);
    1a34:	483c      	ldr	r0, [pc, #240]	; (1b28 <fluffy_check_home_ap+0x124>)
    1a36:	2201      	movs	r2, #1
    1a38:	4b3c      	ldr	r3, [pc, #240]	; (1b2c <fluffy_check_home_ap+0x128>)
    1a3a:	4798      	blx	r3
    1a3c:	1e01      	subs	r1, r0, #0

	if(status != STATUS_OK) {
    1a3e:	d003      	beq.n	1a48 <fluffy_check_home_ap+0x44>
		print_to_terminal("load_home_ap_info / read nvm error (0x%x) \r\n", status);
    1a40:	483b      	ldr	r0, [pc, #236]	; (1b30 <fluffy_check_home_ap+0x12c>)
    1a42:	4b3c      	ldr	r3, [pc, #240]	; (1b34 <fluffy_check_home_ap+0x130>)
    1a44:	4798      	blx	r3
    1a46:	e064      	b.n	1b12 <fluffy_check_home_ap+0x10e>
		return false;
	}
	
	if(saved != true) {
    1a48:	466b      	mov	r3, sp
    1a4a:	799c      	ldrb	r4, [r3, #6]
    1a4c:	2c01      	cmp	r4, #1
    1a4e:	d003      	beq.n	1a58 <fluffy_check_home_ap+0x54>
		print_to_terminal("load_home_ap_info / ap info is not exist in nvm. \r\n");
    1a50:	4839      	ldr	r0, [pc, #228]	; (1b38 <fluffy_check_home_ap+0x134>)
    1a52:	4b38      	ldr	r3, [pc, #224]	; (1b34 <fluffy_check_home_ap+0x130>)
    1a54:	4798      	blx	r3
    1a56:	e05c      	b.n	1b12 <fluffy_check_home_ap+0x10e>
		return false;
	}

	uint8_t readBuffer_Temp[NVMCTRL_PAGE_SIZE] = { 0, };
    1a58:	a80b      	add	r0, sp, #44	; 0x2c
    1a5a:	2100      	movs	r1, #0
    1a5c:	2240      	movs	r2, #64	; 0x40
    1a5e:	4e30      	ldr	r6, [pc, #192]	; (1b20 <fluffy_check_home_ap+0x11c>)
    1a60:	47b0      	blx	r6
	uint8_t apSSID_Temp[M2M_MAX_SSID_LEN] = { 0, };
    1a62:	ab02      	add	r3, sp, #8
    1a64:	2500      	movs	r5, #0
    1a66:	9502      	str	r5, [sp, #8]
    1a68:	9503      	str	r5, [sp, #12]
    1a6a:	9504      	str	r5, [sp, #16]
    1a6c:	9505      	str	r5, [sp, #20]
    1a6e:	9506      	str	r5, [sp, #24]
    1a70:	9507      	str	r5, [sp, #28]
    1a72:	9508      	str	r5, [sp, #32]
    1a74:	9509      	str	r5, [sp, #36]	; 0x24
    1a76:	2220      	movs	r2, #32
    1a78:	549d      	strb	r5, [r3, r2]
	uint8_t apPW_Temp[M2M_MAX_PSK_LEN] = { 0, };
    1a7a:	a81b      	add	r0, sp, #108	; 0x6c
    1a7c:	2100      	movs	r1, #0
    1a7e:	3221      	adds	r2, #33	; 0x21
    1a80:	47b0      	blx	r6
	uint8_t apSecType_Temp = 0;
    1a82:	466b      	mov	r3, sp
    1a84:	71dd      	strb	r5, [r3, #7]

	status = nvm_read_buffer(NVM_ADDR_HOME_AP_SSID, readBuffer_Temp, NVMCTRL_PAGE_SIZE);
    1a86:	482d      	ldr	r0, [pc, #180]	; (1b3c <fluffy_check_home_ap+0x138>)
    1a88:	a90b      	add	r1, sp, #44	; 0x2c
    1a8a:	2240      	movs	r2, #64	; 0x40
    1a8c:	4b27      	ldr	r3, [pc, #156]	; (1b2c <fluffy_check_home_ap+0x128>)
    1a8e:	4798      	blx	r3
    1a90:	1e01      	subs	r1, r0, #0
	if(status != STATUS_OK) {
    1a92:	d003      	beq.n	1a9c <fluffy_check_home_ap+0x98>
		print_to_terminal("load_home_ap_info / read HOME_AP_SSID error (0x%x)\r\n", status);
    1a94:	482a      	ldr	r0, [pc, #168]	; (1b40 <fluffy_check_home_ap+0x13c>)
    1a96:	4b27      	ldr	r3, [pc, #156]	; (1b34 <fluffy_check_home_ap+0x130>)
    1a98:	4798      	blx	r3
    1a9a:	e03a      	b.n	1b12 <fluffy_check_home_ap+0x10e>
		return false;
	}
	memcpy(apSSID_Temp, &readBuffer_Temp[1], readBuffer_Temp[0]);
    1a9c:	ab0b      	add	r3, sp, #44	; 0x2c
    1a9e:	781a      	ldrb	r2, [r3, #0]
    1aa0:	a802      	add	r0, sp, #8
    1aa2:	212d      	movs	r1, #45	; 0x2d
    1aa4:	4469      	add	r1, sp
    1aa6:	4b27      	ldr	r3, [pc, #156]	; (1b44 <fluffy_check_home_ap+0x140>)
    1aa8:	4798      	blx	r3

	status = nvm_read_buffer(NVM_ADDR_HOME_AP_SECTYPE, &apSecType_Temp, 1);
    1aaa:	20f9      	movs	r0, #249	; 0xf9
    1aac:	0280      	lsls	r0, r0, #10
    1aae:	466b      	mov	r3, sp
    1ab0:	1dd9      	adds	r1, r3, #7
    1ab2:	2201      	movs	r2, #1
    1ab4:	4b1d      	ldr	r3, [pc, #116]	; (1b2c <fluffy_check_home_ap+0x128>)
    1ab6:	4798      	blx	r3
    1ab8:	1e01      	subs	r1, r0, #0
	if(status != STATUS_OK) {
    1aba:	d003      	beq.n	1ac4 <fluffy_check_home_ap+0xc0>
		print_to_terminal("load_home_ap_info / read HOME_AP_SECTYPE error (0x%x)\r\n", status);
    1abc:	4822      	ldr	r0, [pc, #136]	; (1b48 <fluffy_check_home_ap+0x144>)
    1abe:	4b1d      	ldr	r3, [pc, #116]	; (1b34 <fluffy_check_home_ap+0x130>)
    1ac0:	4798      	blx	r3
    1ac2:	e026      	b.n	1b12 <fluffy_check_home_ap+0x10e>
		return false;
	}
	
	status = nvm_read_buffer(NVM_ADDR_HOME_AP_PASSWORD, readBuffer_Temp, NVMCTRL_PAGE_SIZE);
    1ac4:	4821      	ldr	r0, [pc, #132]	; (1b4c <fluffy_check_home_ap+0x148>)
    1ac6:	a90b      	add	r1, sp, #44	; 0x2c
    1ac8:	2240      	movs	r2, #64	; 0x40
    1aca:	4b18      	ldr	r3, [pc, #96]	; (1b2c <fluffy_check_home_ap+0x128>)
    1acc:	4798      	blx	r3
    1ace:	1e01      	subs	r1, r0, #0
	if(status != STATUS_OK) {
    1ad0:	d003      	beq.n	1ada <fluffy_check_home_ap+0xd6>
		print_to_terminal("load_home_ap_info / read HOME_AP_PASSWORD error (0x%x)\r\n", status);
    1ad2:	481f      	ldr	r0, [pc, #124]	; (1b50 <fluffy_check_home_ap+0x14c>)
    1ad4:	4b17      	ldr	r3, [pc, #92]	; (1b34 <fluffy_check_home_ap+0x130>)
    1ad6:	4798      	blx	r3
    1ad8:	e01b      	b.n	1b12 <fluffy_check_home_ap+0x10e>
		return false;
	}
	memcpy(apPW_Temp, &readBuffer_Temp[1], readBuffer_Temp[0]);
    1ada:	ab0b      	add	r3, sp, #44	; 0x2c
    1adc:	781a      	ldrb	r2, [r3, #0]
    1ade:	a81b      	add	r0, sp, #108	; 0x6c
    1ae0:	212d      	movs	r1, #45	; 0x2d
    1ae2:	4469      	add	r1, sp
    1ae4:	4b17      	ldr	r3, [pc, #92]	; (1b44 <fluffy_check_home_ap+0x140>)
    1ae6:	4798      	blx	r3

#if 1
	print_to_terminal("load_home_ap_info / SSID (%s)\r\n", apSSID_Temp);
    1ae8:	481a      	ldr	r0, [pc, #104]	; (1b54 <fluffy_check_home_ap+0x150>)
    1aea:	a902      	add	r1, sp, #8
    1aec:	4d11      	ldr	r5, [pc, #68]	; (1b34 <fluffy_check_home_ap+0x130>)
    1aee:	47a8      	blx	r5
	print_to_terminal("load_home_ap_info / PW (%s)\r\n", apPW_Temp);
    1af0:	4819      	ldr	r0, [pc, #100]	; (1b58 <fluffy_check_home_ap+0x154>)
    1af2:	a91b      	add	r1, sp, #108	; 0x6c
    1af4:	47a8      	blx	r5
	print_to_terminal("load_home_ap_info / SecType (%d)\r\n", apSecType_Temp);
    1af6:	466b      	mov	r3, sp
    1af8:	1dde      	adds	r6, r3, #7
    1afa:	79d9      	ldrb	r1, [r3, #7]
    1afc:	4817      	ldr	r0, [pc, #92]	; (1b5c <fluffy_check_home_ap+0x158>)
    1afe:	47a8      	blx	r5
#endif

	fluffy_set_home_ap_info(apSSID_Temp, apPW_Temp, apSecType_Temp, false);
    1b00:	7832      	ldrb	r2, [r6, #0]
    1b02:	a802      	add	r0, sp, #8
    1b04:	a91b      	add	r1, sp, #108	; 0x6c
    1b06:	2300      	movs	r3, #0
    1b08:	4d06      	ldr	r5, [pc, #24]	; (1b24 <fluffy_check_home_ap+0x120>)
    1b0a:	47a8      	blx	r5
	}

	/* To do : Check Saved file for Home AP Information */
	if (load_home_ap_info())
	{
		fluffy_load_fluffy_info();
    1b0c:	4b14      	ldr	r3, [pc, #80]	; (1b60 <fluffy_check_home_ap+0x15c>)
    1b0e:	4798      	blx	r3
		return 1;
    1b10:	e000      	b.n	1b14 <fluffy_check_home_ap+0x110>
	}
	else
	{
		return 0;
    1b12:	2400      	movs	r4, #0
	}
}
    1b14:	1c20      	adds	r0, r4, #0
    1b16:	b02c      	add	sp, #176	; 0xb0
    1b18:	bd70      	pop	{r4, r5, r6, pc}
    1b1a:	46c0      	nop			; (mov r8, r8)
    1b1c:	200006ec 	.word	0x200006ec
    1b20:	0000c0e1 	.word	0x0000c0e1
    1b24:	00001575 	.word	0x00001575
    1b28:	0003e700 	.word	0x0003e700
    1b2c:	00003639 	.word	0x00003639
    1b30:	0000e8d0 	.word	0x0000e8d0
    1b34:	000090f5 	.word	0x000090f5
    1b38:	0000e900 	.word	0x0000e900
    1b3c:	0003e500 	.word	0x0003e500
    1b40:	0000e934 	.word	0x0000e934
    1b44:	0000c0a7 	.word	0x0000c0a7
    1b48:	0000e96c 	.word	0x0000e96c
    1b4c:	0003e300 	.word	0x0003e300
    1b50:	0000e9a4 	.word	0x0000e9a4
    1b54:	0000e9e0 	.word	0x0000e9e0
    1b58:	0000ea00 	.word	0x0000ea00
    1b5c:	0000ea20 	.word	0x0000ea20
    1b60:	000018d5 	.word	0x000018d5

00001b64 <fluffy_device_config_get_value>:

	return true;
}

const char * fluffy_device_config_get_value( const char *key )
{
    1b64:	b5f0      	push	{r4, r5, r6, r7, lr}
    1b66:	b083      	sub	sp, #12
	if( key == NULL )
    1b68:	2800      	cmp	r0, #0
    1b6a:	d018      	beq.n	1b9e <fluffy_device_config_get_value+0x3a>
		return NULL;
	
	for( int i = 0; i < gAddKeys.count; i++ )
    1b6c:	23c0      	movs	r3, #192	; 0xc0
    1b6e:	4a0e      	ldr	r2, [pc, #56]	; (1ba8 <fluffy_device_config_get_value+0x44>)
    1b70:	5cd7      	ldrb	r7, [r2, r3]
    1b72:	2f00      	cmp	r7, #0
    1b74:	dd15      	ble.n	1ba2 <fluffy_device_config_get_value+0x3e>
    1b76:	9001      	str	r0, [sp, #4]
    1b78:	1c15      	adds	r5, r2, #0
    1b7a:	2400      	movs	r4, #0
	{
		if( 0 == strcmp( key, gAddKeys.key[ i ] ) )
    1b7c:	4e0b      	ldr	r6, [pc, #44]	; (1bac <fluffy_device_config_get_value+0x48>)
    1b7e:	9801      	ldr	r0, [sp, #4]
    1b80:	6829      	ldr	r1, [r5, #0]
    1b82:	47b0      	blx	r6
    1b84:	2800      	cmp	r0, #0
    1b86:	d104      	bne.n	1b92 <fluffy_device_config_get_value+0x2e>
		{
			return gAddKeys.value[ i ];
    1b88:	3420      	adds	r4, #32
    1b8a:	00a4      	lsls	r4, r4, #2
    1b8c:	4b06      	ldr	r3, [pc, #24]	; (1ba8 <fluffy_device_config_get_value+0x44>)
    1b8e:	58e0      	ldr	r0, [r4, r3]
    1b90:	e008      	b.n	1ba4 <fluffy_device_config_get_value+0x40>
const char * fluffy_device_config_get_value( const char *key )
{
	if( key == NULL )
		return NULL;
	
	for( int i = 0; i < gAddKeys.count; i++ )
    1b92:	3401      	adds	r4, #1
    1b94:	3504      	adds	r5, #4
    1b96:	42bc      	cmp	r4, r7
    1b98:	dbf1      	blt.n	1b7e <fluffy_device_config_get_value+0x1a>
		{
			return gAddKeys.value[ i ];
		}
	}

	return NULL;
    1b9a:	2000      	movs	r0, #0
    1b9c:	e002      	b.n	1ba4 <fluffy_device_config_get_value+0x40>
}

const char * fluffy_device_config_get_value( const char *key )
{
	if( key == NULL )
		return NULL;
    1b9e:	2000      	movs	r0, #0
    1ba0:	e000      	b.n	1ba4 <fluffy_device_config_get_value+0x40>
		{
			return gAddKeys.value[ i ];
		}
	}

	return NULL;
    1ba2:	2000      	movs	r0, #0
}
    1ba4:	b003      	add	sp, #12
    1ba6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1ba8:	200006ec 	.word	0x200006ec
    1bac:	0000ca31 	.word	0x0000ca31

00001bb0 <fluffy_device_config_get_value_by_index>:

const char * fluffy_device_config_get_value_by_index( int index )
{
	return gAddKeys.value[ index ];
    1bb0:	3020      	adds	r0, #32
    1bb2:	0080      	lsls	r0, r0, #2
    1bb4:	4b01      	ldr	r3, [pc, #4]	; (1bbc <fluffy_device_config_get_value_by_index+0xc>)
    1bb6:	58c0      	ldr	r0, [r0, r3]
}
    1bb8:	4770      	bx	lr
    1bba:	46c0      	nop			; (mov r8, r8)
    1bbc:	200006ec 	.word	0x200006ec

00001bc0 <fluffy_device_config_set_value>:

void fluffy_device_config_set_value( int index, char* value )
{
    1bc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( gAddKeys.count <= index )
    1bc2:	23c0      	movs	r3, #192	; 0xc0
    1bc4:	4a0e      	ldr	r2, [pc, #56]	; (1c00 <fluffy_device_config_set_value+0x40>)
    1bc6:	5cd3      	ldrb	r3, [r2, r3]
    1bc8:	4283      	cmp	r3, r0
    1bca:	dd18      	ble.n	1bfe <fluffy_device_config_set_value+0x3e>
    1bcc:	1c0d      	adds	r5, r1, #0
    1bce:	1c04      	adds	r4, r0, #0
		return;

	gAddKeys.value[ index ] = malloc( strlen( value ) + 1 );
    1bd0:	1c08      	adds	r0, r1, #0
    1bd2:	4f0c      	ldr	r7, [pc, #48]	; (1c04 <fluffy_device_config_set_value+0x44>)
    1bd4:	47b8      	blx	r7
    1bd6:	3001      	adds	r0, #1
    1bd8:	4b0b      	ldr	r3, [pc, #44]	; (1c08 <fluffy_device_config_set_value+0x48>)
    1bda:	4798      	blx	r3
    1bdc:	1c06      	adds	r6, r0, #0
    1bde:	1c20      	adds	r0, r4, #0
    1be0:	3020      	adds	r0, #32
    1be2:	0080      	lsls	r0, r0, #2
    1be4:	4b06      	ldr	r3, [pc, #24]	; (1c00 <fluffy_device_config_set_value+0x40>)
    1be6:	50c6      	str	r6, [r0, r3]
	memset( gAddKeys.value[ index ], 0, strlen( value ) + 1 );
    1be8:	1c28      	adds	r0, r5, #0
    1bea:	47b8      	blx	r7
    1bec:	1c42      	adds	r2, r0, #1
    1bee:	1c30      	adds	r0, r6, #0
    1bf0:	2100      	movs	r1, #0
    1bf2:	4b06      	ldr	r3, [pc, #24]	; (1c0c <fluffy_device_config_set_value+0x4c>)
    1bf4:	4798      	blx	r3
	strcpy( gAddKeys.value[ index ], value );
    1bf6:	1c30      	adds	r0, r6, #0
    1bf8:	1c29      	adds	r1, r5, #0
    1bfa:	4b05      	ldr	r3, [pc, #20]	; (1c10 <fluffy_device_config_set_value+0x50>)
    1bfc:	4798      	blx	r3
}
    1bfe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1c00:	200006ec 	.word	0x200006ec
    1c04:	0000cde5 	.word	0x0000cde5
    1c08:	0000c069 	.word	0x0000c069
    1c0c:	0000c0e1 	.word	0x0000c0e1
    1c10:	0000ca45 	.word	0x0000ca45

00001c14 <fluffy_device_config_get_key>:

const char * fluffy_device_config_get_key( int index )
{
	return gAddKeys.key[ index ];
    1c14:	0080      	lsls	r0, r0, #2
    1c16:	4b01      	ldr	r3, [pc, #4]	; (1c1c <fluffy_device_config_get_key+0x8>)
    1c18:	58c0      	ldr	r0, [r0, r3]
}
    1c1a:	4770      	bx	lr
    1c1c:	200006ec 	.word	0x200006ec

00001c20 <fluffy_device_config_get_label>:

const char * fluffy_device_config_get_label( int index )
{
	return gAddKeys.label[ index ];
    1c20:	3010      	adds	r0, #16
    1c22:	0080      	lsls	r0, r0, #2
    1c24:	4b01      	ldr	r3, [pc, #4]	; (1c2c <fluffy_device_config_get_label+0xc>)
    1c26:	58c0      	ldr	r0, [r0, r3]
}
    1c28:	4770      	bx	lr
    1c2a:	46c0      	nop			; (mov r8, r8)
    1c2c:	200006ec 	.word	0x200006ec

00001c30 <fluffy_device_config_get_count>:

int fluffy_device_config_get_count( void )
{
	return gAddKeys.count;
    1c30:	23c0      	movs	r3, #192	; 0xc0
    1c32:	4a01      	ldr	r2, [pc, #4]	; (1c38 <fluffy_device_config_get_count+0x8>)
    1c34:	5cd0      	ldrb	r0, [r2, r3]
}
    1c36:	4770      	bx	lr
    1c38:	200006ec 	.word	0x200006ec

00001c3c <fluffy_get_wifi_connected>:

uint8_t fluffy_get_wifi_connected(void)
{
	return gWifiConnected;
    1c3c:	4b01      	ldr	r3, [pc, #4]	; (1c44 <fluffy_get_wifi_connected+0x8>)
    1c3e:	7818      	ldrb	r0, [r3, #0]
}
    1c40:	4770      	bx	lr
    1c42:	46c0      	nop			; (mov r8, r8)
    1c44:	20000128 	.word	0x20000128

00001c48 <fluffy_wifi_ap_mode>:

/************************************************************************/
/* WIFI AP Mode                                                         */
/************************************************************************/
void fluffy_wifi_ap_mode(int8_t isAPEnable, uint8_t* macAddr)
{
    1c48:	b510      	push	{r4, lr}
    1c4a:	b086      	sub	sp, #24
	int8_t ret = M2M_SUCCESS;
	
	gWifiConnected = 0;
    1c4c:	2200      	movs	r2, #0
    1c4e:	4b22      	ldr	r3, [pc, #136]	; (1cd8 <fluffy_wifi_ap_mode+0x90>)
    1c50:	701a      	strb	r2, [r3, #0]
	
	if (isAPEnable)
    1c52:	2800      	cmp	r0, #0
    1c54:	d03e      	beq.n	1cd4 <fluffy_wifi_ap_mode+0x8c>
    1c56:	1c0c      	adds	r4, r1, #0
	{
		char ssidMac[sizeof(MAIN_M2M_DEVICE_NAME) + 5] = {0,};
    1c58:	2300      	movs	r3, #0
    1c5a:	9302      	str	r3, [sp, #8]
    1c5c:	9303      	str	r3, [sp, #12]
    1c5e:	9304      	str	r3, [sp, #16]
    1c60:	9305      	str	r3, [sp, #20]
			
		print_to_terminal("=== AP Mode, Start ===\r\n");
    1c62:	481e      	ldr	r0, [pc, #120]	; (1cdc <fluffy_wifi_ap_mode+0x94>)
    1c64:	4b1e      	ldr	r3, [pc, #120]	; (1ce0 <fluffy_wifi_ap_mode+0x98>)
    1c66:	4798      	blx	r3
		
		if (macAddr)
    1c68:	2c00      	cmp	r4, #0
    1c6a:	d00f      	beq.n	1c8c <fluffy_wifi_ap_mode+0x44>
		{
			sprintf(ssidMac, "%s%02X%02X", MAIN_M2M_DEVICE_NAME, macAddr[0], macAddr[1]);
    1c6c:	7823      	ldrb	r3, [r4, #0]
    1c6e:	7862      	ldrb	r2, [r4, #1]
    1c70:	9200      	str	r2, [sp, #0]
    1c72:	a802      	add	r0, sp, #8
    1c74:	491b      	ldr	r1, [pc, #108]	; (1ce4 <fluffy_wifi_ap_mode+0x9c>)
    1c76:	4a1c      	ldr	r2, [pc, #112]	; (1ce8 <fluffy_wifi_ap_mode+0xa0>)
    1c78:	4c1c      	ldr	r4, [pc, #112]	; (1cec <fluffy_wifi_ap_mode+0xa4>)
    1c7a:	47a0      	blx	r4
			print_to_terminal("ssid : %s\r\n", ssidMac);
    1c7c:	481c      	ldr	r0, [pc, #112]	; (1cf0 <fluffy_wifi_ap_mode+0xa8>)
    1c7e:	a902      	add	r1, sp, #8
    1c80:	4c17      	ldr	r4, [pc, #92]	; (1ce0 <fluffy_wifi_ap_mode+0x98>)
    1c82:	47a0      	blx	r4
			print_to_terminal("You can connect to %s.\r\n", ssidMac);			
    1c84:	481b      	ldr	r0, [pc, #108]	; (1cf4 <fluffy_wifi_ap_mode+0xac>)
    1c86:	a902      	add	r1, sp, #8
    1c88:	47a0      	blx	r4
    1c8a:	e007      	b.n	1c9c <fluffy_wifi_ap_mode+0x54>
		}
		else
		{
			sprintf(ssidMac, "%sXXYY", MAIN_M2M_DEVICE_NAME);
    1c8c:	a802      	add	r0, sp, #8
    1c8e:	491a      	ldr	r1, [pc, #104]	; (1cf8 <fluffy_wifi_ap_mode+0xb0>)
    1c90:	4a15      	ldr	r2, [pc, #84]	; (1ce8 <fluffy_wifi_ap_mode+0xa0>)
    1c92:	4b16      	ldr	r3, [pc, #88]	; (1cec <fluffy_wifi_ap_mode+0xa4>)
    1c94:	4798      	blx	r3
			print_to_terminal("Wrong, MAC Address is NULL\r\n");
    1c96:	4819      	ldr	r0, [pc, #100]	; (1cfc <fluffy_wifi_ap_mode+0xb4>)
    1c98:	4b11      	ldr	r3, [pc, #68]	; (1ce0 <fluffy_wifi_ap_mode+0x98>)
    1c9a:	4798      	blx	r3
		}
		
		/* Initialize AP mode parameters structure with SSID, channel and OPEN security type. */
		memset(&gstrM2MAPConfig, 0x00, sizeof(tstrM2MAPConfig));
    1c9c:	4c18      	ldr	r4, [pc, #96]	; (1d00 <fluffy_wifi_ap_mode+0xb8>)
    1c9e:	1c20      	adds	r0, r4, #0
    1ca0:	2100      	movs	r1, #0
    1ca2:	2248      	movs	r2, #72	; 0x48
    1ca4:	4b17      	ldr	r3, [pc, #92]	; (1d04 <fluffy_wifi_ap_mode+0xbc>)
    1ca6:	4798      	blx	r3
		strcpy((char *)&gstrM2MAPConfig.au8SSID, ssidMac);
    1ca8:	1c20      	adds	r0, r4, #0
    1caa:	a902      	add	r1, sp, #8
    1cac:	4b16      	ldr	r3, [pc, #88]	; (1d08 <fluffy_wifi_ap_mode+0xc0>)
    1cae:	4798      	blx	r3
		gstrM2MAPConfig.u8SecType = M2M_WIFI_SEC_OPEN;
    1cb0:	2301      	movs	r3, #1
    1cb2:	223f      	movs	r2, #63	; 0x3f
    1cb4:	54a3      	strb	r3, [r4, r2]
		gstrM2MAPConfig.au8DHCPServerIP[0] = 0xC0; /* 192 */
    1cb6:	21c0      	movs	r1, #192	; 0xc0
    1cb8:	3202      	adds	r2, #2
    1cba:	54a1      	strb	r1, [r4, r2]
		gstrM2MAPConfig.au8DHCPServerIP[1] = 0xA8; /* 168 */
    1cbc:	3918      	subs	r1, #24
    1cbe:	3201      	adds	r2, #1
    1cc0:	54a1      	strb	r1, [r4, r2]
		gstrM2MAPConfig.au8DHCPServerIP[2] = 0x01; /* 1 */
    1cc2:	3201      	adds	r2, #1
    1cc4:	54a3      	strb	r3, [r4, r2]
		gstrM2MAPConfig.au8DHCPServerIP[3] = 0x01; /* 1 */
    1cc6:	3201      	adds	r2, #1
    1cc8:	54a3      	strb	r3, [r4, r2]
		
		m2m_wifi_start_provision_mode((tstrM2MAPConfig *)&gstrM2MAPConfig, (char *)gacHttpProvDomainName, 1);
    1cca:	1c20      	adds	r0, r4, #0
    1ccc:	490f      	ldr	r1, [pc, #60]	; (1d0c <fluffy_wifi_ap_mode+0xc4>)
    1cce:	3a43      	subs	r2, #67	; 0x43
    1cd0:	4b0f      	ldr	r3, [pc, #60]	; (1d10 <fluffy_wifi_ap_mode+0xc8>)
    1cd2:	4798      	blx	r3

	}
}
    1cd4:	b006      	add	sp, #24
    1cd6:	bd10      	pop	{r4, pc}
    1cd8:	20000128 	.word	0x20000128
    1cdc:	0000ea44 	.word	0x0000ea44
    1ce0:	000090f5 	.word	0x000090f5
    1ce4:	0000ea60 	.word	0x0000ea60
    1ce8:	0000ea6c 	.word	0x0000ea6c
    1cec:	0000c901 	.word	0x0000c901
    1cf0:	0000ea78 	.word	0x0000ea78
    1cf4:	0000ea84 	.word	0x0000ea84
    1cf8:	0000eaa0 	.word	0x0000eaa0
    1cfc:	0000eaa8 	.word	0x0000eaa8
    1d00:	20000004 	.word	0x20000004
    1d04:	0000c0e1 	.word	0x0000c0e1
    1d08:	0000ca45 	.word	0x0000ca45
    1d0c:	0000e4a8 	.word	0x0000e4a8
    1d10:	00005a79 	.word	0x00005a79

00001d14 <fluffy_wifi_stat_mode>:

/************************************************************************/
/* WIFI Station Mode                                                    */
/************************************************************************/
void fluffy_wifi_stat_mode(int8_t isStaEnable)
{
    1d14:	b510      	push	{r4, lr}
    1d16:	b082      	sub	sp, #8
	int8_t ret = M2M_SUCCESS;
	
	if (isStaEnable)
    1d18:	2800      	cmp	r0, #0
    1d1a:	d017      	beq.n	1d4c <fluffy_wifi_stat_mode+0x38>
	{
		print_to_terminal("=== Station Mode, Start, %s ===\r\n", gHomeAPInfo.apSSID);
    1d1c:	4c13      	ldr	r4, [pc, #76]	; (1d6c <fluffy_wifi_stat_mode+0x58>)
    1d1e:	4814      	ldr	r0, [pc, #80]	; (1d70 <fluffy_wifi_stat_mode+0x5c>)
    1d20:	1c21      	adds	r1, r4, #0
    1d22:	4b14      	ldr	r3, [pc, #80]	; (1d74 <fluffy_wifi_stat_mode+0x60>)
    1d24:	4798      	blx	r3

		/* Connect to router. */
		ret = m2m_wifi_connect((char *)gHomeAPInfo.apSSID,
								strlen(gHomeAPInfo.apSSID),
    1d26:	1c20      	adds	r0, r4, #0
    1d28:	4b13      	ldr	r3, [pc, #76]	; (1d78 <fluffy_wifi_stat_mode+0x64>)
    1d2a:	4798      	blx	r3
	if (isStaEnable)
	{
		print_to_terminal("=== Station Mode, Start, %s ===\r\n", gHomeAPInfo.apSSID);

		/* Connect to router. */
		ret = m2m_wifi_connect((char *)gHomeAPInfo.apSSID,
    1d2c:	b2c1      	uxtb	r1, r0
    1d2e:	2362      	movs	r3, #98	; 0x62
    1d30:	5ce2      	ldrb	r2, [r4, r3]
    1d32:	1c23      	adds	r3, r4, #0
    1d34:	3321      	adds	r3, #33	; 0x21
    1d36:	20ff      	movs	r0, #255	; 0xff
    1d38:	9000      	str	r0, [sp, #0]
    1d3a:	1c20      	adds	r0, r4, #0
    1d3c:	4c0f      	ldr	r4, [pc, #60]	; (1d7c <fluffy_wifi_stat_mode+0x68>)
    1d3e:	47a0      	blx	r4
								strlen(gHomeAPInfo.apSSID),
								gHomeAPInfo.apSecType,
								(char *)gHomeAPInfo.apPW,
								M2M_WIFI_CH_ALL);
		if (ret != M2M_SUCCESS)
    1d40:	2800      	cmp	r0, #0
    1d42:	d010      	beq.n	1d66 <fluffy_wifi_stat_mode+0x52>
		{
			print_to_terminal("m2m_wifi_connect call error!\r\n");
    1d44:	480e      	ldr	r0, [pc, #56]	; (1d80 <fluffy_wifi_stat_mode+0x6c>)
    1d46:	4b0b      	ldr	r3, [pc, #44]	; (1d74 <fluffy_wifi_stat_mode+0x60>)
    1d48:	4798      	blx	r3
    1d4a:	e00c      	b.n	1d66 <fluffy_wifi_stat_mode+0x52>
		}
	}
	else
	{
		gWifiConnected = 0;
    1d4c:	2200      	movs	r2, #0
    1d4e:	4b0d      	ldr	r3, [pc, #52]	; (1d84 <fluffy_wifi_stat_mode+0x70>)
    1d50:	701a      	strb	r2, [r3, #0]
		
		ret = m2m_wifi_disconnect();
    1d52:	4b0d      	ldr	r3, [pc, #52]	; (1d88 <fluffy_wifi_stat_mode+0x74>)
    1d54:	4798      	blx	r3
		if (ret != M2M_SUCCESS)
    1d56:	2800      	cmp	r0, #0
    1d58:	d002      	beq.n	1d60 <fluffy_wifi_stat_mode+0x4c>
		{
			print_to_terminal("m2m_wifi_disconnect call error!\r\n");
    1d5a:	480c      	ldr	r0, [pc, #48]	; (1d8c <fluffy_wifi_stat_mode+0x78>)
    1d5c:	4b05      	ldr	r3, [pc, #20]	; (1d74 <fluffy_wifi_stat_mode+0x60>)
    1d5e:	4798      	blx	r3
		}
		
		print_to_terminal("=== Station Mode, End ===\r\n");
    1d60:	480b      	ldr	r0, [pc, #44]	; (1d90 <fluffy_wifi_stat_mode+0x7c>)
    1d62:	4b04      	ldr	r3, [pc, #16]	; (1d74 <fluffy_wifi_stat_mode+0x60>)
    1d64:	4798      	blx	r3
	}
}
    1d66:	b002      	add	sp, #8
    1d68:	bd10      	pop	{r4, pc}
    1d6a:	46c0      	nop			; (mov r8, r8)
    1d6c:	2000012c 	.word	0x2000012c
    1d70:	0000eac8 	.word	0x0000eac8
    1d74:	000090f5 	.word	0x000090f5
    1d78:	0000cde5 	.word	0x0000cde5
    1d7c:	00005a0d 	.word	0x00005a0d
    1d80:	0000eaec 	.word	0x0000eaec
    1d84:	20000128 	.word	0x20000128
    1d88:	00005a29 	.word	0x00005a29
    1d8c:	0000eb0c 	.word	0x0000eb0c
    1d90:	0000eb30 	.word	0x0000eb30

00001d94 <http_process_ap_recv_data>:
char* gHttpDataBuffer = NULL;
int gHttpDataBufferLength = 0;


void http_process_ap_recv_data(uint8_t socket, uint8_t* payload, uint16_t payloadSize, uint16_t remainingSize)
{	
    1d94:	b5f0      	push	{r4, r5, r6, r7, lr}
    1d96:	465f      	mov	r7, fp
    1d98:	4656      	mov	r6, sl
    1d9a:	464d      	mov	r5, r9
    1d9c:	4644      	mov	r4, r8
    1d9e:	b4f0      	push	{r4, r5, r6, r7}
    1da0:	4cde      	ldr	r4, [pc, #888]	; (211c <STACK_SIZE+0x11c>)
    1da2:	44a5      	add	sp, r4
    1da4:	1c07      	adds	r7, r0, #0
    1da6:	9001      	str	r0, [sp, #4]
    1da8:	1c0c      	adds	r4, r1, #0
    1daa:	1c15      	adds	r5, r2, #0
    1dac:	1c1e      	adds	r6, r3, #0
	printf( "http_process_ap_recv_data / socket %d, payloadSize %d, remainingSize %d\r\n",
    1dae:	48dc      	ldr	r0, [pc, #880]	; (2120 <STACK_SIZE+0x120>)
    1db0:	1c39      	adds	r1, r7, #0
    1db2:	4fdc      	ldr	r7, [pc, #880]	; (2124 <STACK_SIZE+0x124>)
    1db4:	47b8      	blx	r7
		socket, payloadSize, remainingSize );

	if( 0 == strncmp( (char*)payload, LocalControl_HttpProvision, strlen( LocalControl_HttpProvision ) ) )
    1db6:	1c20      	adds	r0, r4, #0
    1db8:	49db      	ldr	r1, [pc, #876]	; (2128 <STACK_SIZE+0x128>)
    1dba:	220e      	movs	r2, #14
    1dbc:	4bdb      	ldr	r3, [pc, #876]	; (212c <STACK_SIZE+0x12c>)
    1dbe:	4798      	blx	r3
    1dc0:	2800      	cmp	r0, #0
    1dc2:	d000      	beq.n	1dc6 <http_process_ap_recv_data+0x32>
    1dc4:	e0ce      	b.n	1f64 <http_process_ap_recv_data+0x1d0>
	{
		printf( "http_process_ap_recv_data / Http Provisioning\r\n" );
    1dc6:	48da      	ldr	r0, [pc, #872]	; (2130 <STACK_SIZE+0x130>)
    1dc8:	4bda      	ldr	r3, [pc, #872]	; (2134 <STACK_SIZE+0x134>)
    1dca:	4798      	blx	r3

		gSentLength = 0;
    1dcc:	2200      	movs	r2, #0
    1dce:	4bda      	ldr	r3, [pc, #872]	; (2138 <STACK_SIZE+0x138>)
    1dd0:	601a      	str	r2, [r3, #0]

		int OriginalProvisionFileSize = 0;
		int addKeysSize = 0;

		for( int i = 0; i < fluffy_device_config_get_count(); i++ )
    1dd2:	2400      	movs	r4, #0
		printf( "http_process_ap_recv_data / Http Provisioning\r\n" );

		gSentLength = 0;

		int OriginalProvisionFileSize = 0;
		int addKeysSize = 0;
    1dd4:	2300      	movs	r3, #0

		for( int i = 0; i < fluffy_device_config_get_count(); i++ )
    1dd6:	4ad9      	ldr	r2, [pc, #868]	; (213c <STACK_SIZE+0x13c>)
    1dd8:	4690      	mov	r8, r2
		{
			printf("http_process_ap_recv_data / %s, %s\r\n", fluffy_device_config_get_key( i ), fluffy_device_config_get_label( i ));
    1dda:	4fd9      	ldr	r7, [pc, #868]	; (2140 <STACK_SIZE+0x140>)
    1ddc:	4ed9      	ldr	r6, [pc, #868]	; (2144 <STACK_SIZE+0x144>)
    1dde:	4699      	mov	r9, r3
		gSentLength = 0;

		int OriginalProvisionFileSize = 0;
		int addKeysSize = 0;

		for( int i = 0; i < fluffy_device_config_get_count(); i++ )
    1de0:	e01f      	b.n	1e22 <http_process_ap_recv_data+0x8e>
		{
			printf("http_process_ap_recv_data / %s, %s\r\n", fluffy_device_config_get_key( i ), fluffy_device_config_get_label( i ));
    1de2:	1c20      	adds	r0, r4, #0
    1de4:	47b8      	blx	r7
    1de6:	1c05      	adds	r5, r0, #0
    1de8:	1c20      	adds	r0, r4, #0
    1dea:	47b0      	blx	r6
    1dec:	1c02      	adds	r2, r0, #0
    1dee:	48d6      	ldr	r0, [pc, #856]	; (2148 <STACK_SIZE+0x148>)
    1df0:	1c29      	adds	r1, r5, #0
    1df2:	4bcc      	ldr	r3, [pc, #816]	; (2124 <STACK_SIZE+0x124>)
    1df4:	4798      	blx	r3
	
			char eachKeyBuffer[ 512 ] = {0,};
    1df6:	a834      	add	r0, sp, #208	; 0xd0
    1df8:	2100      	movs	r1, #0
    1dfa:	2280      	movs	r2, #128	; 0x80
    1dfc:	0092      	lsls	r2, r2, #2
    1dfe:	4bd3      	ldr	r3, [pc, #844]	; (214c <STACK_SIZE+0x14c>)
    1e00:	4798      	blx	r3
			sprintf( eachKeyBuffer, "<tr><td align=\"right\">%s</td><td align=\"left\"><input type=\"text\" name=\"%s\" size=\"64\"></td></tr>",
    1e02:	1c20      	adds	r0, r4, #0
    1e04:	47b0      	blx	r6
    1e06:	1c05      	adds	r5, r0, #0
    1e08:	1c20      	adds	r0, r4, #0
    1e0a:	47b8      	blx	r7
    1e0c:	1c03      	adds	r3, r0, #0
    1e0e:	a834      	add	r0, sp, #208	; 0xd0
    1e10:	49cf      	ldr	r1, [pc, #828]	; (2150 <STACK_SIZE+0x150>)
    1e12:	1c2a      	adds	r2, r5, #0
    1e14:	4dcf      	ldr	r5, [pc, #828]	; (2154 <STACK_SIZE+0x154>)
    1e16:	47a8      	blx	r5
				fluffy_device_config_get_label( i ), fluffy_device_config_get_key( i ) );
			addKeysSize += strlen( eachKeyBuffer );
    1e18:	a834      	add	r0, sp, #208	; 0xd0
    1e1a:	4bcf      	ldr	r3, [pc, #828]	; (2158 <STACK_SIZE+0x158>)
    1e1c:	4798      	blx	r3
    1e1e:	4481      	add	r9, r0
		gSentLength = 0;

		int OriginalProvisionFileSize = 0;
		int addKeysSize = 0;

		for( int i = 0; i < fluffy_device_config_get_count(); i++ )
    1e20:	3401      	adds	r4, #1
    1e22:	47c0      	blx	r8
    1e24:	4284      	cmp	r4, r0
    1e26:	dbdc      	blt.n	1de2 <http_process_ap_recv_data+0x4e>
    1e28:	464b      	mov	r3, r9
    1e2a:	9302      	str	r3, [sp, #8]
    1e2c:	4ecb      	ldr	r6, [pc, #812]	; (215c <STACK_SIZE+0x15c>)
    1e2e:	4bcc      	ldr	r3, [pc, #816]	; (2160 <STACK_SIZE+0x160>)
    1e30:	4698      	mov	r8, r3
    1e32:	44b0      	add	r8, r6
    1e34:	1c34      	adds	r4, r6, #0
    1e36:	2700      	movs	r7, #0
				fluffy_device_config_get_label( i ), fluffy_device_config_get_key( i ) );
			addKeysSize += strlen( eachKeyBuffer );
		}

		for(int i=0; i<HTML_DATA_LINES; i++) {
			OriginalProvisionFileSize += strlen(provisiongHtmlData[i]);
    1e38:	4dc7      	ldr	r5, [pc, #796]	; (2158 <STACK_SIZE+0x158>)
    1e3a:	1c20      	adds	r0, r4, #0
    1e3c:	47a8      	blx	r5
    1e3e:	19c7      	adds	r7, r0, r7
    1e40:	3464      	adds	r4, #100	; 0x64
			sprintf( eachKeyBuffer, "<tr><td align=\"right\">%s</td><td align=\"left\"><input type=\"text\" name=\"%s\" size=\"64\"></td></tr>",
				fluffy_device_config_get_label( i ), fluffy_device_config_get_key( i ) );
			addKeysSize += strlen( eachKeyBuffer );
		}

		for(int i=0; i<HTML_DATA_LINES; i++) {
    1e42:	4544      	cmp	r4, r8
    1e44:	d1f9      	bne.n	1e3a <http_process_ap_recv_data+0xa6>
			OriginalProvisionFileSize += strlen(provisiongHtmlData[i]);
		}

		printf( "http_process_ap_recv_data / Original Provisioning file size %d, addKeysSize %d\r\n",
    1e46:	48c7      	ldr	r0, [pc, #796]	; (2164 <STACK_SIZE+0x164>)
    1e48:	1c39      	adds	r1, r7, #0
    1e4a:	9c02      	ldr	r4, [sp, #8]
    1e4c:	1c22      	adds	r2, r4, #0
    1e4e:	4bb5      	ldr	r3, [pc, #724]	; (2124 <STACK_SIZE+0x124>)
    1e50:	4798      	blx	r3
			OriginalProvisionFileSize, addKeysSize );

		gHttpDataBuffer = malloc( OriginalProvisionFileSize + addKeysSize + 1 );
    1e52:	46a4      	mov	ip, r4
    1e54:	44bc      	add	ip, r7
    1e56:	4663      	mov	r3, ip
    1e58:	9303      	str	r3, [sp, #12]
    1e5a:	1c5c      	adds	r4, r3, #1
    1e5c:	1c20      	adds	r0, r4, #0
    1e5e:	4bc2      	ldr	r3, [pc, #776]	; (2168 <STACK_SIZE+0x168>)
    1e60:	4798      	blx	r3
    1e62:	4bc2      	ldr	r3, [pc, #776]	; (216c <STACK_SIZE+0x16c>)
    1e64:	6018      	str	r0, [r3, #0]
		memset( gHttpDataBuffer, 0, OriginalProvisionFileSize + addKeysSize + 1 );
    1e66:	2100      	movs	r1, #0
    1e68:	1c22      	adds	r2, r4, #0
    1e6a:	4bb8      	ldr	r3, [pc, #736]	; (214c <STACK_SIZE+0x14c>)
    1e6c:	4798      	blx	r3
			
		for(int i=0; i<HTML_DATA_LINES; i++) {
			int tmp = strlen(gHttpDataBuffer);
    1e6e:	4bbf      	ldr	r3, [pc, #764]	; (216c <STACK_SIZE+0x16c>)
    1e70:	469b      	mov	fp, r3
    1e72:	4bb9      	ldr	r3, [pc, #740]	; (2158 <STACK_SIZE+0x158>)
    1e74:	4699      	mov	r9, r3
			memcpy( gHttpDataBuffer + tmp, provisiongHtmlData[i], strlen(provisiongHtmlData[i]) );
    1e76:	4bbe      	ldr	r3, [pc, #760]	; (2170 <STACK_SIZE+0x170>)
    1e78:	469a      	mov	sl, r3

		gHttpDataBuffer = malloc( OriginalProvisionFileSize + addKeysSize + 1 );
		memset( gHttpDataBuffer, 0, OriginalProvisionFileSize + addKeysSize + 1 );
			
		for(int i=0; i<HTML_DATA_LINES; i++) {
			int tmp = strlen(gHttpDataBuffer);
    1e7a:	465b      	mov	r3, fp
    1e7c:	681d      	ldr	r5, [r3, #0]
    1e7e:	1c28      	adds	r0, r5, #0
    1e80:	47c8      	blx	r9
    1e82:	1c04      	adds	r4, r0, #0
			memcpy( gHttpDataBuffer + tmp, provisiongHtmlData[i], strlen(provisiongHtmlData[i]) );
    1e84:	1c30      	adds	r0, r6, #0
    1e86:	47c8      	blx	r9
    1e88:	1c02      	adds	r2, r0, #0
    1e8a:	1928      	adds	r0, r5, r4
    1e8c:	1c31      	adds	r1, r6, #0
    1e8e:	47d0      	blx	sl
    1e90:	3664      	adds	r6, #100	; 0x64
			OriginalProvisionFileSize, addKeysSize );

		gHttpDataBuffer = malloc( OriginalProvisionFileSize + addKeysSize + 1 );
		memset( gHttpDataBuffer, 0, OriginalProvisionFileSize + addKeysSize + 1 );
			
		for(int i=0; i<HTML_DATA_LINES; i++) {
    1e92:	4546      	cmp	r6, r8
    1e94:	d1f1      	bne.n	1e7a <http_process_ap_recv_data+0xe6>
			int tmp = strlen(gHttpDataBuffer);
			memcpy( gHttpDataBuffer + tmp, provisiongHtmlData[i], strlen(provisiongHtmlData[i]) );
		}
			
		if( addKeysSize )
    1e96:	9b02      	ldr	r3, [sp, #8]
    1e98:	2b00      	cmp	r3, #0
    1e9a:	d04f      	beq.n	1f3c <http_process_ap_recv_data+0x1a8>
		{
			char* pTemp = NULL;

			pTemp = (char*)m2m_strstr( (uint8*)gHttpDataBuffer, (uint8*)"<!-- additional keys go here -->" );
    1e9c:	4bb3      	ldr	r3, [pc, #716]	; (216c <STACK_SIZE+0x16c>)
    1e9e:	6818      	ldr	r0, [r3, #0]
    1ea0:	49b4      	ldr	r1, [pc, #720]	; (2174 <STACK_SIZE+0x174>)
    1ea2:	4bb5      	ldr	r3, [pc, #724]	; (2178 <STACK_SIZE+0x178>)
    1ea4:	4798      	blx	r3
    1ea6:	1e06      	subs	r6, r0, #0
			if( pTemp )
    1ea8:	d045      	beq.n	1f36 <http_process_ap_recv_data+0x1a2>
			{
				int rearDataLength = OriginalProvisionFileSize - ( pTemp - gHttpDataBuffer );						
    1eaa:	4bb0      	ldr	r3, [pc, #704]	; (216c <STACK_SIZE+0x16c>)
    1eac:	681b      	ldr	r3, [r3, #0]
    1eae:	1a1b      	subs	r3, r3, r0
    1eb0:	469a      	mov	sl, r3
    1eb2:	44ba      	add	sl, r7
				char* rearData = malloc( rearDataLength + 1 );
    1eb4:	4653      	mov	r3, sl
    1eb6:	1c58      	adds	r0, r3, #1
    1eb8:	4bab      	ldr	r3, [pc, #684]	; (2168 <STACK_SIZE+0x168>)
    1eba:	4798      	blx	r3
    1ebc:	1c04      	adds	r4, r0, #0
    1ebe:	9002      	str	r0, [sp, #8]
				memcpy( rearData, pTemp, rearDataLength );
    1ec0:	1c31      	adds	r1, r6, #0
    1ec2:	4652      	mov	r2, sl
    1ec4:	4baa      	ldr	r3, [pc, #680]	; (2170 <STACK_SIZE+0x170>)
    1ec6:	4798      	blx	r3
				rearData[ rearDataLength ] = 0;
    1ec8:	2300      	movs	r3, #0
    1eca:	4651      	mov	r1, sl
    1ecc:	5463      	strb	r3, [r4, r1]

				printf( "http_process_ap_recv_data / rearData size %d\r\n", rearDataLength );
    1ece:	48ab      	ldr	r0, [pc, #684]	; (217c <STACK_SIZE+0x17c>)
    1ed0:	4b94      	ldr	r3, [pc, #592]	; (2124 <STACK_SIZE+0x124>)
    1ed2:	4798      	blx	r3

				for( int i = 0; i < fluffy_device_config_get_count(); i++ )
    1ed4:	2400      	movs	r4, #0
    1ed6:	4f99      	ldr	r7, [pc, #612]	; (213c <STACK_SIZE+0x13c>)
				{				
					char eachKeyBuffer[ 512 ] = {0,};
    1ed8:	4b9c      	ldr	r3, [pc, #624]	; (214c <STACK_SIZE+0x14c>)
    1eda:	4699      	mov	r9, r3
					sprintf( eachKeyBuffer, "<tr><td align=\"right\">%s</td><td align=\"left\"><input type=\"text\" name=\"%s\" size=\"64\"></td></tr>",
    1edc:	4b99      	ldr	r3, [pc, #612]	; (2144 <STACK_SIZE+0x144>)
    1ede:	4698      	mov	r8, r3
				memcpy( rearData, pTemp, rearDataLength );
				rearData[ rearDataLength ] = 0;

				printf( "http_process_ap_recv_data / rearData size %d\r\n", rearDataLength );

				for( int i = 0; i < fluffy_device_config_get_count(); i++ )
    1ee0:	e01c      	b.n	1f1c <http_process_ap_recv_data+0x188>
				{				
					char eachKeyBuffer[ 512 ] = {0,};
    1ee2:	a834      	add	r0, sp, #208	; 0xd0
    1ee4:	2100      	movs	r1, #0
    1ee6:	2280      	movs	r2, #128	; 0x80
    1ee8:	0092      	lsls	r2, r2, #2
    1eea:	47c8      	blx	r9
					sprintf( eachKeyBuffer, "<tr><td align=\"right\">%s</td><td align=\"left\"><input type=\"text\" name=\"%s\" size=\"64\"></td></tr>",
    1eec:	1c20      	adds	r0, r4, #0
    1eee:	47c0      	blx	r8
    1ef0:	1c05      	adds	r5, r0, #0
    1ef2:	1c20      	adds	r0, r4, #0
    1ef4:	4b92      	ldr	r3, [pc, #584]	; (2140 <STACK_SIZE+0x140>)
    1ef6:	4798      	blx	r3
    1ef8:	1c03      	adds	r3, r0, #0
    1efa:	a834      	add	r0, sp, #208	; 0xd0
    1efc:	4994      	ldr	r1, [pc, #592]	; (2150 <STACK_SIZE+0x150>)
    1efe:	1c2a      	adds	r2, r5, #0
    1f00:	4d94      	ldr	r5, [pc, #592]	; (2154 <STACK_SIZE+0x154>)
    1f02:	47a8      	blx	r5
						fluffy_device_config_get_label( i ), fluffy_device_config_get_key( i ) );
					memcpy( pTemp, eachKeyBuffer, strlen( eachKeyBuffer ) );
    1f04:	a834      	add	r0, sp, #208	; 0xd0
    1f06:	4d94      	ldr	r5, [pc, #592]	; (2158 <STACK_SIZE+0x158>)
    1f08:	47a8      	blx	r5
    1f0a:	1c02      	adds	r2, r0, #0
    1f0c:	1c30      	adds	r0, r6, #0
    1f0e:	a934      	add	r1, sp, #208	; 0xd0
    1f10:	4b97      	ldr	r3, [pc, #604]	; (2170 <STACK_SIZE+0x170>)
    1f12:	4798      	blx	r3
					pTemp += strlen( eachKeyBuffer );
    1f14:	a834      	add	r0, sp, #208	; 0xd0
    1f16:	47a8      	blx	r5
    1f18:	1836      	adds	r6, r6, r0
				memcpy( rearData, pTemp, rearDataLength );
				rearData[ rearDataLength ] = 0;

				printf( "http_process_ap_recv_data / rearData size %d\r\n", rearDataLength );

				for( int i = 0; i < fluffy_device_config_get_count(); i++ )
    1f1a:	3401      	adds	r4, #1
    1f1c:	47b8      	blx	r7
    1f1e:	4284      	cmp	r4, r0
    1f20:	dbdf      	blt.n	1ee2 <http_process_ap_recv_data+0x14e>
						fluffy_device_config_get_label( i ), fluffy_device_config_get_key( i ) );
					memcpy( pTemp, eachKeyBuffer, strlen( eachKeyBuffer ) );
					pTemp += strlen( eachKeyBuffer );
				}

				memcpy( pTemp, rearData, rearDataLength );
    1f22:	1c30      	adds	r0, r6, #0
    1f24:	9c02      	ldr	r4, [sp, #8]
    1f26:	1c21      	adds	r1, r4, #0
    1f28:	4652      	mov	r2, sl
    1f2a:	4b91      	ldr	r3, [pc, #580]	; (2170 <STACK_SIZE+0x170>)
    1f2c:	4798      	blx	r3

				free( rearData );
    1f2e:	1c20      	adds	r0, r4, #0
    1f30:	4b93      	ldr	r3, [pc, #588]	; (2180 <STACK_SIZE+0x180>)
    1f32:	4798      	blx	r3
    1f34:	e002      	b.n	1f3c <http_process_ap_recv_data+0x1a8>
				rearData = NULL;
			}
			else
			{
				printf( "http_process_ap_recv_data / <!-- additional keys go here --> not found Error !!!!!\r\n" );
    1f36:	4893      	ldr	r0, [pc, #588]	; (2184 <STACK_SIZE+0x184>)
    1f38:	4b7e      	ldr	r3, [pc, #504]	; (2134 <STACK_SIZE+0x134>)
    1f3a:	4798      	blx	r3
			}
		}

		gHttpDataBufferLength = OriginalProvisionFileSize + addKeysSize;
    1f3c:	4b92      	ldr	r3, [pc, #584]	; (2188 <STACK_SIZE+0x188>)
    1f3e:	9d03      	ldr	r5, [sp, #12]
    1f40:	601d      	str	r5, [r3, #0]

		memset( responseDataBuffer, 0, RESP_BUFFER_MAX_SIZE );
    1f42:	4c92      	ldr	r4, [pc, #584]	; (218c <STACK_SIZE+0x18c>)
    1f44:	1c20      	adds	r0, r4, #0
    1f46:	2100      	movs	r1, #0
    1f48:	2280      	movs	r2, #128	; 0x80
    1f4a:	0092      	lsls	r2, r2, #2
    1f4c:	4b7f      	ldr	r3, [pc, #508]	; (214c <STACK_SIZE+0x14c>)
    1f4e:	4798      	blx	r3
		sprintf( responseDataBuffer, "HTTP/1.1 200 OK\r\nContent-Length: %d\r\nContent-Type: text/html\r\n\r\n",
    1f50:	1c20      	adds	r0, r4, #0
    1f52:	498f      	ldr	r1, [pc, #572]	; (2190 <STACK_SIZE+0x190>)
    1f54:	1c2a      	adds	r2, r5, #0
    1f56:	4b7f      	ldr	r3, [pc, #508]	; (2154 <STACK_SIZE+0x154>)
    1f58:	4798      	blx	r3
			OriginalProvisionFileSize + addKeysSize );			
		fluffy_trans_socket_send_data_for_response(socket, responseDataBuffer);
    1f5a:	9801      	ldr	r0, [sp, #4]
    1f5c:	1c21      	adds	r1, r4, #0
    1f5e:	4b8d      	ldr	r3, [pc, #564]	; (2194 <STACK_SIZE+0x194>)
    1f60:	4798      	blx	r3

		return;
    1f62:	e23c      	b.n	23de <STACK_SIZE+0x3de>
	}
	else if( NULL == payload && 0 == payloadSize && 0 == remainingSize && gHttpDataBufferLength )
    1f64:	2c00      	cmp	r4, #0
    1f66:	d145      	bne.n	1ff4 <http_process_ap_recv_data+0x260>
    1f68:	1c2b      	adds	r3, r5, #0
    1f6a:	4333      	orrs	r3, r6
    1f6c:	d142      	bne.n	1ff4 <http_process_ap_recv_data+0x260>
    1f6e:	4b86      	ldr	r3, [pc, #536]	; (2188 <STACK_SIZE+0x188>)
    1f70:	6819      	ldr	r1, [r3, #0]
    1f72:	2900      	cmp	r1, #0
    1f74:	d03e      	beq.n	1ff4 <http_process_ap_recv_data+0x260>
	{
		printf( "http_process_ap_recv_data / Http Provisioning entity / fileSize : %d / gSentLength : %d\r\n",
    1f76:	4c70      	ldr	r4, [pc, #448]	; (2138 <STACK_SIZE+0x138>)
    1f78:	4887      	ldr	r0, [pc, #540]	; (2198 <STACK_SIZE+0x198>)
    1f7a:	6822      	ldr	r2, [r4, #0]
    1f7c:	4b69      	ldr	r3, [pc, #420]	; (2124 <STACK_SIZE+0x124>)
    1f7e:	4798      	blx	r3
			gHttpDataBufferLength, gSentLength );

		if( gSentLength < gHttpDataBufferLength )
    1f80:	6824      	ldr	r4, [r4, #0]
    1f82:	4b81      	ldr	r3, [pc, #516]	; (2188 <STACK_SIZE+0x188>)
    1f84:	681d      	ldr	r5, [r3, #0]
    1f86:	42ac      	cmp	r4, r5
    1f88:	da28      	bge.n	1fdc <http_process_ap_recv_data+0x248>
		{
			memset( responseDataBuffer, 0, RESP_BUFFER_MAX_SIZE );
    1f8a:	4880      	ldr	r0, [pc, #512]	; (218c <STACK_SIZE+0x18c>)
    1f8c:	2100      	movs	r1, #0
    1f8e:	2280      	movs	r2, #128	; 0x80
    1f90:	0092      	lsls	r2, r2, #2
    1f92:	4b6e      	ldr	r3, [pc, #440]	; (214c <STACK_SIZE+0x14c>)
    1f94:	4798      	blx	r3
			
			if( RESP_BUFFER_MAX_SIZE > gHttpDataBufferLength - gSentLength )
    1f96:	1b2a      	subs	r2, r5, r4
    1f98:	4b80      	ldr	r3, [pc, #512]	; (219c <STACK_SIZE+0x19c>)
    1f9a:	429a      	cmp	r2, r3
    1f9c:	dc08      	bgt.n	1fb0 <http_process_ap_recv_data+0x21c>
			{
				memcpy( responseDataBuffer, &gHttpDataBuffer[ gSentLength ], gHttpDataBufferLength - gSentLength );
    1f9e:	4b73      	ldr	r3, [pc, #460]	; (216c <STACK_SIZE+0x16c>)
    1fa0:	6819      	ldr	r1, [r3, #0]
    1fa2:	1909      	adds	r1, r1, r4
    1fa4:	4879      	ldr	r0, [pc, #484]	; (218c <STACK_SIZE+0x18c>)
    1fa6:	4b72      	ldr	r3, [pc, #456]	; (2170 <STACK_SIZE+0x170>)
    1fa8:	4798      	blx	r3
				gSentLength += gHttpDataBufferLength - gSentLength;
    1faa:	4b63      	ldr	r3, [pc, #396]	; (2138 <STACK_SIZE+0x138>)
    1fac:	601d      	str	r5, [r3, #0]
    1fae:	e00b      	b.n	1fc8 <http_process_ap_recv_data+0x234>
			}
			else
			{
				memcpy( responseDataBuffer, &gHttpDataBuffer[ gSentLength ], RESP_BUFFER_MAX_SIZE - 1 );
    1fb0:	4b6e      	ldr	r3, [pc, #440]	; (216c <STACK_SIZE+0x16c>)
    1fb2:	6819      	ldr	r1, [r3, #0]
    1fb4:	1909      	adds	r1, r1, r4
    1fb6:	4875      	ldr	r0, [pc, #468]	; (218c <STACK_SIZE+0x18c>)
    1fb8:	4a78      	ldr	r2, [pc, #480]	; (219c <STACK_SIZE+0x19c>)
    1fba:	4b6d      	ldr	r3, [pc, #436]	; (2170 <STACK_SIZE+0x170>)
    1fbc:	4798      	blx	r3
				gSentLength += RESP_BUFFER_MAX_SIZE - 1;
    1fbe:	4b77      	ldr	r3, [pc, #476]	; (219c <STACK_SIZE+0x19c>)
    1fc0:	469c      	mov	ip, r3
    1fc2:	4464      	add	r4, ip
    1fc4:	4b5c      	ldr	r3, [pc, #368]	; (2138 <STACK_SIZE+0x138>)
    1fc6:	601c      	str	r4, [r3, #0]
			}
			
			fluffy_trans_socket_send_data_for_response(socket, responseDataBuffer);
    1fc8:	9801      	ldr	r0, [sp, #4]
    1fca:	4970      	ldr	r1, [pc, #448]	; (218c <STACK_SIZE+0x18c>)
    1fcc:	4b71      	ldr	r3, [pc, #452]	; (2194 <STACK_SIZE+0x194>)
    1fce:	4798      	blx	r3

			printf( "http_process_ap_recv_data / Http Provisioning entity / gSentLength : %d\r\n", gSentLength );
    1fd0:	4b59      	ldr	r3, [pc, #356]	; (2138 <STACK_SIZE+0x138>)
    1fd2:	6819      	ldr	r1, [r3, #0]
    1fd4:	4872      	ldr	r0, [pc, #456]	; (21a0 <STACK_SIZE+0x1a0>)
    1fd6:	4b53      	ldr	r3, [pc, #332]	; (2124 <STACK_SIZE+0x124>)
    1fd8:	4798      	blx	r3
    1fda:	e200      	b.n	23de <STACK_SIZE+0x3de>
		}
		else
		{
			printf( "http_process_ap_recv_data / Http Provisioning entity / gSentLength : %d, gHttpDataBufferLength %d\r\n", gSentLength, gHttpDataBufferLength );
    1fdc:	4871      	ldr	r0, [pc, #452]	; (21a4 <STACK_SIZE+0x1a4>)
    1fde:	1c21      	adds	r1, r4, #0
    1fe0:	1c2a      	adds	r2, r5, #0
    1fe2:	4b50      	ldr	r3, [pc, #320]	; (2124 <STACK_SIZE+0x124>)
    1fe4:	4798      	blx	r3

			free( gHttpDataBuffer );
    1fe6:	4c61      	ldr	r4, [pc, #388]	; (216c <STACK_SIZE+0x16c>)
    1fe8:	6820      	ldr	r0, [r4, #0]
    1fea:	4b65      	ldr	r3, [pc, #404]	; (2180 <STACK_SIZE+0x180>)
    1fec:	4798      	blx	r3
			gHttpDataBuffer = NULL;
    1fee:	2300      	movs	r3, #0
    1ff0:	6023      	str	r3, [r4, #0]
    1ff2:	e1f4      	b.n	23de <STACK_SIZE+0x3de>
		}

		return;
	}
	else if( 0 == strncmp( (char*)payload, LocalControl_FaviconProvision, strlen( LocalControl_FaviconProvision ) ) )
    1ff4:	1c20      	adds	r0, r4, #0
    1ff6:	496c      	ldr	r1, [pc, #432]	; (21a8 <STACK_SIZE+0x1a8>)
    1ff8:	2219      	movs	r2, #25
    1ffa:	4b4c      	ldr	r3, [pc, #304]	; (212c <STACK_SIZE+0x12c>)
    1ffc:	4798      	blx	r3
    1ffe:	2800      	cmp	r0, #0
    2000:	d110      	bne.n	2024 <STACK_SIZE+0x24>
	{
		memset( responseDataBuffer, 0, RESP_BUFFER_MAX_SIZE );
    2002:	4c62      	ldr	r4, [pc, #392]	; (218c <STACK_SIZE+0x18c>)
    2004:	1c20      	adds	r0, r4, #0
    2006:	2100      	movs	r1, #0
    2008:	2280      	movs	r2, #128	; 0x80
    200a:	0092      	lsls	r2, r2, #2
    200c:	4b4f      	ldr	r3, [pc, #316]	; (214c <STACK_SIZE+0x14c>)
    200e:	4798      	blx	r3
		sprintf( responseDataBuffer, "HTTP/1.1 404 Not Found\r\nContent-Length: 0\r\nConnection: Keep-Alive\r\n\r\n" );
    2010:	1c20      	adds	r0, r4, #0
    2012:	4966      	ldr	r1, [pc, #408]	; (21ac <STACK_SIZE+0x1ac>)
    2014:	2246      	movs	r2, #70	; 0x46
    2016:	4b56      	ldr	r3, [pc, #344]	; (2170 <STACK_SIZE+0x170>)
    2018:	4798      	blx	r3
		fluffy_trans_socket_send_data_for_response(socket, responseDataBuffer);
    201a:	9801      	ldr	r0, [sp, #4]
    201c:	1c21      	adds	r1, r4, #0
    201e:	4b5d      	ldr	r3, [pc, #372]	; (2194 <STACK_SIZE+0x194>)
    2020:	4798      	blx	r3
		
		return;
    2022:	e1dc      	b.n	23de <STACK_SIZE+0x3de>
	}


	if( 0 == strncmp( (char*)payload, LocalControl_HttpProvisionData, strlen( LocalControl_HttpProvisionData ) ) )
    2024:	1c20      	adds	r0, r4, #0
    2026:	4962      	ldr	r1, [pc, #392]	; (21b0 <STACK_SIZE+0x1b0>)
    2028:	2204      	movs	r2, #4
    202a:	4b40      	ldr	r3, [pc, #256]	; (212c <STACK_SIZE+0x12c>)
    202c:	4798      	blx	r3
    202e:	2800      	cmp	r0, #0
    2030:	d12e      	bne.n	2090 <STACK_SIZE+0x90>
	{
		if( 0 < remainingSize )
    2032:	2e00      	cmp	r6, #0
    2034:	d016      	beq.n	2064 <STACK_SIZE+0x64>
		{
			gHttpProvisionPacket = malloc( payloadSize + remainingSize + 1 );
    2036:	19ae      	adds	r6, r5, r6
    2038:	3601      	adds	r6, #1
    203a:	1c30      	adds	r0, r6, #0
    203c:	4b4a      	ldr	r3, [pc, #296]	; (2168 <STACK_SIZE+0x168>)
    203e:	4798      	blx	r3
    2040:	1c07      	adds	r7, r0, #0
    2042:	4b5c      	ldr	r3, [pc, #368]	; (21b4 <STACK_SIZE+0x1b4>)
    2044:	6018      	str	r0, [r3, #0]
			memset( gHttpProvisionPacket, 0, payloadSize + remainingSize + 1 );
    2046:	2100      	movs	r1, #0
    2048:	1c32      	adds	r2, r6, #0
    204a:	4b40      	ldr	r3, [pc, #256]	; (214c <STACK_SIZE+0x14c>)
    204c:	4798      	blx	r3
			memcpy( gHttpProvisionPacket, payload, payloadSize );
    204e:	1c38      	adds	r0, r7, #0
    2050:	1c21      	adds	r1, r4, #0
    2052:	1c2a      	adds	r2, r5, #0
    2054:	4b46      	ldr	r3, [pc, #280]	; (2170 <STACK_SIZE+0x170>)
    2056:	4798      	blx	r3
			gHttpProvisionPacketIndex = payloadSize;
    2058:	4b57      	ldr	r3, [pc, #348]	; (21b8 <STACK_SIZE+0x1b8>)
    205a:	601d      	str	r5, [r3, #0]
			gHttpProvisionPacketCompletion = false;
    205c:	2200      	movs	r2, #0
    205e:	4b57      	ldr	r3, [pc, #348]	; (21bc <STACK_SIZE+0x1bc>)
    2060:	601a      	str	r2, [r3, #0]
			return;
    2062:	e1bc      	b.n	23de <STACK_SIZE+0x3de>
		}
		else
		{
			gHttpProvisionPacket = malloc( payloadSize + 1 );
    2064:	1c6f      	adds	r7, r5, #1
    2066:	1c38      	adds	r0, r7, #0
    2068:	4b3f      	ldr	r3, [pc, #252]	; (2168 <STACK_SIZE+0x168>)
    206a:	4798      	blx	r3
    206c:	1c06      	adds	r6, r0, #0
    206e:	4b51      	ldr	r3, [pc, #324]	; (21b4 <STACK_SIZE+0x1b4>)
    2070:	6018      	str	r0, [r3, #0]
			memset( gHttpProvisionPacket, 0, payloadSize + 1 );
    2072:	2100      	movs	r1, #0
    2074:	1c3a      	adds	r2, r7, #0
    2076:	4b35      	ldr	r3, [pc, #212]	; (214c <STACK_SIZE+0x14c>)
    2078:	4798      	blx	r3
			memcpy( gHttpProvisionPacket, payload, payloadSize );
    207a:	1c30      	adds	r0, r6, #0
    207c:	1c21      	adds	r1, r4, #0
    207e:	1c2a      	adds	r2, r5, #0
    2080:	4b3b      	ldr	r3, [pc, #236]	; (2170 <STACK_SIZE+0x170>)
    2082:	4798      	blx	r3
			gHttpProvisionPacketIndex = payloadSize;
    2084:	4b4c      	ldr	r3, [pc, #304]	; (21b8 <STACK_SIZE+0x1b8>)
    2086:	601d      	str	r5, [r3, #0]
			gHttpProvisionPacketCompletion = true;
    2088:	2201      	movs	r2, #1
    208a:	4b4c      	ldr	r3, [pc, #304]	; (21bc <STACK_SIZE+0x1bc>)
    208c:	601a      	str	r2, [r3, #0]
    208e:	e1a2      	b.n	23d6 <STACK_SIZE+0x3d6>
		}
	}
	else if( gHttpProvisionPacket )
    2090:	4b48      	ldr	r3, [pc, #288]	; (21b4 <STACK_SIZE+0x1b4>)
    2092:	6818      	ldr	r0, [r3, #0]
    2094:	2800      	cmp	r0, #0
    2096:	d100      	bne.n	209a <STACK_SIZE+0x9a>
    2098:	e1a1      	b.n	23de <STACK_SIZE+0x3de>
	{
		if( 0 < remainingSize )
    209a:	2e00      	cmp	r6, #0
    209c:	d00f      	beq.n	20be <STACK_SIZE+0xbe>
		{
			memcpy( gHttpProvisionPacket + gHttpProvisionPacketIndex, payload, payloadSize );
    209e:	4e46      	ldr	r6, [pc, #280]	; (21b8 <STACK_SIZE+0x1b8>)
    20a0:	6833      	ldr	r3, [r6, #0]
    20a2:	469c      	mov	ip, r3
    20a4:	4460      	add	r0, ip
    20a6:	1c21      	adds	r1, r4, #0
    20a8:	1c2a      	adds	r2, r5, #0
    20aa:	4b31      	ldr	r3, [pc, #196]	; (2170 <STACK_SIZE+0x170>)
    20ac:	4798      	blx	r3
			gHttpProvisionPacketIndex += payloadSize;
    20ae:	6833      	ldr	r3, [r6, #0]
    20b0:	469c      	mov	ip, r3
    20b2:	4465      	add	r5, ip
    20b4:	6035      	str	r5, [r6, #0]
			gHttpProvisionPacketCompletion = false;
    20b6:	2200      	movs	r2, #0
    20b8:	4b40      	ldr	r3, [pc, #256]	; (21bc <STACK_SIZE+0x1bc>)
    20ba:	601a      	str	r2, [r3, #0]
			return;
    20bc:	e18f      	b.n	23de <STACK_SIZE+0x3de>
		}
		else
		{
			memcpy( gHttpProvisionPacket + gHttpProvisionPacketIndex, payload, payloadSize );
    20be:	4e3e      	ldr	r6, [pc, #248]	; (21b8 <STACK_SIZE+0x1b8>)
    20c0:	6833      	ldr	r3, [r6, #0]
    20c2:	469c      	mov	ip, r3
    20c4:	4460      	add	r0, ip
    20c6:	1c21      	adds	r1, r4, #0
    20c8:	1c2a      	adds	r2, r5, #0
    20ca:	4b29      	ldr	r3, [pc, #164]	; (2170 <STACK_SIZE+0x170>)
    20cc:	4798      	blx	r3
			gHttpProvisionPacketIndex += payloadSize;
    20ce:	6833      	ldr	r3, [r6, #0]
    20d0:	469c      	mov	ip, r3
    20d2:	4465      	add	r5, ip
    20d4:	6035      	str	r5, [r6, #0]
			gHttpProvisionPacketCompletion = true;
    20d6:	2201      	movs	r2, #1
    20d8:	4b38      	ldr	r3, [pc, #224]	; (21bc <STACK_SIZE+0x1bc>)
    20da:	601a      	str	r2, [r3, #0]
    20dc:	e17b      	b.n	23d6 <STACK_SIZE+0x3d6>
		int nContentLength = 0;
		
		pTemp = m2m_strstr( (uint8*)gHttpProvisionPacket, (uint8*)"Content-Length: " );
		if( !pTemp ) 
		{
			printf( "http_process_ap_recv_data / Content-Length is 0 Error !!!!!\r\n" );
    20de:	4838      	ldr	r0, [pc, #224]	; (21c0 <STACK_SIZE+0x1c0>)
    20e0:	4b14      	ldr	r3, [pc, #80]	; (2134 <STACK_SIZE+0x134>)
    20e2:	4798      	blx	r3
			memset( responseDataBuffer, 0, RESP_BUFFER_MAX_SIZE );
    20e4:	4c29      	ldr	r4, [pc, #164]	; (218c <STACK_SIZE+0x18c>)
    20e6:	1c20      	adds	r0, r4, #0
    20e8:	2100      	movs	r1, #0
    20ea:	2280      	movs	r2, #128	; 0x80
    20ec:	0092      	lsls	r2, r2, #2
    20ee:	4b17      	ldr	r3, [pc, #92]	; (214c <STACK_SIZE+0x14c>)
    20f0:	4798      	blx	r3
			sprintf( responseDataBuffer, "HTTP/1.1 400 Bad Request\r\nContent-Length: 0\r\nConnection: Keep-Alive\r\n\r\n" );
    20f2:	1c20      	adds	r0, r4, #0
    20f4:	4933      	ldr	r1, [pc, #204]	; (21c4 <STACK_SIZE+0x1c4>)
    20f6:	2248      	movs	r2, #72	; 0x48
    20f8:	4b1d      	ldr	r3, [pc, #116]	; (2170 <STACK_SIZE+0x170>)
    20fa:	4798      	blx	r3
			fluffy_trans_socket_send_data_for_response(socket, responseDataBuffer);
    20fc:	9801      	ldr	r0, [sp, #4]
    20fe:	1c21      	adds	r1, r4, #0
    2100:	4b24      	ldr	r3, [pc, #144]	; (2194 <STACK_SIZE+0x194>)
    2102:	4798      	blx	r3

			free( gHttpProvisionPacket );
    2104:	4c2b      	ldr	r4, [pc, #172]	; (21b4 <STACK_SIZE+0x1b4>)
    2106:	6820      	ldr	r0, [r4, #0]
    2108:	4b1d      	ldr	r3, [pc, #116]	; (2180 <STACK_SIZE+0x180>)
    210a:	4798      	blx	r3
			gHttpProvisionPacket = NULL;
    210c:	2300      	movs	r3, #0
    210e:	6023      	str	r3, [r4, #0]
			gHttpProvisionPacketIndex = 0;
    2110:	4a29      	ldr	r2, [pc, #164]	; (21b8 <STACK_SIZE+0x1b8>)
    2112:	6013      	str	r3, [r2, #0]
			gHttpProvisionPacketCompletion = false;
    2114:	4a29      	ldr	r2, [pc, #164]	; (21bc <STACK_SIZE+0x1bc>)
    2116:	6013      	str	r3, [r2, #0]
			return;
    2118:	e161      	b.n	23de <STACK_SIZE+0x3de>
    211a:	46c0      	nop			; (mov r8, r8)
    211c:	fffffd2c 	.word	0xfffffd2c
    2120:	0000eb4c 	.word	0x0000eb4c
    2124:	0000c7a9 	.word	0x0000c7a9
    2128:	0000eb98 	.word	0x0000eb98
    212c:	0000cdf3 	.word	0x0000cdf3
    2130:	0000eba8 	.word	0x0000eba8
    2134:	0000c8c9 	.word	0x0000c8c9
    2138:	2000019c 	.word	0x2000019c
    213c:	00001c31 	.word	0x00001c31
    2140:	00001c15 	.word	0x00001c15
    2144:	00001c21 	.word	0x00001c21
    2148:	0000ebd8 	.word	0x0000ebd8
    214c:	0000c0e1 	.word	0x0000c0e1
    2150:	0000ec00 	.word	0x0000ec00
    2154:	0000c901 	.word	0x0000c901
    2158:	0000cde5 	.word	0x0000cde5
    215c:	0000f0d4 	.word	0x0000f0d4
    2160:	00000e74 	.word	0x00000e74
    2164:	0000ec60 	.word	0x0000ec60
    2168:	0000c069 	.word	0x0000c069
    216c:	20000194 	.word	0x20000194
    2170:	0000c0a7 	.word	0x0000c0a7
    2174:	0000ecb4 	.word	0x0000ecb4
    2178:	00004ba9 	.word	0x00004ba9
    217c:	0000ecd8 	.word	0x0000ecd8
    2180:	0000c07d 	.word	0x0000c07d
    2184:	0000ed08 	.word	0x0000ed08
    2188:	20000190 	.word	0x20000190
    218c:	200001a8 	.word	0x200001a8
    2190:	0000ed5c 	.word	0x0000ed5c
    2194:	00002b6d 	.word	0x00002b6d
    2198:	0000eda0 	.word	0x0000eda0
    219c:	000001ff 	.word	0x000001ff
    21a0:	0000edfc 	.word	0x0000edfc
    21a4:	0000ee48 	.word	0x0000ee48
    21a8:	0000eeac 	.word	0x0000eeac
    21ac:	0000eec8 	.word	0x0000eec8
    21b0:	0000ef10 	.word	0x0000ef10
    21b4:	200001a0 	.word	0x200001a0
    21b8:	200001a4 	.word	0x200001a4
    21bc:	20000198 	.word	0x20000198
    21c0:	0000ef18 	.word	0x0000ef18
    21c4:	0000ef58 	.word	0x0000ef58
		}
		
		pTemp += 16;
    21c8:	3010      	adds	r0, #16
		nContentLength = atoi( (char*)pTemp );
    21ca:	4b89      	ldr	r3, [pc, #548]	; (23f0 <STACK_SIZE+0x3f0>)
    21cc:	4798      	blx	r3
    21ce:	1c04      	adds	r4, r0, #0
		printf( "http_process_ap_recv_data / Content-Length : %d\r\n", nContentLength );
    21d0:	4888      	ldr	r0, [pc, #544]	; (23f4 <STACK_SIZE+0x3f4>)
    21d2:	1c21      	adds	r1, r4, #0
    21d4:	4b88      	ldr	r3, [pc, #544]	; (23f8 <STACK_SIZE+0x3f8>)
    21d6:	4798      	blx	r3


		pTemp = m2m_strstr( (uint8*)gHttpProvisionPacket, (uint8*)"\r\n\r\n" );
    21d8:	4b88      	ldr	r3, [pc, #544]	; (23fc <STACK_SIZE+0x3fc>)
    21da:	6818      	ldr	r0, [r3, #0]
    21dc:	4988      	ldr	r1, [pc, #544]	; (2400 <STACK_SIZE+0x400>)
    21de:	4b89      	ldr	r3, [pc, #548]	; (2404 <STACK_SIZE+0x404>)
    21e0:	4798      	blx	r3
		if( pTemp == NULL )
    21e2:	2800      	cmp	r0, #0
    21e4:	d103      	bne.n	21ee <STACK_SIZE+0x1ee>
		{
			gHttpProvisionPacketCompletion = false;
    21e6:	2200      	movs	r2, #0
    21e8:	4b87      	ldr	r3, [pc, #540]	; (2408 <STACK_SIZE+0x408>)
    21ea:	601a      	str	r2, [r3, #0]
			return;
    21ec:	e0f7      	b.n	23de <STACK_SIZE+0x3de>
		}
		else
		{
			if( nContentLength != ( gHttpProvisionPacketIndex - ( pTemp + strlen( "\r\n\r\n" ) - (uint8*)gHttpProvisionPacket ) ) )
    21ee:	4b83      	ldr	r3, [pc, #524]	; (23fc <STACK_SIZE+0x3fc>)
    21f0:	681d      	ldr	r5, [r3, #0]
    21f2:	3004      	adds	r0, #4
    21f4:	1a28      	subs	r0, r5, r0
    21f6:	4b85      	ldr	r3, [pc, #532]	; (240c <STACK_SIZE+0x40c>)
    21f8:	681b      	ldr	r3, [r3, #0]
    21fa:	18c0      	adds	r0, r0, r3
    21fc:	42a0      	cmp	r0, r4
    21fe:	d003      	beq.n	2208 <STACK_SIZE+0x208>
			{
				gHttpProvisionPacketCompletion = false;
    2200:	2200      	movs	r2, #0
    2202:	4b81      	ldr	r3, [pc, #516]	; (2408 <STACK_SIZE+0x408>)
    2204:	601a      	str	r2, [r3, #0]
				return;
    2206:	e0ea      	b.n	23de <STACK_SIZE+0x3de>
			}
		}

		char SSID[ 64 ] = { 0, };
    2208:	a804      	add	r0, sp, #16
    220a:	2100      	movs	r1, #0
    220c:	2240      	movs	r2, #64	; 0x40
    220e:	4c80      	ldr	r4, [pc, #512]	; (2410 <STACK_SIZE+0x410>)
    2210:	47a0      	blx	r4
		char PASSWORD[ 64 ] = { 0, };
    2212:	a814      	add	r0, sp, #80	; 0x50
    2214:	2100      	movs	r1, #0
    2216:	2240      	movs	r2, #64	; 0x40
    2218:	47a0      	blx	r4
		char SECURITY[ 64 ] = { 0, };
    221a:	a824      	add	r0, sp, #144	; 0x90
    221c:	2100      	movs	r1, #0
    221e:	2240      	movs	r2, #64	; 0x40
    2220:	47a0      	blx	r4
		int nSECURITY = 0;

		pTemp = m2m_strstr( (uint8*)gHttpProvisionPacket, (uint8*)"SSID" );
    2222:	1c28      	adds	r0, r5, #0
    2224:	497b      	ldr	r1, [pc, #492]	; (2414 <STACK_SIZE+0x414>)
    2226:	4b77      	ldr	r3, [pc, #476]	; (2404 <STACK_SIZE+0x404>)
    2228:	4798      	blx	r3
		if( pTemp ) 
    222a:	2800      	cmp	r0, #0
    222c:	d00a      	beq.n	2244 <STACK_SIZE+0x244>
		{
			int tempIndex = 0;
			pTemp += strlen( "SSID" ) + 1;
			while( *pTemp != '&' )
    222e:	7942      	ldrb	r2, [r0, #5]
    2230:	2a26      	cmp	r2, #38	; 0x26
    2232:	d007      	beq.n	2244 <STACK_SIZE+0x244>
    2234:	2300      	movs	r3, #0
			{
				SSID[ tempIndex ] = *pTemp;
    2236:	a904      	add	r1, sp, #16
    2238:	545a      	strb	r2, [r3, r1]
				tempIndex++;
    223a:	3301      	adds	r3, #1
    223c:	18c2      	adds	r2, r0, r3
		pTemp = m2m_strstr( (uint8*)gHttpProvisionPacket, (uint8*)"SSID" );
		if( pTemp ) 
		{
			int tempIndex = 0;
			pTemp += strlen( "SSID" ) + 1;
			while( *pTemp != '&' )
    223e:	7952      	ldrb	r2, [r2, #5]
    2240:	2a26      	cmp	r2, #38	; 0x26
    2242:	d1f8      	bne.n	2236 <STACK_SIZE+0x236>
				tempIndex++;
				pTemp++;
			}
		}

		pTemp = m2m_strstr( (uint8*)gHttpProvisionPacket, (uint8*)"PASSWORD" );
    2244:	4b6d      	ldr	r3, [pc, #436]	; (23fc <STACK_SIZE+0x3fc>)
    2246:	6818      	ldr	r0, [r3, #0]
    2248:	4973      	ldr	r1, [pc, #460]	; (2418 <STACK_SIZE+0x418>)
    224a:	4b6e      	ldr	r3, [pc, #440]	; (2404 <STACK_SIZE+0x404>)
    224c:	4798      	blx	r3
		if( pTemp ) 
    224e:	2800      	cmp	r0, #0
    2250:	d00a      	beq.n	2268 <STACK_SIZE+0x268>
		{
			int tempIndex = 0;
			pTemp += strlen( "PASSWORD" ) + 1;
			while( *pTemp != '&' )
    2252:	7a42      	ldrb	r2, [r0, #9]
    2254:	2a26      	cmp	r2, #38	; 0x26
    2256:	d007      	beq.n	2268 <STACK_SIZE+0x268>
    2258:	2300      	movs	r3, #0
			{
				PASSWORD[ tempIndex ] = *pTemp;
    225a:	a914      	add	r1, sp, #80	; 0x50
    225c:	545a      	strb	r2, [r3, r1]
				tempIndex++;
    225e:	3301      	adds	r3, #1
    2260:	18c2      	adds	r2, r0, r3
		pTemp = m2m_strstr( (uint8*)gHttpProvisionPacket, (uint8*)"PASSWORD" );
		if( pTemp ) 
		{
			int tempIndex = 0;
			pTemp += strlen( "PASSWORD" ) + 1;
			while( *pTemp != '&' )
    2262:	7a52      	ldrb	r2, [r2, #9]
    2264:	2a26      	cmp	r2, #38	; 0x26
    2266:	d1f8      	bne.n	225a <STACK_SIZE+0x25a>
				tempIndex++;
				pTemp++;
			}
		}

		pTemp = m2m_strstr( (uint8*)gHttpProvisionPacket, (uint8*)"SECURITY" );
    2268:	4b64      	ldr	r3, [pc, #400]	; (23fc <STACK_SIZE+0x3fc>)
    226a:	6818      	ldr	r0, [r3, #0]
    226c:	496b      	ldr	r1, [pc, #428]	; (241c <STACK_SIZE+0x41c>)
    226e:	4b65      	ldr	r3, [pc, #404]	; (2404 <STACK_SIZE+0x404>)
    2270:	4798      	blx	r3
		if( pTemp ) 
    2272:	2800      	cmp	r0, #0
    2274:	d027      	beq.n	22c6 <STACK_SIZE+0x2c6>
		{
			int tempIndex = 0;
			pTemp += strlen( "SECURITY" ) + 1;
			while( *pTemp != '&' )
    2276:	7a42      	ldrb	r2, [r0, #9]
    2278:	2a26      	cmp	r2, #38	; 0x26
    227a:	d007      	beq.n	228c <STACK_SIZE+0x28c>
    227c:	2300      	movs	r3, #0
			{
				SECURITY[ tempIndex ] = *pTemp;
    227e:	a924      	add	r1, sp, #144	; 0x90
    2280:	545a      	strb	r2, [r3, r1]
				tempIndex++;
    2282:	3301      	adds	r3, #1
    2284:	18c2      	adds	r2, r0, r3
		pTemp = m2m_strstr( (uint8*)gHttpProvisionPacket, (uint8*)"SECURITY" );
		if( pTemp ) 
		{
			int tempIndex = 0;
			pTemp += strlen( "SECURITY" ) + 1;
			while( *pTemp != '&' )
    2286:	7a52      	ldrb	r2, [r2, #9]
    2288:	2a26      	cmp	r2, #38	; 0x26
    228a:	d1f8      	bne.n	227e <STACK_SIZE+0x27e>
				tempIndex++;
				pTemp++;
			}

			//nSECURITY = atoi( SECURITY );
			if( 0 == strcmp( SECURITY, "none" ) )
    228c:	a824      	add	r0, sp, #144	; 0x90
    228e:	4964      	ldr	r1, [pc, #400]	; (2420 <STACK_SIZE+0x420>)
    2290:	4b64      	ldr	r3, [pc, #400]	; (2424 <STACK_SIZE+0x424>)
    2292:	4798      	blx	r3
				nSECURITY = 1; 	// M2M_WIFI_SEC_OPEN
    2294:	2601      	movs	r6, #1
				tempIndex++;
				pTemp++;
			}

			//nSECURITY = atoi( SECURITY );
			if( 0 == strcmp( SECURITY, "none" ) )
    2296:	2800      	cmp	r0, #0
    2298:	d016      	beq.n	22c8 <STACK_SIZE+0x2c8>
				nSECURITY = 1; 	// M2M_WIFI_SEC_OPEN
			else if( 0 == strcmp( SECURITY, "wpa_personal" ) )
    229a:	a824      	add	r0, sp, #144	; 0x90
    229c:	4962      	ldr	r1, [pc, #392]	; (2428 <STACK_SIZE+0x428>)
    229e:	4b61      	ldr	r3, [pc, #388]	; (2424 <STACK_SIZE+0x424>)
    22a0:	4798      	blx	r3
				nSECURITY = 2;	// M2M_WIFI_SEC_WPA_PSK
    22a2:	3601      	adds	r6, #1
			}

			//nSECURITY = atoi( SECURITY );
			if( 0 == strcmp( SECURITY, "none" ) )
				nSECURITY = 1; 	// M2M_WIFI_SEC_OPEN
			else if( 0 == strcmp( SECURITY, "wpa_personal" ) )
    22a4:	2800      	cmp	r0, #0
    22a6:	d00f      	beq.n	22c8 <STACK_SIZE+0x2c8>
				nSECURITY = 2;	// M2M_WIFI_SEC_WPA_PSK
			else if( 0 == strcmp( SECURITY, "wep" ) )
    22a8:	a824      	add	r0, sp, #144	; 0x90
    22aa:	4960      	ldr	r1, [pc, #384]	; (242c <STACK_SIZE+0x42c>)
    22ac:	4b5d      	ldr	r3, [pc, #372]	; (2424 <STACK_SIZE+0x424>)
    22ae:	4798      	blx	r3
				nSECURITY = 3;	// M2M_WIFI_SEC_WEP
    22b0:	3601      	adds	r6, #1
			//nSECURITY = atoi( SECURITY );
			if( 0 == strcmp( SECURITY, "none" ) )
				nSECURITY = 1; 	// M2M_WIFI_SEC_OPEN
			else if( 0 == strcmp( SECURITY, "wpa_personal" ) )
				nSECURITY = 2;	// M2M_WIFI_SEC_WPA_PSK
			else if( 0 == strcmp( SECURITY, "wep" ) )
    22b2:	2800      	cmp	r0, #0
    22b4:	d008      	beq.n	22c8 <STACK_SIZE+0x2c8>
				nSECURITY = 3;	// M2M_WIFI_SEC_WEP
			else if( 0 == strcmp( SECURITY, "wpa_enterprise" ) )
    22b6:	a824      	add	r0, sp, #144	; 0x90
    22b8:	495d      	ldr	r1, [pc, #372]	; (2430 <STACK_SIZE+0x430>)
    22ba:	4b5a      	ldr	r3, [pc, #360]	; (2424 <STACK_SIZE+0x424>)
    22bc:	4798      	blx	r3
				nSECURITY = 4;	// M2M_WIFI_SEC_802_1X
    22be:	4246      	negs	r6, r0
    22c0:	4146      	adcs	r6, r0
    22c2:	00b6      	lsls	r6, r6, #2
    22c4:	e000      	b.n	22c8 <STACK_SIZE+0x2c8>
		}

		char SSID[ 64 ] = { 0, };
		char PASSWORD[ 64 ] = { 0, };
		char SECURITY[ 64 ] = { 0, };
		int nSECURITY = 0;
    22c6:	2600      	movs	r6, #0

		// Must
		///////////////////////////////////////////////////////////////////////
		// Optional

		for( int i = 0; i < fluffy_device_config_get_count(); i++ )
    22c8:	2500      	movs	r5, #0
    22ca:	4f5a      	ldr	r7, [pc, #360]	; (2434 <STACK_SIZE+0x434>)
		{			
			uint8* pTemp = NULL;

			pTemp = m2m_strstr( (uint8*)gHttpProvisionPacket, (uint8*)fluffy_device_config_get_key( i ) );
    22cc:	4b4b      	ldr	r3, [pc, #300]	; (23fc <STACK_SIZE+0x3fc>)
    22ce:	4699      	mov	r9, r3
    22d0:	4b59      	ldr	r3, [pc, #356]	; (2438 <STACK_SIZE+0x438>)
    22d2:	4698      	mov	r8, r3

		// Must
		///////////////////////////////////////////////////////////////////////
		// Optional

		for( int i = 0; i < fluffy_device_config_get_count(); i++ )
    22d4:	e031      	b.n	233a <STACK_SIZE+0x33a>
		{			
			uint8* pTemp = NULL;

			pTemp = m2m_strstr( (uint8*)gHttpProvisionPacket, (uint8*)fluffy_device_config_get_key( i ) );
    22d6:	464b      	mov	r3, r9
    22d8:	681c      	ldr	r4, [r3, #0]
    22da:	1c28      	adds	r0, r5, #0
    22dc:	47c0      	blx	r8
    22de:	1c01      	adds	r1, r0, #0
    22e0:	1c20      	adds	r0, r4, #0
    22e2:	4b48      	ldr	r3, [pc, #288]	; (2404 <STACK_SIZE+0x404>)
    22e4:	4798      	blx	r3
    22e6:	1e04      	subs	r4, r0, #0
			if( pTemp ) 
    22e8:	d026      	beq.n	2338 <STACK_SIZE+0x338>
			{
				char tempBuffer[ 128 ] = { 0, };
    22ea:	a834      	add	r0, sp, #208	; 0xd0
    22ec:	2100      	movs	r1, #0
    22ee:	2280      	movs	r2, #128	; 0x80
    22f0:	4b47      	ldr	r3, [pc, #284]	; (2410 <STACK_SIZE+0x410>)
    22f2:	4798      	blx	r3
				int tempIndex = 0;
				pTemp += strlen( fluffy_device_config_get_key( i ) ) + 1;
    22f4:	1c28      	adds	r0, r5, #0
    22f6:	4b50      	ldr	r3, [pc, #320]	; (2438 <STACK_SIZE+0x438>)
    22f8:	4798      	blx	r3
    22fa:	4b50      	ldr	r3, [pc, #320]	; (243c <STACK_SIZE+0x43c>)
    22fc:	4798      	blx	r3
    22fe:	3001      	adds	r0, #1
    2300:	1823      	adds	r3, r4, r0

				while( *pTemp != '&' )
    2302:	781a      	ldrb	r2, [r3, #0]
    2304:	2a26      	cmp	r2, #38	; 0x26
    2306:	d017      	beq.n	2338 <STACK_SIZE+0x338>
				{
					if( pTemp >= &gHttpProvisionPacket[ gHttpProvisionPacketIndex ] )
    2308:	493c      	ldr	r1, [pc, #240]	; (23fc <STACK_SIZE+0x3fc>)
    230a:	680c      	ldr	r4, [r1, #0]
    230c:	493f      	ldr	r1, [pc, #252]	; (240c <STACK_SIZE+0x40c>)
    230e:	6809      	ldr	r1, [r1, #0]
    2310:	1864      	adds	r4, r4, r1
    2312:	42a3      	cmp	r3, r4
    2314:	d210      	bcs.n	2338 <STACK_SIZE+0x338>
    2316:	2100      	movs	r1, #0
    2318:	e001      	b.n	231e <STACK_SIZE+0x31e>
    231a:	42a3      	cmp	r3, r4
    231c:	d206      	bcs.n	232c <STACK_SIZE+0x32c>
					{
						break;
					}
					
					tempBuffer[ tempIndex ] = *pTemp;
    231e:	a834      	add	r0, sp, #208	; 0xd0
    2320:	540a      	strb	r2, [r1, r0]
					tempIndex++;
    2322:	3101      	adds	r1, #1
					pTemp++;
    2324:	3301      	adds	r3, #1
			{
				char tempBuffer[ 128 ] = { 0, };
				int tempIndex = 0;
				pTemp += strlen( fluffy_device_config_get_key( i ) ) + 1;

				while( *pTemp != '&' )
    2326:	781a      	ldrb	r2, [r3, #0]
    2328:	2a26      	cmp	r2, #38	; 0x26
    232a:	d1f6      	bne.n	231a <STACK_SIZE+0x31a>
					tempBuffer[ tempIndex ] = *pTemp;
					tempIndex++;
					pTemp++;
				}

				if( tempIndex )
    232c:	2900      	cmp	r1, #0
    232e:	d003      	beq.n	2338 <STACK_SIZE+0x338>
				{
					fluffy_device_config_set_value( i, tempBuffer );
    2330:	1c28      	adds	r0, r5, #0
    2332:	a934      	add	r1, sp, #208	; 0xd0
    2334:	4b42      	ldr	r3, [pc, #264]	; (2440 <STACK_SIZE+0x440>)
    2336:	4798      	blx	r3

		// Must
		///////////////////////////////////////////////////////////////////////
		// Optional

		for( int i = 0; i < fluffy_device_config_get_count(); i++ )
    2338:	3501      	adds	r5, #1
    233a:	47b8      	blx	r7
    233c:	4285      	cmp	r5, r0
    233e:	dbca      	blt.n	22d6 <STACK_SIZE+0x2d6>
					fluffy_device_config_set_value( i, tempBuffer );
				}
			}
		}

		memset( responseDataBuffer, 0, RESP_BUFFER_MAX_SIZE );
    2340:	4c40      	ldr	r4, [pc, #256]	; (2444 <STACK_SIZE+0x444>)
    2342:	1c20      	adds	r0, r4, #0
    2344:	2100      	movs	r1, #0
    2346:	2280      	movs	r2, #128	; 0x80
    2348:	0092      	lsls	r2, r2, #2
    234a:	4b31      	ldr	r3, [pc, #196]	; (2410 <STACK_SIZE+0x410>)
    234c:	4798      	blx	r3
		char tempBuffer[] = "HTTP/1.1 200 OK\r\nContent-Length: 29\r\nConnection: close\r\n\r\nProvision has been completed.\r\n";
    234e:	a834      	add	r0, sp, #208	; 0xd0
    2350:	493d      	ldr	r1, [pc, #244]	; (2448 <STACK_SIZE+0x448>)
    2352:	225a      	movs	r2, #90	; 0x5a
    2354:	4d3d      	ldr	r5, [pc, #244]	; (244c <STACK_SIZE+0x44c>)
    2356:	47a8      	blx	r5
		memcpy( responseDataBuffer, tempBuffer, sizeof( tempBuffer ) );
    2358:	1c20      	adds	r0, r4, #0
    235a:	a934      	add	r1, sp, #208	; 0xd0
    235c:	225a      	movs	r2, #90	; 0x5a
    235e:	47a8      	blx	r5
		fluffy_trans_socket_send_data_for_response(socket, responseDataBuffer);		
    2360:	9801      	ldr	r0, [sp, #4]
    2362:	1c21      	adds	r1, r4, #0
    2364:	4b3a      	ldr	r3, [pc, #232]	; (2450 <STACK_SIZE+0x450>)
    2366:	4798      	blx	r3

		printf( "http_process_ap_recv_data / %s, %s, %d\r\n", SSID, PASSWORD, nSECURITY );
    2368:	483a      	ldr	r0, [pc, #232]	; (2454 <STACK_SIZE+0x454>)
    236a:	a904      	add	r1, sp, #16
    236c:	aa14      	add	r2, sp, #80	; 0x50
    236e:	1c33      	adds	r3, r6, #0
    2370:	4c21      	ldr	r4, [pc, #132]	; (23f8 <STACK_SIZE+0x3f8>)
    2372:	47a0      	blx	r4

		for( int i = 0; i < fluffy_device_config_get_count(); i++ )
    2374:	2400      	movs	r4, #0
    2376:	4f2f      	ldr	r7, [pc, #188]	; (2434 <STACK_SIZE+0x434>)
		{
			printf( "http_process_ap_recv_data / %s, %s\r\n",
    2378:	4b2f      	ldr	r3, [pc, #188]	; (2438 <STACK_SIZE+0x438>)
    237a:	4699      	mov	r9, r3
    237c:	4d36      	ldr	r5, [pc, #216]	; (2458 <STACK_SIZE+0x458>)
    237e:	46b0      	mov	r8, r6
		memcpy( responseDataBuffer, tempBuffer, sizeof( tempBuffer ) );
		fluffy_trans_socket_send_data_for_response(socket, responseDataBuffer);		

		printf( "http_process_ap_recv_data / %s, %s, %d\r\n", SSID, PASSWORD, nSECURITY );

		for( int i = 0; i < fluffy_device_config_get_count(); i++ )
    2380:	e00a      	b.n	2398 <STACK_SIZE+0x398>
		{
			printf( "http_process_ap_recv_data / %s, %s\r\n",
    2382:	1c20      	adds	r0, r4, #0
    2384:	47c8      	blx	r9
    2386:	1c06      	adds	r6, r0, #0
    2388:	1c20      	adds	r0, r4, #0
    238a:	47a8      	blx	r5
    238c:	1c02      	adds	r2, r0, #0
    238e:	4833      	ldr	r0, [pc, #204]	; (245c <STACK_SIZE+0x45c>)
    2390:	1c31      	adds	r1, r6, #0
    2392:	4b19      	ldr	r3, [pc, #100]	; (23f8 <STACK_SIZE+0x3f8>)
    2394:	4798      	blx	r3
		memcpy( responseDataBuffer, tempBuffer, sizeof( tempBuffer ) );
		fluffy_trans_socket_send_data_for_response(socket, responseDataBuffer);		

		printf( "http_process_ap_recv_data / %s, %s, %d\r\n", SSID, PASSWORD, nSECURITY );

		for( int i = 0; i < fluffy_device_config_get_count(); i++ )
    2396:	3401      	adds	r4, #1
    2398:	47b8      	blx	r7
    239a:	4284      	cmp	r4, r0
    239c:	dbf1      	blt.n	2382 <STACK_SIZE+0x382>
    239e:	4646      	mov	r6, r8
			printf( "http_process_ap_recv_data / %s, %s\r\n",
				fluffy_device_config_get_key( i ), fluffy_device_config_get_value_by_index( i ) );
		}

#if 1		
		fluffy_set_home_ap_info(SSID, PASSWORD, nSECURITY, true);
    23a0:	b2f2      	uxtb	r2, r6
    23a2:	a804      	add	r0, sp, #16
    23a4:	a914      	add	r1, sp, #80	; 0x50
    23a6:	2301      	movs	r3, #1
    23a8:	4c2d      	ldr	r4, [pc, #180]	; (2460 <STACK_SIZE+0x460>)
    23aa:	47a0      	blx	r4
		fluffy_set_fluffy_info( true );		
    23ac:	2001      	movs	r0, #1
    23ae:	4b2d      	ldr	r3, [pc, #180]	; (2464 <STACK_SIZE+0x464>)
    23b0:	4798      	blx	r3
								(char*)"mkDeviceId",
								(char*)"mkName",
								false );
#endif								

		free( gHttpProvisionPacket );
    23b2:	4c12      	ldr	r4, [pc, #72]	; (23fc <STACK_SIZE+0x3fc>)
    23b4:	6820      	ldr	r0, [r4, #0]
    23b6:	4b2c      	ldr	r3, [pc, #176]	; (2468 <STACK_SIZE+0x468>)
    23b8:	4798      	blx	r3
		gHttpProvisionPacket = NULL;
    23ba:	2300      	movs	r3, #0
    23bc:	6023      	str	r3, [r4, #0]
		gHttpProvisionPacketIndex = 0;
    23be:	4a13      	ldr	r2, [pc, #76]	; (240c <STACK_SIZE+0x40c>)
    23c0:	6013      	str	r3, [r2, #0]
		gHttpProvisionPacketCompletion = false;
    23c2:	4a11      	ldr	r2, [pc, #68]	; (2408 <STACK_SIZE+0x408>)
    23c4:	6013      	str	r3, [r2, #0]

		return;
    23c6:	e00a      	b.n	23de <STACK_SIZE+0x3de>
	if( gHttpProvisionPacket && true == gHttpProvisionPacketCompletion )
	{
		uint8* pTemp = NULL;
		int nContentLength = 0;
		
		pTemp = m2m_strstr( (uint8*)gHttpProvisionPacket, (uint8*)"Content-Length: " );
    23c8:	4928      	ldr	r1, [pc, #160]	; (246c <STACK_SIZE+0x46c>)
    23ca:	4b0e      	ldr	r3, [pc, #56]	; (2404 <STACK_SIZE+0x404>)
    23cc:	4798      	blx	r3
		if( !pTemp ) 
    23ce:	2800      	cmp	r0, #0
    23d0:	d000      	beq.n	23d4 <STACK_SIZE+0x3d4>
    23d2:	e6f9      	b.n	21c8 <STACK_SIZE+0x1c8>
    23d4:	e683      	b.n	20de <STACK_SIZE+0xde>
			gHttpProvisionPacketIndex += payloadSize;
			gHttpProvisionPacketCompletion = true;
		}
	}

	if( gHttpProvisionPacket && true == gHttpProvisionPacketCompletion )
    23d6:	4b09      	ldr	r3, [pc, #36]	; (23fc <STACK_SIZE+0x3fc>)
    23d8:	6818      	ldr	r0, [r3, #0]
    23da:	2800      	cmp	r0, #0
    23dc:	d1f4      	bne.n	23c8 <STACK_SIZE+0x3c8>
		gHttpProvisionPacketIndex = 0;
		gHttpProvisionPacketCompletion = false;

		return;
	}
}
    23de:	23b5      	movs	r3, #181	; 0xb5
    23e0:	009b      	lsls	r3, r3, #2
    23e2:	449d      	add	sp, r3
    23e4:	bc3c      	pop	{r2, r3, r4, r5}
    23e6:	4690      	mov	r8, r2
    23e8:	4699      	mov	r9, r3
    23ea:	46a2      	mov	sl, r4
    23ec:	46ab      	mov	fp, r5
    23ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
    23f0:	0000c005 	.word	0x0000c005
    23f4:	0000efa0 	.word	0x0000efa0
    23f8:	0000c7a9 	.word	0x0000c7a9
    23fc:	200001a0 	.word	0x200001a0
    2400:	0000ed98 	.word	0x0000ed98
    2404:	00004ba9 	.word	0x00004ba9
    2408:	20000198 	.word	0x20000198
    240c:	200001a4 	.word	0x200001a4
    2410:	0000c0e1 	.word	0x0000c0e1
    2414:	0000efd4 	.word	0x0000efd4
    2418:	0000efdc 	.word	0x0000efdc
    241c:	0000efe8 	.word	0x0000efe8
    2420:	0000eff4 	.word	0x0000eff4
    2424:	0000ca31 	.word	0x0000ca31
    2428:	0000effc 	.word	0x0000effc
    242c:	0000f00c 	.word	0x0000f00c
    2430:	0000f010 	.word	0x0000f010
    2434:	00001c31 	.word	0x00001c31
    2438:	00001c15 	.word	0x00001c15
    243c:	0000cde5 	.word	0x0000cde5
    2440:	00001bc1 	.word	0x00001bc1
    2444:	200001a8 	.word	0x200001a8
    2448:	0000f04c 	.word	0x0000f04c
    244c:	0000c0a7 	.word	0x0000c0a7
    2450:	00002b6d 	.word	0x00002b6d
    2454:	0000f020 	.word	0x0000f020
    2458:	00001bb1 	.word	0x00001bb1
    245c:	0000ebd8 	.word	0x0000ebd8
    2460:	00001575 	.word	0x00001575
    2464:	000016d1 	.word	0x000016d1
    2468:	0000c07d 	.word	0x0000c07d
    246c:	0000e418 	.word	0x0000e418

00002470 <http_process_sta_recv_data>:

void http_process_sta_recv_data(uint8_t socket, uint8_t* payload, uint16_t payloadSize, uint16_t remainingSize)
{
    2470:	b510      	push	{r4, lr}
	printf( "http_process_sta_recv_data / Error !!!!!\r\n" );
    2472:	4808      	ldr	r0, [pc, #32]	; (2494 <http_process_sta_recv_data+0x24>)
    2474:	4b08      	ldr	r3, [pc, #32]	; (2498 <http_process_sta_recv_data+0x28>)
    2476:	4798      	blx	r3

	memset( responseDataBuffer, 0, RESP_BUFFER_MAX_SIZE );
    2478:	4c08      	ldr	r4, [pc, #32]	; (249c <http_process_sta_recv_data+0x2c>)
    247a:	1c20      	adds	r0, r4, #0
    247c:	2100      	movs	r1, #0
    247e:	2280      	movs	r2, #128	; 0x80
    2480:	0092      	lsls	r2, r2, #2
    2482:	4b07      	ldr	r3, [pc, #28]	; (24a0 <http_process_sta_recv_data+0x30>)
    2484:	4798      	blx	r3
	sprintf( responseDataBuffer, "HTTP/1.1 400 Bad Request\r\nContent-Length: 0\r\nConnection: Keep-Alive\r\n\r\n" );
    2486:	1c20      	adds	r0, r4, #0
    2488:	4906      	ldr	r1, [pc, #24]	; (24a4 <http_process_sta_recv_data+0x34>)
    248a:	2248      	movs	r2, #72	; 0x48
    248c:	4b06      	ldr	r3, [pc, #24]	; (24a8 <http_process_sta_recv_data+0x38>)
    248e:	4798      	blx	r3
}
    2490:	bd10      	pop	{r4, pc}
    2492:	46c0      	nop			; (mov r8, r8)
    2494:	0000f0a8 	.word	0x0000f0a8
    2498:	0000c8c9 	.word	0x0000c8c9
    249c:	200001a8 	.word	0x200001a8
    24a0:	0000c0e1 	.word	0x0000c0e1
    24a4:	0000ef58 	.word	0x0000ef58
    24a8:	0000c0a7 	.word	0x0000c0a7

000024ac <parse_server_entity_get_contents_type>:


static const char* parse_server_entity_get_contents_type(void *priv_data)
{
	return "application/json";
}
    24ac:	4800      	ldr	r0, [pc, #0]	; (24b0 <parse_server_entity_get_contents_type+0x4>)
    24ae:	4770      	bx	lr
    24b0:	0000ffa0 	.word	0x0000ffa0

000024b4 <get_sockinfo_by_socktype>:
		print_to_terminal("Error !!!!!, socket_resolve_cb\n");
	}
}

static tSockInfo* get_sockinfo_by_socktype(eSockType type)
{
    24b4:	4a0a      	ldr	r2, [pc, #40]	; (24e0 <get_sockinfo_by_socktype+0x2c>)
	tSockInfo* retInfo = NULL;
	uint8_t i = 0;

	for(i = 0; i < DEFAULT_SOCKET_MAX_SIZE; i++)
    24b6:	2300      	movs	r3, #0
	{
		if (gSockInfo[i].sockType == type && gSockInfo[i].sock >= 0)
    24b8:	7851      	ldrb	r1, [r2, #1]
    24ba:	4281      	cmp	r1, r0
    24bc:	d108      	bne.n	24d0 <get_sockinfo_by_socktype+0x1c>
    24be:	7811      	ldrb	r1, [r2, #0]
    24c0:	297f      	cmp	r1, #127	; 0x7f
    24c2:	d805      	bhi.n	24d0 <get_sockinfo_by_socktype+0x1c>
		{
			retInfo = gSockInfo + i;
    24c4:	0098      	lsls	r0, r3, #2
    24c6:	18c0      	adds	r0, r0, r3
    24c8:	0083      	lsls	r3, r0, #2
    24ca:	4805      	ldr	r0, [pc, #20]	; (24e0 <get_sockinfo_by_socktype+0x2c>)
    24cc:	18c0      	adds	r0, r0, r3
			break;
    24ce:	e005      	b.n	24dc <get_sockinfo_by_socktype+0x28>
static tSockInfo* get_sockinfo_by_socktype(eSockType type)
{
	tSockInfo* retInfo = NULL;
	uint8_t i = 0;

	for(i = 0; i < DEFAULT_SOCKET_MAX_SIZE; i++)
    24d0:	3301      	adds	r3, #1
    24d2:	b2db      	uxtb	r3, r3
    24d4:	3214      	adds	r2, #20
    24d6:	2b07      	cmp	r3, #7
    24d8:	d1ee      	bne.n	24b8 <get_sockinfo_by_socktype+0x4>
	}
}

static tSockInfo* get_sockinfo_by_socktype(eSockType type)
{
	tSockInfo* retInfo = NULL;
    24da:	2000      	movs	r0, #0
			break;
		}
	}

	return retInfo;
}
    24dc:	4770      	bx	lr
    24de:	46c0      	nop			; (mov r8, r8)
    24e0:	200003a8 	.word	0x200003a8

000024e4 <get_socktype_by_sock>:

static eSockType get_socktype_by_sock(SOCKET sock)
{
    24e4:	b510      	push	{r4, lr}
	eSockType retType = FLUFFY_SOCK_TYPE_UNKNOWN;
	uint8_t i = 0;

	for(i = 0; i < DEFAULT_SOCKET_MAX_SIZE; i++)
	{
		if (gSockInfo[i].sock == sock)
    24e6:	4b0e      	ldr	r3, [pc, #56]	; (2520 <get_socktype_by_sock+0x3c>)
    24e8:	781b      	ldrb	r3, [r3, #0]
    24ea:	b25b      	sxtb	r3, r3
    24ec:	4283      	cmp	r3, r0
    24ee:	d008      	beq.n	2502 <get_socktype_by_sock+0x1e>
    24f0:	4a0b      	ldr	r2, [pc, #44]	; (2520 <get_socktype_by_sock+0x3c>)
    24f2:	3214      	adds	r2, #20
    24f4:	2301      	movs	r3, #1
    24f6:	1c1c      	adds	r4, r3, #0
    24f8:	2100      	movs	r1, #0
    24fa:	5651      	ldrsb	r1, [r2, r1]
    24fc:	4281      	cmp	r1, r0
    24fe:	d108      	bne.n	2512 <get_socktype_by_sock+0x2e>
    2500:	e000      	b.n	2504 <get_socktype_by_sock+0x20>
    2502:	2400      	movs	r4, #0
		{
			retType = gSockInfo[i].sockType;
    2504:	00a3      	lsls	r3, r4, #2
    2506:	191c      	adds	r4, r3, r4
    2508:	00a4      	lsls	r4, r4, #2
    250a:	4b05      	ldr	r3, [pc, #20]	; (2520 <get_socktype_by_sock+0x3c>)
    250c:	191c      	adds	r4, r3, r4
    250e:	7860      	ldrb	r0, [r4, #1]
			break;
    2510:	e004      	b.n	251c <get_socktype_by_sock+0x38>
    2512:	3301      	adds	r3, #1
    2514:	3214      	adds	r2, #20
static eSockType get_socktype_by_sock(SOCKET sock)
{
	eSockType retType = FLUFFY_SOCK_TYPE_UNKNOWN;
	uint8_t i = 0;

	for(i = 0; i < DEFAULT_SOCKET_MAX_SIZE; i++)
    2516:	2b07      	cmp	r3, #7
    2518:	d1ed      	bne.n	24f6 <get_socktype_by_sock+0x12>
	return retInfo;
}

static eSockType get_socktype_by_sock(SOCKET sock)
{
	eSockType retType = FLUFFY_SOCK_TYPE_UNKNOWN;
    251a:	2000      	movs	r0, #0
			break;
		}
	}

	return retType;
}
    251c:	bd10      	pop	{r4, pc}
    251e:	46c0      	nop			; (mov r8, r8)
    2520:	200003a8 	.word	0x200003a8

00002524 <parse_server_entity_get_contents_length>:

int parse_server_entity_get_contents_length(void *priv_data)
{
    2524:	b508      	push	{r3, lr}
	if( priv_data )
    2526:	2800      	cmp	r0, #0
    2528:	d002      	beq.n	2530 <parse_server_entity_get_contents_length+0xc>
		return strlen(priv_data);
    252a:	4b02      	ldr	r3, [pc, #8]	; (2534 <parse_server_entity_get_contents_length+0x10>)
    252c:	4798      	blx	r3
    252e:	e000      	b.n	2532 <parse_server_entity_get_contents_length+0xe>

	return 0;
    2530:	2000      	movs	r0, #0
}
    2532:	bd08      	pop	{r3, pc}
    2534:	0000cde5 	.word	0x0000cde5

00002538 <set_socket_info>:

static void set_socket_info(SOCKET sock, eSockType type, parsePushCallback cb, void* inParam)
{
    2538:	b5f0      	push	{r4, r5, r6, r7, lr}
    253a:	b083      	sub	sp, #12
    253c:	9301      	str	r3, [sp, #4]
	uint8_t i;

	for (i = 0; i < DEFAULT_SOCKET_MAX_SIZE; i++)
	{
		if (gSockInfo[i].sockType == FLUFFY_SOCK_TYPE_UNKNOWN)
    253e:	4c13      	ldr	r4, [pc, #76]	; (258c <set_socket_info+0x54>)
    2540:	7864      	ldrb	r4, [r4, #1]
    2542:	2c00      	cmp	r4, #0
    2544:	d008      	beq.n	2558 <set_socket_info+0x20>
    2546:	4e11      	ldr	r6, [pc, #68]	; (258c <set_socket_info+0x54>)
    2548:	3615      	adds	r6, #21
    254a:	2401      	movs	r4, #1
    254c:	b2e5      	uxtb	r5, r4
    254e:	1c27      	adds	r7, r4, #0
    2550:	7833      	ldrb	r3, [r6, #0]
    2552:	2b00      	cmp	r3, #0
    2554:	d10d      	bne.n	2572 <set_socket_info+0x3a>
    2556:	e001      	b.n	255c <set_socket_info+0x24>
    2558:	2700      	movs	r7, #0

static void set_socket_info(SOCKET sock, eSockType type, parsePushCallback cb, void* inParam)
{
	uint8_t i;

	for (i = 0; i < DEFAULT_SOCKET_MAX_SIZE; i++)
    255a:	2500      	movs	r5, #0
	{
		if (gSockInfo[i].sockType == FLUFFY_SOCK_TYPE_UNKNOWN)
		{
			gSockInfo[i].sock = sock;
    255c:	4c0b      	ldr	r4, [pc, #44]	; (258c <set_socket_info+0x54>)
    255e:	00be      	lsls	r6, r7, #2
    2560:	19f3      	adds	r3, r6, r7
    2562:	009b      	lsls	r3, r3, #2
    2564:	5518      	strb	r0, [r3, r4]
			gSockInfo[i].sockType = type;
    2566:	18e0      	adds	r0, r4, r3
    2568:	7041      	strb	r1, [r0, #1]
			gSockInfo[i].parseCb = cb;
    256a:	6042      	str	r2, [r0, #4]
			gSockInfo[i].param = inParam;
    256c:	9b01      	ldr	r3, [sp, #4]
    256e:	6083      	str	r3, [r0, #8]
			break;
    2570:	e005      	b.n	257e <set_socket_info+0x46>
    2572:	3501      	adds	r5, #1
    2574:	b2ed      	uxtb	r5, r5
    2576:	3401      	adds	r4, #1
    2578:	3614      	adds	r6, #20

static void set_socket_info(SOCKET sock, eSockType type, parsePushCallback cb, void* inParam)
{
	uint8_t i;

	for (i = 0; i < DEFAULT_SOCKET_MAX_SIZE; i++)
    257a:	2c07      	cmp	r4, #7
    257c:	d1e6      	bne.n	254c <set_socket_info+0x14>
			gSockInfo[i].param = inParam;
			break;
		}
	}

	if( i == DEFAULT_SOCKET_MAX_SIZE )
    257e:	2d07      	cmp	r5, #7
    2580:	d102      	bne.n	2588 <set_socket_info+0x50>
		print_to_terminal( "set_socket_info / sock overflow Error !!!!!\r\n" );
    2582:	4803      	ldr	r0, [pc, #12]	; (2590 <set_socket_info+0x58>)
    2584:	4b03      	ldr	r3, [pc, #12]	; (2594 <set_socket_info+0x5c>)
    2586:	4798      	blx	r3
}
    2588:	b003      	add	sp, #12
    258a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    258c:	200003a8 	.word	0x200003a8
    2590:	0000ffb4 	.word	0x0000ffb4
    2594:	000090f5 	.word	0x000090f5

00002598 <socket_resolve_cb>:

	return 1;
}

static void socket_resolve_cb(uint8_t *hostName, uint32_t hostIp)
{
    2598:	b570      	push	{r4, r5, r6, lr}
    259a:	b086      	sub	sp, #24
    259c:	1c05      	adds	r5, r0, #0
    259e:	1c0c      	adds	r4, r1, #0
	uint8_t flag = 0;
	uint16_t port = 0;
	eSockType hostSockType = 0;

	print_to_terminal("Host Name is %s\r\n", hostName);
    25a0:	4841      	ldr	r0, [pc, #260]	; (26a8 <socket_resolve_cb+0x110>)
    25a2:	1c29      	adds	r1, r5, #0
    25a4:	4e41      	ldr	r6, [pc, #260]	; (26ac <socket_resolve_cb+0x114>)
    25a6:	47b0      	blx	r6
	print_to_terminal("Host IP is %d.%d.%d.%d\r\n", (int)IPV4_BYTE(hostIp, 0), (int)IPV4_BYTE(hostIp, 1),
    25a8:	20ff      	movs	r0, #255	; 0xff
    25aa:	1c01      	adds	r1, r0, #0
    25ac:	4021      	ands	r1, r4
    25ae:	0a22      	lsrs	r2, r4, #8
    25b0:	4002      	ands	r2, r0
	(int)IPV4_BYTE(hostIp, 2), (int)IPV4_BYTE(hostIp, 3));
    25b2:	0c23      	lsrs	r3, r4, #16
	uint8_t flag = 0;
	uint16_t port = 0;
	eSockType hostSockType = 0;

	print_to_terminal("Host Name is %s\r\n", hostName);
	print_to_terminal("Host IP is %d.%d.%d.%d\r\n", (int)IPV4_BYTE(hostIp, 0), (int)IPV4_BYTE(hostIp, 1),
    25b4:	4003      	ands	r3, r0
	(int)IPV4_BYTE(hostIp, 2), (int)IPV4_BYTE(hostIp, 3));
    25b6:	0e20      	lsrs	r0, r4, #24
	uint8_t flag = 0;
	uint16_t port = 0;
	eSockType hostSockType = 0;

	print_to_terminal("Host Name is %s\r\n", hostName);
	print_to_terminal("Host IP is %d.%d.%d.%d\r\n", (int)IPV4_BYTE(hostIp, 0), (int)IPV4_BYTE(hostIp, 1),
    25b8:	9000      	str	r0, [sp, #0]
    25ba:	483d      	ldr	r0, [pc, #244]	; (26b0 <socket_resolve_cb+0x118>)
    25bc:	47b0      	blx	r6
	(int)IPV4_BYTE(hostIp, 2), (int)IPV4_BYTE(hostIp, 3));

	if (!strcmp(DEFAULT_PUSH_SERVER_NAME, (char*)hostName))
    25be:	483d      	ldr	r0, [pc, #244]	; (26b4 <socket_resolve_cb+0x11c>)
    25c0:	1c29      	adds	r1, r5, #0
    25c2:	4b3d      	ldr	r3, [pc, #244]	; (26b8 <socket_resolve_cb+0x120>)
    25c4:	4798      	blx	r3
    25c6:	2800      	cmp	r0, #0
    25c8:	d150      	bne.n	266c <socket_resolve_cb+0xd4>
	SOCKET sock = -1;
	uint8_t i = 0;

	for(i = 0; i < DEFAULT_SOCKET_MAX_SIZE; i++)
	{
		if (gSockInfo[i].sock < 0)
    25ca:	4b3c      	ldr	r3, [pc, #240]	; (26bc <socket_resolve_cb+0x124>)
    25cc:	781b      	ldrb	r3, [r3, #0]
    25ce:	2b7f      	cmp	r3, #127	; 0x7f
    25d0:	d85e      	bhi.n	2690 <socket_resolve_cb+0xf8>
    25d2:	493a      	ldr	r1, [pc, #232]	; (26bc <socket_resolve_cb+0x124>)
    25d4:	3114      	adds	r1, #20
    25d6:	2201      	movs	r2, #1
    25d8:	b2d5      	uxtb	r5, r2
    25da:	1c10      	adds	r0, r2, #0
    25dc:	780b      	ldrb	r3, [r1, #0]
    25de:	2b7f      	cmp	r3, #127	; 0x7f
    25e0:	d90f      	bls.n	2602 <socket_resolve_cb+0x6a>
		{
			if (gSockInfo[i].sockType == FLUFFY_SOCK_TYPE_PUSH)
    25e2:	0093      	lsls	r3, r2, #2
    25e4:	189b      	adds	r3, r3, r2
    25e6:	009b      	lsls	r3, r3, #2
    25e8:	4a34      	ldr	r2, [pc, #208]	; (26bc <socket_resolve_cb+0x124>)
    25ea:	18d3      	adds	r3, r2, r3
    25ec:	785b      	ldrb	r3, [r3, #1]
    25ee:	2b06      	cmp	r3, #6
    25f0:	d00d      	beq.n	260e <socket_resolve_cb+0x76>
					break;
				}
			}
			else
			{
				gSockInfo[i].sockType= type;
    25f2:	0083      	lsls	r3, r0, #2
    25f4:	1818      	adds	r0, r3, r0
    25f6:	0080      	lsls	r0, r0, #2
    25f8:	4b30      	ldr	r3, [pc, #192]	; (26bc <socket_resolve_cb+0x124>)
    25fa:	181b      	adds	r3, r3, r0
    25fc:	2206      	movs	r2, #6
    25fe:	705a      	strb	r2, [r3, #1]
    2600:	e005      	b.n	260e <socket_resolve_cb+0x76>
    2602:	1c6b      	adds	r3, r5, #1
    2604:	b2dd      	uxtb	r5, r3
    2606:	3201      	adds	r2, #1
    2608:	3114      	adds	r1, #20
{
	struct sockaddr_in addr;
	SOCKET sock = -1;
	uint8_t i = 0;

	for(i = 0; i < DEFAULT_SOCKET_MAX_SIZE; i++)
    260a:	2a07      	cmp	r2, #7
    260c:	d1e4      	bne.n	25d8 <socket_resolve_cb+0x40>
				break;
			}
		}
	}

	if (i== DEFAULT_SOCKET_MAX_SIZE)
    260e:	2d07      	cmp	r5, #7
    2610:	d103      	bne.n	261a <socket_resolve_cb+0x82>
	{
		print_to_terminal("Error, Overflow socket info\r\n");
    2612:	482b      	ldr	r0, [pc, #172]	; (26c0 <socket_resolve_cb+0x128>)
    2614:	4b25      	ldr	r3, [pc, #148]	; (26ac <socket_resolve_cb+0x114>)
    2616:	4798      	blx	r3
    2618:	e040      	b.n	269c <socket_resolve_cb+0x104>
		return 0;
	}

	/* Initialize socket address structure. */
	addr.sin_family = AF_INET;
    261a:	ab02      	add	r3, sp, #8
    261c:	2202      	movs	r2, #2
    261e:	801a      	strh	r2, [r3, #0]
	addr.sin_port = _htons(port);
    2620:	4a28      	ldr	r2, [pc, #160]	; (26c4 <socket_resolve_cb+0x12c>)
    2622:	805a      	strh	r2, [r3, #2]
	addr.sin_addr.s_addr = hostIp;
    2624:	9403      	str	r4, [sp, #12]

	/* Open TCP socket */
	if ((sock = socket(AF_INET, SOCK_STREAM, flags)) < 0)
    2626:	2002      	movs	r0, #2
    2628:	2101      	movs	r1, #1
    262a:	2200      	movs	r2, #0
    262c:	4b26      	ldr	r3, [pc, #152]	; (26c8 <socket_resolve_cb+0x130>)
    262e:	4798      	blx	r3
    2630:	1e06      	subs	r6, r0, #0
    2632:	da03      	bge.n	263c <socket_resolve_cb+0xa4>
	{
		print_to_terminal("main: failed to create TCP server socket error!\r\n");
    2634:	4825      	ldr	r0, [pc, #148]	; (26cc <socket_resolve_cb+0x134>)
    2636:	4b1d      	ldr	r3, [pc, #116]	; (26ac <socket_resolve_cb+0x114>)
    2638:	4798      	blx	r3
    263a:	e02f      	b.n	269c <socket_resolve_cb+0x104>
		return 0;
	}

	if (hostIp)
    263c:	2c00      	cmp	r4, #0
    263e:	d004      	beq.n	264a <socket_resolve_cb+0xb2>
	{
		/* Connect service : Client */
		connect(sock, (struct sockaddr *)&addr, sizeof(struct sockaddr_in));
    2640:	a902      	add	r1, sp, #8
    2642:	2210      	movs	r2, #16
    2644:	4b22      	ldr	r3, [pc, #136]	; (26d0 <socket_resolve_cb+0x138>)
    2646:	4798      	blx	r3
    2648:	e003      	b.n	2652 <socket_resolve_cb+0xba>
	}
	else
	{
		/* Bind service : Server */
		bind(sock, (struct sockaddr *)&addr, sizeof(struct sockaddr_in));
    264a:	a902      	add	r1, sp, #8
    264c:	2210      	movs	r2, #16
    264e:	4b21      	ldr	r3, [pc, #132]	; (26d4 <socket_resolve_cb+0x13c>)
    2650:	4798      	blx	r3
	}

	gSockInfo[i].sock = sock;
    2652:	491a      	ldr	r1, [pc, #104]	; (26bc <socket_resolve_cb+0x124>)
    2654:	00ab      	lsls	r3, r5, #2
    2656:	195a      	adds	r2, r3, r5
    2658:	0092      	lsls	r2, r2, #2
    265a:	5456      	strb	r6, [r2, r1]
	gSockInfo[i].ip = hostIp;
    265c:	195a      	adds	r2, r3, r5
    265e:	0092      	lsls	r2, r2, #2
    2660:	188a      	adds	r2, r1, r2
    2662:	60d4      	str	r4, [r2, #12]
	gSockInfo[i].port = port;
    2664:	1c13      	adds	r3, r2, #0
    2666:	4a1c      	ldr	r2, [pc, #112]	; (26d8 <socket_resolve_cb+0x140>)
    2668:	821a      	strh	r2, [r3, #16]
    266a:	e01a      	b.n	26a2 <socket_resolve_cb+0x10a>
		if (!(set_tcp_socket(hostSockType, hostIp, port, flag)))
		{
			print_to_terminal("Error !!!!!, create Sta Server Socket.\n");
		}
	}
	else if( !strcmp( DEFAULT_PARSE_SERVER_NAME, (char*)hostName ) )
    266c:	481b      	ldr	r0, [pc, #108]	; (26dc <socket_resolve_cb+0x144>)
    266e:	1c29      	adds	r1, r5, #0
    2670:	4b11      	ldr	r3, [pc, #68]	; (26b8 <socket_resolve_cb+0x120>)
    2672:	4798      	blx	r3
    2674:	2800      	cmp	r0, #0
    2676:	d107      	bne.n	2688 <socket_resolve_cb+0xf0>
	{
		http_client_socket_resolve_handler(hostName, hostIp);
    2678:	1c28      	adds	r0, r5, #0
    267a:	1c21      	adds	r1, r4, #0
    267c:	4b18      	ldr	r3, [pc, #96]	; (26e0 <socket_resolve_cb+0x148>)
    267e:	4798      	blx	r3
		print_to_terminal("debug***: socket resolve handler for DEFAULT_PARSE_SERVER_NAME\n\n");
    2680:	4818      	ldr	r0, [pc, #96]	; (26e4 <socket_resolve_cb+0x14c>)
    2682:	4b0a      	ldr	r3, [pc, #40]	; (26ac <socket_resolve_cb+0x114>)
    2684:	4798      	blx	r3
    2686:	e00c      	b.n	26a2 <socket_resolve_cb+0x10a>
	}
	else
	{
		print_to_terminal("Error !!!!!, socket_resolve_cb\n");
    2688:	4817      	ldr	r0, [pc, #92]	; (26e8 <socket_resolve_cb+0x150>)
    268a:	4b08      	ldr	r3, [pc, #32]	; (26ac <socket_resolve_cb+0x114>)
    268c:	4798      	blx	r3
    268e:	e008      	b.n	26a2 <socket_resolve_cb+0x10a>

	for(i = 0; i < DEFAULT_SOCKET_MAX_SIZE; i++)
	{
		if (gSockInfo[i].sock < 0)
		{
			if (gSockInfo[i].sockType == FLUFFY_SOCK_TYPE_PUSH)
    2690:	4b0a      	ldr	r3, [pc, #40]	; (26bc <socket_resolve_cb+0x124>)
    2692:	785b      	ldrb	r3, [r3, #1]
    2694:	2500      	movs	r5, #0
    2696:	2b06      	cmp	r3, #6
    2698:	d0bf      	beq.n	261a <socket_resolve_cb+0x82>
    269a:	e7aa      	b.n	25f2 <socket_resolve_cb+0x5a>
		port = DEFAULT_PUSH_SERVER_PORT;
		flag = 0;

		if (!(set_tcp_socket(hostSockType, hostIp, port, flag)))
		{
			print_to_terminal("Error !!!!!, create Sta Server Socket.\n");
    269c:	4813      	ldr	r0, [pc, #76]	; (26ec <socket_resolve_cb+0x154>)
    269e:	4b03      	ldr	r3, [pc, #12]	; (26ac <socket_resolve_cb+0x114>)
    26a0:	4798      	blx	r3
	}
	else
	{
		print_to_terminal("Error !!!!!, socket_resolve_cb\n");
	}
}
    26a2:	b006      	add	sp, #24
    26a4:	bd70      	pop	{r4, r5, r6, pc}
    26a6:	46c0      	nop			; (mov r8, r8)
    26a8:	0000ffe4 	.word	0x0000ffe4
    26ac:	000090f5 	.word	0x000090f5
    26b0:	0000fff8 	.word	0x0000fff8
    26b4:	00010014 	.word	0x00010014
    26b8:	0000ca31 	.word	0x0000ca31
    26bc:	200003a8 	.word	0x200003a8
    26c0:	00010024 	.word	0x00010024
    26c4:	00003d20 	.word	0x00003d20
    26c8:	00006fa1 	.word	0x00006fa1
    26cc:	00010044 	.word	0x00010044
    26d0:	00007161 	.word	0x00007161
    26d4:	00007065 	.word	0x00007065
    26d8:	0000203d 	.word	0x0000203d
    26dc:	00010078 	.word	0x00010078
    26e0:	00000315 	.word	0x00000315
    26e4:	00010088 	.word	0x00010088
    26e8:	000100cc 	.word	0x000100cc
    26ec:	000100ec 	.word	0x000100ec

000026f0 <parse_server_entity_read>:

static int parse_server_entity_read(void *priv_data, char *buffer, uint32_t size, uint32_t written)
{
    26f0:	b5f0      	push	{r4, r5, r6, r7, lr}
    26f2:	b083      	sub	sp, #12
    26f4:	1c05      	adds	r5, r0, #0
    26f6:	9101      	str	r1, [sp, #4]
    26f8:	1c16      	adds	r6, r2, #0
    26fa:	1c1f      	adds	r7, r3, #0
	int length = strlen(priv_data) -written;
    26fc:	4b06      	ldr	r3, [pc, #24]	; (2718 <parse_server_entity_read+0x28>)
    26fe:	4798      	blx	r3
    2700:	1bc4      	subs	r4, r0, r7
	int min = (size > length) ? length : size;
    2702:	42b4      	cmp	r4, r6
    2704:	d900      	bls.n	2708 <parse_server_entity_read+0x18>
    2706:	1c34      	adds	r4, r6, #0
	memcpy(buffer, priv_data + written, min);
    2708:	19e9      	adds	r1, r5, r7
    270a:	9801      	ldr	r0, [sp, #4]
    270c:	1c22      	adds	r2, r4, #0
    270e:	4b03      	ldr	r3, [pc, #12]	; (271c <parse_server_entity_read+0x2c>)
    2710:	4798      	blx	r3
	return min;
}
    2712:	1c20      	adds	r0, r4, #0
    2714:	b003      	add	sp, #12
    2716:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2718:	0000cde5 	.word	0x0000cde5
    271c:	0000c0a7 	.word	0x0000c0a7

00002720 <http_client_callback>:
 * \param[in]  module_inst     Module instance of HTTP client module.
 * \param[in]  type            Type of event.
 * \param[in]  data            Data structure of the event. \refer http_client_data
 */
static void http_client_callback(struct http_client_module *module_inst, int type, union http_client_data *data)
{
    2720:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2722:	1c14      	adds	r4, r2, #0
	switch (type) {
    2724:	2901      	cmp	r1, #1
    2726:	d00c      	beq.n	2742 <http_client_callback+0x22>
    2728:	dc02      	bgt.n	2730 <http_client_callback+0x10>
    272a:	2900      	cmp	r1, #0
    272c:	d005      	beq.n	273a <http_client_callback+0x1a>
    272e:	e03e      	b.n	27ae <http_client_callback+0x8e>
    2730:	2902      	cmp	r1, #2
    2732:	d00a      	beq.n	274a <http_client_callback+0x2a>
    2734:	2904      	cmp	r1, #4
    2736:	d026      	beq.n	2786 <http_client_callback+0x66>
    2738:	e039      	b.n	27ae <http_client_callback+0x8e>
	case HTTP_CLIENT_CALLBACK_SOCK_CONNECTED:
		print_to_terminal("Connected\r\n");
    273a:	481d      	ldr	r0, [pc, #116]	; (27b0 <http_client_callback+0x90>)
    273c:	4b1d      	ldr	r3, [pc, #116]	; (27b4 <http_client_callback+0x94>)
    273e:	4798      	blx	r3
		break;
    2740:	e035      	b.n	27ae <http_client_callback+0x8e>

	case HTTP_CLIENT_CALLBACK_REQUESTED:
		print_to_terminal("Request complete\r\n");
    2742:	481d      	ldr	r0, [pc, #116]	; (27b8 <http_client_callback+0x98>)
    2744:	4b1b      	ldr	r3, [pc, #108]	; (27b4 <http_client_callback+0x94>)
    2746:	4798      	blx	r3
		break;
    2748:	e031      	b.n	27ae <http_client_callback+0x8e>

	case HTTP_CLIENT_CALLBACK_RECV_RESPONSE:
		print_to_terminal("Received response %u data size %u\r\n",
    274a:	8811      	ldrh	r1, [r2, #0]
    274c:	481b      	ldr	r0, [pc, #108]	; (27bc <http_client_callback+0x9c>)
    274e:	6852      	ldr	r2, [r2, #4]
    2750:	4b18      	ldr	r3, [pc, #96]	; (27b4 <http_client_callback+0x94>)
    2752:	4798      	blx	r3
				(unsigned int)data->recv_response.response_code,
				(unsigned int)data->recv_response.content_length);

		if( g_requestCallback )
    2754:	4b1a      	ldr	r3, [pc, #104]	; (27c0 <http_client_callback+0xa0>)
    2756:	681f      	ldr	r7, [r3, #0]
    2758:	2f00      	cmp	r7, #0
    275a:	d028      	beq.n	27ae <http_client_callback+0x8e>
		{
			char* contentData = malloc( data->recv_response.content_length + 1 );
    275c:	6866      	ldr	r6, [r4, #4]
    275e:	1c70      	adds	r0, r6, #1
    2760:	4b18      	ldr	r3, [pc, #96]	; (27c4 <http_client_callback+0xa4>)
    2762:	4798      	blx	r3
    2764:	1c05      	adds	r5, r0, #0
			memcpy( contentData, data->recv_response.content, data->recv_response.content_length );
    2766:	68a1      	ldr	r1, [r4, #8]
    2768:	1c32      	adds	r2, r6, #0
    276a:	4b17      	ldr	r3, [pc, #92]	; (27c8 <http_client_callback+0xa8>)
    276c:	4798      	blx	r3
			contentData[ data->recv_response.content_length ] = 0;
    276e:	2300      	movs	r3, #0
    2770:	55ab      	strb	r3, [r5, r6]

			g_requestCallback( g_requestCallback_inParam, 0, data->recv_response.response_code, contentData );
    2772:	4b16      	ldr	r3, [pc, #88]	; (27cc <http_client_callback+0xac>)
    2774:	6818      	ldr	r0, [r3, #0]
    2776:	8822      	ldrh	r2, [r4, #0]
    2778:	2100      	movs	r1, #0
    277a:	1c2b      	adds	r3, r5, #0
    277c:	47b8      	blx	r7

			free( contentData );
    277e:	1c28      	adds	r0, r5, #0
    2780:	4b13      	ldr	r3, [pc, #76]	; (27d0 <http_client_callback+0xb0>)
    2782:	4798      	blx	r3
    2784:	e013      	b.n	27ae <http_client_callback+0x8e>
		}
		break;

	case HTTP_CLIENT_CALLBACK_DISCONNECTED:
		print_to_terminal("Disconnected reason:%d\r\n", data->disconnected.reason);
    2786:	4813      	ldr	r0, [pc, #76]	; (27d4 <http_client_callback+0xb4>)
    2788:	6811      	ldr	r1, [r2, #0]
    278a:	4b0a      	ldr	r3, [pc, #40]	; (27b4 <http_client_callback+0x94>)
    278c:	4798      	blx	r3

		if( g_requestCallback )
    278e:	4b0c      	ldr	r3, [pc, #48]	; (27c0 <http_client_callback+0xa0>)
    2790:	681d      	ldr	r5, [r3, #0]
    2792:	2d00      	cmp	r5, #0
    2794:	d005      	beq.n	27a2 <http_client_callback+0x82>
		{
			g_requestCallback( g_requestCallback_inParam, data->disconnected.reason, 0, NULL );
    2796:	4b0d      	ldr	r3, [pc, #52]	; (27cc <http_client_callback+0xac>)
    2798:	6818      	ldr	r0, [r3, #0]
    279a:	6821      	ldr	r1, [r4, #0]
    279c:	2200      	movs	r2, #0
    279e:	2300      	movs	r3, #0
    27a0:	47a8      	blx	r5

		/* If disconnect reason is equals to -ECONNRESET(-104),
		 * It means Server was disconnected your connection by the keep alive timeout.
		 * This is normal operation.
		 */
		if (data->disconnected.reason == -EAGAIN) {
    27a2:	6823      	ldr	r3, [r4, #0]
    27a4:	330b      	adds	r3, #11
    27a6:	d102      	bne.n	27ae <http_client_callback+0x8e>
			print_to_terminal("**************** Please check this log **************** \r\n");
    27a8:	480b      	ldr	r0, [pc, #44]	; (27d8 <http_client_callback+0xb8>)
    27aa:	4b02      	ldr	r3, [pc, #8]	; (27b4 <http_client_callback+0x94>)
    27ac:	4798      	blx	r3
			*/
		}

		break;
	}
}
    27ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    27b0:	00010114 	.word	0x00010114
    27b4:	000090f5 	.word	0x000090f5
    27b8:	00010120 	.word	0x00010120
    27bc:	00010134 	.word	0x00010134
    27c0:	20000650 	.word	0x20000650
    27c4:	0000c069 	.word	0x0000c069
    27c8:	0000c0a7 	.word	0x0000c0a7
    27cc:	20000434 	.word	0x20000434
    27d0:	0000c07d 	.word	0x0000c07d
    27d4:	00010158 	.word	0x00010158
    27d8:	00010174 	.word	0x00010174

000027dc <parse_server_entity_close>:

static void parse_server_entity_close(void *priv_data)
{
    27dc:	b508      	push	{r3, lr}
	if(priv_data)
    27de:	2800      	cmp	r0, #0
    27e0:	d001      	beq.n	27e6 <parse_server_entity_close+0xa>
	{
		free(priv_data);
    27e2:	4b01      	ldr	r3, [pc, #4]	; (27e8 <parse_server_entity_close+0xc>)
    27e4:	4798      	blx	r3
		priv_data = NULL;
	}
}
    27e6:	bd08      	pop	{r3, pc}
    27e8:	0000c07d 	.word	0x0000c07d

000027ec <close_current_socket>:
extern char g_applicationId[APPLICATION_ID_MAX_LEN+1];
extern char g_installationId[INSTALLATION_ID_MAX_LEN+1];


static void close_current_socket(SOCKET curSock)
{
    27ec:	b510      	push	{r4, lr}
	uint8_t i;

	for (i = 0; i < DEFAULT_SOCKET_MAX_SIZE; i++)
	{
		if (curSock == gSockInfo[i].sock)
    27ee:	4b13      	ldr	r3, [pc, #76]	; (283c <close_current_socket+0x50>)
    27f0:	781b      	ldrb	r3, [r3, #0]
    27f2:	b25b      	sxtb	r3, r3
    27f4:	4283      	cmp	r3, r0
    27f6:	d008      	beq.n	280a <close_current_socket+0x1e>
    27f8:	4a10      	ldr	r2, [pc, #64]	; (283c <close_current_socket+0x50>)
    27fa:	3214      	adds	r2, #20
    27fc:	2301      	movs	r3, #1
    27fe:	1c1c      	adds	r4, r3, #0
    2800:	2100      	movs	r1, #0
    2802:	5651      	ldrsb	r1, [r2, r1]
    2804:	4281      	cmp	r1, r0
    2806:	d113      	bne.n	2830 <close_current_socket+0x44>
    2808:	e000      	b.n	280c <close_current_socket+0x20>
    280a:	2400      	movs	r4, #0
		{
			close(gSockInfo[i].sock);
    280c:	4b0c      	ldr	r3, [pc, #48]	; (2840 <close_current_socket+0x54>)
    280e:	4798      	blx	r3
			memset(&gSockInfo[i], 0, sizeof(tSockInfo));
    2810:	490a      	ldr	r1, [pc, #40]	; (283c <close_current_socket+0x50>)
    2812:	00a0      	lsls	r0, r4, #2
    2814:	1903      	adds	r3, r0, r4
    2816:	009b      	lsls	r3, r3, #2
    2818:	18cb      	adds	r3, r1, r3
    281a:	2200      	movs	r2, #0
    281c:	601a      	str	r2, [r3, #0]
    281e:	605a      	str	r2, [r3, #4]
    2820:	609a      	str	r2, [r3, #8]
    2822:	60da      	str	r2, [r3, #12]
    2824:	611a      	str	r2, [r3, #16]
			gSockInfo[i].sock = -1;
    2826:	1904      	adds	r4, r0, r4
    2828:	00a4      	lsls	r4, r4, #2
    282a:	23ff      	movs	r3, #255	; 0xff
    282c:	5463      	strb	r3, [r4, r1]

			break;
    282e:	e003      	b.n	2838 <close_current_socket+0x4c>
    2830:	3301      	adds	r3, #1
    2832:	3214      	adds	r2, #20

static void close_current_socket(SOCKET curSock)
{
	uint8_t i;

	for (i = 0; i < DEFAULT_SOCKET_MAX_SIZE; i++)
    2834:	2b07      	cmp	r3, #7
    2836:	d1e2      	bne.n	27fe <close_current_socket+0x12>
			gSockInfo[i].sock = -1;

			break;
		}
	}
}
    2838:	bd10      	pop	{r4, pc}
    283a:	46c0      	nop			; (mov r8, r8)
    283c:	200003a8 	.word	0x200003a8
    2840:	00007339 	.word	0x00007339

00002844 <close_current_socket_only>:

static void close_current_socket_only(SOCKET curSock)
{
    2844:	b510      	push	{r4, lr}
	uint8_t i;

	for (i = 0; i < DEFAULT_SOCKET_MAX_SIZE; i++)
	{
		if (curSock == gSockInfo[i].sock)
    2846:	4b0e      	ldr	r3, [pc, #56]	; (2880 <close_current_socket_only+0x3c>)
    2848:	781b      	ldrb	r3, [r3, #0]
    284a:	b25b      	sxtb	r3, r3
    284c:	4283      	cmp	r3, r0
    284e:	d008      	beq.n	2862 <close_current_socket_only+0x1e>
    2850:	4a0b      	ldr	r2, [pc, #44]	; (2880 <close_current_socket_only+0x3c>)
    2852:	3214      	adds	r2, #20
    2854:	2301      	movs	r3, #1
    2856:	1c1c      	adds	r4, r3, #0
    2858:	2100      	movs	r1, #0
    285a:	5651      	ldrsb	r1, [r2, r1]
    285c:	4281      	cmp	r1, r0
    285e:	d10a      	bne.n	2876 <close_current_socket_only+0x32>
    2860:	e000      	b.n	2864 <close_current_socket_only+0x20>
    2862:	2400      	movs	r4, #0
		{
			close(gSockInfo[i].sock);
    2864:	4b07      	ldr	r3, [pc, #28]	; (2884 <close_current_socket_only+0x40>)
    2866:	4798      	blx	r3
			//memset(&gSockInfo[i], 0, sizeof(tSockInfo));
			gSockInfo[i].sock = -1;
    2868:	00a3      	lsls	r3, r4, #2
    286a:	191c      	adds	r4, r3, r4
    286c:	00a4      	lsls	r4, r4, #2
    286e:	22ff      	movs	r2, #255	; 0xff
    2870:	4b03      	ldr	r3, [pc, #12]	; (2880 <close_current_socket_only+0x3c>)
    2872:	54e2      	strb	r2, [r4, r3]

			break;
    2874:	e003      	b.n	287e <close_current_socket_only+0x3a>
    2876:	3301      	adds	r3, #1
    2878:	3214      	adds	r2, #20

static void close_current_socket_only(SOCKET curSock)
{
	uint8_t i;

	for (i = 0; i < DEFAULT_SOCKET_MAX_SIZE; i++)
    287a:	2b07      	cmp	r3, #7
    287c:	d1eb      	bne.n	2856 <close_current_socket_only+0x12>
			gSockInfo[i].sock = -1;

			break;
		}
	}
}
    287e:	bd10      	pop	{r4, pc}
    2880:	200003a8 	.word	0x200003a8
    2884:	00007339 	.word	0x00007339

00002888 <fluffy_trans_init_socket>:
	sw_timer_init(&swt_module_inst, &swt_conf);
	sw_timer_enable(&swt_module_inst);
}

void fluffy_trans_init_socket(void)
{
    2888:	b530      	push	{r4, r5, lr}
    288a:	b089      	sub	sp, #36	; 0x24
    288c:	4b21      	ldr	r3, [pc, #132]	; (2914 <fluffy_trans_init_socket+0x8c>)
    288e:	1c18      	adds	r0, r3, #0
    2890:	308c      	adds	r0, #140	; 0x8c
	uint8_t i;

	for (i = 0; i < DEFAULT_SOCKET_MAX_SIZE; i++)
	{
		memset(&gSockInfo[i], 0, sizeof(tSockInfo));
    2892:	2200      	movs	r2, #0
		gSockInfo[i].sock = -1;
    2894:	21ff      	movs	r1, #255	; 0xff
{
	uint8_t i;

	for (i = 0; i < DEFAULT_SOCKET_MAX_SIZE; i++)
	{
		memset(&gSockInfo[i], 0, sizeof(tSockInfo));
    2896:	601a      	str	r2, [r3, #0]
    2898:	605a      	str	r2, [r3, #4]
    289a:	609a      	str	r2, [r3, #8]
    289c:	60da      	str	r2, [r3, #12]
    289e:	611a      	str	r2, [r3, #16]
		gSockInfo[i].sock = -1;
    28a0:	7019      	strb	r1, [r3, #0]
    28a2:	3314      	adds	r3, #20

void fluffy_trans_init_socket(void)
{
	uint8_t i;

	for (i = 0; i < DEFAULT_SOCKET_MAX_SIZE; i++)
    28a4:	4283      	cmp	r3, r0
    28a6:	d1f6      	bne.n	2896 <fluffy_trans_init_socket+0xe>
		memset(&gSockInfo[i], 0, sizeof(tSockInfo));
		gSockInfo[i].sock = -1;
	}

	/* Initialize Socket module */
	socketInit();
    28a8:	4b1b      	ldr	r3, [pc, #108]	; (2918 <fluffy_trans_init_socket+0x90>)
    28aa:	4798      	blx	r3
	registerSocketCallback(socket_event_cb, socket_resolve_cb);
    28ac:	481b      	ldr	r0, [pc, #108]	; (291c <fluffy_trans_init_socket+0x94>)
    28ae:	491c      	ldr	r1, [pc, #112]	; (2920 <fluffy_trans_init_socket+0x98>)
    28b0:	4b1c      	ldr	r3, [pc, #112]	; (2924 <fluffy_trans_init_socket+0x9c>)
    28b2:	4798      	blx	r3
 * \brief Configure Timer module.
 */
static void configure_http_timer(void)
{
	struct sw_timer_config swt_conf;
	sw_timer_get_config_defaults(&swt_conf);
    28b4:	ac01      	add	r4, sp, #4
    28b6:	1c20      	adds	r0, r4, #0
    28b8:	4b1b      	ldr	r3, [pc, #108]	; (2928 <fluffy_trans_init_socket+0xa0>)
    28ba:	4798      	blx	r3

	swt_conf.tcc_dev = 1;
    28bc:	2301      	movs	r3, #1
    28be:	7023      	strb	r3, [r4, #0]

	sw_timer_init(&swt_module_inst, &swt_conf);
    28c0:	4d1a      	ldr	r5, [pc, #104]	; (292c <fluffy_trans_init_socket+0xa4>)
    28c2:	1c28      	adds	r0, r5, #0
    28c4:	1c21      	adds	r1, r4, #0
    28c6:	4b1a      	ldr	r3, [pc, #104]	; (2930 <fluffy_trans_init_socket+0xa8>)
    28c8:	4798      	blx	r3
	sw_timer_enable(&swt_module_inst);
    28ca:	1c28      	adds	r0, r5, #0
    28cc:	4b19      	ldr	r3, [pc, #100]	; (2934 <fluffy_trans_init_socket+0xac>)
    28ce:	4798      	blx	r3
static void configure_http_client()
{
	struct http_client_config httpc_conf;
	int ret;

	http_client_get_config_defaults(&httpc_conf);
    28d0:	1c20      	adds	r0, r4, #0
    28d2:	4b19      	ldr	r3, [pc, #100]	; (2938 <fluffy_trans_init_socket+0xb0>)
    28d4:	4798      	blx	r3
	httpc_conf.timeout = 2000; // set timeout be 2 seconds.
    28d6:	23fa      	movs	r3, #250	; 0xfa
    28d8:	00db      	lsls	r3, r3, #3
    28da:	8123      	strh	r3, [r4, #8]
	httpc_conf.recv_buffer_size = 1024;
    28dc:	2380      	movs	r3, #128	; 0x80
    28de:	00db      	lsls	r3, r3, #3
    28e0:	6123      	str	r3, [r4, #16]
	httpc_conf.timer_inst = &swt_module_inst;
    28e2:	6065      	str	r5, [r4, #4]
	httpc_conf.tls = 0;
    28e4:	2300      	movs	r3, #0
    28e6:	70a3      	strb	r3, [r4, #2]
	httpc_conf.port = DEFAULT_PARSE_SERVER_PORT;
    28e8:	3350      	adds	r3, #80	; 0x50
    28ea:	8023      	strh	r3, [r4, #0]

	ret = http_client_init(&http_client_parse, &httpc_conf);
    28ec:	4813      	ldr	r0, [pc, #76]	; (293c <fluffy_trans_init_socket+0xb4>)
    28ee:	1c21      	adds	r1, r4, #0
    28f0:	4b13      	ldr	r3, [pc, #76]	; (2940 <fluffy_trans_init_socket+0xb8>)
    28f2:	4798      	blx	r3
	if (ret < 0) {
    28f4:	2800      	cmp	r0, #0
    28f6:	da06      	bge.n	2906 <fluffy_trans_init_socket+0x7e>
		print_to_terminal("Parse HTTP client initialization has failed(%s)\r\n", strerror(ret));
    28f8:	4b12      	ldr	r3, [pc, #72]	; (2944 <fluffy_trans_init_socket+0xbc>)
    28fa:	4798      	blx	r3
    28fc:	1c01      	adds	r1, r0, #0
    28fe:	4812      	ldr	r0, [pc, #72]	; (2948 <fluffy_trans_init_socket+0xc0>)
    2900:	4b12      	ldr	r3, [pc, #72]	; (294c <fluffy_trans_init_socket+0xc4>)
    2902:	4798      	blx	r3
    2904:	e7fe      	b.n	2904 <fluffy_trans_init_socket+0x7c>
		while (1) {
		} /* Loop forever. */
	}

	http_client_register_callback(&http_client_parse, http_client_callback);
    2906:	480d      	ldr	r0, [pc, #52]	; (293c <fluffy_trans_init_socket+0xb4>)
    2908:	4911      	ldr	r1, [pc, #68]	; (2950 <fluffy_trans_init_socket+0xc8>)
    290a:	4b12      	ldr	r3, [pc, #72]	; (2954 <fluffy_trans_init_socket+0xcc>)
    290c:	4798      	blx	r3
	/* Initialize the Timer. */
	configure_http_timer();

	/* Initialize the HTTP client service. */
	configure_http_client();
}
    290e:	b009      	add	sp, #36	; 0x24
    2910:	bd30      	pop	{r4, r5, pc}
    2912:	46c0      	nop			; (mov r8, r8)
    2914:	200003a8 	.word	0x200003a8
    2918:	00006f49 	.word	0x00006f49
    291c:	00002bd5 	.word	0x00002bd5
    2920:	00002599 	.word	0x00002599
    2924:	00006f8d 	.word	0x00006f8d
    2928:	00001265 	.word	0x00001265
    292c:	200007b0 	.word	0x200007b0
    2930:	00001271 	.word	0x00001271
    2934:	0000131d 	.word	0x0000131d
    2938:	00000195 	.word	0x00000195
    293c:	20000808 	.word	0x20000808
    2940:	000001bd 	.word	0x000001bd
    2944:	0000cdcd 	.word	0x0000cdcd
    2948:	000101b0 	.word	0x000101b0
    294c:	000090f5 	.word	0x000090f5
    2950:	00002721 	.word	0x00002721
    2954:	00000275 	.word	0x00000275

00002958 <fluffy_trans_sta_socket>:
	
}


void fluffy_trans_sta_socket(void)
{
    2958:	b508      	push	{r3, lr}
	/* Create Client Socket : Push */
	if (!get_sockinfo_by_socktype(FLUFFY_SOCK_TYPE_PUSH))
    295a:	2006      	movs	r0, #6
    295c:	4b03      	ldr	r3, [pc, #12]	; (296c <fluffy_trans_sta_socket+0x14>)
    295e:	4798      	blx	r3
    2960:	2800      	cmp	r0, #0
    2962:	d102      	bne.n	296a <fluffy_trans_sta_socket+0x12>
	{
		/* Obtain the IP Address by network name */
		gethostbyname((uint8_t *)DEFAULT_PUSH_SERVER_NAME);
    2964:	4802      	ldr	r0, [pc, #8]	; (2970 <fluffy_trans_sta_socket+0x18>)
    2966:	4b03      	ldr	r3, [pc, #12]	; (2974 <fluffy_trans_sta_socket+0x1c>)
    2968:	4798      	blx	r3
	}
}
    296a:	bd08      	pop	{r3, pc}
    296c:	000024b5 	.word	0x000024b5
    2970:	00010014 	.word	0x00010014
    2974:	00007421 	.word	0x00007421

00002978 <fluffy_trans_send>:

int fluffy_trans_send(ParseClientInternal* parseClient, char* httpVerb, char* httpPath, char* httpRequestBody, int addInstallation)
{
    2978:	b5f0      	push	{r4, r5, r6, r7, lr}
    297a:	4c4a      	ldr	r4, [pc, #296]	; (2aa4 <fluffy_trans_send+0x12c>)
    297c:	44a5      	add	sp, r4
    297e:	1c07      	adds	r7, r0, #0
    2980:	9103      	str	r1, [sp, #12]
    2982:	9204      	str	r2, [sp, #16]
    2984:	1e1c      	subs	r4, r3, #0

static void parse_server_entity_get(struct http_entity *entity, char* json_data)
{
	if( json_data )
    2986:	d016      	beq.n	29b6 <fluffy_trans_send+0x3e>
	{
		int json_data_length = strlen(json_data);
    2988:	1c18      	adds	r0, r3, #0
    298a:	4d47      	ldr	r5, [pc, #284]	; (2aa8 <fluffy_trans_send+0x130>)
    298c:	47a8      	blx	r5
		entity->priv_data = (void*)malloc(json_data_length + 1);
    298e:	1c43      	adds	r3, r0, #1
    2990:	9305      	str	r3, [sp, #20]
    2992:	1c18      	adds	r0, r3, #0
    2994:	4b45      	ldr	r3, [pc, #276]	; (2aac <fluffy_trans_send+0x134>)
    2996:	4798      	blx	r3
    2998:	1c06      	adds	r6, r0, #0
    299a:	4b45      	ldr	r3, [pc, #276]	; (2ab0 <fluffy_trans_send+0x138>)
    299c:	6158      	str	r0, [r3, #20]
		memset( entity->priv_data, 0, json_data_length + 1 );
    299e:	2100      	movs	r1, #0
    29a0:	9a05      	ldr	r2, [sp, #20]
    29a2:	4b44      	ldr	r3, [pc, #272]	; (2ab4 <fluffy_trans_send+0x13c>)
    29a4:	4798      	blx	r3
		memcpy(entity->priv_data, json_data, strlen(json_data));
    29a6:	1c20      	adds	r0, r4, #0
    29a8:	47a8      	blx	r5
    29aa:	1c02      	adds	r2, r0, #0
    29ac:	1c30      	adds	r0, r6, #0
    29ae:	1c21      	adds	r1, r4, #0
    29b0:	4b41      	ldr	r3, [pc, #260]	; (2ab8 <fluffy_trans_send+0x140>)
    29b2:	4798      	blx	r3
    29b4:	e002      	b.n	29bc <fluffy_trans_send+0x44>
	}
	else
	{
		entity->priv_data = 0;
    29b6:	2200      	movs	r2, #0
    29b8:	4b3d      	ldr	r3, [pc, #244]	; (2ab0 <fluffy_trans_send+0x138>)
    29ba:	615a      	str	r2, [r3, #20]
	}
	entity->get_contents_type = parse_server_entity_get_contents_type;
    29bc:	4b3c      	ldr	r3, [pc, #240]	; (2ab0 <fluffy_trans_send+0x138>)
    29be:	4a3f      	ldr	r2, [pc, #252]	; (2abc <fluffy_trans_send+0x144>)
    29c0:	605a      	str	r2, [r3, #4]
	entity->get_contents_length = parse_server_entity_get_contents_length;
    29c2:	4a3f      	ldr	r2, [pc, #252]	; (2ac0 <fluffy_trans_send+0x148>)
    29c4:	609a      	str	r2, [r3, #8]
	entity->is_chunked = 0;
    29c6:	2200      	movs	r2, #0
    29c8:	701a      	strb	r2, [r3, #0]
	entity->read = parse_server_entity_read;
    29ca:	4a3e      	ldr	r2, [pc, #248]	; (2ac4 <fluffy_trans_send+0x14c>)
    29cc:	60da      	str	r2, [r3, #12]
	entity->close = parse_server_entity_close;
    29ce:	4a3e      	ldr	r2, [pc, #248]	; (2ac8 <fluffy_trans_send+0x150>)
    29d0:	611a      	str	r2, [r3, #16]
	parse_server_entity_get( &entity_parse, httpRequestBody );
	
	print_to_terminal("entity_parse->priv_data = %s\n\n", entity_parse.priv_data);
    29d2:	6959      	ldr	r1, [r3, #20]
    29d4:	483d      	ldr	r0, [pc, #244]	; (2acc <fluffy_trans_send+0x154>)
    29d6:	4b3e      	ldr	r3, [pc, #248]	; (2ad0 <fluffy_trans_send+0x158>)
    29d8:	4798      	blx	r3

	char ext_header_buffer[ 512 ]  = { 0, };
    29da:	a826      	add	r0, sp, #152	; 0x98
    29dc:	2100      	movs	r1, #0
    29de:	2280      	movs	r2, #128	; 0x80
    29e0:	0092      	lsls	r2, r2, #2
    29e2:	4b34      	ldr	r3, [pc, #208]	; (2ab4 <fluffy_trans_send+0x13c>)
    29e4:	4798      	blx	r3
	sprintf( ext_header_buffer, "User-Agent:samd21\r\nX-Parse-Client-Version:1.0\r\nX-Parse-Application-Id: %s\r\nX-Parse-Client-Key: %s\r\n",
    29e6:	a826      	add	r0, sp, #152	; 0x98
    29e8:	493a      	ldr	r1, [pc, #232]	; (2ad4 <fluffy_trans_send+0x15c>)
    29ea:	1c3a      	adds	r2, r7, #0
    29ec:	1c3b      	adds	r3, r7, #0
    29ee:	3329      	adds	r3, #41	; 0x29
    29f0:	4c39      	ldr	r4, [pc, #228]	; (2ad8 <fluffy_trans_send+0x160>)
    29f2:	47a0      	blx	r4
//		fluffy_device_config_get_value( "applicationId" ),
//		fluffy_device_config_get_value( "clientKey" ) );
		parseClient->applicationId,
		parseClient->clientKey);

        if (addInstallation) {
    29f4:	9bac      	ldr	r3, [sp, #688]	; 0x2b0
    29f6:	2b00      	cmp	r3, #0
    29f8:	d01d      	beq.n	2a36 <fluffy_trans_send+0xbe>
          if (parseClient->installationId[0])
    29fa:	2352      	movs	r3, #82	; 0x52
    29fc:	5cfb      	ldrb	r3, [r7, r3]
    29fe:	2b00      	cmp	r3, #0
    2a00:	d00a      	beq.n	2a18 <fluffy_trans_send+0xa0>
            sprintf(ext_header_buffer + strlen(ext_header_buffer), "X-Parse-Installation-Id:%s\r\n",  parseClient->installationId);
    2a02:	a826      	add	r0, sp, #152	; 0x98
    2a04:	4b28      	ldr	r3, [pc, #160]	; (2aa8 <fluffy_trans_send+0x130>)
    2a06:	4798      	blx	r3
    2a08:	ab26      	add	r3, sp, #152	; 0x98
    2a0a:	469c      	mov	ip, r3
    2a0c:	4460      	add	r0, ip
    2a0e:	4933      	ldr	r1, [pc, #204]	; (2adc <fluffy_trans_send+0x164>)
    2a10:	1c3a      	adds	r2, r7, #0
    2a12:	3252      	adds	r2, #82	; 0x52
    2a14:	4b30      	ldr	r3, [pc, #192]	; (2ad8 <fluffy_trans_send+0x160>)
    2a16:	4798      	blx	r3
          if (parseClient->sessionToken[0])
    2a18:	239c      	movs	r3, #156	; 0x9c
    2a1a:	5cfb      	ldrb	r3, [r7, r3]
    2a1c:	2b00      	cmp	r3, #0
    2a1e:	d00a      	beq.n	2a36 <fluffy_trans_send+0xbe>
            sprintf(ext_header_buffer + strlen(ext_header_buffer), "X-Parse-Session-Token:%s\r\n", parseClient->sessionToken);
    2a20:	a826      	add	r0, sp, #152	; 0x98
    2a22:	4b21      	ldr	r3, [pc, #132]	; (2aa8 <fluffy_trans_send+0x130>)
    2a24:	4798      	blx	r3
    2a26:	ab26      	add	r3, sp, #152	; 0x98
    2a28:	469c      	mov	ip, r3
    2a2a:	4460      	add	r0, ip
    2a2c:	1c3a      	adds	r2, r7, #0
    2a2e:	329c      	adds	r2, #156	; 0x9c
    2a30:	492b      	ldr	r1, [pc, #172]	; (2ae0 <fluffy_trans_send+0x168>)
    2a32:	4b29      	ldr	r3, [pc, #164]	; (2ad8 <fluffy_trans_send+0x160>)
    2a34:	4798      	blx	r3
        }

	char url_buffer[ 128 ] = { 0, }; // for our purposes that is enough. Standard allows up to 2048
    2a36:	a806      	add	r0, sp, #24
    2a38:	2100      	movs	r1, #0
    2a3a:	2280      	movs	r2, #128	; 0x80
    2a3c:	4b1d      	ldr	r3, [pc, #116]	; (2ab4 <fluffy_trans_send+0x13c>)
    2a3e:	4798      	blx	r3
	sprintf( url_buffer, "%s%s", HTTP_CLIENT_PARSE_SERVER_URL, httpPath );
    2a40:	a806      	add	r0, sp, #24
    2a42:	4928      	ldr	r1, [pc, #160]	; (2ae4 <fluffy_trans_send+0x16c>)
    2a44:	4a28      	ldr	r2, [pc, #160]	; (2ae8 <fluffy_trans_send+0x170>)
    2a46:	9b04      	ldr	r3, [sp, #16]
    2a48:	4c23      	ldr	r4, [pc, #140]	; (2ad8 <fluffy_trans_send+0x160>)
    2a4a:	47a0      	blx	r4

	int httpMethod = 0;
	if( 0 == strcmp( httpVerb, "GET" ) )
    2a4c:	9c03      	ldr	r4, [sp, #12]
    2a4e:	1c20      	adds	r0, r4, #0
    2a50:	4926      	ldr	r1, [pc, #152]	; (2aec <fluffy_trans_send+0x174>)
    2a52:	4b27      	ldr	r3, [pc, #156]	; (2af0 <fluffy_trans_send+0x178>)
    2a54:	4798      	blx	r3
		httpMethod = HTTP_METHOD_GET;
    2a56:	2201      	movs	r2, #1

	char url_buffer[ 128 ] = { 0, }; // for our purposes that is enough. Standard allows up to 2048
	sprintf( url_buffer, "%s%s", HTTP_CLIENT_PARSE_SERVER_URL, httpPath );

	int httpMethod = 0;
	if( 0 == strcmp( httpVerb, "GET" ) )
    2a58:	2800      	cmp	r0, #0
    2a5a:	d015      	beq.n	2a88 <fluffy_trans_send+0x110>
		httpMethod = HTTP_METHOD_GET;
	else if( 0 == strcmp( httpVerb, "POST" ) )
    2a5c:	1c20      	adds	r0, r4, #0
    2a5e:	4925      	ldr	r1, [pc, #148]	; (2af4 <fluffy_trans_send+0x17c>)
    2a60:	4b23      	ldr	r3, [pc, #140]	; (2af0 <fluffy_trans_send+0x178>)
    2a62:	4798      	blx	r3
		httpMethod = HTTP_METHOD_POST;
    2a64:	2202      	movs	r2, #2
	sprintf( url_buffer, "%s%s", HTTP_CLIENT_PARSE_SERVER_URL, httpPath );

	int httpMethod = 0;
	if( 0 == strcmp( httpVerb, "GET" ) )
		httpMethod = HTTP_METHOD_GET;
	else if( 0 == strcmp( httpVerb, "POST" ) )
    2a66:	2800      	cmp	r0, #0
    2a68:	d00e      	beq.n	2a88 <fluffy_trans_send+0x110>
		httpMethod = HTTP_METHOD_POST;
	else if( 0 == strcmp( httpVerb, "PUT" ) )
    2a6a:	1c20      	adds	r0, r4, #0
    2a6c:	4922      	ldr	r1, [pc, #136]	; (2af8 <fluffy_trans_send+0x180>)
    2a6e:	4b20      	ldr	r3, [pc, #128]	; (2af0 <fluffy_trans_send+0x178>)
    2a70:	4798      	blx	r3
		httpMethod = HTTP_METHOD_PUT;
    2a72:	2204      	movs	r2, #4
	int httpMethod = 0;
	if( 0 == strcmp( httpVerb, "GET" ) )
		httpMethod = HTTP_METHOD_GET;
	else if( 0 == strcmp( httpVerb, "POST" ) )
		httpMethod = HTTP_METHOD_POST;
	else if( 0 == strcmp( httpVerb, "PUT" ) )
    2a74:	2800      	cmp	r0, #0
    2a76:	d007      	beq.n	2a88 <fluffy_trans_send+0x110>
		httpMethod = HTTP_METHOD_PUT;
	else if( 0 == strcmp( httpVerb, "DELETE" ) )
    2a78:	1c20      	adds	r0, r4, #0
    2a7a:	4920      	ldr	r1, [pc, #128]	; (2afc <fluffy_trans_send+0x184>)
    2a7c:	4b1c      	ldr	r3, [pc, #112]	; (2af0 <fluffy_trans_send+0x178>)
    2a7e:	4798      	blx	r3
        }

	char url_buffer[ 128 ] = { 0, }; // for our purposes that is enough. Standard allows up to 2048
	sprintf( url_buffer, "%s%s", HTTP_CLIENT_PARSE_SERVER_URL, httpPath );

	int httpMethod = 0;
    2a80:	2200      	movs	r2, #0
		httpMethod = HTTP_METHOD_GET;
	else if( 0 == strcmp( httpVerb, "POST" ) )
		httpMethod = HTTP_METHOD_POST;
	else if( 0 == strcmp( httpVerb, "PUT" ) )
		httpMethod = HTTP_METHOD_PUT;
	else if( 0 == strcmp( httpVerb, "DELETE" ) )
    2a82:	2800      	cmp	r0, #0
    2a84:	d100      	bne.n	2a88 <fluffy_trans_send+0x110>
		httpMethod = HTTP_METHOD_DELETE;
    2a86:	3203      	adds	r2, #3

	//print_to_terminal("debug: right before http_client_send_request func\n\n");

	http_client_send_request( &http_client_parse,
    2a88:	b2d2      	uxtb	r2, r2
    2a8a:	2300      	movs	r3, #0
    2a8c:	9300      	str	r3, [sp, #0]
    2a8e:	481c      	ldr	r0, [pc, #112]	; (2b00 <fluffy_trans_send+0x188>)
    2a90:	a906      	add	r1, sp, #24
    2a92:	4b07      	ldr	r3, [pc, #28]	; (2ab0 <fluffy_trans_send+0x138>)
    2a94:	4c1b      	ldr	r4, [pc, #108]	; (2b04 <fluffy_trans_send+0x18c>)
    2a96:	47a0      	blx	r4
		httpMethod,
		&entity_parse,
		NULL );

	return 0;
}
    2a98:	2000      	movs	r0, #0
    2a9a:	23a7      	movs	r3, #167	; 0xa7
    2a9c:	009b      	lsls	r3, r3, #2
    2a9e:	449d      	add	sp, r3
    2aa0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2aa2:	46c0      	nop			; (mov r8, r8)
    2aa4:	fffffd64 	.word	0xfffffd64
    2aa8:	0000cde5 	.word	0x0000cde5
    2aac:	0000c069 	.word	0x0000c069
    2ab0:	20000438 	.word	0x20000438
    2ab4:	0000c0e1 	.word	0x0000c0e1
    2ab8:	0000c0a7 	.word	0x0000c0a7
    2abc:	000024ad 	.word	0x000024ad
    2ac0:	00002525 	.word	0x00002525
    2ac4:	000026f1 	.word	0x000026f1
    2ac8:	000027dd 	.word	0x000027dd
    2acc:	00010258 	.word	0x00010258
    2ad0:	000090f5 	.word	0x000090f5
    2ad4:	00010278 	.word	0x00010278
    2ad8:	0000c901 	.word	0x0000c901
    2adc:	000102dc 	.word	0x000102dc
    2ae0:	000102fc 	.word	0x000102fc
    2ae4:	00010318 	.word	0x00010318
    2ae8:	00010320 	.word	0x00010320
    2aec:	00010334 	.word	0x00010334
    2af0:	0000ca31 	.word	0x0000ca31
    2af4:	0000ef10 	.word	0x0000ef10
    2af8:	00010338 	.word	0x00010338
    2afc:	0001033c 	.word	0x0001033c
    2b00:	20000808 	.word	0x20000808
    2b04:	000008e1 	.word	0x000008e1

00002b08 <fluffy_trans_send_push_server>:

void fluffy_trans_send_push_server(uint8_t sock)
{
    2b08:	b530      	push	{r4, r5, lr}
    2b0a:	b0c1      	sub	sp, #260	; 0x104
    2b0c:	1c04      	adds	r4, r0, #0
	char send_buf[256] = { 0, };
    2b0e:	4668      	mov	r0, sp
    2b10:	2100      	movs	r1, #0
    2b12:	2280      	movs	r2, #128	; 0x80
    2b14:	0052      	lsls	r2, r2, #1
    2b16:	4b0c      	ldr	r3, [pc, #48]	; (2b48 <fluffy_trans_send_push_server+0x40>)
    2b18:	4798      	blx	r3

	sprintf(send_buf,
    2b1a:	4668      	mov	r0, sp
    2b1c:	490b      	ldr	r1, [pc, #44]	; (2b4c <fluffy_trans_send_push_server+0x44>)
    2b1e:	4a0c      	ldr	r2, [pc, #48]	; (2b50 <fluffy_trans_send_push_server+0x48>)
    2b20:	4b0c      	ldr	r3, [pc, #48]	; (2b54 <fluffy_trans_send_push_server+0x4c>)
    2b22:	4d0d      	ldr	r5, [pc, #52]	; (2b58 <fluffy_trans_send_push_server+0x50>)
    2b24:	47a8      	blx	r5
//		fluffy_device_config_get_value( "installationId" ),
//		fluffy_device_config_get_value( "applicationId" ));
		g_installationId,
		g_applicationId);

	print_to_terminal("send msg to Push Server\r\n%s\r\n", send_buf);
    2b26:	480d      	ldr	r0, [pc, #52]	; (2b5c <fluffy_trans_send_push_server+0x54>)
    2b28:	4669      	mov	r1, sp
    2b2a:	4b0d      	ldr	r3, [pc, #52]	; (2b60 <fluffy_trans_send_push_server+0x58>)
    2b2c:	4798      	blx	r3
	send((SOCKET)sock, send_buf, strlen(send_buf),0);
    2b2e:	4668      	mov	r0, sp
    2b30:	4b0c      	ldr	r3, [pc, #48]	; (2b64 <fluffy_trans_send_push_server+0x5c>)
    2b32:	4798      	blx	r3
    2b34:	1c02      	adds	r2, r0, #0
    2b36:	b260      	sxtb	r0, r4
    2b38:	b292      	uxth	r2, r2
    2b3a:	4669      	mov	r1, sp
    2b3c:	2300      	movs	r3, #0
    2b3e:	4c0a      	ldr	r4, [pc, #40]	; (2b68 <fluffy_trans_send_push_server+0x60>)
    2b40:	47a0      	blx	r4
}
    2b42:	b041      	add	sp, #260	; 0x104
    2b44:	bd30      	pop	{r4, r5, pc}
    2b46:	46c0      	nop			; (mov r8, r8)
    2b48:	0000c0e1 	.word	0x0000c0e1
    2b4c:	00010344 	.word	0x00010344
    2b50:	20000930 	.word	0x20000930
    2b54:	20000958 	.word	0x20000958
    2b58:	0000c901 	.word	0x0000c901
    2b5c:	000103a8 	.word	0x000103a8
    2b60:	000090f5 	.word	0x000090f5
    2b64:	0000cde5 	.word	0x0000cde5
    2b68:	000071f9 	.word	0x000071f9

00002b6c <fluffy_trans_socket_send_data_for_response>:
		}
	}
}

void fluffy_trans_socket_send_data_for_response(uint8_t sock, char* data)
{
    2b6c:	b538      	push	{r3, r4, r5, lr}
    2b6e:	1c0d      	adds	r5, r1, #0
	SOCKET socket = (SOCKET)sock;
    2b70:	b2c4      	uxtb	r4, r0
	eSockType type = get_socktype_by_sock(sock);
    2b72:	b260      	sxtb	r0, r4
    2b74:	4b11      	ldr	r3, [pc, #68]	; (2bbc <fluffy_trans_socket_send_data_for_response+0x50>)
    2b76:	4798      	blx	r3
    2b78:	1e01      	subs	r1, r0, #0
	for( int i = 0; i < strlen( data ); i++ )
		print_to_terminal( "%c", data[i] );
	print_to_terminal("\r\nfluffy_trans_socket_send_data_for_response / send data : end~~~\r\n");
#endif

	switch (type)
    2b7a:	2904      	cmp	r1, #4
    2b7c:	d003      	beq.n	2b86 <fluffy_trans_socket_send_data_for_response+0x1a>
    2b7e:	2806      	cmp	r0, #6
    2b80:	d00c      	beq.n	2b9c <fluffy_trans_socket_send_data_for_response+0x30>
    2b82:	2802      	cmp	r0, #2
    2b84:	d116      	bne.n	2bb4 <fluffy_trans_socket_send_data_for_response+0x48>
	{
		case FLUFFY_SOCK_TYPE_AP_SVR_CLT:
		case FLUFFY_SOCK_TYPE_STA_SVR_CLT:
		{
			send(socket, data, strlen( data ), 0);
    2b86:	1c28      	adds	r0, r5, #0
    2b88:	4b0d      	ldr	r3, [pc, #52]	; (2bc0 <fluffy_trans_socket_send_data_for_response+0x54>)
    2b8a:	4798      	blx	r3
    2b8c:	1c02      	adds	r2, r0, #0
    2b8e:	b260      	sxtb	r0, r4
    2b90:	b292      	uxth	r2, r2
    2b92:	1c29      	adds	r1, r5, #0
    2b94:	2300      	movs	r3, #0
    2b96:	4c0b      	ldr	r4, [pc, #44]	; (2bc4 <fluffy_trans_socket_send_data_for_response+0x58>)
    2b98:	47a0      	blx	r4
			break;
    2b9a:	e00e      	b.n	2bba <fluffy_trans_socket_send_data_for_response+0x4e>
		}

		case FLUFFY_SOCK_TYPE_PUSH:
		{
			tSockInfo* pushSock = get_sockinfo_by_socktype(FLUFFY_SOCK_TYPE_PUSH);
    2b9c:	2006      	movs	r0, #6
    2b9e:	4b0a      	ldr	r3, [pc, #40]	; (2bc8 <fluffy_trans_socket_send_data_for_response+0x5c>)
    2ba0:	4798      	blx	r3
			if (pushSock)
    2ba2:	2800      	cmp	r0, #0
    2ba4:	d009      	beq.n	2bba <fluffy_trans_socket_send_data_for_response+0x4e>
			{
				pushSock->parseCb( pushSock->param, 0, (char*)data );
    2ba6:	6882      	ldr	r2, [r0, #8]
    2ba8:	6843      	ldr	r3, [r0, #4]
    2baa:	1c10      	adds	r0, r2, #0
    2bac:	2100      	movs	r1, #0
    2bae:	1c2a      	adds	r2, r5, #0
    2bb0:	4798      	blx	r3
    2bb2:	e002      	b.n	2bba <fluffy_trans_socket_send_data_for_response+0x4e>
			break;
		}

		default:
		{
			print_to_terminal("send_data_for_response: Unknown type(%d)\r\n", type);
    2bb4:	4805      	ldr	r0, [pc, #20]	; (2bcc <fluffy_trans_socket_send_data_for_response+0x60>)
    2bb6:	4b06      	ldr	r3, [pc, #24]	; (2bd0 <fluffy_trans_socket_send_data_for_response+0x64>)
    2bb8:	4798      	blx	r3
			break;
		}
	}
}
    2bba:	bd38      	pop	{r3, r4, r5, pc}
    2bbc:	000024e5 	.word	0x000024e5
    2bc0:	0000cde5 	.word	0x0000cde5
    2bc4:	000071f9 	.word	0x000071f9
    2bc8:	000024b5 	.word	0x000024b5
    2bcc:	000103c8 	.word	0x000103c8
    2bd0:	000090f5 	.word	0x000090f5

00002bd4 <socket_event_cb>:
	if( i == DEFAULT_SOCKET_MAX_SIZE )
		print_to_terminal( "set_socket_info / sock overflow Error !!!!!\r\n" );
}

static void socket_event_cb(SOCKET sock, uint8_t u8Msg, void *pvMsg)
{
    2bd4:	b5f0      	push	{r4, r5, r6, r7, lr}
    2bd6:	b083      	sub	sp, #12
    2bd8:	1c05      	adds	r5, r0, #0
    2bda:	1c0c      	adds	r4, r1, #0
    2bdc:	1c16      	adds	r6, r2, #0
	if( FLUFFY_SOCK_TYPE_UNKNOWN == get_socktype_by_sock( sock ) )
    2bde:	4b91      	ldr	r3, [pc, #580]	; (2e24 <socket_event_cb+0x250>)
    2be0:	4798      	blx	r3
    2be2:	9000      	str	r0, [sp, #0]
    2be4:	1e07      	subs	r7, r0, #0
    2be6:	d105      	bne.n	2bf4 <socket_event_cb+0x20>
	{
		http_client_socket_event_handler( sock, u8Msg, pvMsg );
    2be8:	1c28      	adds	r0, r5, #0
    2bea:	1c21      	adds	r1, r4, #0
    2bec:	1c32      	adds	r2, r6, #0
    2bee:	4b8e      	ldr	r3, [pc, #568]	; (2e28 <socket_event_cb+0x254>)
    2bf0:	4798      	blx	r3
		return;
    2bf2:	e115      	b.n	2e20 <socket_event_cb+0x24c>

	// http client for parse request
	///////////////////////////////////////////////////////////////
	// tcp for push and provisioning

	switch (u8Msg)
    2bf4:	2c07      	cmp	r4, #7
    2bf6:	d900      	bls.n	2bfa <socket_event_cb+0x26>
    2bf8:	e112      	b.n	2e20 <socket_event_cb+0x24c>
    2bfa:	00a4      	lsls	r4, r4, #2
    2bfc:	4b8b      	ldr	r3, [pc, #556]	; (2e2c <socket_event_cb+0x258>)
    2bfe:	591b      	ldr	r3, [r3, r4]
    2c00:	469f      	mov	pc, r3
	{
		/* Socket(Server) bind */
		case SOCKET_MSG_BIND:
		{
			tstrSocketBindMsg *pstrBind = (tstrSocketBindMsg *)pvMsg;
			if (pstrBind && pstrBind->status == 0)
    2c02:	2e00      	cmp	r6, #0
    2c04:	d008      	beq.n	2c18 <socket_event_cb+0x44>
    2c06:	2300      	movs	r3, #0
    2c08:	56f3      	ldrsb	r3, [r6, r3]
    2c0a:	2b00      	cmp	r3, #0
    2c0c:	d104      	bne.n	2c18 <socket_event_cb+0x44>
			{
				listen(sock, 0);
    2c0e:	1c28      	adds	r0, r5, #0
    2c10:	2100      	movs	r1, #0
    2c12:	4b87      	ldr	r3, [pc, #540]	; (2e30 <socket_event_cb+0x25c>)
    2c14:	4798      	blx	r3
    2c16:	e103      	b.n	2e20 <socket_event_cb+0x24c>
			}
			else
			{
				print_to_terminal("socket_cb: bind Error !!!!!\r\n");
    2c18:	4886      	ldr	r0, [pc, #536]	; (2e34 <socket_event_cb+0x260>)
    2c1a:	4b87      	ldr	r3, [pc, #540]	; (2e38 <socket_event_cb+0x264>)
    2c1c:	4798      	blx	r3
				close_current_socket(sock);
    2c1e:	1c28      	adds	r0, r5, #0
    2c20:	4b86      	ldr	r3, [pc, #536]	; (2e3c <socket_event_cb+0x268>)
    2c22:	4798      	blx	r3
    2c24:	e0fc      	b.n	2e20 <socket_event_cb+0x24c>

		/* Socket(Server) listen */
		case SOCKET_MSG_LISTEN:
		{
			tstrSocketListenMsg *pstrListen = (tstrSocketListenMsg *)pvMsg;
			if (pstrListen && pstrListen->status == 0)
    2c26:	2e00      	cmp	r6, #0
    2c28:	d00c      	beq.n	2c44 <socket_event_cb+0x70>
    2c2a:	2300      	movs	r3, #0
    2c2c:	56f3      	ldrsb	r3, [r6, r3]
    2c2e:	2b00      	cmp	r3, #0
    2c30:	d108      	bne.n	2c44 <socket_event_cb+0x70>
			{
				print_to_terminal("socket_cb: Ready to listen.\r\n");
    2c32:	4883      	ldr	r0, [pc, #524]	; (2e40 <socket_event_cb+0x26c>)
    2c34:	4b80      	ldr	r3, [pc, #512]	; (2e38 <socket_event_cb+0x264>)
    2c36:	4798      	blx	r3
				accept(sock, NULL, 0);
    2c38:	1c28      	adds	r0, r5, #0
    2c3a:	2100      	movs	r1, #0
    2c3c:	2200      	movs	r2, #0
    2c3e:	4b81      	ldr	r3, [pc, #516]	; (2e44 <socket_event_cb+0x270>)
    2c40:	4798      	blx	r3
    2c42:	e0ed      	b.n	2e20 <socket_event_cb+0x24c>
			}
			else
			{
				print_to_terminal("socket_cb: listen Error !!!!!\r\n");
    2c44:	4880      	ldr	r0, [pc, #512]	; (2e48 <socket_event_cb+0x274>)
    2c46:	4b7c      	ldr	r3, [pc, #496]	; (2e38 <socket_event_cb+0x264>)
    2c48:	4798      	blx	r3
				close_current_socket(sock);
    2c4a:	1c28      	adds	r0, r5, #0
    2c4c:	4b7b      	ldr	r3, [pc, #492]	; (2e3c <socket_event_cb+0x268>)
    2c4e:	4798      	blx	r3
    2c50:	e0e6      	b.n	2e20 <socket_event_cb+0x24c>

		/* Socket(Server) accept */
		case SOCKET_MSG_ACCEPT:
		{
			tstrSocketAcceptMsg *pstrAccept = (tstrSocketAcceptMsg *)pvMsg;
			if (pstrAccept)
    2c52:	2e00      	cmp	r6, #0
    2c54:	d030      	beq.n	2cb8 <socket_event_cb+0xe4>
			{
				accept(sock, (struct sockaddr *)&pstrAccept->strAddr, NULL);
    2c56:	1d31      	adds	r1, r6, #4
    2c58:	1c28      	adds	r0, r5, #0
    2c5a:	2200      	movs	r2, #0
    2c5c:	4b79      	ldr	r3, [pc, #484]	; (2e44 <socket_event_cb+0x270>)
    2c5e:	4798      	blx	r3

				if (pstrAccept->sock >= 0)
    2c60:	7834      	ldrb	r4, [r6, #0]
    2c62:	b263      	sxtb	r3, r4
    2c64:	2b00      	cmp	r3, #0
    2c66:	da00      	bge.n	2c6a <socket_event_cb+0x96>
    2c68:	e0da      	b.n	2e20 <socket_event_cb+0x24c>
				{
					eSockType type = get_socktype_by_sock(sock);
    2c6a:	1c28      	adds	r0, r5, #0
    2c6c:	4b6d      	ldr	r3, [pc, #436]	; (2e24 <socket_event_cb+0x250>)
    2c6e:	4798      	blx	r3

					if (type == FLUFFY_SOCK_TYPE_AP_SVR)
    2c70:	2801      	cmp	r0, #1
    2c72:	d10b      	bne.n	2c8c <socket_event_cb+0xb8>
					{
						set_socket_info(pstrAccept->sock, FLUFFY_SOCK_TYPE_AP_SVR_CLT, NULL, NULL);
    2c74:	b260      	sxtb	r0, r4
    2c76:	2102      	movs	r1, #2
    2c78:	2200      	movs	r2, #0
    2c7a:	2300      	movs	r3, #0
    2c7c:	4c73      	ldr	r4, [pc, #460]	; (2e4c <socket_event_cb+0x278>)
    2c7e:	47a0      	blx	r4
						print_to_terminal("socket_cb: AP Accepted socket(%d) is created.\r\n", pstrAccept->sock);
    2c80:	2100      	movs	r1, #0
    2c82:	5671      	ldrsb	r1, [r6, r1]
    2c84:	4872      	ldr	r0, [pc, #456]	; (2e50 <socket_event_cb+0x27c>)
    2c86:	4b6c      	ldr	r3, [pc, #432]	; (2e38 <socket_event_cb+0x264>)
    2c88:	4798      	blx	r3
    2c8a:	e00c      	b.n	2ca6 <socket_event_cb+0xd2>

					}

					if (type == FLUFFY_SOCK_TYPE_STA_SVR)
    2c8c:	2803      	cmp	r0, #3
    2c8e:	d10a      	bne.n	2ca6 <socket_event_cb+0xd2>
					{
						set_socket_info(pstrAccept->sock, FLUFFY_SOCK_TYPE_STA_SVR_CLT, NULL, NULL);
    2c90:	b260      	sxtb	r0, r4
    2c92:	2104      	movs	r1, #4
    2c94:	2200      	movs	r2, #0
    2c96:	2300      	movs	r3, #0
    2c98:	4c6c      	ldr	r4, [pc, #432]	; (2e4c <socket_event_cb+0x278>)
    2c9a:	47a0      	blx	r4
						print_to_terminal("socket_cb: STA Accepted socket(%d) is created.\r\n", pstrAccept->sock);
    2c9c:	2100      	movs	r1, #0
    2c9e:	5671      	ldrsb	r1, [r6, r1]
    2ca0:	486c      	ldr	r0, [pc, #432]	; (2e54 <socket_event_cb+0x280>)
    2ca2:	4b65      	ldr	r3, [pc, #404]	; (2e38 <socket_event_cb+0x264>)
    2ca4:	4798      	blx	r3
					}

					recv(pstrAccept->sock, socketBuffer, RESP_BUFFER_MAX_SIZE, 0);
    2ca6:	2000      	movs	r0, #0
    2ca8:	5630      	ldrsb	r0, [r6, r0]
    2caa:	496b      	ldr	r1, [pc, #428]	; (2e58 <socket_event_cb+0x284>)
    2cac:	2280      	movs	r2, #128	; 0x80
    2cae:	0092      	lsls	r2, r2, #2
    2cb0:	2300      	movs	r3, #0
    2cb2:	4c6a      	ldr	r4, [pc, #424]	; (2e5c <socket_event_cb+0x288>)
    2cb4:	47a0      	blx	r4
    2cb6:	e0b3      	b.n	2e20 <socket_event_cb+0x24c>
				}
			}
			else
			{
				print_to_terminal("socket_cb: accept Error !!!!! / sock : %d\r\n", sock );
    2cb8:	4869      	ldr	r0, [pc, #420]	; (2e60 <socket_event_cb+0x28c>)
    2cba:	1c29      	adds	r1, r5, #0
    2cbc:	4b5e      	ldr	r3, [pc, #376]	; (2e38 <socket_event_cb+0x264>)
    2cbe:	4798      	blx	r3
				close_current_socket(sock);
    2cc0:	1c28      	adds	r0, r5, #0
    2cc2:	4b5e      	ldr	r3, [pc, #376]	; (2e3c <socket_event_cb+0x268>)
    2cc4:	4798      	blx	r3
    2cc6:	e0ab      	b.n	2e20 <socket_event_cb+0x24c>
		case SOCKET_MSG_CONNECT:
		{
			eSockType type = get_socktype_by_sock(sock);

			tstrSocketConnectMsg *pstrConnect = (tstrSocketConnectMsg *)pvMsg;
			if (pstrConnect && pstrConnect->s8Error >= 0)
    2cc8:	2e00      	cmp	r6, #0
    2cca:	d01b      	beq.n	2d04 <socket_event_cb+0x130>
    2ccc:	7872      	ldrb	r2, [r6, #1]
    2cce:	b253      	sxtb	r3, r2
    2cd0:	2b00      	cmp	r3, #0
    2cd2:	db11      	blt.n	2cf8 <socket_event_cb+0x124>
			{
				if (type == FLUFFY_SOCK_TYPE_PUSH)
    2cd4:	2806      	cmp	r0, #6
    2cd6:	d107      	bne.n	2ce8 <socket_event_cb+0x114>
				{
					print_to_terminal("socket_cb: PUSH server connect success / sock : %d, type : %d\r\n", sock, type );
    2cd8:	4862      	ldr	r0, [pc, #392]	; (2e64 <socket_event_cb+0x290>)
    2cda:	1c29      	adds	r1, r5, #0
    2cdc:	2206      	movs	r2, #6
    2cde:	4b56      	ldr	r3, [pc, #344]	; (2e38 <socket_event_cb+0x264>)
    2ce0:	4798      	blx	r3

					fluffy_trans_send_push_server(sock);
    2ce2:	b2e8      	uxtb	r0, r5
    2ce4:	4b60      	ldr	r3, [pc, #384]	; (2e68 <socket_event_cb+0x294>)
    2ce6:	4798      	blx	r3
				}

				recv(sock, socketBuffer, RESP_BUFFER_MAX_SIZE, 0);
    2ce8:	1c28      	adds	r0, r5, #0
    2cea:	495b      	ldr	r1, [pc, #364]	; (2e58 <socket_event_cb+0x284>)
    2cec:	2280      	movs	r2, #128	; 0x80
    2cee:	0092      	lsls	r2, r2, #2
    2cf0:	2300      	movs	r3, #0
    2cf2:	4c5a      	ldr	r4, [pc, #360]	; (2e5c <socket_event_cb+0x288>)
    2cf4:	47a0      	blx	r4
					close_current_socket_only(sock);
					gethostbyname((uint8*)DEFAULT_PUSH_SERVER_NAME);
				}
				return ;
			}
			break;
    2cf6:	e093      	b.n	2e20 <socket_event_cb+0x24c>
				recv(sock, socketBuffer, RESP_BUFFER_MAX_SIZE, 0);
			}
			else
			{
				if( pstrConnect )
					print_to_terminal("socket_cb: connect Error !!!!!  sock close, socket, connect... (sock:%d, error:%d)\r\n", sock, pstrConnect->s8Error );
    2cf8:	b252      	sxtb	r2, r2
    2cfa:	485c      	ldr	r0, [pc, #368]	; (2e6c <socket_event_cb+0x298>)
    2cfc:	1c29      	adds	r1, r5, #0
    2cfe:	4b4e      	ldr	r3, [pc, #312]	; (2e38 <socket_event_cb+0x264>)
    2d00:	4798      	blx	r3
    2d02:	e003      	b.n	2d0c <socket_event_cb+0x138>
				else
					print_to_terminal("socket_cb: connect Error !!!!!  sock close, socket, connect... (sock:%d, error:UNKNOWN)\r\n", sock );
    2d04:	485a      	ldr	r0, [pc, #360]	; (2e70 <socket_event_cb+0x29c>)
    2d06:	1c29      	adds	r1, r5, #0
    2d08:	4b4b      	ldr	r3, [pc, #300]	; (2e38 <socket_event_cb+0x264>)
    2d0a:	4798      	blx	r3

				if (type == FLUFFY_SOCK_TYPE_PUSH)
    2d0c:	2f06      	cmp	r7, #6
    2d0e:	d000      	beq.n	2d12 <socket_event_cb+0x13e>
    2d10:	e086      	b.n	2e20 <socket_event_cb+0x24c>
				{
					close_current_socket_only(sock);
    2d12:	1c28      	adds	r0, r5, #0
    2d14:	4b57      	ldr	r3, [pc, #348]	; (2e74 <socket_event_cb+0x2a0>)
    2d16:	4798      	blx	r3
					gethostbyname((uint8*)DEFAULT_PUSH_SERVER_NAME);
    2d18:	4857      	ldr	r0, [pc, #348]	; (2e78 <socket_event_cb+0x2a4>)
    2d1a:	4b58      	ldr	r3, [pc, #352]	; (2e7c <socket_event_cb+0x2a8>)
    2d1c:	4798      	blx	r3
    2d1e:	e07f      	b.n	2e20 <socket_event_cb+0x24c>

		/* Message send */
		case SOCKET_MSG_SEND:
		{
			eSockType type = get_socktype_by_sock(sock);
			print_to_terminal("socket_cb: send success / sock : %d, type : %d\r\n", sock, type );
    2d20:	4857      	ldr	r0, [pc, #348]	; (2e80 <socket_event_cb+0x2ac>)
    2d22:	1c29      	adds	r1, r5, #0
    2d24:	9a00      	ldr	r2, [sp, #0]
    2d26:	4b44      	ldr	r3, [pc, #272]	; (2e38 <socket_event_cb+0x264>)
    2d28:	4798      	blx	r3

			switch (type)
    2d2a:	2f02      	cmp	r7, #2
    2d2c:	d178      	bne.n	2e20 <socket_event_cb+0x24c>
			{
				case FLUFFY_SOCK_TYPE_AP_SVR_CLT:
				{
					http_process_ap_recv_data(sock, NULL, 0, 0);
    2d2e:	b2e8      	uxtb	r0, r5
    2d30:	2100      	movs	r1, #0
    2d32:	2200      	movs	r2, #0
    2d34:	2300      	movs	r3, #0
    2d36:	4c53      	ldr	r4, [pc, #332]	; (2e84 <socket_event_cb+0x2b0>)
    2d38:	47a0      	blx	r4
					break;
    2d3a:	e071      	b.n	2e20 <socket_event_cb+0x24c>
		case SOCKET_MSG_RECV:
		{
			eSockType type = get_socktype_by_sock(sock);

			tstrSocketRecvMsg *pstrRecv = (tstrSocketRecvMsg *)pvMsg;
			if (pstrRecv && pstrRecv->s16BufferSize > 0)
    2d3c:	2e00      	cmp	r6, #0
    2d3e:	d046      	beq.n	2dce <socket_event_cb+0x1fa>
    2d40:	2204      	movs	r2, #4
    2d42:	5eb3      	ldrsh	r3, [r6, r2]
    2d44:	2b00      	cmp	r3, #0
    2d46:	dd42      	ble.n	2dce <socket_event_cb+0x1fa>
			{
				print_to_terminal("socket_cb: recv success / sock : %d, type : %d\r\n", sock, type );
    2d48:	484f      	ldr	r0, [pc, #316]	; (2e88 <socket_event_cb+0x2b4>)
    2d4a:	1c29      	adds	r1, r5, #0
    2d4c:	9a00      	ldr	r2, [sp, #0]
    2d4e:	4b3a      	ldr	r3, [pc, #232]	; (2e38 <socket_event_cb+0x264>)
    2d50:	4798      	blx	r3
					print_to_terminal( "%c", pstrRecv->pu8Buffer[i] );
				}
				print_to_terminal("\r\nrecv data : end~~~\r\n");
				*/

				switch (type)
    2d52:	2f04      	cmp	r7, #4
    2d54:	d00a      	beq.n	2d6c <socket_event_cb+0x198>
    2d56:	2f06      	cmp	r7, #6
    2d58:	d00f      	beq.n	2d7a <socket_event_cb+0x1a6>
    2d5a:	2f02      	cmp	r7, #2
    2d5c:	d12b      	bne.n	2db6 <socket_event_cb+0x1e2>
				{
					case FLUFFY_SOCK_TYPE_AP_SVR_CLT:
					{
						http_process_ap_recv_data(sock, pstrRecv->pu8Buffer, pstrRecv->s16BufferSize, pstrRecv->u16RemainingSize);
    2d5e:	b2e8      	uxtb	r0, r5
    2d60:	6831      	ldr	r1, [r6, #0]
    2d62:	88b2      	ldrh	r2, [r6, #4]
    2d64:	88f3      	ldrh	r3, [r6, #6]
    2d66:	4c47      	ldr	r4, [pc, #284]	; (2e84 <socket_event_cb+0x2b0>)
    2d68:	47a0      	blx	r4
						break;
    2d6a:	e028      	b.n	2dbe <socket_event_cb+0x1ea>
					}

					case FLUFFY_SOCK_TYPE_STA_SVR_CLT:
					{
						http_process_sta_recv_data(sock, pstrRecv->pu8Buffer, pstrRecv->s16BufferSize, pstrRecv->u16RemainingSize);
    2d6c:	b2e8      	uxtb	r0, r5
    2d6e:	6831      	ldr	r1, [r6, #0]
    2d70:	88b2      	ldrh	r2, [r6, #4]
    2d72:	88f3      	ldrh	r3, [r6, #6]
    2d74:	4c45      	ldr	r4, [pc, #276]	; (2e8c <socket_event_cb+0x2b8>)
    2d76:	47a0      	blx	r4
						break;
    2d78:	e021      	b.n	2dbe <socket_event_cb+0x1ea>
					}

					case FLUFFY_SOCK_TYPE_PUSH:
					{
						fluffy_trans_send_push_server(sock);
    2d7a:	b2eb      	uxtb	r3, r5
    2d7c:	9300      	str	r3, [sp, #0]
    2d7e:	1c18      	adds	r0, r3, #0
    2d80:	4b39      	ldr	r3, [pc, #228]	; (2e68 <socket_event_cb+0x294>)
    2d82:	4798      	blx	r3

						char* pushBuffer = malloc(pstrRecv->s16BufferSize + 1);
    2d84:	2204      	movs	r2, #4
    2d86:	5eb4      	ldrsh	r4, [r6, r2]
    2d88:	1c67      	adds	r7, r4, #1
    2d8a:	1c38      	adds	r0, r7, #0
    2d8c:	4b40      	ldr	r3, [pc, #256]	; (2e90 <socket_event_cb+0x2bc>)
    2d8e:	4798      	blx	r3
						memset(pushBuffer, 0, pstrRecv->s16BufferSize + 1);
    2d90:	9001      	str	r0, [sp, #4]
    2d92:	2100      	movs	r1, #0
    2d94:	1c3a      	adds	r2, r7, #0
    2d96:	4b3f      	ldr	r3, [pc, #252]	; (2e94 <socket_event_cb+0x2c0>)
    2d98:	4798      	blx	r3
						memcpy(pushBuffer, pstrRecv->pu8Buffer, pstrRecv->s16BufferSize);
    2d9a:	6831      	ldr	r1, [r6, #0]
    2d9c:	9e01      	ldr	r6, [sp, #4]
    2d9e:	1c30      	adds	r0, r6, #0
    2da0:	1c22      	adds	r2, r4, #0
    2da2:	4b3d      	ldr	r3, [pc, #244]	; (2e98 <socket_event_cb+0x2c4>)
    2da4:	4798      	blx	r3
						fluffy_trans_socket_send_data_for_response( sock, pushBuffer );
    2da6:	9800      	ldr	r0, [sp, #0]
    2da8:	1c31      	adds	r1, r6, #0
    2daa:	4b3c      	ldr	r3, [pc, #240]	; (2e9c <socket_event_cb+0x2c8>)
    2dac:	4798      	blx	r3
						free(pushBuffer);
    2dae:	1c30      	adds	r0, r6, #0
    2db0:	4b3b      	ldr	r3, [pc, #236]	; (2ea0 <socket_event_cb+0x2cc>)
    2db2:	4798      	blx	r3
						break;
    2db4:	e003      	b.n	2dbe <socket_event_cb+0x1ea>
					}

					default:
					{
						print_to_terminal("socket_cb:SOCKET_MSG_RECV, Unknown type(%d) Error !!!!!\r\n", type);
    2db6:	483b      	ldr	r0, [pc, #236]	; (2ea4 <socket_event_cb+0x2d0>)
    2db8:	9900      	ldr	r1, [sp, #0]
    2dba:	4b1f      	ldr	r3, [pc, #124]	; (2e38 <socket_event_cb+0x264>)
    2dbc:	4798      	blx	r3
						break;
					}
				}

				recv(sock, socketBuffer, RESP_BUFFER_MAX_SIZE, 0);
    2dbe:	1c28      	adds	r0, r5, #0
    2dc0:	4925      	ldr	r1, [pc, #148]	; (2e58 <socket_event_cb+0x284>)
    2dc2:	2280      	movs	r2, #128	; 0x80
    2dc4:	0092      	lsls	r2, r2, #2
    2dc6:	2300      	movs	r3, #0
    2dc8:	4c24      	ldr	r4, [pc, #144]	; (2e5c <socket_event_cb+0x288>)
    2dca:	47a0      	blx	r4
    2dcc:	e028      	b.n	2e20 <socket_event_cb+0x24c>
			}
			else
			{
				print_to_terminal("socket_cb: negative Error !!!!! / sock : %d, type : %d, pstrRecv->s16BufferSize : %d\r\n", sock, type, pstrRecv->s16BufferSize );
    2dce:	2204      	movs	r2, #4
    2dd0:	5eb3      	ldrsh	r3, [r6, r2]
    2dd2:	4835      	ldr	r0, [pc, #212]	; (2ea8 <socket_event_cb+0x2d4>)
    2dd4:	1c29      	adds	r1, r5, #0
    2dd6:	9a00      	ldr	r2, [sp, #0]
    2dd8:	4c17      	ldr	r4, [pc, #92]	; (2e38 <socket_event_cb+0x264>)
    2dda:	47a0      	blx	r4

				switch( pstrRecv->s16BufferSize )
    2ddc:	88b4      	ldrh	r4, [r6, #4]
    2dde:	1c23      	adds	r3, r4, #0
    2de0:	330e      	adds	r3, #14
    2de2:	b29a      	uxth	r2, r3
    2de4:	2a0d      	cmp	r2, #13
    2de6:	d81b      	bhi.n	2e20 <socket_event_cb+0x24c>
    2de8:	0093      	lsls	r3, r2, #2
    2dea:	4a30      	ldr	r2, [pc, #192]	; (2eac <socket_event_cb+0x2d8>)
    2dec:	58d3      	ldr	r3, [r2, r3]
    2dee:	469f      	mov	pc, r3
					case SOCK_ERR_ADDR_IS_REQUIRED:		// -11
					case SOCK_ERR_BUFFER_FULL:				// -14
					case SOCK_ERR_CONN_ABORTED:			// -12
					case SOCK_ERR_TIMEOUT:					// -13
					{
						if( type == FLUFFY_SOCK_TYPE_PUSH )
    2df0:	2f06      	cmp	r7, #6
    2df2:	d115      	bne.n	2e20 <socket_event_cb+0x24c>
						{
							tSockInfo* pushSock = get_sockinfo_by_socktype(FLUFFY_SOCK_TYPE_PUSH);
    2df4:	2006      	movs	r0, #6
    2df6:	4b2e      	ldr	r3, [pc, #184]	; (2eb0 <socket_event_cb+0x2dc>)
    2df8:	4798      	blx	r3
							if (pushSock)
    2dfa:	2800      	cmp	r0, #0
    2dfc:	d005      	beq.n	2e0a <socket_event_cb+0x236>
							{
								pushSock->parseCb( pushSock->param, pstrRecv->s16BufferSize, NULL );
    2dfe:	6882      	ldr	r2, [r0, #8]
    2e00:	b221      	sxth	r1, r4
    2e02:	6843      	ldr	r3, [r0, #4]
    2e04:	1c10      	adds	r0, r2, #0
    2e06:	2200      	movs	r2, #0
    2e08:	4798      	blx	r3
							}

							print_to_terminal("socket_cb: Push socket receives Error( %d ) !!!!! / sock close, reconnect...\r\n", pstrRecv->s16BufferSize);
    2e0a:	2304      	movs	r3, #4
    2e0c:	5ef1      	ldrsh	r1, [r6, r3]
    2e0e:	4829      	ldr	r0, [pc, #164]	; (2eb4 <socket_event_cb+0x2e0>)
    2e10:	4b09      	ldr	r3, [pc, #36]	; (2e38 <socket_event_cb+0x264>)
    2e12:	4798      	blx	r3
							close_current_socket_only(sock);
    2e14:	1c28      	adds	r0, r5, #0
    2e16:	4b17      	ldr	r3, [pc, #92]	; (2e74 <socket_event_cb+0x2a0>)
    2e18:	4798      	blx	r3
							gethostbyname((uint8*)DEFAULT_PUSH_SERVER_NAME);
    2e1a:	4817      	ldr	r0, [pc, #92]	; (2e78 <socket_event_cb+0x2a4>)
    2e1c:	4b17      	ldr	r3, [pc, #92]	; (2e7c <socket_event_cb+0x2a8>)
    2e1e:	4798      	blx	r3
		}

		default:
			break;
	}
}
    2e20:	b003      	add	sp, #12
    2e22:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2e24:	000024e5 	.word	0x000024e5
    2e28:	00001021 	.word	0x00001021
    2e2c:	0000ff48 	.word	0x0000ff48
    2e30:	000070dd 	.word	0x000070dd
    2e34:	000103f4 	.word	0x000103f4
    2e38:	000090f5 	.word	0x000090f5
    2e3c:	000027ed 	.word	0x000027ed
    2e40:	00010414 	.word	0x00010414
    2e44:	00007139 	.word	0x00007139
    2e48:	00010434 	.word	0x00010434
    2e4c:	00002539 	.word	0x00002539
    2e50:	00010454 	.word	0x00010454
    2e54:	00010484 	.word	0x00010484
    2e58:	20000450 	.word	0x20000450
    2e5c:	00007295 	.word	0x00007295
    2e60:	000104b8 	.word	0x000104b8
    2e64:	000104e4 	.word	0x000104e4
    2e68:	00002b09 	.word	0x00002b09
    2e6c:	00010524 	.word	0x00010524
    2e70:	0001057c 	.word	0x0001057c
    2e74:	00002845 	.word	0x00002845
    2e78:	00010014 	.word	0x00010014
    2e7c:	00007421 	.word	0x00007421
    2e80:	000105d8 	.word	0x000105d8
    2e84:	00001d95 	.word	0x00001d95
    2e88:	0001060c 	.word	0x0001060c
    2e8c:	00002471 	.word	0x00002471
    2e90:	0000c069 	.word	0x0000c069
    2e94:	0000c0e1 	.word	0x0000c0e1
    2e98:	0000c0a7 	.word	0x0000c0a7
    2e9c:	00002b6d 	.word	0x00002b6d
    2ea0:	0000c07d 	.word	0x0000c07d
    2ea4:	00010640 	.word	0x00010640
    2ea8:	0001067c 	.word	0x0001067c
    2eac:	0000ff68 	.word	0x0000ff68
    2eb0:	000024b5 	.word	0x000024b5
    2eb4:	000106d4 	.word	0x000106d4

00002eb8 <fluffy_trans_set_parse_request_callback>:
	}
}

void fluffy_trans_set_parse_request_callback(parseRequestCallback callback, void* inParam)
{
	g_requestCallback = callback;
    2eb8:	4b02      	ldr	r3, [pc, #8]	; (2ec4 <fluffy_trans_set_parse_request_callback+0xc>)
    2eba:	6018      	str	r0, [r3, #0]
	g_requestCallback_inParam = inParam;
    2ebc:	4b02      	ldr	r3, [pc, #8]	; (2ec8 <fluffy_trans_set_parse_request_callback+0x10>)
    2ebe:	6019      	str	r1, [r3, #0]
}
    2ec0:	4770      	bx	lr
    2ec2:	46c0      	nop			; (mov r8, r8)
    2ec4:	20000650 	.word	0x20000650
    2ec8:	20000434 	.word	0x20000434

00002ecc <parseSendRequestInternal>:
  parseSendRequestInternal(client, httpVerb, httpPath, httpRequestBody, callback, 1);
  localWaitForRequestToFinish(client);
}

void parseSendRequestInternal(ParseClient client, const char *httpVerb, const char *httpPath, const char *httpRequestBody, parseRequestCallback callback, int addInstallHeader)
{
    2ecc:	b5f0      	push	{r4, r5, r6, r7, lr}
    2ece:	b085      	sub	sp, #20
    2ed0:	1c04      	adds	r4, r0, #0
    2ed2:	1c0f      	adds	r7, r1, #0
    2ed4:	9203      	str	r2, [sp, #12]
    2ed6:	1c1d      	adds	r5, r3, #0
        // Error
        return;
    }
	*/
	
	printf("debug: ignore parseClient->applicationID\n\n");
    2ed8:	480f      	ldr	r0, [pc, #60]	; (2f18 <parseSendRequestInternal+0x4c>)
    2eda:	4b10      	ldr	r3, [pc, #64]	; (2f1c <parseSendRequestInternal+0x50>)
    2edc:	4798      	blx	r3

    parseClient->parseRequestCallback = callback;
    2ede:	23cc      	movs	r3, #204	; 0xcc
    2ee0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    2ee2:	50e2      	str	r2, [r4, r3]

    localParseSetRequestCallback(parseClient, callback, (void *)parseClient);
    2ee4:	1c20      	adds	r0, r4, #0
    2ee6:	1c11      	adds	r1, r2, #0
    2ee8:	1c22      	adds	r2, r4, #0
    2eea:	4b0d      	ldr	r3, [pc, #52]	; (2f20 <parseSendRequestInternal+0x54>)
    2eec:	4798      	blx	r3

#ifdef CLIENT_DEBUG
    printf("[Parse] parseSendRequest: %s %s \"%s\".\r\n", httpVerb, httpPath, httpRequestBody ? httpRequestBody : "");
    2eee:	2d00      	cmp	r5, #0
    2ef0:	d001      	beq.n	2ef6 <parseSendRequestInternal+0x2a>
    2ef2:	1c2b      	adds	r3, r5, #0
    2ef4:	e000      	b.n	2ef8 <parseSendRequestInternal+0x2c>
    2ef6:	4b0b      	ldr	r3, [pc, #44]	; (2f24 <parseSendRequestInternal+0x58>)
    2ef8:	480b      	ldr	r0, [pc, #44]	; (2f28 <parseSendRequestInternal+0x5c>)
    2efa:	1c39      	adds	r1, r7, #0
    2efc:	9a03      	ldr	r2, [sp, #12]
    2efe:	4e07      	ldr	r6, [pc, #28]	; (2f1c <parseSendRequestInternal+0x50>)
    2f00:	47b0      	blx	r6
#endif /* CLIENT_DEBUG */

    localParseSendRequest(parseClient, httpVerb, httpPath, httpRequestBody, addInstallHeader);
    2f02:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    2f04:	9300      	str	r3, [sp, #0]
    2f06:	1c20      	adds	r0, r4, #0
    2f08:	1c39      	adds	r1, r7, #0
    2f0a:	9a03      	ldr	r2, [sp, #12]
    2f0c:	1c2b      	adds	r3, r5, #0
    2f0e:	4c07      	ldr	r4, [pc, #28]	; (2f2c <parseSendRequestInternal+0x60>)
    2f10:	47a0      	blx	r4
}
    2f12:	b005      	add	sp, #20
    2f14:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2f16:	46c0      	nop			; (mov r8, r8)
    2f18:	000107b4 	.word	0x000107b4
    2f1c:	000090f5 	.word	0x000090f5
    2f20:	00003335 	.word	0x00003335
    2f24:	00011d80 	.word	0x00011d80
    2f28:	000107e0 	.word	0x000107e0
    2f2c:	0000317d 	.word	0x0000317d

00002f30 <parseInitialize>:
    localWaitForRequestToFinish(parseClient);
}


ParseClient parseInitialize(const char *applicationId, const char *clientKey)
{
    2f30:	b5f0      	push	{r4, r5, r6, r7, lr}
    2f32:	b085      	sub	sp, #20
    2f34:	9000      	str	r0, [sp, #0]
    2f36:	9101      	str	r1, [sp, #4]
    ParseClientInternal *parseClient = (ParseClientInternal *)malloc(sizeof(ParseClientInternal));
    2f38:	20d4      	movs	r0, #212	; 0xd4
    2f3a:	4b50      	ldr	r3, [pc, #320]	; (307c <parseInitialize+0x14c>)
    2f3c:	4798      	blx	r3
    2f3e:	1c06      	adds	r6, r0, #0
    // This seeds number of processor ticks elapsed since last delay() call
    // It is semi-random, but still better than to count the seconds.
    s_randomSeed = SysTick->VAL;
    2f40:	4b4f      	ldr	r3, [pc, #316]	; (3080 <parseInitialize+0x150>)
    2f42:	689a      	ldr	r2, [r3, #8]
    2f44:	4b4f      	ldr	r3, [pc, #316]	; (3084 <parseInitialize+0x154>)
    2f46:	601a      	str	r2, [r3, #0]

    memset(parseClient->applicationId, 0, sizeof(parseClient->applicationId));
    2f48:	2400      	movs	r4, #0
    2f4a:	6004      	str	r4, [r0, #0]
    2f4c:	6044      	str	r4, [r0, #4]
    2f4e:	6084      	str	r4, [r0, #8]
    2f50:	60c4      	str	r4, [r0, #12]
    2f52:	6104      	str	r4, [r0, #16]
    2f54:	6144      	str	r4, [r0, #20]
    2f56:	6184      	str	r4, [r0, #24]
    2f58:	61c4      	str	r4, [r0, #28]
    2f5a:	6204      	str	r4, [r0, #32]
    2f5c:	6244      	str	r4, [r0, #36]	; 0x24
    2f5e:	2528      	movs	r5, #40	; 0x28
    2f60:	5544      	strb	r4, [r0, r5]
    memset(parseClient->clientKey, 0, sizeof(parseClient->clientKey));
    2f62:	2229      	movs	r2, #41	; 0x29
    2f64:	4694      	mov	ip, r2
    2f66:	4484      	add	ip, r0
    2f68:	4662      	mov	r2, ip
    2f6a:	9202      	str	r2, [sp, #8]
    2f6c:	4660      	mov	r0, ip
    2f6e:	2100      	movs	r1, #0
    2f70:	2229      	movs	r2, #41	; 0x29
    2f72:	4f45      	ldr	r7, [pc, #276]	; (3088 <parseInitialize+0x158>)
    2f74:	47b8      	blx	r7
    memset(parseClient->installationId, 0, sizeof(parseClient->installationId));
    2f76:	2252      	movs	r2, #82	; 0x52
    2f78:	4694      	mov	ip, r2
    2f7a:	44b4      	add	ip, r6
    2f7c:	4662      	mov	r2, ip
    2f7e:	9203      	str	r2, [sp, #12]
    2f80:	4660      	mov	r0, ip
    2f82:	2100      	movs	r1, #0
    2f84:	2225      	movs	r2, #37	; 0x25
    2f86:	47b8      	blx	r7
    memset(parseClient->installationObjectId, 0, sizeof(parseClient->installationObjectId));
    2f88:	1c32      	adds	r2, r6, #0
    2f8a:	3277      	adds	r2, #119	; 0x77
    2f8c:	1c10      	adds	r0, r2, #0
    2f8e:	2100      	movs	r1, #0
    2f90:	2225      	movs	r2, #37	; 0x25
    2f92:	47b8      	blx	r7
    memset(parseClient->sessionToken, 0, sizeof(parseClient->sessionToken));
    2f94:	1c37      	adds	r7, r6, #0
    2f96:	379c      	adds	r7, #156	; 0x9c
    2f98:	603c      	str	r4, [r7, #0]
    2f9a:	607c      	str	r4, [r7, #4]
    2f9c:	60bc      	str	r4, [r7, #8]
    2f9e:	60fc      	str	r4, [r7, #12]
    2fa0:	613c      	str	r4, [r7, #16]
    2fa2:	617c      	str	r4, [r7, #20]
    2fa4:	61bc      	str	r4, [r7, #24]
    2fa6:	61fc      	str	r4, [r7, #28]
    2fa8:	623c      	str	r4, [r7, #32]
    2faa:	627c      	str	r4, [r7, #36]	; 0x24
    2fac:	557c      	strb	r4, [r7, r5]
   
	fluffy_load_fluffy_info();
    2fae:	4b37      	ldr	r3, [pc, #220]	; (308c <parseInitialize+0x15c>)
    2fb0:	4798      	blx	r3

    // Copy the application id and the client key to the client
    if (applicationId != NULL) {
    2fb2:	9c00      	ldr	r4, [sp, #0]
    2fb4:	2c00      	cmp	r4, #0
    2fb6:	d00a      	beq.n	2fce <parseInitialize+0x9e>
      strncpy(parseClient->applicationId, applicationId, APPLICATION_ID_MAX_LEN);
    2fb8:	1c30      	adds	r0, r6, #0
    2fba:	1c21      	adds	r1, r4, #0
    2fbc:	2228      	movs	r2, #40	; 0x28
    2fbe:	4b34      	ldr	r3, [pc, #208]	; (3090 <parseInitialize+0x160>)
    2fc0:	4798      	blx	r3
      deviceConfigSetValue(0, "applicationId", applicationId);
    2fc2:	2000      	movs	r0, #0
    2fc4:	4933      	ldr	r1, [pc, #204]	; (3094 <parseInitialize+0x164>)
    2fc6:	1c22      	adds	r2, r4, #0
    2fc8:	4b33      	ldr	r3, [pc, #204]	; (3098 <parseInitialize+0x168>)
    2fca:	4798      	blx	r3
    2fcc:	e009      	b.n	2fe2 <parseInitialize+0xb2>
    } else {
      const char *tmp = deviceConfigGetValue(0, "applicationId");
    2fce:	2000      	movs	r0, #0
    2fd0:	4930      	ldr	r1, [pc, #192]	; (3094 <parseInitialize+0x164>)
    2fd2:	4b32      	ldr	r3, [pc, #200]	; (309c <parseInitialize+0x16c>)
    2fd4:	4798      	blx	r3
    2fd6:	1e01      	subs	r1, r0, #0
      if (tmp != NULL)
    2fd8:	d003      	beq.n	2fe2 <parseInitialize+0xb2>
        strncpy(parseClient->applicationId, tmp, APPLICATION_ID_MAX_LEN);
    2fda:	1c30      	adds	r0, r6, #0
    2fdc:	2228      	movs	r2, #40	; 0x28
    2fde:	4b2c      	ldr	r3, [pc, #176]	; (3090 <parseInitialize+0x160>)
    2fe0:	4798      	blx	r3
    }

    if (clientKey != NULL) {
    2fe2:	9c01      	ldr	r4, [sp, #4]
    2fe4:	2c00      	cmp	r4, #0
    2fe6:	d00a      	beq.n	2ffe <parseInitialize+0xce>
      strncpy(parseClient->clientKey, clientKey, CLIENT_KEY_MAX_LEN);
    2fe8:	9802      	ldr	r0, [sp, #8]
    2fea:	1c21      	adds	r1, r4, #0
    2fec:	2228      	movs	r2, #40	; 0x28
    2fee:	4b28      	ldr	r3, [pc, #160]	; (3090 <parseInitialize+0x160>)
    2ff0:	4798      	blx	r3
      deviceConfigSetValue(0, "clientKey", clientKey);
    2ff2:	2000      	movs	r0, #0
    2ff4:	492a      	ldr	r1, [pc, #168]	; (30a0 <parseInitialize+0x170>)
    2ff6:	1c22      	adds	r2, r4, #0
    2ff8:	4b27      	ldr	r3, [pc, #156]	; (3098 <parseInitialize+0x168>)
    2ffa:	4798      	blx	r3
    2ffc:	e009      	b.n	3012 <parseInitialize+0xe2>
    } else {
      const char *tmp = deviceConfigGetValue(0, "clientKey");
    2ffe:	2000      	movs	r0, #0
    3000:	4927      	ldr	r1, [pc, #156]	; (30a0 <parseInitialize+0x170>)
    3002:	4b26      	ldr	r3, [pc, #152]	; (309c <parseInitialize+0x16c>)
    3004:	4798      	blx	r3
    3006:	1e01      	subs	r1, r0, #0
      if (tmp != NULL)
    3008:	d003      	beq.n	3012 <parseInitialize+0xe2>
        strncpy(parseClient->clientKey, tmp, CLIENT_KEY_MAX_LEN);
    300a:	9802      	ldr	r0, [sp, #8]
    300c:	2228      	movs	r2, #40	; 0x28
    300e:	4b20      	ldr	r3, [pc, #128]	; (3090 <parseInitialize+0x160>)
    3010:	4798      	blx	r3
    }

    const char *tmp = deviceConfigGetValue(0, "sessionToken");
    3012:	2000      	movs	r0, #0
    3014:	4923      	ldr	r1, [pc, #140]	; (30a4 <parseInitialize+0x174>)
    3016:	4b21      	ldr	r3, [pc, #132]	; (309c <parseInitialize+0x16c>)
    3018:	4798      	blx	r3
    301a:	1e01      	subs	r1, r0, #0
    if (tmp != NULL)
    301c:	d003      	beq.n	3026 <parseInitialize+0xf6>
      strncpy(parseClient->sessionToken, tmp, SESSION_TOKEN_MAX_LEN);
    301e:	1c38      	adds	r0, r7, #0
    3020:	2228      	movs	r2, #40	; 0x28
    3022:	4b1b      	ldr	r3, [pc, #108]	; (3090 <parseInitialize+0x160>)
    3024:	4798      	blx	r3

    tmp = deviceConfigGetValue(0, "installationObjectId");
    3026:	2000      	movs	r0, #0
    3028:	491f      	ldr	r1, [pc, #124]	; (30a8 <parseInitialize+0x178>)
    302a:	4f1c      	ldr	r7, [pc, #112]	; (309c <parseInitialize+0x16c>)
    302c:	47b8      	blx	r7
    if (tmp != NULL)
      ; //strncpy(parseClient->installationObjectId, tmp, INSTALLATION_ID_MAX_LEN);

    parseClient->parsePushCallback = NULL;
    302e:	2300      	movs	r3, #0
    3030:	22c8      	movs	r2, #200	; 0xc8
    3032:	50b3      	str	r3, [r6, r2]
    parseClient->parseRequestCallback = NULL;
    3034:	3204      	adds	r2, #4
    3036:	50b3      	str	r3, [r6, r2]
    parseClient->isStartPushService = 0;
    3038:	3204      	adds	r2, #4
    303a:	50b3      	str	r3, [r6, r2]

    memset(g_applicationId, 0, sizeof(g_applicationId));
    303c:	4c1b      	ldr	r4, [pc, #108]	; (30ac <parseInitialize+0x17c>)
    303e:	1c20      	adds	r0, r4, #0
    3040:	2100      	movs	r1, #0
    3042:	3aa7      	subs	r2, #167	; 0xa7
    3044:	4d10      	ldr	r5, [pc, #64]	; (3088 <parseInitialize+0x158>)
    3046:	47a8      	blx	r5
    memset(g_installationId, 0, sizeof(g_installationId));
    3048:	4819      	ldr	r0, [pc, #100]	; (30b0 <parseInitialize+0x180>)
    304a:	2100      	movs	r1, #0
    304c:	2225      	movs	r2, #37	; 0x25
    304e:	47a8      	blx	r5
    strncpy(g_applicationId, applicationId, APPLICATION_ID_MAX_LEN);
    3050:	1c20      	adds	r0, r4, #0
    3052:	9900      	ldr	r1, [sp, #0]
    3054:	2228      	movs	r2, #40	; 0x28
    3056:	4b0e      	ldr	r3, [pc, #56]	; (3090 <parseInitialize+0x160>)
    3058:	4798      	blx	r3

    tmp = deviceConfigGetValue(0, "installationId");
    305a:	2000      	movs	r0, #0
    305c:	4915      	ldr	r1, [pc, #84]	; (30b4 <parseInitialize+0x184>)
    305e:	47b8      	blx	r7
    3060:	1e01      	subs	r1, r0, #0
    if (tmp != NULL) {
    3062:	d008      	beq.n	3076 <parseInitialize+0x146>
        strncpy(parseClient->installationId, tmp, INSTALLATION_ID_MAX_LEN);
    3064:	9d03      	ldr	r5, [sp, #12]
    3066:	1c28      	adds	r0, r5, #0
    3068:	2224      	movs	r2, #36	; 0x24
    306a:	4c09      	ldr	r4, [pc, #36]	; (3090 <parseInitialize+0x160>)
    306c:	47a0      	blx	r4
        strncpy(g_installationId, parseClient->installationId, INSTALLATION_ID_MAX_LEN);
    306e:	4810      	ldr	r0, [pc, #64]	; (30b0 <parseInitialize+0x180>)
    3070:	1c29      	adds	r1, r5, #0
    3072:	2224      	movs	r2, #36	; 0x24
    3074:	47a0      	blx	r4
    }

    return (ParseClient)parseClient;
}
    3076:	1c30      	adds	r0, r6, #0
    3078:	b005      	add	sp, #20
    307a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    307c:	0000c069 	.word	0x0000c069
    3080:	e000e010 	.word	0xe000e010
    3084:	20000654 	.word	0x20000654
    3088:	0000c0e1 	.word	0x0000c0e1
    308c:	000018d5 	.word	0x000018d5
    3090:	0000ce1b 	.word	0x0000ce1b
    3094:	00010988 	.word	0x00010988
    3098:	000031c9 	.word	0x000031c9
    309c:	000031b9 	.word	0x000031b9
    30a0:	00010998 	.word	0x00010998
    30a4:	000109a4 	.word	0x000109a4
    30a8:	00010730 	.word	0x00010730
    30ac:	20000958 	.word	0x20000958
    30b0:	20000930 	.word	0x20000930
    30b4:	00010808 	.word	0x00010808

000030b8 <parseSendRequest>:
    ParseClientInternal *parseClient = getInternalClient(client);

    localParseEventLoop(parseClient);
}

void parseSendRequest(ParseClient client, const char *httpVerb, const char *httpPath, const char *httpRequestBody, parseRequestCallback callback) {
    30b8:	b530      	push	{r4, r5, lr}
    30ba:	b083      	sub	sp, #12
    30bc:	1c04      	adds	r4, r0, #0
  //getInstallation(getInternalClient(client));
  parseSendRequestInternal(client, httpVerb, httpPath, httpRequestBody, callback, 1);
    30be:	9806      	ldr	r0, [sp, #24]
    30c0:	9000      	str	r0, [sp, #0]
    30c2:	2001      	movs	r0, #1
    30c4:	9001      	str	r0, [sp, #4]
    30c6:	1c20      	adds	r0, r4, #0
    30c8:	4d03      	ldr	r5, [pc, #12]	; (30d8 <parseSendRequest+0x20>)
    30ca:	47a8      	blx	r5
  localWaitForRequestToFinish(client);
    30cc:	1c20      	adds	r0, r4, #0
    30ce:	4b03      	ldr	r3, [pc, #12]	; (30dc <parseSendRequest+0x24>)
    30d0:	4798      	blx	r3
}
    30d2:	b003      	add	sp, #12
    30d4:	bd30      	pop	{r4, r5, pc}
    30d6:	46c0      	nop			; (mov r8, r8)
    30d8:	00002ecd 	.word	0x00002ecd
    30dc:	00003311 	.word	0x00003311

000030e0 <parseCommonRequestCallback>:
}
#endif

static volatile int s_request_in_process = 0;
static parseRequestCallback currentCallback = NULL;
static void parseCommonRequestCallback(ParseClient client, int error, int httpStatus, const char* httpResponseBody) {
    30e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  parseRequestCallback tmpCallback = currentCallback;
    30e2:	4c05      	ldr	r4, [pc, #20]	; (30f8 <parseCommonRequestCallback+0x18>)
    30e4:	6826      	ldr	r6, [r4, #0]
  s_request_in_process = 0;
    30e6:	2500      	movs	r5, #0
    30e8:	4f04      	ldr	r7, [pc, #16]	; (30fc <parseCommonRequestCallback+0x1c>)
    30ea:	603d      	str	r5, [r7, #0]
  currentCallback = NULL;
    30ec:	6025      	str	r5, [r4, #0]
  if (tmpCallback)
    30ee:	2e00      	cmp	r6, #0
    30f0:	d000      	beq.n	30f4 <parseCommonRequestCallback+0x14>
    tmpCallback(client, error, httpStatus, httpResponseBody);
    30f2:	47b0      	blx	r6
}
    30f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    30f6:	46c0      	nop			; (mov r8, r8)
    30f8:	2000065c 	.word	0x2000065c
    30fc:	20000658 	.word	0x20000658

00003100 <initWifiModule>:
/****************************************************************************/
/* Public Functions */
/****************************************************************************/

LocalParseStatus initWifiModule(void)
{
    3100:	b500      	push	{lr}
    3102:	b087      	sub	sp, #28
	sint8 ret = 0;
	tstrWifiInitParam param;

	/* Initialize the BSP. */
	nm_bsp_init();
    3104:	4b0c      	ldr	r3, [pc, #48]	; (3138 <initWifiModule+0x38>)
    3106:	4798      	blx	r3

	/* Initialize WIFI parameters structure. */
	memset((uint8_t *)&param, 0, sizeof(tstrWifiInitParam));
    3108:	2300      	movs	r3, #0
    310a:	9301      	str	r3, [sp, #4]
    310c:	9302      	str	r3, [sp, #8]
    310e:	9303      	str	r3, [sp, #12]
    3110:	9304      	str	r3, [sp, #16]
    3112:	9305      	str	r3, [sp, #20]
	param.pfAppWifiCb = fluffy_wifi_noti_cb;
    3114:	4b09      	ldr	r3, [pc, #36]	; (313c <initWifiModule+0x3c>)
    3116:	9300      	str	r3, [sp, #0]

	/* Initialize WINC1500 WIFI driver with data and status callbacks. */
	ret = m2m_wifi_init(&param);
    3118:	4668      	mov	r0, sp
    311a:	4b09      	ldr	r3, [pc, #36]	; (3140 <initWifiModule+0x40>)
    311c:	4798      	blx	r3
    311e:	1e01      	subs	r1, r0, #0
			
	if (M2M_SUCCESS != ret)
    3120:	d004      	beq.n	312c <initWifiModule+0x2c>
	{
		print_to_terminal("initWifiModule / m2m_wifi_init call error!(%d)\r\n", ret);
    3122:	4808      	ldr	r0, [pc, #32]	; (3144 <initWifiModule+0x44>)
    3124:	4b08      	ldr	r3, [pc, #32]	; (3148 <initWifiModule+0x48>)
    3126:	4798      	blx	r3
		return LOCAL_PARSE_ERROR_UNKNOWN;
    3128:	20ff      	movs	r0, #255	; 0xff
    312a:	e002      	b.n	3132 <initWifiModule+0x32>
	}

	/* Initialize Socket module */
	fluffy_trans_init_socket();
    312c:	4b07      	ldr	r3, [pc, #28]	; (314c <initWifiModule+0x4c>)
    312e:	4798      	blx	r3
#ifdef ENABLE_MDNS
	/* Initialize the Timer. */
	configure_timer();
#endif

	return LOCAL_PARSE_SUCCESS;
    3130:	2000      	movs	r0, #0
    3132:	b240      	sxtb	r0, r0
}
    3134:	b007      	add	sp, #28
    3136:	bd00      	pop	{pc}
    3138:	000047c9 	.word	0x000047c9
    313c:	00001401 	.word	0x00001401
    3140:	000057d5 	.word	0x000057d5
    3144:	000109d8 	.word	0x000109d8
    3148:	000090f5 	.word	0x000090f5
    314c:	00002889 	.word	0x00002889

00003150 <loadSettingsOrProvisionBoard>:

LocalParseStatus loadSettingsOrProvisionBoard(char* ssid, char* pw, int secType)
{
    3150:	b508      	push	{r3, lr}
	/* Check AP Information */
	if (fluffy_check_home_ap(ssid, pw, (uint8_t)secType))
    3152:	b2d2      	uxtb	r2, r2
    3154:	4b07      	ldr	r3, [pc, #28]	; (3174 <loadSettingsOrProvisionBoard+0x24>)
    3156:	4798      	blx	r3
    3158:	2800      	cmp	r0, #0
    315a:	d004      	beq.n	3166 <loadSettingsOrProvisionBoard+0x16>
	{
		gParseMode = M2M_WIFI_MODE_STA_ENABLE;
    315c:	2204      	movs	r2, #4
    315e:	4b06      	ldr	r3, [pc, #24]	; (3178 <loadSettingsOrProvisionBoard+0x28>)
    3160:	701a      	strb	r2, [r3, #0]
		return LOCAL_PARSE_SUCCESS;
    3162:	2000      	movs	r0, #0
    3164:	e003      	b.n	316e <loadSettingsOrProvisionBoard+0x1e>
	}
	else
	{
		gParseMode = M2M_WIFI_MODE_AP_ENABLE;
    3166:	2201      	movs	r2, #1
    3168:	4b03      	ldr	r3, [pc, #12]	; (3178 <loadSettingsOrProvisionBoard+0x28>)
    316a:	701a      	strb	r2, [r3, #0]
		return LOCAL_PARSE_PROVISIONING;
    316c:	2001      	movs	r0, #1
    316e:	b240      	sxtb	r0, r0
		
	}
}
    3170:	bd08      	pop	{r3, pc}
    3172:	46c0      	nop			; (mov r8, r8)
    3174:	00001a05 	.word	0x00001a05
    3178:	20000660 	.word	0x20000660

0000317c <localParseSendRequest>:
	fluffy_trans_set_parse_push_callback(callback, inParam);
	return LOCAL_PARSE_SUCCESS;
}

LocalParseStatus localParseSendRequest(ParseClientInternal* parseClient, char* httpVerb, char* httpPath, char* httpRequestBody, int addInstallation)
{
    317c:	b530      	push	{r4, r5, lr}
    317e:	b083      	sub	sp, #12
  s_request_in_process = 1;
    3180:	2501      	movs	r5, #1
    3182:	4c09      	ldr	r4, [pc, #36]	; (31a8 <localParseSendRequest+0x2c>)
    3184:	6025      	str	r5, [r4, #0]
  if( M2M_SUCCESS != fluffy_trans_send(parseClient, httpVerb, httpPath, httpRequestBody, addInstallation) )
    3186:	9c06      	ldr	r4, [sp, #24]
    3188:	9400      	str	r4, [sp, #0]
    318a:	4c08      	ldr	r4, [pc, #32]	; (31ac <localParseSendRequest+0x30>)
    318c:	47a0      	blx	r4
    s_request_in_process = 0;
    print_to_terminal("localParseSendRequest / fluffy_trans_send call error !!!!!\r\n");
    return LOCAL_PARSE_ERROR_UNKNOWN;
  }

  return LOCAL_PARSE_SUCCESS;
    318e:	2300      	movs	r3, #0
}

LocalParseStatus localParseSendRequest(ParseClientInternal* parseClient, char* httpVerb, char* httpPath, char* httpRequestBody, int addInstallation)
{
  s_request_in_process = 1;
  if( M2M_SUCCESS != fluffy_trans_send(parseClient, httpVerb, httpPath, httpRequestBody, addInstallation) )
    3190:	2800      	cmp	r0, #0
    3192:	d006      	beq.n	31a2 <localParseSendRequest+0x26>
  {
    s_request_in_process = 0;
    3194:	2200      	movs	r2, #0
    3196:	4b04      	ldr	r3, [pc, #16]	; (31a8 <localParseSendRequest+0x2c>)
    3198:	601a      	str	r2, [r3, #0]
    print_to_terminal("localParseSendRequest / fluffy_trans_send call error !!!!!\r\n");
    319a:	4805      	ldr	r0, [pc, #20]	; (31b0 <localParseSendRequest+0x34>)
    319c:	4b05      	ldr	r3, [pc, #20]	; (31b4 <localParseSendRequest+0x38>)
    319e:	4798      	blx	r3
    return LOCAL_PARSE_ERROR_UNKNOWN;
    31a0:	23ff      	movs	r3, #255	; 0xff
    31a2:	b258      	sxtb	r0, r3
  }

  return LOCAL_PARSE_SUCCESS;
}
    31a4:	b003      	add	sp, #12
    31a6:	bd30      	pop	{r4, r5, pc}
    31a8:	20000658 	.word	0x20000658
    31ac:	00002979 	.word	0x00002979
    31b0:	00010a0c 	.word	0x00010a0c
    31b4:	000090f5 	.word	0x000090f5

000031b8 <deviceConfigGetValue>:
	fluffy_device_config_add_key( key, label, value );
	return LOCAL_PARSE_SUCCESS;
}

const char * deviceConfigGetValue( int handle, const char *key )
{
    31b8:	b508      	push	{r3, lr}
	return fluffy_device_config_get_value( key );
    31ba:	1c08      	adds	r0, r1, #0
    31bc:	4b01      	ldr	r3, [pc, #4]	; (31c4 <deviceConfigGetValue+0xc>)
    31be:	4798      	blx	r3
}
    31c0:	bd08      	pop	{r3, pc}
    31c2:	46c0      	nop			; (mov r8, r8)
    31c4:	00001b65 	.word	0x00001b65

000031c8 <deviceConfigSetValue>:

void deviceConfigSetValue(int handle, const char *key, const char *value) {
    31c8:	b5f0      	push	{r4, r5, r6, r7, lr}
    31ca:	b083      	sub	sp, #12
    31cc:	9100      	str	r1, [sp, #0]
    31ce:	9201      	str	r2, [sp, #4]
  int total_keys = fluffy_device_config_get_count();
    31d0:	4b0f      	ldr	r3, [pc, #60]	; (3210 <deviceConfigSetValue+0x48>)
    31d2:	4798      	blx	r3
    31d4:	1e07      	subs	r7, r0, #0
  int index = -1;
  for (int i = 0; i < total_keys; ++i) {
    31d6:	dd0e      	ble.n	31f6 <deviceConfigSetValue+0x2e>
    31d8:	2400      	movs	r4, #0
    if (!strcmp(fluffy_device_config_get_key(i), key)) {
    31da:	4d0e      	ldr	r5, [pc, #56]	; (3214 <deviceConfigSetValue+0x4c>)
    31dc:	4e0e      	ldr	r6, [pc, #56]	; (3218 <deviceConfigSetValue+0x50>)
    31de:	1c20      	adds	r0, r4, #0
    31e0:	47a8      	blx	r5
    31e2:	9900      	ldr	r1, [sp, #0]
    31e4:	47b0      	blx	r6
    31e6:	2800      	cmp	r0, #0
    31e8:	d102      	bne.n	31f0 <deviceConfigSetValue+0x28>
      index = i;
      break;
    }
  }
  if (index == -1) {
    31ea:	1c63      	adds	r3, r4, #1
    31ec:	d109      	bne.n	3202 <deviceConfigSetValue+0x3a>
    31ee:	e002      	b.n	31f6 <deviceConfigSetValue+0x2e>
}

void deviceConfigSetValue(int handle, const char *key, const char *value) {
  int total_keys = fluffy_device_config_get_count();
  int index = -1;
  for (int i = 0; i < total_keys; ++i) {
    31f0:	3401      	adds	r4, #1
    31f2:	42bc      	cmp	r4, r7
    31f4:	d1f3      	bne.n	31de <deviceConfigSetValue+0x16>
  return LOCAL_PARSE_SUCCESS;
}

void deviceConfigAddKey( int handle, const char* key, const char* label, const char* value )
{
	fluffy_device_config_add_key( key, label, value );
    31f6:	9900      	ldr	r1, [sp, #0]
    31f8:	1c08      	adds	r0, r1, #0
    31fa:	2200      	movs	r2, #0
    31fc:	4b07      	ldr	r3, [pc, #28]	; (321c <deviceConfigSetValue+0x54>)
    31fe:	4798      	blx	r3
      index = i;
      break;
    }
  }
  if (index == -1) {
    index = total_keys;
    3200:	1c3c      	adds	r4, r7, #0
    deviceConfigAddKey(handle, key, key, NULL);
  }
  fluffy_device_config_set_value(index, value);
    3202:	1c20      	adds	r0, r4, #0
    3204:	9901      	ldr	r1, [sp, #4]
    3206:	4b06      	ldr	r3, [pc, #24]	; (3220 <deviceConfigSetValue+0x58>)
    3208:	4798      	blx	r3
}
    320a:	b003      	add	sp, #12
    320c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    320e:	46c0      	nop			; (mov r8, r8)
    3210:	00001c31 	.word	0x00001c31
    3214:	00001c15 	.word	0x00001c15
    3218:	0000ca31 	.word	0x0000ca31
    321c:	000017cd 	.word	0x000017cd
    3220:	00001bc1 	.word	0x00001bc1

00003224 <localParseEventLoop>:
  fluffy_remove_fluffy_info();
  fluffy_set_fluffy_info(true);
}

tenuWifiMode localParseEventLoop(ParseClientInternal *parseClient)
{
    3224:	b530      	push	{r4, r5, lr}
    3226:	b085      	sub	sp, #20
    3228:	1c05      	adds	r5, r0, #0
	tenuWifiMode wifiStatus = M2M_WIFI_MODE_UNKNOWN;

	while (m2m_wifi_handle_events(NULL) != M2M_SUCCESS) {
    322a:	4c2e      	ldr	r4, [pc, #184]	; (32e4 <localParseEventLoop+0xc0>)
    322c:	2000      	movs	r0, #0
    322e:	47a0      	blx	r4
    3230:	2800      	cmp	r0, #0
    3232:	d1fb      	bne.n	322c <localParseEventLoop+0x8>
	}
#endif

	//print_to_terminal("debug_3a: gParseMode = %d.\r\n", gParseMode);

	switch (gParseMode)
    3234:	4b2c      	ldr	r3, [pc, #176]	; (32e8 <localParseEventLoop+0xc4>)
    3236:	7819      	ldrb	r1, [r3, #0]
    3238:	2906      	cmp	r1, #6
    323a:	d846      	bhi.n	32ca <localParseEventLoop+0xa6>
    323c:	008b      	lsls	r3, r1, #2
    323e:	4a2b      	ldr	r2, [pc, #172]	; (32ec <localParseEventLoop+0xc8>)
    3240:	58d3      	ldr	r3, [r2, r3]
    3242:	469f      	mov	pc, r3
		case M2M_WIFI_MODE_UNKNOWN:
			break;

		case M2M_WIFI_MODE_AP_ENABLE:
		{
			uint8 macAddr[6] = {0,};
    3244:	ad02      	add	r5, sp, #8
    3246:	2300      	movs	r3, #0
    3248:	9302      	str	r3, [sp, #8]
    324a:	80ab      	strh	r3, [r5, #4]
			uint8_t macInfo[2] = {0,};
    324c:	ac01      	add	r4, sp, #4
    324e:	8023      	strh	r3, [r4, #0]

			m2m_wifi_get_mac_address(macAddr);
    3250:	1c28      	adds	r0, r5, #0
    3252:	4b27      	ldr	r3, [pc, #156]	; (32f0 <localParseEventLoop+0xcc>)
    3254:	4798      	blx	r3
			macInfo[0] = macAddr[4];
    3256:	792b      	ldrb	r3, [r5, #4]
    3258:	7023      	strb	r3, [r4, #0]
			macInfo[1] = macAddr[5];
    325a:	796b      	ldrb	r3, [r5, #5]
    325c:	7063      	strb	r3, [r4, #1]
			deviceConfigAddKey( 0, "installationId", "Installation ID", NULL );
			deviceConfigAddKey( 0, "sessionToken", "Session Token", NULL );
			deviceConfigAddKey( 0, "deviceName", "Device Name", NULL );*/

			/* AP Mode : Enable*/
			fluffy_wifi_ap_mode(1, macInfo);
    325e:	2001      	movs	r0, #1
    3260:	1c21      	adds	r1, r4, #0
    3262:	4b24      	ldr	r3, [pc, #144]	; (32f4 <localParseEventLoop+0xd0>)
    3264:	4798      	blx	r3
			//gParseMode = M2M_WIFI_MODE_AP_PROV;

			while(provisioning){
    3266:	4b24      	ldr	r3, [pc, #144]	; (32f8 <localParseEventLoop+0xd4>)
    3268:	781b      	ldrb	r3, [r3, #0]
    326a:	2b00      	cmp	r3, #0
    326c:	d006      	beq.n	327c <localParseEventLoop+0x58>
			m2m_wifi_handle_events(NULL);
    326e:	4d1d      	ldr	r5, [pc, #116]	; (32e4 <localParseEventLoop+0xc0>)

			/* AP Mode : Enable*/
			fluffy_wifi_ap_mode(1, macInfo);
			//gParseMode = M2M_WIFI_MODE_AP_PROV;

			while(provisioning){
    3270:	4c21      	ldr	r4, [pc, #132]	; (32f8 <localParseEventLoop+0xd4>)
			m2m_wifi_handle_events(NULL);
    3272:	2000      	movs	r0, #0
    3274:	47a8      	blx	r5

			/* AP Mode : Enable*/
			fluffy_wifi_ap_mode(1, macInfo);
			//gParseMode = M2M_WIFI_MODE_AP_PROV;

			while(provisioning){
    3276:	7823      	ldrb	r3, [r4, #0]
    3278:	2b00      	cmp	r3, #0
    327a:	d1fa      	bne.n	3272 <localParseEventLoop+0x4e>
			m2m_wifi_handle_events(NULL);
			}
			provisioning=1;
    327c:	2201      	movs	r2, #1
    327e:	4b1e      	ldr	r3, [pc, #120]	; (32f8 <localParseEventLoop+0xd4>)
    3280:	701a      	strb	r2, [r3, #0]
			wifiStatus = M2M_WIFI_MODE_STA_ENABLE;
			gParseMode = M2M_WIFI_MODE_STA_ENABLE;
    3282:	3203      	adds	r2, #3
    3284:	4b18      	ldr	r3, [pc, #96]	; (32e8 <localParseEventLoop+0xc4>)
    3286:	701a      	strb	r2, [r3, #0]

			while(provisioning){
			m2m_wifi_handle_events(NULL);
			}
			provisioning=1;
			wifiStatus = M2M_WIFI_MODE_STA_ENABLE;
    3288:	2004      	movs	r0, #4
    328a:	e029      	b.n	32e0 <localParseEventLoop+0xbc>
print_to_terminal( "deviceId = %s\r\n", deviceConfigGetValue( 0, "sessionToken" ) );
print_to_terminal( "name = %s\r\n", deviceConfigGetValue( 0, "deviceName" ) );
*/

			/* Station Mode : Enable */
			fluffy_wifi_stat_mode(1);
    328c:	2001      	movs	r0, #1
    328e:	4b1b      	ldr	r3, [pc, #108]	; (32fc <localParseEventLoop+0xd8>)
    3290:	4798      	blx	r3
			gParseMode = M2M_WIFI_MODE_STA_CON;
    3292:	2205      	movs	r2, #5
    3294:	4b14      	ldr	r3, [pc, #80]	; (32e8 <localParseEventLoop+0xc4>)
    3296:	701a      	strb	r2, [r3, #0]

			wifiStatus = M2M_WIFI_MODE_STA_CON;
    3298:	2005      	movs	r0, #5
			
			//print_to_terminal("debug_3b (M2M_WIFI_MODE_STA_ENABLE): gParseMode = %d.\r\n", gParseMode);
			
			break;
    329a:	e021      	b.n	32e0 <localParseEventLoop+0xbc>
		}

		case M2M_WIFI_MODE_STA_CON:
		{
			if (fluffy_get_wifi_connected())
    329c:	4b18      	ldr	r3, [pc, #96]	; (3300 <localParseEventLoop+0xdc>)
    329e:	4798      	blx	r3
    32a0:	2800      	cmp	r0, #0
    32a2:	d01a      	beq.n	32da <localParseEventLoop+0xb6>
				}

				tcc_enable_callback(&tempTccModule, TCC_CALLBACK_CHANNEL_3);
#endif

				gParseMode = M2M_WIFI_MODE_STA;
    32a4:	2206      	movs	r2, #6
    32a6:	4b10      	ldr	r3, [pc, #64]	; (32e8 <localParseEventLoop+0xc4>)
    32a8:	701a      	strb	r2, [r3, #0]

				wifiStatus = M2M_WIFI_MODE_STA;
    32aa:	2006      	movs	r0, #6
    32ac:	e018      	b.n	32e0 <localParseEventLoop+0xbc>
			break;
		}

		case M2M_WIFI_MODE_STA:
		{
			if( parseClient && parseClient->isStartPushService )
    32ae:	2d00      	cmp	r5, #0
    32b0:	d015      	beq.n	32de <localParseEventLoop+0xba>
    32b2:	23d0      	movs	r3, #208	; 0xd0
    32b4:	58eb      	ldr	r3, [r5, r3]
			{
				parseClient->isStartPushService = 0;
				fluffy_trans_sta_socket();
			}

			wifiStatus = M2M_WIFI_MODE_STA;
    32b6:	2006      	movs	r0, #6
			break;
		}

		case M2M_WIFI_MODE_STA:
		{
			if( parseClient && parseClient->isStartPushService )
    32b8:	2b00      	cmp	r3, #0
    32ba:	d011      	beq.n	32e0 <localParseEventLoop+0xbc>
			{
				parseClient->isStartPushService = 0;
    32bc:	2200      	movs	r2, #0
    32be:	23d0      	movs	r3, #208	; 0xd0
    32c0:	50ea      	str	r2, [r5, r3]
				fluffy_trans_sta_socket();
    32c2:	4b10      	ldr	r3, [pc, #64]	; (3304 <localParseEventLoop+0xe0>)
    32c4:	4798      	blx	r3
			}

			wifiStatus = M2M_WIFI_MODE_STA;
    32c6:	2006      	movs	r0, #6
    32c8:	e00a      	b.n	32e0 <localParseEventLoop+0xbc>
			break;
		}

		default:
		{
			print_to_terminal("Unknown WIFI Mode : %d\r\n", gParseMode);
    32ca:	480f      	ldr	r0, [pc, #60]	; (3308 <localParseEventLoop+0xe4>)
    32cc:	4b0f      	ldr	r3, [pc, #60]	; (330c <localParseEventLoop+0xe8>)
    32ce:	4798      	blx	r3
			wifiStatus = gParseMode;
    32d0:	4b05      	ldr	r3, [pc, #20]	; (32e8 <localParseEventLoop+0xc4>)
    32d2:	7818      	ldrb	r0, [r3, #0]
			break;
    32d4:	e004      	b.n	32e0 <localParseEventLoop+0xbc>
  fluffy_set_fluffy_info(true);
}

tenuWifiMode localParseEventLoop(ParseClientInternal *parseClient)
{
	tenuWifiMode wifiStatus = M2M_WIFI_MODE_UNKNOWN;
    32d6:	2000      	movs	r0, #0
    32d8:	e002      	b.n	32e0 <localParseEventLoop+0xbc>
    32da:	2000      	movs	r0, #0
    32dc:	e000      	b.n	32e0 <localParseEventLoop+0xbc>
			{
				parseClient->isStartPushService = 0;
				fluffy_trans_sta_socket();
			}

			wifiStatus = M2M_WIFI_MODE_STA;
    32de:	2006      	movs	r0, #6
		}
	}

	//print_to_terminal("\n\n");
	return wifiStatus;
}
    32e0:	b005      	add	sp, #20
    32e2:	bd30      	pop	{r4, r5, pc}
    32e4:	00005831 	.word	0x00005831
    32e8:	20000660 	.word	0x20000660
    32ec:	000109bc 	.word	0x000109bc
    32f0:	00005a4d 	.word	0x00005a4d
    32f4:	00001c49 	.word	0x00001c49
    32f8:	20000000 	.word	0x20000000
    32fc:	00001d15 	.word	0x00001d15
    3300:	00001c3d 	.word	0x00001c3d
    3304:	00002959 	.word	0x00002959
    3308:	00010a4c 	.word	0x00010a4c
    330c:	000090f5 	.word	0x000090f5

00003310 <localWaitForRequestToFinish>:
  currentCallback = NULL;
  if (tmpCallback)
    tmpCallback(client, error, httpStatus, httpResponseBody);
}

void localWaitForRequestToFinish(ParseClientInternal* parseClient) {
    3310:	b570      	push	{r4, r5, r6, lr}

  //print_to_terminal("debug: s_request_in_process (localWaitForRequestToFinish) = %d\n\n", s_request_in_process);
  
  while (s_request_in_process) {
    3312:	4b06      	ldr	r3, [pc, #24]	; (332c <localWaitForRequestToFinish+0x1c>)
    3314:	681b      	ldr	r3, [r3, #0]
    3316:	2b00      	cmp	r3, #0
    3318:	d007      	beq.n	332a <localWaitForRequestToFinish+0x1a>
    331a:	1c04      	adds	r4, r0, #0
    localParseEventLoop(parseClient);
    331c:	4e04      	ldr	r6, [pc, #16]	; (3330 <localWaitForRequestToFinish+0x20>)

void localWaitForRequestToFinish(ParseClientInternal* parseClient) {

  //print_to_terminal("debug: s_request_in_process (localWaitForRequestToFinish) = %d\n\n", s_request_in_process);
  
  while (s_request_in_process) {
    331e:	4d03      	ldr	r5, [pc, #12]	; (332c <localWaitForRequestToFinish+0x1c>)
    localParseEventLoop(parseClient);
    3320:	1c20      	adds	r0, r4, #0
    3322:	47b0      	blx	r6

void localWaitForRequestToFinish(ParseClientInternal* parseClient) {

  //print_to_terminal("debug: s_request_in_process (localWaitForRequestToFinish) = %d\n\n", s_request_in_process);
  
  while (s_request_in_process) {
    3324:	682b      	ldr	r3, [r5, #0]
    3326:	2b00      	cmp	r3, #0
    3328:	d1fa      	bne.n	3320 <localWaitForRequestToFinish+0x10>
    localParseEventLoop(parseClient);
  }
}
    332a:	bd70      	pop	{r4, r5, r6, pc}
    332c:	20000658 	.word	0x20000658
    3330:	00003225 	.word	0x00003225

00003334 <localParseSetRequestCallback>:
	nm_bsp_deinit();
	return LOCAL_PARSE_SUCCESS;
}

LocalParseStatus localParseSetRequestCallback(ParseClientInternal* parseClient, parseRequestCallback callback, void* inParam)
{
    3334:	b538      	push	{r3, r4, r5, lr}
    3336:	1c0d      	adds	r5, r1, #0
    3338:	1c14      	adds	r4, r2, #0
  localWaitForRequestToFinish(parseClient);
    333a:	4b05      	ldr	r3, [pc, #20]	; (3350 <localParseSetRequestCallback+0x1c>)
    333c:	4798      	blx	r3
  currentCallback = callback;
    333e:	4b05      	ldr	r3, [pc, #20]	; (3354 <localParseSetRequestCallback+0x20>)
    3340:	601d      	str	r5, [r3, #0]

  fluffy_trans_set_parse_request_callback(parseCommonRequestCallback, inParam);
    3342:	4805      	ldr	r0, [pc, #20]	; (3358 <localParseSetRequestCallback+0x24>)
    3344:	1c21      	adds	r1, r4, #0
    3346:	4b05      	ldr	r3, [pc, #20]	; (335c <localParseSetRequestCallback+0x28>)
    3348:	4798      	blx	r3
  return LOCAL_PARSE_SUCCESS;
}
    334a:	2000      	movs	r0, #0
    334c:	bd38      	pop	{r3, r4, r5, pc}
    334e:	46c0      	nop			; (mov r8, r8)
    3350:	00003311 	.word	0x00003311
    3354:	2000065c 	.word	0x2000065c
    3358:	000030e1 	.word	0x000030e1
    335c:	00002eb9 	.word	0x00002eb9

00003360 <ams_sensor_read>:
#include "i2c_master.h"

const uint8_t AMS_ADDRESS_AND_READ  = 0x5a;

enum status_code ams_sensor_read(struct i2c_master_module *i2c_master_instance_ptr, int *voc, int *co2)
{
    3360:	b530      	push	{r4, r5, lr}
    3362:	b087      	sub	sp, #28
    3364:	1c0c      	adds	r4, r1, #0
    3366:	1c15      	adds	r5, r2, #0
    uint8_t data[9];
    struct i2c_master_packet packet = {
    3368:	2300      	movs	r3, #0
    336a:	9302      	str	r3, [sp, #8]
    336c:	335a      	adds	r3, #90	; 0x5a
    336e:	466a      	mov	r2, sp
    3370:	8013      	strh	r3, [r2, #0]
    3372:	3b51      	subs	r3, #81	; 0x51
    3374:	8053      	strh	r3, [r2, #2]
    3376:	ab03      	add	r3, sp, #12
    3378:	9301      	str	r3, [sp, #4]
	    .data = data,
	    .ten_bit_address = false,
	    .high_speed = false,
    };
    // stop and nack enabled
	enum status_code ret = i2c_master_read_packet_wait(i2c_master_instance_ptr, &packet);
    337a:	4669      	mov	r1, sp
    337c:	4b0d      	ldr	r3, [pc, #52]	; (33b4 <ams_sensor_read+0x54>)
    337e:	4798      	blx	r3
    3380:	1e03      	subs	r3, r0, #0
    //print_to_terminal("ret in  shtc1_read_async_result = 0x%x\n", ret);
    
    if (ret)
    3382:	d114      	bne.n	33ae <ams_sensor_read+0x4e>
		return ret;
    if (data[2])
    3384:	ab03      	add	r3, sp, #12
    3386:	7899      	ldrb	r1, [r3, #2]
    3388:	2900      	cmp	r1, #0
    338a:	d004      	beq.n	3396 <ams_sensor_read+0x36>
	{
		print_to_terminal("data[2] status = 0x%x\n", data[2]);	
    338c:	480a      	ldr	r0, [pc, #40]	; (33b8 <ams_sensor_read+0x58>)
    338e:	4b0b      	ldr	r3, [pc, #44]	; (33bc <ams_sensor_read+0x5c>)
    3390:	4798      	blx	r3
		return STATUS_ERR_BAD_DATA;
    3392:	2013      	movs	r0, #19
    3394:	e00b      	b.n	33ae <ams_sensor_read+0x4e>
	}
    
	*co2 = (data[0] << 8) + data[1] ;
    3396:	ab03      	add	r3, sp, #12
    3398:	781a      	ldrb	r2, [r3, #0]
    339a:	0212      	lsls	r2, r2, #8
    339c:	7859      	ldrb	r1, [r3, #1]
    339e:	1852      	adds	r2, r2, r1
    33a0:	602a      	str	r2, [r5, #0]
	*voc = (data[7] << 8) + data[8] ;
    33a2:	79d9      	ldrb	r1, [r3, #7]
    33a4:	0209      	lsls	r1, r1, #8
    33a6:	7a1a      	ldrb	r2, [r3, #8]
    33a8:	188b      	adds	r3, r1, r2
    33aa:	6023      	str	r3, [r4, #0]

    return STATUS_OK;	
    33ac:	2000      	movs	r0, #0
	
};
    33ae:	b007      	add	sp, #28
    33b0:	bd30      	pop	{r4, r5, pc}
    33b2:	46c0      	nop			; (mov r8, r8)
    33b4:	00003dad 	.word	0x00003dad
    33b8:	00010a68 	.word	0x00010a68
    33bc:	000090f5 	.word	0x000090f5

000033c0 <ADC_Handler>:
    33c0:	b538      	push	{r3, r4, r5, lr}
    33c2:	4b2b      	ldr	r3, [pc, #172]	; (3470 <ADC_Handler+0xb0>)
    33c4:	681c      	ldr	r4, [r3, #0]
    33c6:	6823      	ldr	r3, [r4, #0]
    33c8:	7e1d      	ldrb	r5, [r3, #24]
    33ca:	b2ed      	uxtb	r5, r5
    33cc:	07ea      	lsls	r2, r5, #31
    33ce:	d531      	bpl.n	3434 <ADC_Handler+0x74>
    33d0:	7ee2      	ldrb	r2, [r4, #27]
    33d2:	07d2      	lsls	r2, r2, #31
    33d4:	d52e      	bpl.n	3434 <ADC_Handler+0x74>
    33d6:	7ea2      	ldrb	r2, [r4, #26]
    33d8:	07d2      	lsls	r2, r2, #31
    33da:	d52b      	bpl.n	3434 <ADC_Handler+0x74>
    33dc:	2201      	movs	r2, #1
    33de:	761a      	strb	r2, [r3, #24]
    33e0:	6962      	ldr	r2, [r4, #20]
    33e2:	1c93      	adds	r3, r2, #2
    33e4:	6163      	str	r3, [r4, #20]
    33e6:	6823      	ldr	r3, [r4, #0]
    33e8:	8b5b      	ldrh	r3, [r3, #26]
    33ea:	b29b      	uxth	r3, r3
    33ec:	8013      	strh	r3, [r2, #0]
    33ee:	8b23      	ldrh	r3, [r4, #24]
    33f0:	3b01      	subs	r3, #1
    33f2:	b29b      	uxth	r3, r3
    33f4:	8323      	strh	r3, [r4, #24]
    33f6:	2b00      	cmp	r3, #0
    33f8:	d011      	beq.n	341e <ADC_Handler+0x5e>
    33fa:	7f63      	ldrb	r3, [r4, #29]
    33fc:	2b00      	cmp	r3, #0
    33fe:	d019      	beq.n	3434 <ADC_Handler+0x74>
    3400:	6822      	ldr	r2, [r4, #0]
    3402:	7e53      	ldrb	r3, [r2, #25]
    3404:	b25b      	sxtb	r3, r3
    3406:	2b00      	cmp	r3, #0
    3408:	dbfb      	blt.n	3402 <ADC_Handler+0x42>
    340a:	7b11      	ldrb	r1, [r2, #12]
    340c:	2302      	movs	r3, #2
    340e:	430b      	orrs	r3, r1
    3410:	7313      	strb	r3, [r2, #12]
    3412:	6822      	ldr	r2, [r4, #0]
    3414:	7e53      	ldrb	r3, [r2, #25]
    3416:	b25b      	sxtb	r3, r3
    3418:	2b00      	cmp	r3, #0
    341a:	dbfb      	blt.n	3414 <ADC_Handler+0x54>
    341c:	e00a      	b.n	3434 <ADC_Handler+0x74>
    341e:	7f23      	ldrb	r3, [r4, #28]
    3420:	2b05      	cmp	r3, #5
    3422:	d107      	bne.n	3434 <ADC_Handler+0x74>
    3424:	2300      	movs	r3, #0
    3426:	7723      	strb	r3, [r4, #28]
    3428:	3301      	adds	r3, #1
    342a:	6822      	ldr	r2, [r4, #0]
    342c:	7593      	strb	r3, [r2, #22]
    342e:	1c20      	adds	r0, r4, #0
    3430:	68a3      	ldr	r3, [r4, #8]
    3432:	4798      	blx	r3
    3434:	076b      	lsls	r3, r5, #29
    3436:	d50b      	bpl.n	3450 <ADC_Handler+0x90>
    3438:	2304      	movs	r3, #4
    343a:	6822      	ldr	r2, [r4, #0]
    343c:	7613      	strb	r3, [r2, #24]
    343e:	7ee3      	ldrb	r3, [r4, #27]
    3440:	079b      	lsls	r3, r3, #30
    3442:	d505      	bpl.n	3450 <ADC_Handler+0x90>
    3444:	7ea3      	ldrb	r3, [r4, #26]
    3446:	079b      	lsls	r3, r3, #30
    3448:	d502      	bpl.n	3450 <ADC_Handler+0x90>
    344a:	1c20      	adds	r0, r4, #0
    344c:	68e3      	ldr	r3, [r4, #12]
    344e:	4798      	blx	r3
    3450:	07ab      	lsls	r3, r5, #30
    3452:	d50b      	bpl.n	346c <ADC_Handler+0xac>
    3454:	2302      	movs	r3, #2
    3456:	6822      	ldr	r2, [r4, #0]
    3458:	7613      	strb	r3, [r2, #24]
    345a:	7ee3      	ldrb	r3, [r4, #27]
    345c:	075b      	lsls	r3, r3, #29
    345e:	d505      	bpl.n	346c <ADC_Handler+0xac>
    3460:	7ea3      	ldrb	r3, [r4, #26]
    3462:	075b      	lsls	r3, r3, #29
    3464:	d502      	bpl.n	346c <ADC_Handler+0xac>
    3466:	6923      	ldr	r3, [r4, #16]
    3468:	1c20      	adds	r0, r4, #0
    346a:	4798      	blx	r3
    346c:	bd38      	pop	{r3, r4, r5, pc}
    346e:	46c0      	nop			; (mov r8, r8)
    3470:	20000984 	.word	0x20000984

00003474 <nvm_set_config>:
    3474:	b510      	push	{r4, lr}
    3476:	4a1e      	ldr	r2, [pc, #120]	; (34f0 <nvm_set_config+0x7c>)
    3478:	69d1      	ldr	r1, [r2, #28]
    347a:	2304      	movs	r3, #4
    347c:	430b      	orrs	r3, r1
    347e:	61d3      	str	r3, [r2, #28]
    3480:	4b1c      	ldr	r3, [pc, #112]	; (34f4 <nvm_set_config+0x80>)
    3482:	8b19      	ldrh	r1, [r3, #24]
    3484:	2220      	movs	r2, #32
    3486:	32ff      	adds	r2, #255	; 0xff
    3488:	430a      	orrs	r2, r1
    348a:	831a      	strh	r2, [r3, #24]
    348c:	7d1a      	ldrb	r2, [r3, #20]
    348e:	2305      	movs	r3, #5
    3490:	07d2      	lsls	r2, r2, #31
    3492:	d52b      	bpl.n	34ec <nvm_set_config+0x78>
    3494:	7802      	ldrb	r2, [r0, #0]
    3496:	0212      	lsls	r2, r2, #8
    3498:	21c0      	movs	r1, #192	; 0xc0
    349a:	0089      	lsls	r1, r1, #2
    349c:	400a      	ands	r2, r1
    349e:	1c14      	adds	r4, r2, #0
    34a0:	7841      	ldrb	r1, [r0, #1]
    34a2:	01c9      	lsls	r1, r1, #7
    34a4:	22ff      	movs	r2, #255	; 0xff
    34a6:	1c13      	adds	r3, r2, #0
    34a8:	400b      	ands	r3, r1
    34aa:	1c22      	adds	r2, r4, #0
    34ac:	431a      	orrs	r2, r3
    34ae:	78c3      	ldrb	r3, [r0, #3]
    34b0:	049b      	lsls	r3, r3, #18
    34b2:	4313      	orrs	r3, r2
    34b4:	7882      	ldrb	r2, [r0, #2]
    34b6:	0052      	lsls	r2, r2, #1
    34b8:	211e      	movs	r1, #30
    34ba:	400a      	ands	r2, r1
    34bc:	4313      	orrs	r3, r2
    34be:	7902      	ldrb	r2, [r0, #4]
    34c0:	0412      	lsls	r2, r2, #16
    34c2:	21c0      	movs	r1, #192	; 0xc0
    34c4:	0289      	lsls	r1, r1, #10
    34c6:	400a      	ands	r2, r1
    34c8:	4313      	orrs	r3, r2
    34ca:	4a0a      	ldr	r2, [pc, #40]	; (34f4 <nvm_set_config+0x80>)
    34cc:	6053      	str	r3, [r2, #4]
    34ce:	6893      	ldr	r3, [r2, #8]
    34d0:	035b      	lsls	r3, r3, #13
    34d2:	0f5b      	lsrs	r3, r3, #29
    34d4:	4908      	ldr	r1, [pc, #32]	; (34f8 <nvm_set_config+0x84>)
    34d6:	2408      	movs	r4, #8
    34d8:	409c      	lsls	r4, r3
    34da:	800c      	strh	r4, [r1, #0]
    34dc:	6893      	ldr	r3, [r2, #8]
    34de:	804b      	strh	r3, [r1, #2]
    34e0:	7843      	ldrb	r3, [r0, #1]
    34e2:	710b      	strb	r3, [r1, #4]
    34e4:	8b13      	ldrh	r3, [r2, #24]
    34e6:	05db      	lsls	r3, r3, #23
    34e8:	0fdb      	lsrs	r3, r3, #31
    34ea:	011b      	lsls	r3, r3, #4
    34ec:	1c18      	adds	r0, r3, #0
    34ee:	bd10      	pop	{r4, pc}
    34f0:	40000400 	.word	0x40000400
    34f4:	41004000 	.word	0x41004000
    34f8:	20000664 	.word	0x20000664

000034fc <nvm_execute_command>:
    34fc:	b530      	push	{r4, r5, lr}
    34fe:	1c04      	adds	r4, r0, #0
    3500:	4a1f      	ldr	r2, [pc, #124]	; (3580 <nvm_execute_command+0x84>)
    3502:	8850      	ldrh	r0, [r2, #2]
    3504:	8813      	ldrh	r3, [r2, #0]
    3506:	4343      	muls	r3, r0
    3508:	428b      	cmp	r3, r1
    350a:	d206      	bcs.n	351a <nvm_execute_command+0x1e>
    350c:	2018      	movs	r0, #24
    350e:	2280      	movs	r2, #128	; 0x80
    3510:	0192      	lsls	r2, r2, #6
    3512:	4b1c      	ldr	r3, [pc, #112]	; (3584 <nvm_execute_command+0x88>)
    3514:	18cb      	adds	r3, r1, r3
    3516:	4293      	cmp	r3, r2
    3518:	d831      	bhi.n	357e <nvm_execute_command+0x82>
    351a:	4b1b      	ldr	r3, [pc, #108]	; (3588 <nvm_execute_command+0x8c>)
    351c:	685d      	ldr	r5, [r3, #4]
    351e:	2280      	movs	r2, #128	; 0x80
    3520:	02d2      	lsls	r2, r2, #11
    3522:	432a      	orrs	r2, r5
    3524:	605a      	str	r2, [r3, #4]
    3526:	8b18      	ldrh	r0, [r3, #24]
    3528:	2220      	movs	r2, #32
    352a:	32ff      	adds	r2, #255	; 0xff
    352c:	4302      	orrs	r2, r0
    352e:	831a      	strh	r2, [r3, #24]
    3530:	7d1b      	ldrb	r3, [r3, #20]
    3532:	2005      	movs	r0, #5
    3534:	07db      	lsls	r3, r3, #31
    3536:	d522      	bpl.n	357e <nvm_execute_command+0x82>
    3538:	2c45      	cmp	r4, #69	; 0x45
    353a:	d81f      	bhi.n	357c <nvm_execute_command+0x80>
    353c:	00a3      	lsls	r3, r4, #2
    353e:	4a13      	ldr	r2, [pc, #76]	; (358c <nvm_execute_command+0x90>)
    3540:	58d3      	ldr	r3, [r2, r3]
    3542:	469f      	mov	pc, r3
    3544:	4b10      	ldr	r3, [pc, #64]	; (3588 <nvm_execute_command+0x8c>)
    3546:	8b1b      	ldrh	r3, [r3, #24]
    3548:	2010      	movs	r0, #16
    354a:	05db      	lsls	r3, r3, #23
    354c:	d417      	bmi.n	357e <nvm_execute_command+0x82>
    354e:	0889      	lsrs	r1, r1, #2
    3550:	0049      	lsls	r1, r1, #1
    3552:	4b0d      	ldr	r3, [pc, #52]	; (3588 <nvm_execute_command+0x8c>)
    3554:	61d9      	str	r1, [r3, #28]
    3556:	e003      	b.n	3560 <nvm_execute_command+0x64>
    3558:	0889      	lsrs	r1, r1, #2
    355a:	0049      	lsls	r1, r1, #1
    355c:	4b0a      	ldr	r3, [pc, #40]	; (3588 <nvm_execute_command+0x8c>)
    355e:	61d9      	str	r1, [r3, #28]
    3560:	20a5      	movs	r0, #165	; 0xa5
    3562:	0200      	lsls	r0, r0, #8
    3564:	4304      	orrs	r4, r0
    3566:	4b08      	ldr	r3, [pc, #32]	; (3588 <nvm_execute_command+0x8c>)
    3568:	801c      	strh	r4, [r3, #0]
    356a:	1c19      	adds	r1, r3, #0
    356c:	2201      	movs	r2, #1
    356e:	7d0b      	ldrb	r3, [r1, #20]
    3570:	4213      	tst	r3, r2
    3572:	d0fc      	beq.n	356e <nvm_execute_command+0x72>
    3574:	4b04      	ldr	r3, [pc, #16]	; (3588 <nvm_execute_command+0x8c>)
    3576:	605d      	str	r5, [r3, #4]
    3578:	2000      	movs	r0, #0
    357a:	e000      	b.n	357e <nvm_execute_command+0x82>
    357c:	2017      	movs	r0, #23
    357e:	bd30      	pop	{r4, r5, pc}
    3580:	20000664 	.word	0x20000664
    3584:	ff7fc000 	.word	0xff7fc000
    3588:	41004000 	.word	0x41004000
    358c:	00010a80 	.word	0x00010a80

00003590 <nvm_write_buffer>:
    3590:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3592:	4b25      	ldr	r3, [pc, #148]	; (3628 <nvm_write_buffer+0x98>)
    3594:	881d      	ldrh	r5, [r3, #0]
    3596:	885b      	ldrh	r3, [r3, #2]
    3598:	436b      	muls	r3, r5
    359a:	2418      	movs	r4, #24
    359c:	4283      	cmp	r3, r0
    359e:	d340      	bcc.n	3622 <nvm_write_buffer+0x92>
    35a0:	1e6b      	subs	r3, r5, #1
    35a2:	4203      	tst	r3, r0
    35a4:	d13d      	bne.n	3622 <nvm_write_buffer+0x92>
    35a6:	3c01      	subs	r4, #1
    35a8:	4295      	cmp	r5, r2
    35aa:	d33a      	bcc.n	3622 <nvm_write_buffer+0x92>
    35ac:	4b1f      	ldr	r3, [pc, #124]	; (362c <nvm_write_buffer+0x9c>)
    35ae:	7d1b      	ldrb	r3, [r3, #20]
    35b0:	3c12      	subs	r4, #18
    35b2:	07db      	lsls	r3, r3, #31
    35b4:	d535      	bpl.n	3622 <nvm_write_buffer+0x92>
    35b6:	4c1e      	ldr	r4, [pc, #120]	; (3630 <nvm_write_buffer+0xa0>)
    35b8:	4b1c      	ldr	r3, [pc, #112]	; (362c <nvm_write_buffer+0x9c>)
    35ba:	801c      	strh	r4, [r3, #0]
    35bc:	1c1d      	adds	r5, r3, #0
    35be:	2401      	movs	r4, #1
    35c0:	7d2b      	ldrb	r3, [r5, #20]
    35c2:	4223      	tst	r3, r4
    35c4:	d0fc      	beq.n	35c0 <nvm_write_buffer+0x30>
    35c6:	4c19      	ldr	r4, [pc, #100]	; (362c <nvm_write_buffer+0x9c>)
    35c8:	8b25      	ldrh	r5, [r4, #24]
    35ca:	2320      	movs	r3, #32
    35cc:	33ff      	adds	r3, #255	; 0xff
    35ce:	432b      	orrs	r3, r5
    35d0:	8323      	strh	r3, [r4, #24]
    35d2:	0846      	lsrs	r6, r0, #1
    35d4:	2a00      	cmp	r2, #0
    35d6:	d01f      	beq.n	3618 <nvm_write_buffer+0x88>
    35d8:	0076      	lsls	r6, r6, #1
    35da:	2300      	movs	r3, #0
    35dc:	1e57      	subs	r7, r2, #1
    35de:	5ccd      	ldrb	r5, [r1, r3]
    35e0:	42bb      	cmp	r3, r7
    35e2:	db01      	blt.n	35e8 <nvm_write_buffer+0x58>
    35e4:	b2ac      	uxth	r4, r5
    35e6:	e003      	b.n	35f0 <nvm_write_buffer+0x60>
    35e8:	18cc      	adds	r4, r1, r3
    35ea:	7864      	ldrb	r4, [r4, #1]
    35ec:	0224      	lsls	r4, r4, #8
    35ee:	432c      	orrs	r4, r5
    35f0:	8034      	strh	r4, [r6, #0]
    35f2:	3302      	adds	r3, #2
    35f4:	b29b      	uxth	r3, r3
    35f6:	3602      	adds	r6, #2
    35f8:	429a      	cmp	r2, r3
    35fa:	d8f0      	bhi.n	35de <nvm_write_buffer+0x4e>
    35fc:	4b0a      	ldr	r3, [pc, #40]	; (3628 <nvm_write_buffer+0x98>)
    35fe:	791b      	ldrb	r3, [r3, #4]
    3600:	2400      	movs	r4, #0
    3602:	2b00      	cmp	r3, #0
    3604:	d10d      	bne.n	3622 <nvm_write_buffer+0x92>
    3606:	2a3f      	cmp	r2, #63	; 0x3f
    3608:	d80b      	bhi.n	3622 <nvm_write_buffer+0x92>
    360a:	1c01      	adds	r1, r0, #0
    360c:	2004      	movs	r0, #4
    360e:	2200      	movs	r2, #0
    3610:	4b08      	ldr	r3, [pc, #32]	; (3634 <nvm_write_buffer+0xa4>)
    3612:	4798      	blx	r3
    3614:	1c04      	adds	r4, r0, #0
    3616:	e004      	b.n	3622 <nvm_write_buffer+0x92>
    3618:	4b03      	ldr	r3, [pc, #12]	; (3628 <nvm_write_buffer+0x98>)
    361a:	791b      	ldrb	r3, [r3, #4]
    361c:	2400      	movs	r4, #0
    361e:	2b00      	cmp	r3, #0
    3620:	d0f3      	beq.n	360a <nvm_write_buffer+0x7a>
    3622:	1c20      	adds	r0, r4, #0
    3624:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    3626:	46c0      	nop			; (mov r8, r8)
    3628:	20000664 	.word	0x20000664
    362c:	41004000 	.word	0x41004000
    3630:	ffffa544 	.word	0xffffa544
    3634:	000034fd 	.word	0x000034fd

00003638 <nvm_read_buffer>:
    3638:	b570      	push	{r4, r5, r6, lr}
    363a:	4b19      	ldr	r3, [pc, #100]	; (36a0 <nvm_read_buffer+0x68>)
    363c:	881d      	ldrh	r5, [r3, #0]
    363e:	885b      	ldrh	r3, [r3, #2]
    3640:	436b      	muls	r3, r5
    3642:	2418      	movs	r4, #24
    3644:	4283      	cmp	r3, r0
    3646:	d328      	bcc.n	369a <nvm_read_buffer+0x62>
    3648:	1e6b      	subs	r3, r5, #1
    364a:	4203      	tst	r3, r0
    364c:	d125      	bne.n	369a <nvm_read_buffer+0x62>
    364e:	3c01      	subs	r4, #1
    3650:	4295      	cmp	r5, r2
    3652:	d322      	bcc.n	369a <nvm_read_buffer+0x62>
    3654:	4b13      	ldr	r3, [pc, #76]	; (36a4 <nvm_read_buffer+0x6c>)
    3656:	7d1b      	ldrb	r3, [r3, #20]
    3658:	3c12      	subs	r4, #18
    365a:	07db      	lsls	r3, r3, #31
    365c:	d51d      	bpl.n	369a <nvm_read_buffer+0x62>
    365e:	4c11      	ldr	r4, [pc, #68]	; (36a4 <nvm_read_buffer+0x6c>)
    3660:	8b25      	ldrh	r5, [r4, #24]
    3662:	2320      	movs	r3, #32
    3664:	33ff      	adds	r3, #255	; 0xff
    3666:	432b      	orrs	r3, r5
    3668:	8323      	strh	r3, [r4, #24]
    366a:	0840      	lsrs	r0, r0, #1
    366c:	2a00      	cmp	r2, #0
    366e:	d013      	beq.n	3698 <nvm_read_buffer+0x60>
    3670:	0040      	lsls	r0, r0, #1
    3672:	2500      	movs	r5, #0
    3674:	1e56      	subs	r6, r2, #1
    3676:	182b      	adds	r3, r5, r0
    3678:	881c      	ldrh	r4, [r3, #0]
    367a:	b2a4      	uxth	r4, r4
    367c:	042b      	lsls	r3, r5, #16
    367e:	0c1b      	lsrs	r3, r3, #16
    3680:	54cc      	strb	r4, [r1, r3]
    3682:	42b3      	cmp	r3, r6
    3684:	da02      	bge.n	368c <nvm_read_buffer+0x54>
    3686:	18cb      	adds	r3, r1, r3
    3688:	0a24      	lsrs	r4, r4, #8
    368a:	705c      	strb	r4, [r3, #1]
    368c:	3502      	adds	r5, #2
    368e:	b2ab      	uxth	r3, r5
    3690:	429a      	cmp	r2, r3
    3692:	d8f0      	bhi.n	3676 <nvm_read_buffer+0x3e>
    3694:	2400      	movs	r4, #0
    3696:	e000      	b.n	369a <nvm_read_buffer+0x62>
    3698:	2400      	movs	r4, #0
    369a:	1c20      	adds	r0, r4, #0
    369c:	bd70      	pop	{r4, r5, r6, pc}
    369e:	46c0      	nop			; (mov r8, r8)
    36a0:	20000664 	.word	0x20000664
    36a4:	41004000 	.word	0x41004000

000036a8 <nvm_erase_row>:
    36a8:	4b11      	ldr	r3, [pc, #68]	; (36f0 <nvm_erase_row+0x48>)
    36aa:	881a      	ldrh	r2, [r3, #0]
    36ac:	885b      	ldrh	r3, [r3, #2]
    36ae:	4353      	muls	r3, r2
    36b0:	2118      	movs	r1, #24
    36b2:	4283      	cmp	r3, r0
    36b4:	d319      	bcc.n	36ea <nvm_erase_row+0x42>
    36b6:	0092      	lsls	r2, r2, #2
    36b8:	3a01      	subs	r2, #1
    36ba:	4210      	tst	r0, r2
    36bc:	d115      	bne.n	36ea <nvm_erase_row+0x42>
    36be:	4b0d      	ldr	r3, [pc, #52]	; (36f4 <nvm_erase_row+0x4c>)
    36c0:	7d1b      	ldrb	r3, [r3, #20]
    36c2:	3913      	subs	r1, #19
    36c4:	07db      	lsls	r3, r3, #31
    36c6:	d510      	bpl.n	36ea <nvm_erase_row+0x42>
    36c8:	4b0a      	ldr	r3, [pc, #40]	; (36f4 <nvm_erase_row+0x4c>)
    36ca:	8b19      	ldrh	r1, [r3, #24]
    36cc:	2220      	movs	r2, #32
    36ce:	32ff      	adds	r2, #255	; 0xff
    36d0:	430a      	orrs	r2, r1
    36d2:	831a      	strh	r2, [r3, #24]
    36d4:	0880      	lsrs	r0, r0, #2
    36d6:	0040      	lsls	r0, r0, #1
    36d8:	61d8      	str	r0, [r3, #28]
    36da:	4a07      	ldr	r2, [pc, #28]	; (36f8 <nvm_erase_row+0x50>)
    36dc:	801a      	strh	r2, [r3, #0]
    36de:	1c19      	adds	r1, r3, #0
    36e0:	2201      	movs	r2, #1
    36e2:	7d0b      	ldrb	r3, [r1, #20]
    36e4:	4213      	tst	r3, r2
    36e6:	d0fc      	beq.n	36e2 <nvm_erase_row+0x3a>
    36e8:	2100      	movs	r1, #0
    36ea:	1c08      	adds	r0, r1, #0
    36ec:	4770      	bx	lr
    36ee:	46c0      	nop			; (mov r8, r8)
    36f0:	20000664 	.word	0x20000664
    36f4:	41004000 	.word	0x41004000
    36f8:	ffffa502 	.word	0xffffa502

000036fc <shtc1_check_crc>:
const uint8_t ID_REG_MASK       = 0x1f;
const uint8_t CRC_POLYNOMIAL    = 0x31;
const uint8_t CRC_INIT          = 0xff;

static bool shtc1_check_crc(uint8_t *data, uint8_t data_length, uint8_t checksum)
{
    36fc:	b5f0      	push	{r4, r5, r6, r7, lr}
    uint8_t crc = CRC_INIT;
    uint8_t current_byte;

    /* calculates 8-Bit checksum with given polynomial */
    for (current_byte = 0; current_byte < data_length; ++current_byte)
    36fe:	2900      	cmp	r1, #0
    3700:	d01b      	beq.n	373a <shtc1_check_crc+0x3e>
    3702:	1c06      	adds	r6, r0, #0
    3704:	3901      	subs	r1, #1
    3706:	b2c9      	uxtb	r1, r1
    3708:	3101      	adds	r1, #1
    370a:	1840      	adds	r0, r0, r1
    370c:	23ff      	movs	r3, #255	; 0xff
    {
        crc ^= (data[current_byte]);
    370e:	2508      	movs	r5, #8
        for (uint8_t bit = 8; bit > 0; --bit)
        {
            if (crc & 0x80)
                crc = (crc << 1) ^ CRC_POLYNOMIAL;
    3710:	2731      	movs	r7, #49	; 0x31
    uint8_t current_byte;

    /* calculates 8-Bit checksum with given polynomial */
    for (current_byte = 0; current_byte < data_length; ++current_byte)
    {
        crc ^= (data[current_byte]);
    3712:	7831      	ldrb	r1, [r6, #0]
    3714:	404b      	eors	r3, r1
    3716:	1c29      	adds	r1, r5, #0
        for (uint8_t bit = 8; bit > 0; --bit)
        {
            if (crc & 0x80)
    3718:	b25c      	sxtb	r4, r3
    371a:	2c00      	cmp	r4, #0
    371c:	da03      	bge.n	3726 <shtc1_check_crc+0x2a>
                crc = (crc << 1) ^ CRC_POLYNOMIAL;
    371e:	005b      	lsls	r3, r3, #1
    3720:	407b      	eors	r3, r7
    3722:	b2db      	uxtb	r3, r3
    3724:	e001      	b.n	372a <shtc1_check_crc+0x2e>
            else
                crc = (crc << 1);
    3726:	005b      	lsls	r3, r3, #1
    3728:	b2db      	uxtb	r3, r3
    372a:	3901      	subs	r1, #1
    372c:	b2c9      	uxtb	r1, r1

    /* calculates 8-Bit checksum with given polynomial */
    for (current_byte = 0; current_byte < data_length; ++current_byte)
    {
        crc ^= (data[current_byte]);
        for (uint8_t bit = 8; bit > 0; --bit)
    372e:	2900      	cmp	r1, #0
    3730:	d1f2      	bne.n	3718 <shtc1_check_crc+0x1c>
    3732:	3601      	adds	r6, #1
{
    uint8_t crc = CRC_INIT;
    uint8_t current_byte;

    /* calculates 8-Bit checksum with given polynomial */
    for (current_byte = 0; current_byte < data_length; ++current_byte)
    3734:	4286      	cmp	r6, r0
    3736:	d1ec      	bne.n	3712 <shtc1_check_crc+0x16>
    3738:	e000      	b.n	373c <shtc1_check_crc+0x40>
const uint8_t CRC_POLYNOMIAL    = 0x31;
const uint8_t CRC_INIT          = 0xff;

static bool shtc1_check_crc(uint8_t *data, uint8_t data_length, uint8_t checksum)
{
    uint8_t crc = CRC_INIT;
    373a:	23ff      	movs	r3, #255	; 0xff
                crc = (crc << 1) ^ CRC_POLYNOMIAL;
            else
                crc = (crc << 1);
        }
    }
    return crc == checksum;
    373c:	1a98      	subs	r0, r3, r2
    373e:	4243      	negs	r3, r0
    3740:	4158      	adcs	r0, r3
    3742:	b2c0      	uxtb	r0, r0
}
    3744:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3746:	46c0      	nop			; (mov r8, r8)

00003748 <shtc1_read_async_result>:

enum status_code shtc1_read_async_result(struct i2c_master_module *i2c_master_instance_ptr,
        int *temp, int *rh)
{
    3748:	b530      	push	{r4, r5, lr}
    374a:	b087      	sub	sp, #28
    374c:	1c0d      	adds	r5, r1, #0
    374e:	1c14      	adds	r4, r2, #0
    uint8_t data[6];
    struct i2c_master_packet packet = {
    3750:	a901      	add	r1, sp, #4
    3752:	2300      	movs	r3, #0
    3754:	608b      	str	r3, [r1, #8]
    3756:	3370      	adds	r3, #112	; 0x70
    3758:	800b      	strh	r3, [r1, #0]
    375a:	3b6a      	subs	r3, #106	; 0x6a
    375c:	804b      	strh	r3, [r1, #2]
    375e:	ab04      	add	r3, sp, #16
    3760:	604b      	str	r3, [r1, #4]
            .data_length = sizeof(data),
            .data = data,
			.ten_bit_address = false,
			.high_speed = false,
    };
    enum status_code ret = i2c_master_read_packet_wait(i2c_master_instance_ptr, &packet);
    3762:	4b19      	ldr	r3, [pc, #100]	; (37c8 <shtc1_read_async_result+0x80>)
    3764:	4798      	blx	r3
	//print_to_terminal("ret in  shtc1_read_async_result = 0x%x\n", ret);
	
    if (ret)
        return ret;
    3766:	1e02      	subs	r2, r0, #0
			.high_speed = false,
    };
    enum status_code ret = i2c_master_read_packet_wait(i2c_master_instance_ptr, &packet);
	//print_to_terminal("ret in  shtc1_read_async_result = 0x%x\n", ret);
	
    if (ret)
    3768:	d12b      	bne.n	37c2 <shtc1_read_async_result+0x7a>
        return ret;
    if (!shtc1_check_crc(data, 2, data[2]) || !shtc1_check_crc(data + 3, 2, data[5]))
    376a:	a804      	add	r0, sp, #16
    376c:	7882      	ldrb	r2, [r0, #2]
    376e:	2102      	movs	r1, #2
    3770:	4b16      	ldr	r3, [pc, #88]	; (37cc <shtc1_read_async_result+0x84>)
    3772:	4798      	blx	r3
        return STATUS_ERR_BAD_DATA;
    3774:	2213      	movs	r2, #19
    enum status_code ret = i2c_master_read_packet_wait(i2c_master_instance_ptr, &packet);
	//print_to_terminal("ret in  shtc1_read_async_result = 0x%x\n", ret);
	
    if (ret)
        return ret;
    if (!shtc1_check_crc(data, 2, data[2]) || !shtc1_check_crc(data + 3, 2, data[5]))
    3776:	2800      	cmp	r0, #0
    3778:	d023      	beq.n	37c2 <shtc1_read_async_result+0x7a>
    377a:	ab04      	add	r3, sp, #16
    377c:	795a      	ldrb	r2, [r3, #5]
    377e:	2013      	movs	r0, #19
    3780:	4468      	add	r0, sp
    3782:	2102      	movs	r1, #2
    3784:	4b11      	ldr	r3, [pc, #68]	; (37cc <shtc1_read_async_result+0x84>)
    3786:	4798      	blx	r3
        return STATUS_ERR_BAD_DATA;
    3788:	2213      	movs	r2, #19
    enum status_code ret = i2c_master_read_packet_wait(i2c_master_instance_ptr, &packet);
	//print_to_terminal("ret in  shtc1_read_async_result = 0x%x\n", ret);
	
    if (ret)
        return ret;
    if (!shtc1_check_crc(data, 2, data[2]) || !shtc1_check_crc(data + 3, 2, data[5]))
    378a:	2800      	cmp	r0, #0
    378c:	d019      	beq.n	37c2 <shtc1_read_async_result+0x7a>
     * formulas for conversion of the sensor signals, optimized for fixed point
     * algebra:
     * T = 175 * S_T / 2^16 - 45
     * RH = 100 * S_RH / 2^16
     */
    *temp = (data[1] & 0xff) | (data[0] << 8);
    378e:	ab04      	add	r3, sp, #16
    3790:	781a      	ldrb	r2, [r3, #0]
    3792:	0212      	lsls	r2, r2, #8
    3794:	7859      	ldrb	r1, [r3, #1]
    3796:	430a      	orrs	r2, r1
    3798:	602a      	str	r2, [r5, #0]
    *rh = (data[4] & 0xff) | (data[3] << 8);
    379a:	78d9      	ldrb	r1, [r3, #3]
    379c:	0209      	lsls	r1, r1, #8
    379e:	791a      	ldrb	r2, [r3, #4]
    37a0:	1c0b      	adds	r3, r1, #0
    37a2:	4313      	orrs	r3, r2
    37a4:	6023      	str	r3, [r4, #0]
    *temp = ((21875 * *temp) >> 13) - 45000;
    37a6:	4b0a      	ldr	r3, [pc, #40]	; (37d0 <shtc1_read_async_result+0x88>)
    37a8:	682a      	ldr	r2, [r5, #0]
    37aa:	4353      	muls	r3, r2
    37ac:	135b      	asrs	r3, r3, #13
    37ae:	4a09      	ldr	r2, [pc, #36]	; (37d4 <shtc1_read_async_result+0x8c>)
    37b0:	4694      	mov	ip, r2
    37b2:	4463      	add	r3, ip
    37b4:	602b      	str	r3, [r5, #0]
    *rh = ((12500 * *rh) >> 13);
    37b6:	4b08      	ldr	r3, [pc, #32]	; (37d8 <shtc1_read_async_result+0x90>)
    37b8:	6822      	ldr	r2, [r4, #0]
    37ba:	4353      	muls	r3, r2
    37bc:	135b      	asrs	r3, r3, #13
    37be:	6023      	str	r3, [r4, #0]

    return STATUS_OK;
    37c0:	2200      	movs	r2, #0
}
    37c2:	1c10      	adds	r0, r2, #0
    37c4:	b007      	add	sp, #28
    37c6:	bd30      	pop	{r4, r5, pc}
    37c8:	00003dad 	.word	0x00003dad
    37cc:	000036fd 	.word	0x000036fd
    37d0:	00005573 	.word	0x00005573
    37d4:	ffff5038 	.word	0xffff5038
    37d8:	000030d4 	.word	0x000030d4

000037dc <shtc1_read_sync>:

static enum status_code shtc1_read_sync(struct i2c_master_module *i2c_master_instance_ptr,
        const uint8_t command[], int *temp, int *rh)
{
    37dc:	b5f0      	push	{r4, r5, r6, r7, lr}
    37de:	b087      	sub	sp, #28
    37e0:	1c05      	adds	r5, r0, #0
    37e2:	1c17      	adds	r7, r2, #0
    37e4:	9301      	str	r3, [sp, #4]
    enum status_code ret;
    struct i2c_master_packet packet = {
    37e6:	ab03      	add	r3, sp, #12
    37e8:	2200      	movs	r2, #0
    37ea:	9205      	str	r2, [sp, #20]
    37ec:	3270      	adds	r2, #112	; 0x70
    37ee:	801a      	strh	r2, [r3, #0]
    37f0:	3a6e      	subs	r2, #110	; 0x6e
    37f2:	805a      	strh	r2, [r3, #2]
    37f4:	9104      	str	r1, [sp, #16]
            .data_length = COMMAND_SIZE,
            .data = (uint8_t *)command,
			.ten_bit_address = false,
			.high_speed = false,
    };
    ret = i2c_master_write_packet_wait_no_stop(i2c_master_instance_ptr, &packet);
    37f6:	1c19      	adds	r1, r3, #0
    37f8:	4b07      	ldr	r3, [pc, #28]	; (3818 <shtc1_read_sync+0x3c>)
    37fa:	4798      	blx	r3
    37fc:	1c04      	adds	r4, r0, #0
	//print_to_terminal("ret in  shtc1_read_sync = 0x%x\n", ret);
	delay_ms(50);
    37fe:	2032      	movs	r0, #50	; 0x32
    3800:	4b06      	ldr	r3, [pc, #24]	; (381c <shtc1_read_sync+0x40>)
    3802:	4798      	blx	r3
	
    if (ret)
        return ret;
    3804:	1e20      	subs	r0, r4, #0
    };
    ret = i2c_master_write_packet_wait_no_stop(i2c_master_instance_ptr, &packet);
	//print_to_terminal("ret in  shtc1_read_sync = 0x%x\n", ret);
	delay_ms(50);
	
    if (ret)
    3806:	d104      	bne.n	3812 <shtc1_read_sync+0x36>
        return ret;
    return shtc1_read_async_result(i2c_master_instance_ptr, temp, rh);
    3808:	1c28      	adds	r0, r5, #0
    380a:	1c39      	adds	r1, r7, #0
    380c:	9a01      	ldr	r2, [sp, #4]
    380e:	4b04      	ldr	r3, [pc, #16]	; (3820 <shtc1_read_sync+0x44>)
    3810:	4798      	blx	r3
}
    3812:	b007      	add	sp, #28
    3814:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3816:	46c0      	nop			; (mov r8, r8)
    3818:	00003dcd 	.word	0x00003dcd
    381c:	00004745 	.word	0x00004745
    3820:	00003749 	.word	0x00003749

00003824 <shtc1_read_hpm_sync>:
    return shtc1_read_sync(i2c_master_instance_ptr, CMD_MEASURE_LPM_CS, temp, rh);
}

enum status_code shtc1_read_hpm_sync(struct i2c_master_module *i2c_master_instance_ptr,
        int *temp, int *rh)
{
    3824:	b510      	push	{r4, lr}
    3826:	1c0c      	adds	r4, r1, #0
    3828:	1c13      	adds	r3, r2, #0
    return shtc1_read_sync(i2c_master_instance_ptr, CMD_MEASURE_HPM_CS, temp, rh);
    382a:	4902      	ldr	r1, [pc, #8]	; (3834 <shtc1_read_hpm_sync+0x10>)
    382c:	1c22      	adds	r2, r4, #0
    382e:	4c02      	ldr	r4, [pc, #8]	; (3838 <shtc1_read_hpm_sync+0x14>)
    3830:	47a0      	blx	r4
}
    3832:	bd10      	pop	{r4, pc}
    3834:	00010b9c 	.word	0x00010b9c
    3838:	000037dd 	.word	0x000037dd

0000383c <shtc1_probe>:
    };
    return i2c_master_write_packet_wait(i2c_master_instance_ptr, &packet);
}

bool shtc1_probe(struct i2c_master_module *i2c_master_instance_ptr)
{
    383c:	b510      	push	{r4, lr}
    383e:	b084      	sub	sp, #16
    3840:	1c04      	adds	r4, r0, #0
    uint8_t data[3];
    struct i2c_master_packet packet = {
    3842:	2300      	movs	r3, #0
    3844:	9302      	str	r3, [sp, #8]
    3846:	3370      	adds	r3, #112	; 0x70
    3848:	466a      	mov	r2, sp
    384a:	8013      	strh	r3, [r2, #0]
    384c:	3b6e      	subs	r3, #110	; 0x6e
    384e:	8053      	strh	r3, [r2, #2]
    3850:	4b12      	ldr	r3, [pc, #72]	; (389c <shtc1_probe+0x60>)
    3852:	9301      	str	r3, [sp, #4]
            .data = (uint8_t *)CMD_READ_ID_REG,
			.ten_bit_address = false,
			.high_speed = false,
    };
	
    i2c_master_write_packet_wait_no_stop(i2c_master_instance_ptr, &packet);
    3854:	4669      	mov	r1, sp
    3856:	4b12      	ldr	r3, [pc, #72]	; (38a0 <shtc1_probe+0x64>)
    3858:	4798      	blx	r3
    packet.data_length = sizeof(data);
    385a:	2303      	movs	r3, #3
    385c:	466a      	mov	r2, sp
    385e:	8053      	strh	r3, [r2, #2]
    packet.data = data;
    3860:	ab03      	add	r3, sp, #12
    3862:	9301      	str	r3, [sp, #4]
	
	delay_ms(50);
    3864:	2032      	movs	r0, #50	; 0x32
    3866:	4b0f      	ldr	r3, [pc, #60]	; (38a4 <shtc1_probe+0x68>)
    3868:	4798      	blx	r3
	
    enum status_code ret = i2c_master_read_packet_wait(i2c_master_instance_ptr, &packet);
    386a:	1c20      	adds	r0, r4, #0
    386c:	4669      	mov	r1, sp
    386e:	4b0e      	ldr	r3, [pc, #56]	; (38a8 <shtc1_probe+0x6c>)
    3870:	4798      	blx	r3
    3872:	1c03      	adds	r3, r0, #0

    if (ret)
        return false;
    3874:	2000      	movs	r0, #0
	
	delay_ms(50);
	
    enum status_code ret = i2c_master_read_packet_wait(i2c_master_instance_ptr, &packet);

    if (ret)
    3876:	2b00      	cmp	r3, #0
    3878:	d10e      	bne.n	3898 <shtc1_probe+0x5c>
        return false;

    if (!shtc1_check_crc(data, 2, data[2]))
    387a:	a803      	add	r0, sp, #12
    387c:	7882      	ldrb	r2, [r0, #2]
    387e:	2102      	movs	r1, #2
    3880:	4b0a      	ldr	r3, [pc, #40]	; (38ac <shtc1_probe+0x70>)
    3882:	4798      	blx	r3
    3884:	2800      	cmp	r0, #0
    3886:	d007      	beq.n	3898 <shtc1_probe+0x5c>
        return false;

    return (data[1] & ID_REG_MASK) == ID_REG_CONTENT;
    3888:	ab03      	add	r3, sp, #12
    388a:	785b      	ldrb	r3, [r3, #1]
    388c:	201f      	movs	r0, #31
    388e:	4018      	ands	r0, r3
    3890:	3807      	subs	r0, #7
    3892:	4243      	negs	r3, r0
    3894:	4158      	adcs	r0, r3
    3896:	b2c0      	uxtb	r0, r0
}
    3898:	b004      	add	sp, #16
    389a:	bd10      	pop	{r4, pc}
    389c:	00010b98 	.word	0x00010b98
    38a0:	00003dcd 	.word	0x00003dcd
    38a4:	00004745 	.word	0x00004745
    38a8:	00003dad 	.word	0x00003dad
    38ac:	000036fd 	.word	0x000036fd

000038b0 <_i2c_master_wait_for_sync>:
{
	/* Sanity check. */
	Assert(module);
	Assert(module->hw);

	SercomI2cm *const i2c_hw = &(module->hw->I2CM);
    38b0:	6801      	ldr	r1, [r0, #0]

#if defined(FEATURE_SERCOM_SYNCBUSY_SCHEME_VERSION_1)
	return (i2c_hw->STATUS.reg & SERCOM_I2CM_STATUS_SYNCBUSY);
#elif defined(FEATURE_SERCOM_SYNCBUSY_SCHEME_VERSION_2)
	return (i2c_hw->SYNCBUSY.reg & SERCOM_I2CM_SYNCBUSY_MASK);
    38b2:	2207      	movs	r2, #7
    38b4:	69cb      	ldr	r3, [r1, #28]
		const struct i2c_master_module *const module)
{
	/* Sanity check. */
	Assert(module);

	while (i2c_master_is_syncing(module)) {
    38b6:	421a      	tst	r2, r3
    38b8:	d1fc      	bne.n	38b4 <_i2c_master_wait_for_sync+0x4>
		/* Wait for I2C module to sync. */
	}
}
    38ba:	4770      	bx	lr

000038bc <i2c_master_init>:
 */
enum status_code i2c_master_init(
		struct i2c_master_module *const module,
		Sercom *const hw,
		const struct i2c_master_config *const config)
{
    38bc:	b5f0      	push	{r4, r5, r6, r7, lr}
    38be:	464f      	mov	r7, r9
    38c0:	4646      	mov	r6, r8
    38c2:	b4c0      	push	{r6, r7}
    38c4:	b083      	sub	sp, #12
    38c6:	1c07      	adds	r7, r0, #0
    38c8:	1c0d      	adds	r5, r1, #0
    38ca:	1c16      	adds	r6, r2, #0
	Assert(module);
	Assert(hw);
	Assert(config);

	/* Initialize software module */
	module->hw = hw;
    38cc:	6039      	str	r1, [r7, #0]

	SercomI2cm *const i2c_module = &(module->hw->I2CM);

	uint32_t sercom_index = _sercom_get_sercom_inst_index(module->hw);
    38ce:	1c08      	adds	r0, r1, #0
    38d0:	4b68      	ldr	r3, [pc, #416]	; (3a74 <i2c_master_init+0x1b8>)
    38d2:	4798      	blx	r3
		case SYSTEM_CLOCK_APB_APBB:
			PM->APBBMASK.reg |= mask;
			break;

		case SYSTEM_CLOCK_APB_APBC:
			PM->APBCMASK.reg |= mask;
    38d4:	4968      	ldr	r1, [pc, #416]	; (3a78 <i2c_master_init+0x1bc>)
    38d6:	6a0a      	ldr	r2, [r1, #32]
#if (SAML21)
	uint32_t pm_index     = sercom_index + MCLK_APBCMASK_SERCOM0_Pos;
#else
	uint32_t pm_index     = sercom_index + PM_APBCMASK_SERCOM0_Pos;
    38d8:	1c84      	adds	r4, r0, #2
#endif
	uint32_t gclk_index   = sercom_index + SERCOM0_GCLK_ID_CORE;

	/* Turn on module in PM */
	system_apb_clock_set_mask(SYSTEM_CLOCK_APB_APBC, 1 << pm_index);
    38da:	2301      	movs	r3, #1
    38dc:	40a3      	lsls	r3, r4
    38de:	4313      	orrs	r3, r2
    38e0:	620b      	str	r3, [r1, #32]

	/* Set up the GCLK for the module */
	struct system_gclk_chan_config gclk_chan_conf;
	system_gclk_chan_get_config_defaults(&gclk_chan_conf);
	gclk_chan_conf.source_generator = config->generator_source;
    38e2:	a901      	add	r1, sp, #4
    38e4:	7b33      	ldrb	r3, [r6, #12]
    38e6:	700b      	strb	r3, [r1, #0]
#if (SAML21)
	uint32_t pm_index     = sercom_index + MCLK_APBCMASK_SERCOM0_Pos;
#else
	uint32_t pm_index     = sercom_index + PM_APBCMASK_SERCOM0_Pos;
#endif
	uint32_t gclk_index   = sercom_index + SERCOM0_GCLK_ID_CORE;
    38e8:	3014      	adds	r0, #20

	/* Set up the GCLK for the module */
	struct system_gclk_chan_config gclk_chan_conf;
	system_gclk_chan_get_config_defaults(&gclk_chan_conf);
	gclk_chan_conf.source_generator = config->generator_source;
	system_gclk_chan_set_config(gclk_index, &gclk_chan_conf);
    38ea:	b2c4      	uxtb	r4, r0
    38ec:	1c20      	adds	r0, r4, #0
    38ee:	4b63      	ldr	r3, [pc, #396]	; (3a7c <i2c_master_init+0x1c0>)
    38f0:	4798      	blx	r3
	system_gclk_chan_enable(gclk_index);
    38f2:	1c20      	adds	r0, r4, #0
    38f4:	4b62      	ldr	r3, [pc, #392]	; (3a80 <i2c_master_init+0x1c4>)
    38f6:	4798      	blx	r3
	sercom_set_gclk_generator(config->generator_source, false);
    38f8:	7b30      	ldrb	r0, [r6, #12]
    38fa:	2100      	movs	r1, #0
    38fc:	4b61      	ldr	r3, [pc, #388]	; (3a84 <i2c_master_init+0x1c8>)
    38fe:	4798      	blx	r3

	/* Check if module is enabled. */
	if (i2c_module->CTRLA.reg & SERCOM_I2CM_CTRLA_ENABLE) {
    3900:	682b      	ldr	r3, [r5, #0]
		return STATUS_ERR_DENIED;
    3902:	201c      	movs	r0, #28
	system_gclk_chan_set_config(gclk_index, &gclk_chan_conf);
	system_gclk_chan_enable(gclk_index);
	sercom_set_gclk_generator(config->generator_source, false);

	/* Check if module is enabled. */
	if (i2c_module->CTRLA.reg & SERCOM_I2CM_CTRLA_ENABLE) {
    3904:	079b      	lsls	r3, r3, #30
    3906:	d500      	bpl.n	390a <i2c_master_init+0x4e>
    3908:	e0ae      	b.n	3a68 <i2c_master_init+0x1ac>
		return STATUS_ERR_DENIED;
	}

	/* Check if reset is in progress. */
	if (i2c_module->CTRLA.reg & SERCOM_I2CM_CTRLA_SWRST) {
    390a:	682b      	ldr	r3, [r5, #0]
		return STATUS_BUSY;
    390c:	3817      	subs	r0, #23
	if (i2c_module->CTRLA.reg & SERCOM_I2CM_CTRLA_ENABLE) {
		return STATUS_ERR_DENIED;
	}

	/* Check if reset is in progress. */
	if (i2c_module->CTRLA.reg & SERCOM_I2CM_CTRLA_SWRST) {
    390e:	07db      	lsls	r3, r3, #31
    3910:	d500      	bpl.n	3914 <i2c_master_init+0x58>
    3912:	e0a9      	b.n	3a68 <i2c_master_init+0x1ac>
		return STATUS_BUSY;
	}

#if I2C_MASTER_CALLBACK_MODE == true
	/* Get sercom instance index and register callback. */
	uint8_t instance_index = _sercom_get_sercom_inst_index(module->hw);
    3914:	6838      	ldr	r0, [r7, #0]
    3916:	4b57      	ldr	r3, [pc, #348]	; (3a74 <i2c_master_init+0x1b8>)
    3918:	4699      	mov	r9, r3
    391a:	4798      	blx	r3
    391c:	1c04      	adds	r4, r0, #0
	_sercom_set_handler(instance_index, _i2c_master_interrupt_handler);
    391e:	495a      	ldr	r1, [pc, #360]	; (3a88 <i2c_master_init+0x1cc>)
    3920:	4b5a      	ldr	r3, [pc, #360]	; (3a8c <i2c_master_init+0x1d0>)
    3922:	4798      	blx	r3
	_sercom_instances[instance_index] = module;
    3924:	00a4      	lsls	r4, r4, #2
    3926:	4b5a      	ldr	r3, [pc, #360]	; (3a90 <i2c_master_init+0x1d4>)
    3928:	50e7      	str	r7, [r4, r3]

	/* Initialize values in module. */
	module->registered_callback = 0;
    392a:	2300      	movs	r3, #0
    392c:	763b      	strb	r3, [r7, #24]
	module->enabled_callback = 0;
    392e:	767b      	strb	r3, [r7, #25]
	module->buffer_length = 0;
    3930:	2400      	movs	r4, #0
    3932:	837b      	strh	r3, [r7, #26]
	module->buffer_remaining = 0;
    3934:	83bb      	strh	r3, [r7, #28]

	module->status = STATUS_OK;
    3936:	2225      	movs	r2, #37	; 0x25
    3938:	54bc      	strb	r4, [r7, r2]
	module->buffer = NULL;
    393a:	623b      	str	r3, [r7, #32]
#endif

	/* Set sercom module to operate in I2C master mode. */
	i2c_module->CTRLA.reg = SERCOM_I2CM_CTRLA_MODE(0x5);
    393c:	3314      	adds	r3, #20
    393e:	602b      	str	r3, [r5, #0]
	uint32_t tmp_ctrla;
	int32_t tmp_baud;
	int32_t tmp_baud_hs;
	enum status_code tmp_status_code = STATUS_OK;

	SercomI2cm *const i2c_module = &(module->hw->I2CM);
    3940:	683b      	ldr	r3, [r7, #0]
    3942:	4698      	mov	r8, r3
	Sercom *const sercom_hw = module->hw;

	uint8_t sercom_index = _sercom_get_sercom_inst_index(sercom_hw);
    3944:	1c18      	adds	r0, r3, #0
    3946:	47c8      	blx	r9
    3948:	1c05      	adds	r5, r0, #0
{
	/* Sanity check arguments */
	Assert(config);

	/* Default configuration values */
	config->mux_position = SYSTEM_PINMUX_GPIO;
    394a:	2380      	movs	r3, #128	; 0x80
    394c:	466a      	mov	r2, sp
    394e:	7013      	strb	r3, [r2, #0]
	config->direction    = SYSTEM_PINMUX_PIN_DIR_INPUT;
    3950:	7054      	strb	r4, [r2, #1]
	config->input_pull   = SYSTEM_PINMUX_PIN_PULL_UP;
    3952:	2301      	movs	r3, #1
    3954:	7093      	strb	r3, [r2, #2]
	config->powersave    = false;
    3956:	70d4      	strb	r4, [r2, #3]

	/* Pin configuration */
	struct system_pinmux_config pin_conf;
	system_pinmux_get_config_defaults(&pin_conf);

	uint32_t pad0 = config->pinmux_pad0;
    3958:	69f0      	ldr	r0, [r6, #28]
	uint32_t pad1 = config->pinmux_pad1;
    395a:	6a34      	ldr	r4, [r6, #32]

	/* SERCOM PAD0 - SDA */
	if (pad0 == PINMUX_DEFAULT) {
    395c:	2800      	cmp	r0, #0
    395e:	d103      	bne.n	3968 <i2c_master_init+0xac>
		pad0 = _sercom_get_default_pad(sercom_hw, 0);
    3960:	4640      	mov	r0, r8
    3962:	2100      	movs	r1, #0
    3964:	4b4b      	ldr	r3, [pc, #300]	; (3a94 <i2c_master_init+0x1d8>)
    3966:	4798      	blx	r3
	}
	pin_conf.mux_position = pad0 & 0xFFFF;
    3968:	466b      	mov	r3, sp
    396a:	7018      	strb	r0, [r3, #0]
	pin_conf.direction    = SYSTEM_PINMUX_PIN_DIR_OUTPUT_WITH_READBACK;
    396c:	2302      	movs	r3, #2
    396e:	466a      	mov	r2, sp
    3970:	7053      	strb	r3, [r2, #1]
	system_pinmux_pin_set_config(pad0 >> 16, &pin_conf);
    3972:	0c00      	lsrs	r0, r0, #16
    3974:	b2c0      	uxtb	r0, r0
    3976:	4669      	mov	r1, sp
    3978:	4b47      	ldr	r3, [pc, #284]	; (3a98 <i2c_master_init+0x1dc>)
    397a:	4798      	blx	r3

	/* SERCOM PAD1 - SCL */
	if (pad1 == PINMUX_DEFAULT) {
    397c:	2c00      	cmp	r4, #0
    397e:	d104      	bne.n	398a <i2c_master_init+0xce>
		pad1 = _sercom_get_default_pad(sercom_hw, 1);
    3980:	4640      	mov	r0, r8
    3982:	2101      	movs	r1, #1
    3984:	4b43      	ldr	r3, [pc, #268]	; (3a94 <i2c_master_init+0x1d8>)
    3986:	4798      	blx	r3
    3988:	1c04      	adds	r4, r0, #0
	}
	pin_conf.mux_position = pad1 & 0xFFFF;
    398a:	466b      	mov	r3, sp
    398c:	701c      	strb	r4, [r3, #0]
	pin_conf.direction    = SYSTEM_PINMUX_PIN_DIR_OUTPUT_WITH_READBACK;
    398e:	2302      	movs	r3, #2
    3990:	466a      	mov	r2, sp
    3992:	7053      	strb	r3, [r2, #1]
	system_pinmux_pin_set_config(pad1 >> 16, &pin_conf);
    3994:	0c24      	lsrs	r4, r4, #16
    3996:	b2e0      	uxtb	r0, r4
    3998:	4669      	mov	r1, sp
    399a:	4b3f      	ldr	r3, [pc, #252]	; (3a98 <i2c_master_init+0x1dc>)
    399c:	4798      	blx	r3

	/* Save timeout on unknown bus state in software module. */
	module->unknown_bus_state_timeout = config->unknown_bus_state_timeout;
    399e:	8ab3      	ldrh	r3, [r6, #20]
    39a0:	80fb      	strh	r3, [r7, #6]

	/* Save timeout on buffer write. */
	module->buffer_timeout = config->buffer_timeout;
    39a2:	8af3      	ldrh	r3, [r6, #22]
    39a4:	813b      	strh	r3, [r7, #8]

	/* Set whether module should run in standby. */
	if (config->run_in_standby || system_is_debugger_present()) {
    39a6:	7e32      	ldrb	r2, [r6, #24]
		tmp_ctrla = SERCOM_I2CM_CTRLA_RUNSTDBY;
    39a8:	2380      	movs	r3, #128	; 0x80

	/* Save timeout on buffer write. */
	module->buffer_timeout = config->buffer_timeout;

	/* Set whether module should run in standby. */
	if (config->run_in_standby || system_is_debugger_present()) {
    39aa:	2a00      	cmp	r2, #0
    39ac:	d104      	bne.n	39b8 <i2c_master_init+0xfc>
 * \retval false Debugger is not connected to the system
 *
 */
static inline bool system_is_debugger_present(void)
{
	return DSU->STATUSB.reg & DSU_STATUSB_DBGPRES;
    39ae:	4b3b      	ldr	r3, [pc, #236]	; (3a9c <i2c_master_init+0x1e0>)
    39b0:	789b      	ldrb	r3, [r3, #2]
    39b2:	079b      	lsls	r3, r3, #30
		tmp_ctrla = SERCOM_I2CM_CTRLA_RUNSTDBY;
    39b4:	0fdb      	lsrs	r3, r3, #31
    39b6:	01db      	lsls	r3, r3, #7
	} else {
		tmp_ctrla = 0;
	}

	/* Check and set start data hold timeout. */
	if (config->start_hold_time != I2C_MASTER_START_HOLD_TIME_DISABLED) {
    39b8:	6932      	ldr	r2, [r6, #16]
    39ba:	2a00      	cmp	r2, #0
    39bc:	d000      	beq.n	39c0 <i2c_master_init+0x104>
		tmp_ctrla |= config->start_hold_time;
    39be:	4313      	orrs	r3, r2
	}

	/* Check and set transfer speed */
	tmp_ctrla |= config->transfer_speed;
    39c0:	68b2      	ldr	r2, [r6, #8]
    39c2:	4313      	orrs	r3, r2

	/* Check and set SCL low timeout. */
	if (config->scl_low_timeout) {
    39c4:	2224      	movs	r2, #36	; 0x24
    39c6:	5cb2      	ldrb	r2, [r6, r2]
    39c8:	2a00      	cmp	r2, #0
    39ca:	d002      	beq.n	39d2 <i2c_master_init+0x116>
		tmp_ctrla |= SERCOM_I2CM_CTRLA_LOWTOUTEN;
    39cc:	2280      	movs	r2, #128	; 0x80
    39ce:	05d2      	lsls	r2, r2, #23
    39d0:	4313      	orrs	r3, r2
	}

	/* Check and set inactive bus timeout. */
	if (config->inactive_timeout != I2C_MASTER_INACTIVE_TIMEOUT_DISABLED) {
    39d2:	6ab2      	ldr	r2, [r6, #40]	; 0x28
    39d4:	2a00      	cmp	r2, #0
    39d6:	d000      	beq.n	39da <i2c_master_init+0x11e>
		tmp_ctrla |= config->inactive_timeout;
    39d8:	4313      	orrs	r3, r2
	}

	/* Check and set SCL clock stretch mode. */
	if (config->scl_stretch_only_after_ack_bit) {
    39da:	222c      	movs	r2, #44	; 0x2c
    39dc:	5cb2      	ldrb	r2, [r6, r2]
    39de:	2a00      	cmp	r2, #0
    39e0:	d002      	beq.n	39e8 <i2c_master_init+0x12c>
		tmp_ctrla |= SERCOM_I2CM_CTRLA_SCLSM;
    39e2:	2280      	movs	r2, #128	; 0x80
    39e4:	0512      	lsls	r2, r2, #20
    39e6:	4313      	orrs	r3, r2
	}

	/* Check and set slave SCL low extend timeout. */
	if (config->slave_scl_low_extend_timeout) {
    39e8:	222d      	movs	r2, #45	; 0x2d
    39ea:	5cb2      	ldrb	r2, [r6, r2]
    39ec:	2a00      	cmp	r2, #0
    39ee:	d002      	beq.n	39f6 <i2c_master_init+0x13a>
		tmp_ctrla |= SERCOM_I2CM_CTRLA_SEXTTOEN;
    39f0:	2280      	movs	r2, #128	; 0x80
    39f2:	0412      	lsls	r2, r2, #16
    39f4:	4313      	orrs	r3, r2
	}

	/* Check and set master SCL low extend timeout. */
	if (config->master_scl_low_extend_timeout) {
    39f6:	222e      	movs	r2, #46	; 0x2e
    39f8:	5cb2      	ldrb	r2, [r6, r2]
    39fa:	2a00      	cmp	r2, #0
    39fc:	d002      	beq.n	3a04 <i2c_master_init+0x148>
		tmp_ctrla |= SERCOM_I2CM_CTRLA_MEXTTOEN;
    39fe:	2280      	movs	r2, #128	; 0x80
    3a00:	03d2      	lsls	r2, r2, #15
    3a02:	4313      	orrs	r3, r2
	}

	/* Write config to register CTRLA. */
	i2c_module->CTRLA.reg |= tmp_ctrla;
    3a04:	4642      	mov	r2, r8
    3a06:	6812      	ldr	r2, [r2, #0]
    3a08:	4313      	orrs	r3, r2
    3a0a:	4642      	mov	r2, r8
    3a0c:	6013      	str	r3, [r2, #0]

	/* Set configurations in CTRLB. */
	i2c_module->CTRLB.reg = SERCOM_I2CM_CTRLB_SMEN;
    3a0e:	2380      	movs	r3, #128	; 0x80
    3a10:	005b      	lsls	r3, r3, #1
    3a12:	6053      	str	r3, [r2, #4]

	/* Find and set baudrate. */
	tmp_baud = (int32_t)(div_ceil(
    3a14:	3514      	adds	r5, #20
    3a16:	b2ed      	uxtb	r5, r5
    3a18:	1c28      	adds	r0, r5, #0
    3a1a:	4b21      	ldr	r3, [pc, #132]	; (3aa0 <i2c_master_init+0x1e4>)
    3a1c:	4798      	blx	r3
    3a1e:	21fa      	movs	r1, #250	; 0xfa
    3a20:	00c9      	lsls	r1, r1, #3
    3a22:	6833      	ldr	r3, [r6, #0]
    3a24:	4359      	muls	r1, r3
    3a26:	1e4b      	subs	r3, r1, #1
    3a28:	1818      	adds	r0, r3, r0
    3a2a:	4b1e      	ldr	r3, [pc, #120]	; (3aa4 <i2c_master_init+0x1e8>)
    3a2c:	4798      	blx	r3
				system_gclk_chan_get_hz(SERCOM0_GCLK_ID_CORE + sercom_index),
				(2000*(config->baud_rate))) - 5);
    3a2e:	1f44      	subs	r4, r0, #5

	/* Check that baudrate is supported at current speed. */
	if (tmp_baud > 255 || tmp_baud < 0) {
    3a30:	2cff      	cmp	r4, #255	; 0xff
    3a32:	d80d      	bhi.n	3a50 <i2c_master_init+0x194>
		/* Baud rate not supported. */
		tmp_status_code = STATUS_ERR_BAUDRATE_UNAVAILABLE;
	} else {
		/* Find baudrate for high speed */
		tmp_baud_hs = (int32_t)(div_ceil(
    3a34:	1c28      	adds	r0, r5, #0
    3a36:	4b1a      	ldr	r3, [pc, #104]	; (3aa0 <i2c_master_init+0x1e4>)
    3a38:	4798      	blx	r3
    3a3a:	6871      	ldr	r1, [r6, #4]
    3a3c:	23fa      	movs	r3, #250	; 0xfa
    3a3e:	00db      	lsls	r3, r3, #3
    3a40:	4359      	muls	r1, r3
    3a42:	1e4b      	subs	r3, r1, #1
    3a44:	1818      	adds	r0, r3, r0
    3a46:	4b17      	ldr	r3, [pc, #92]	; (3aa4 <i2c_master_init+0x1e8>)
    3a48:	4798      	blx	r3
				system_gclk_chan_get_hz(SERCOM0_GCLK_ID_CORE + sercom_index),
				(2000*(config->baud_rate_high_speed))) - 1);
    3a4a:	3801      	subs	r0, #1

		/* Check that baudrate is supported at current speed. */
		if (tmp_baud_hs > 255 || tmp_baud_hs < 0) {
    3a4c:	28ff      	cmp	r0, #255	; 0xff
    3a4e:	d901      	bls.n	3a54 <i2c_master_init+0x198>
	/* Save timeout on buffer write. */
	module->buffer_timeout = config->buffer_timeout;

	/* Set whether module should run in standby. */
	if (config->run_in_standby || system_is_debugger_present()) {
		tmp_ctrla = SERCOM_I2CM_CTRLA_RUNSTDBY;
    3a50:	2040      	movs	r0, #64	; 0x40
    3a52:	e009      	b.n	3a68 <i2c_master_init+0x1ac>
		}
	}
	if (tmp_status_code != STATUS_ERR_BAUDRATE_UNAVAILABLE) {
		/* Baud rate acceptable. */
		i2c_module->BAUD.reg = SERCOM_I2CM_BAUD_BAUD(tmp_baud) |
			SERCOM_I2CM_BAUD_HSBAUD(tmp_baud_hs);
    3a54:	0400      	lsls	r0, r0, #16
    3a56:	23ff      	movs	r3, #255	; 0xff
    3a58:	041b      	lsls	r3, r3, #16
    3a5a:	4018      	ands	r0, r3
			tmp_status_code = STATUS_ERR_BAUDRATE_UNAVAILABLE;
		}
	}
	if (tmp_status_code != STATUS_ERR_BAUDRATE_UNAVAILABLE) {
		/* Baud rate acceptable. */
		i2c_module->BAUD.reg = SERCOM_I2CM_BAUD_BAUD(tmp_baud) |
    3a5c:	23ff      	movs	r3, #255	; 0xff
    3a5e:	401c      	ands	r4, r3
    3a60:	4304      	orrs	r4, r0
    3a62:	4643      	mov	r3, r8
    3a64:	60dc      	str	r4, [r3, #12]

	/* Temporary variables. */
	uint32_t tmp_ctrla;
	int32_t tmp_baud;
	int32_t tmp_baud_hs;
	enum status_code tmp_status_code = STATUS_OK;
    3a66:	2000      	movs	r0, #0
	/* Set sercom module to operate in I2C master mode. */
	i2c_module->CTRLA.reg = SERCOM_I2CM_CTRLA_MODE(0x5);

	/* Set config and return status. */
	return _i2c_master_set_config(module, config);
}
    3a68:	b003      	add	sp, #12
    3a6a:	bc0c      	pop	{r2, r3}
    3a6c:	4690      	mov	r8, r2
    3a6e:	4699      	mov	r9, r3
    3a70:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3a72:	46c0      	nop			; (mov r8, r8)
    3a74:	00007ad5 	.word	0x00007ad5
    3a78:	40000400 	.word	0x40000400
    3a7c:	00008c45 	.word	0x00008c45
    3a80:	00008bb9 	.word	0x00008bb9
    3a84:	00007901 	.word	0x00007901
    3a88:	00003ecd 	.word	0x00003ecd
    3a8c:	00007b15 	.word	0x00007b15
    3a90:	20000aa8 	.word	0x20000aa8
    3a94:	0000794d 	.word	0x0000794d
    3a98:	00008d3d 	.word	0x00008d3d
    3a9c:	41002000 	.word	0x41002000
    3aa0:	00008c61 	.word	0x00008c61
    3aa4:	00009c75 	.word	0x00009c75

00003aa8 <_i2c_master_address_response>:
{
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	SercomI2cm *const i2c_module = &(module->hw->I2CM);
    3aa8:	6803      	ldr	r3, [r0, #0]

	/* Check for error and ignore bus-error; workaround for BUSSTATE stuck in
	 * BUSY */
	if (i2c_module->INTFLAG.reg & SERCOM_I2CM_INTFLAG_SB) {
    3aaa:	7e1a      	ldrb	r2, [r3, #24]
    3aac:	0792      	lsls	r2, r2, #30
    3aae:	d507      	bpl.n	3ac0 <_i2c_master_address_response+0x18>

		/* Clear write interrupt flag */
		i2c_module->INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
    3ab0:	2202      	movs	r2, #2
    3ab2:	761a      	strb	r2, [r3, #24]

		/* Check arbitration. */
		if (i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_ARBLOST) {
    3ab4:	8b5b      	ldrh	r3, [r3, #26]
    3ab6:	079b      	lsls	r3, r3, #30
			/* Return packet collision. */
			return STATUS_ERR_PACKET_COLLISION;
    3ab8:	2041      	movs	r0, #65	; 0x41

		/* Return bad address value. */
		return STATUS_ERR_BAD_ADDRESS;
	}

	return STATUS_OK;
    3aba:	17db      	asrs	r3, r3, #31
    3abc:	4018      	ands	r0, r3
    3abe:	e00a      	b.n	3ad6 <_i2c_master_address_response+0x2e>
		if (i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_ARBLOST) {
			/* Return packet collision. */
			return STATUS_ERR_PACKET_COLLISION;
		}
	/* Check that slave responded with ack. */
	} else if (i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_RXNACK) {
    3ac0:	8b5a      	ldrh	r2, [r3, #26]
    3ac2:	0752      	lsls	r2, r2, #29
    3ac4:	d506      	bpl.n	3ad4 <_i2c_master_address_response+0x2c>
		/* Slave busy. Issue ack and stop command. */
		i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(3);
    3ac6:	685a      	ldr	r2, [r3, #4]
    3ac8:	21c0      	movs	r1, #192	; 0xc0
    3aca:	0289      	lsls	r1, r1, #10
    3acc:	430a      	orrs	r2, r1
    3ace:	605a      	str	r2, [r3, #4]

		/* Return bad address value. */
		return STATUS_ERR_BAD_ADDRESS;
    3ad0:	2018      	movs	r0, #24
    3ad2:	e000      	b.n	3ad6 <_i2c_master_address_response+0x2e>
	}

	return STATUS_OK;
    3ad4:	2000      	movs	r0, #0
}
    3ad6:	4770      	bx	lr

00003ad8 <_i2c_master_wait_for_bus>:
 * \retval STATUS_ERR_TIMEOUT  If no response was given within specified timeout
 *                             period
 */
enum status_code _i2c_master_wait_for_bus(
		struct i2c_master_module *const module)
{
    3ad8:	b530      	push	{r4, r5, lr}
	Assert(module);
	Assert(module->hw);

	//print_to_terminal("HOOOLLLAA!!!\n");

	SercomI2cm *const i2c_module = &(module->hw->I2CM);
    3ada:	6802      	ldr	r2, [r0, #0]

	/* Wait for reply. */
	uint16_t timeout_counter = 0;
    3adc:	2300      	movs	r3, #0
	while (!(i2c_module->INTFLAG.reg & SERCOM_I2CM_INTFLAG_MB) &&
    3ade:	2401      	movs	r4, #1
			!(i2c_module->INTFLAG.reg & SERCOM_I2CM_INTFLAG_SB)) {
    3ae0:	2502      	movs	r5, #2

	SercomI2cm *const i2c_module = &(module->hw->I2CM);

	/* Wait for reply. */
	uint16_t timeout_counter = 0;
	while (!(i2c_module->INTFLAG.reg & SERCOM_I2CM_INTFLAG_MB) &&
    3ae2:	e004      	b.n	3aee <_i2c_master_wait_for_bus+0x16>
			!(i2c_module->INTFLAG.reg & SERCOM_I2CM_INTFLAG_SB)) {

		/* Check timeout condition. */
		if (++timeout_counter >= module->buffer_timeout) {
    3ae4:	3301      	adds	r3, #1
    3ae6:	b29b      	uxth	r3, r3
    3ae8:	8901      	ldrh	r1, [r0, #8]
    3aea:	4299      	cmp	r1, r3
    3aec:	d907      	bls.n	3afe <_i2c_master_wait_for_bus+0x26>

	SercomI2cm *const i2c_module = &(module->hw->I2CM);

	/* Wait for reply. */
	uint16_t timeout_counter = 0;
	while (!(i2c_module->INTFLAG.reg & SERCOM_I2CM_INTFLAG_MB) &&
    3aee:	7e11      	ldrb	r1, [r2, #24]
    3af0:	4221      	tst	r1, r4
    3af2:	d106      	bne.n	3b02 <_i2c_master_wait_for_bus+0x2a>
			!(i2c_module->INTFLAG.reg & SERCOM_I2CM_INTFLAG_SB)) {
    3af4:	7e11      	ldrb	r1, [r2, #24]

	SercomI2cm *const i2c_module = &(module->hw->I2CM);

	/* Wait for reply. */
	uint16_t timeout_counter = 0;
	while (!(i2c_module->INTFLAG.reg & SERCOM_I2CM_INTFLAG_MB) &&
    3af6:	4229      	tst	r1, r5
    3af8:	d0f4      	beq.n	3ae4 <_i2c_master_wait_for_bus+0xc>
		/* Check timeout condition. */
		if (++timeout_counter >= module->buffer_timeout) {
			return STATUS_ERR_TIMEOUT;
		}
	}
	return STATUS_OK;
    3afa:	2000      	movs	r0, #0
    3afc:	e002      	b.n	3b04 <_i2c_master_wait_for_bus+0x2c>
	while (!(i2c_module->INTFLAG.reg & SERCOM_I2CM_INTFLAG_MB) &&
			!(i2c_module->INTFLAG.reg & SERCOM_I2CM_INTFLAG_SB)) {

		/* Check timeout condition. */
		if (++timeout_counter >= module->buffer_timeout) {
			return STATUS_ERR_TIMEOUT;
    3afe:	2012      	movs	r0, #18
    3b00:	e000      	b.n	3b04 <_i2c_master_wait_for_bus+0x2c>
		}
	}
	return STATUS_OK;
    3b02:	2000      	movs	r0, #0
}
    3b04:	bd30      	pop	{r4, r5, pc}
    3b06:	46c0      	nop			; (mov r8, r8)

00003b08 <_i2c_master_send_hs_master_code>:
 * \retval STATUS_OK           No error happen
 */
enum status_code _i2c_master_send_hs_master_code(
		struct i2c_master_module *const module,
		uint8_t hs_master_code)
{
    3b08:	b510      	push	{r4, lr}
	SercomI2cm *const i2c_module = &(module->hw->I2CM);
    3b0a:	6804      	ldr	r4, [r0, #0]
	/* Return value. */
	enum status_code tmp_status;

	/* Set NACK for high speed code */
	i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
    3b0c:	6863      	ldr	r3, [r4, #4]
    3b0e:	2280      	movs	r2, #128	; 0x80
    3b10:	02d2      	lsls	r2, r2, #11
    3b12:	4313      	orrs	r3, r2
    3b14:	6063      	str	r3, [r4, #4]
	/* Send high speed code */
	i2c_module->ADDR.reg = hs_master_code;
    3b16:	6261      	str	r1, [r4, #36]	; 0x24
	/* Wait for response on bus. */
	tmp_status = _i2c_master_wait_for_bus(module);
    3b18:	4b02      	ldr	r3, [pc, #8]	; (3b24 <_i2c_master_send_hs_master_code+0x1c>)
    3b1a:	4798      	blx	r3
	/* Clear write interrupt flag */
	i2c_module->INTFLAG.reg = SERCOM_I2CM_INTENCLR_MB;
    3b1c:	2301      	movs	r3, #1
    3b1e:	7623      	strb	r3, [r4, #24]

	return tmp_status;
}
    3b20:	bd10      	pop	{r4, pc}
    3b22:	46c0      	nop			; (mov r8, r8)
    3b24:	00003ad9 	.word	0x00003ad9

00003b28 <_i2c_master_read_packet>:
 *
 */
static enum status_code _i2c_master_read_packet(
		struct i2c_master_module *const module,
		struct i2c_master_packet *const packet)
{
    3b28:	b5f0      	push	{r4, r5, r6, r7, lr}
    3b2a:	465f      	mov	r7, fp
    3b2c:	4656      	mov	r6, sl
    3b2e:	464d      	mov	r5, r9
    3b30:	4644      	mov	r4, r8
    3b32:	b4f0      	push	{r4, r5, r6, r7}
    3b34:	b083      	sub	sp, #12
    3b36:	1c06      	adds	r6, r0, #0
    3b38:	4689      	mov	r9, r1
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);
	Assert(packet);

	SercomI2cm *const i2c_module = &(module->hw->I2CM);
    3b3a:	6805      	ldr	r5, [r0, #0]

	/* Return value. */
	enum status_code tmp_status;
	uint16_t tmp_data_length = packet->data_length;
    3b3c:	884c      	ldrh	r4, [r1, #2]

	/* Written buffer counter. */
	uint16_t counter = 0;

	bool sclsm_flag = i2c_module->CTRLA.bit.SCLSM;
    3b3e:	682b      	ldr	r3, [r5, #0]
    3b40:	011b      	lsls	r3, r3, #4
    3b42:	0fdb      	lsrs	r3, r3, #31
    3b44:	469a      	mov	sl, r3

	/* Switch to high speed mode */
	if (packet->high_speed) {
    3b46:	7a4b      	ldrb	r3, [r1, #9]
    3b48:	2b00      	cmp	r3, #0
    3b4a:	d002      	beq.n	3b52 <_i2c_master_read_packet+0x2a>
		_i2c_master_send_hs_master_code(module, packet->hs_master_code);
    3b4c:	7a89      	ldrb	r1, [r1, #10]
    3b4e:	4b55      	ldr	r3, [pc, #340]	; (3ca4 <_i2c_master_read_packet+0x17c>)
    3b50:	4798      	blx	r3
	}

	/* Set action to ACK. */
	i2c_module->CTRLB.reg &= ~SERCOM_I2CM_CTRLB_ACKACT;
    3b52:	686a      	ldr	r2, [r5, #4]
    3b54:	4b54      	ldr	r3, [pc, #336]	; (3ca8 <_i2c_master_read_packet+0x180>)
    3b56:	4013      	ands	r3, r2
    3b58:	606b      	str	r3, [r5, #4]

	/* Set address and direction bit. Will send start command on bus. */
	if (packet->ten_bit_address) {
    3b5a:	464b      	mov	r3, r9
    3b5c:	7a1b      	ldrb	r3, [r3, #8]
    3b5e:	2b00      	cmp	r3, #0
    3b60:	d028      	beq.n	3bb4 <_i2c_master_read_packet+0x8c>
		/*
		 * Write ADDR.ADDR[10:1] with the 10-bit address. ADDR.TENBITEN must
		 * be set and read/write bit (ADDR.ADDR[0]) equal to 0.
		 */
		i2c_module->ADDR.reg = (packet->address << 1) |
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos) |
    3b62:	464b      	mov	r3, r9
    3b64:	7a5b      	ldrb	r3, [r3, #9]
    3b66:	039a      	lsls	r2, r3, #14
	if (packet->ten_bit_address) {
		/*
		 * Write ADDR.ADDR[10:1] with the 10-bit address. ADDR.TENBITEN must
		 * be set and read/write bit (ADDR.ADDR[0]) equal to 0.
		 */
		i2c_module->ADDR.reg = (packet->address << 1) |
    3b68:	464b      	mov	r3, r9
    3b6a:	881b      	ldrh	r3, [r3, #0]
    3b6c:	005b      	lsls	r3, r3, #1
    3b6e:	4313      	orrs	r3, r2
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos) |
    3b70:	2280      	movs	r2, #128	; 0x80
    3b72:	0212      	lsls	r2, r2, #8
    3b74:	4313      	orrs	r3, r2
	if (packet->ten_bit_address) {
		/*
		 * Write ADDR.ADDR[10:1] with the 10-bit address. ADDR.TENBITEN must
		 * be set and read/write bit (ADDR.ADDR[0]) equal to 0.
		 */
		i2c_module->ADDR.reg = (packet->address << 1) |
    3b76:	626b      	str	r3, [r5, #36]	; 0x24
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos) |
			SERCOM_I2CM_ADDR_TENBITEN;

		/* Wait for response on bus. */
		tmp_status = _i2c_master_wait_for_bus(module);
    3b78:	1c30      	adds	r0, r6, #0
    3b7a:	4b4c      	ldr	r3, [pc, #304]	; (3cac <_i2c_master_read_packet+0x184>)
    3b7c:	4798      	blx	r3

		/* Set action to ack. */
		i2c_module->CTRLB.reg &= ~SERCOM_I2CM_CTRLB_ACKACT;
    3b7e:	686a      	ldr	r2, [r5, #4]
    3b80:	4b49      	ldr	r3, [pc, #292]	; (3ca8 <_i2c_master_read_packet+0x180>)
    3b82:	4013      	ands	r3, r2
    3b84:	606b      	str	r3, [r5, #4]
		i2c_module->ADDR.reg = (packet->address << 1) |
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos) |
			SERCOM_I2CM_ADDR_TENBITEN;

		/* Wait for response on bus. */
		tmp_status = _i2c_master_wait_for_bus(module);
    3b86:	1e03      	subs	r3, r0, #0
		/* Set action to ack. */
		i2c_module->CTRLB.reg &= ~SERCOM_I2CM_CTRLB_ACKACT;

		/* Check for address response error unless previous error is
		 * detected. */
		if (tmp_status == STATUS_OK) {
    3b88:	d000      	beq.n	3b8c <_i2c_master_read_packet+0x64>
    3b8a:	e082      	b.n	3c92 <_i2c_master_read_packet+0x16a>
			tmp_status = _i2c_master_address_response(module);
    3b8c:	1c30      	adds	r0, r6, #0
    3b8e:	4b48      	ldr	r3, [pc, #288]	; (3cb0 <_i2c_master_read_packet+0x188>)
    3b90:	4798      	blx	r3
    3b92:	1e03      	subs	r3, r0, #0
		}

		if (tmp_status == STATUS_OK) {
    3b94:	d000      	beq.n	3b98 <_i2c_master_read_packet+0x70>
    3b96:	e07c      	b.n	3c92 <_i2c_master_read_packet+0x16a>
			/*
			 * Write ADDR[7:0] register to "11110 address[9:8] 1"
			 * ADDR.TENBITEN must be cleared
			 */
			i2c_module->ADDR.reg = (((packet->address >> 8) | 0x78) << 1) |
				(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos) |
    3b98:	464b      	mov	r3, r9
    3b9a:	7a5b      	ldrb	r3, [r3, #9]
    3b9c:	039b      	lsls	r3, r3, #14
    3b9e:	2201      	movs	r2, #1
    3ba0:	4313      	orrs	r3, r2
		if (tmp_status == STATUS_OK) {
			/*
			 * Write ADDR[7:0] register to "11110 address[9:8] 1"
			 * ADDR.TENBITEN must be cleared
			 */
			i2c_module->ADDR.reg = (((packet->address >> 8) | 0x78) << 1) |
    3ba2:	464a      	mov	r2, r9
    3ba4:	8812      	ldrh	r2, [r2, #0]
    3ba6:	0a12      	lsrs	r2, r2, #8
    3ba8:	2178      	movs	r1, #120	; 0x78
    3baa:	430a      	orrs	r2, r1
    3bac:	0052      	lsls	r2, r2, #1
				(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos) |
    3bae:	4313      	orrs	r3, r2
		if (tmp_status == STATUS_OK) {
			/*
			 * Write ADDR[7:0] register to "11110 address[9:8] 1"
			 * ADDR.TENBITEN must be cleared
			 */
			i2c_module->ADDR.reg = (((packet->address >> 8) | 0x78) << 1) |
    3bb0:	626b      	str	r3, [r5, #36]	; 0x24
    3bb2:	e009      	b.n	3bc8 <_i2c_master_read_packet+0xa0>
				I2C_TRANSFER_READ;
		} else {
			return tmp_status;
		}
	} else {
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_READ |
    3bb4:	464b      	mov	r3, r9
    3bb6:	881b      	ldrh	r3, [r3, #0]
    3bb8:	005a      	lsls	r2, r3, #1
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos);
    3bba:	464b      	mov	r3, r9
    3bbc:	7a5b      	ldrb	r3, [r3, #9]
    3bbe:	039b      	lsls	r3, r3, #14
    3bc0:	4313      	orrs	r3, r2
				I2C_TRANSFER_READ;
		} else {
			return tmp_status;
		}
	} else {
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_READ |
    3bc2:	2201      	movs	r2, #1
    3bc4:	4313      	orrs	r3, r2
    3bc6:	626b      	str	r3, [r5, #36]	; 0x24
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos);
	}

	/* Wait for response on bus. */
	tmp_status = _i2c_master_wait_for_bus(module);
    3bc8:	1c30      	adds	r0, r6, #0
    3bca:	4b38      	ldr	r3, [pc, #224]	; (3cac <_i2c_master_read_packet+0x184>)
    3bcc:	4798      	blx	r3

	/* Set action to ack. */
	i2c_module->CTRLB.reg &= ~SERCOM_I2CM_CTRLB_ACKACT;
    3bce:	686a      	ldr	r2, [r5, #4]
    3bd0:	4b35      	ldr	r3, [pc, #212]	; (3ca8 <_i2c_master_read_packet+0x180>)
    3bd2:	4013      	ands	r3, r2
    3bd4:	606b      	str	r3, [r5, #4]
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_READ |
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos);
	}

	/* Wait for response on bus. */
	tmp_status = _i2c_master_wait_for_bus(module);
    3bd6:	1e03      	subs	r3, r0, #0
	/* Set action to ack. */
	i2c_module->CTRLB.reg &= ~SERCOM_I2CM_CTRLB_ACKACT;

	/* Check for address response error unless previous error is
	 * detected. */
	if (tmp_status == STATUS_OK) {
    3bd8:	d15b      	bne.n	3c92 <_i2c_master_read_packet+0x16a>
		tmp_status = _i2c_master_address_response(module);
    3bda:	1c30      	adds	r0, r6, #0
    3bdc:	4b34      	ldr	r3, [pc, #208]	; (3cb0 <_i2c_master_read_packet+0x188>)
    3bde:	4798      	blx	r3
    3be0:	9001      	str	r0, [sp, #4]
    3be2:	1e03      	subs	r3, r0, #0
	}

	/* Check that no error has occurred. */
	if (tmp_status == STATUS_OK) {
    3be4:	d155      	bne.n	3c92 <_i2c_master_read_packet+0x16a>
    3be6:	3c01      	subs	r4, #1
    3be8:	b2a4      	uxth	r4, r4
    3bea:	2300      	movs	r3, #0
    3bec:	4698      	mov	r8, r3
		/* Read data buffer. */
		while (tmp_data_length--) {
    3bee:	4b31      	ldr	r3, [pc, #196]	; (3cb4 <_i2c_master_read_packet+0x18c>)
    3bf0:	469b      	mov	fp, r3
    3bf2:	e029      	b.n	3c48 <_i2c_master_read_packet+0x120>
			/* Check that bus ownership is not lost. */
			if (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(2))) {
    3bf4:	8b6b      	ldrh	r3, [r5, #26]
    3bf6:	069b      	lsls	r3, r3, #26
    3bf8:	d54a      	bpl.n	3c90 <_i2c_master_read_packet+0x168>
				return STATUS_ERR_PACKET_COLLISION;
			}

			if (module->send_nack && (((!sclsm_flag) && (tmp_data_length == 0)) ||
    3bfa:	7af3      	ldrb	r3, [r6, #11]
    3bfc:	2b00      	cmp	r3, #0
    3bfe:	d00f      	beq.n	3c20 <_i2c_master_read_packet+0xf8>
    3c00:	4653      	mov	r3, sl
    3c02:	2b00      	cmp	r3, #0
    3c04:	d102      	bne.n	3c0c <_i2c_master_read_packet+0xe4>
    3c06:	2c00      	cmp	r4, #0
    3c08:	d002      	beq.n	3c10 <_i2c_master_read_packet+0xe8>
    3c0a:	e009      	b.n	3c20 <_i2c_master_read_packet+0xf8>
					((sclsm_flag) && (tmp_data_length == 1)))) {
    3c0c:	2c01      	cmp	r4, #1
    3c0e:	d107      	bne.n	3c20 <_i2c_master_read_packet+0xf8>
				/* Set action to NACK */
				i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
    3c10:	686b      	ldr	r3, [r5, #4]
    3c12:	2280      	movs	r2, #128	; 0x80
    3c14:	02d2      	lsls	r2, r2, #11
    3c16:	4313      	orrs	r3, r2
    3c18:	606b      	str	r3, [r5, #4]
    3c1a:	3c01      	subs	r4, #1
    3c1c:	b2a4      	uxth	r4, r4
    3c1e:	e013      	b.n	3c48 <_i2c_master_read_packet+0x120>
			} else {
				/* Save data to buffer. */
				_i2c_master_wait_for_sync(module);
    3c20:	1c30      	adds	r0, r6, #0
    3c22:	4b25      	ldr	r3, [pc, #148]	; (3cb8 <_i2c_master_read_packet+0x190>)
    3c24:	4798      	blx	r3
				packet->data[counter++] = i2c_module->DATA.reg;
    3c26:	4643      	mov	r3, r8
    3c28:	1c5f      	adds	r7, r3, #1
    3c2a:	b2bf      	uxth	r7, r7
    3c2c:	2328      	movs	r3, #40	; 0x28
    3c2e:	5ceb      	ldrb	r3, [r5, r3]
    3c30:	464a      	mov	r2, r9
    3c32:	6852      	ldr	r2, [r2, #4]
    3c34:	4641      	mov	r1, r8
    3c36:	5453      	strb	r3, [r2, r1]
				/* Wait for response. */
				tmp_status = _i2c_master_wait_for_bus(module);
    3c38:	1c30      	adds	r0, r6, #0
    3c3a:	4b1c      	ldr	r3, [pc, #112]	; (3cac <_i2c_master_read_packet+0x184>)
    3c3c:	4798      	blx	r3
    3c3e:	3c01      	subs	r4, #1
    3c40:	b2a4      	uxth	r4, r4
			}

			/* Check for error. */
			if (tmp_status != STATUS_OK) {
    3c42:	2800      	cmp	r0, #0
    3c44:	d103      	bne.n	3c4e <_i2c_master_read_packet+0x126>
				/* Set action to NACK */
				i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
			} else {
				/* Save data to buffer. */
				_i2c_master_wait_for_sync(module);
				packet->data[counter++] = i2c_module->DATA.reg;
    3c46:	46b8      	mov	r8, r7
	}

	/* Check that no error has occurred. */
	if (tmp_status == STATUS_OK) {
		/* Read data buffer. */
		while (tmp_data_length--) {
    3c48:	455c      	cmp	r4, fp
    3c4a:	d1d3      	bne.n	3bf4 <_i2c_master_read_packet+0xcc>
    3c4c:	e001      	b.n	3c52 <_i2c_master_read_packet+0x12a>
				/* Set action to NACK */
				i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
			} else {
				/* Save data to buffer. */
				_i2c_master_wait_for_sync(module);
				packet->data[counter++] = i2c_module->DATA.reg;
    3c4e:	46b8      	mov	r8, r7
				/* Wait for response. */
				tmp_status = _i2c_master_wait_for_bus(module);
    3c50:	9001      	str	r0, [sp, #4]
			if (tmp_status != STATUS_OK) {
				break;
			}
		}

		if (module->send_stop) {
    3c52:	7ab3      	ldrb	r3, [r6, #10]
    3c54:	2b00      	cmp	r3, #0
    3c56:	d008      	beq.n	3c6a <_i2c_master_read_packet+0x142>
			/* Send stop command unless arbitration is lost. */
			_i2c_master_wait_for_sync(module);
    3c58:	1c30      	adds	r0, r6, #0
    3c5a:	4b17      	ldr	r3, [pc, #92]	; (3cb8 <_i2c_master_read_packet+0x190>)
    3c5c:	4798      	blx	r3
			i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(3);
    3c5e:	686b      	ldr	r3, [r5, #4]
    3c60:	22c0      	movs	r2, #192	; 0xc0
    3c62:	0292      	lsls	r2, r2, #10
    3c64:	4313      	orrs	r3, r2
    3c66:	606b      	str	r3, [r5, #4]
    3c68:	e007      	b.n	3c7a <_i2c_master_read_packet+0x152>
		} else {
		  	_i2c_master_wait_for_sync(module);
    3c6a:	1c30      	adds	r0, r6, #0
    3c6c:	4b12      	ldr	r3, [pc, #72]	; (3cb8 <_i2c_master_read_packet+0x190>)
    3c6e:	4798      	blx	r3
			i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(1);
    3c70:	686b      	ldr	r3, [r5, #4]
    3c72:	2280      	movs	r2, #128	; 0x80
    3c74:	0252      	lsls	r2, r2, #9
    3c76:	4313      	orrs	r3, r2
    3c78:	606b      	str	r3, [r5, #4]
		}

		/* Save last data to buffer. */
		_i2c_master_wait_for_sync(module);
    3c7a:	1c30      	adds	r0, r6, #0
    3c7c:	4b0e      	ldr	r3, [pc, #56]	; (3cb8 <_i2c_master_read_packet+0x190>)
    3c7e:	4798      	blx	r3
		packet->data[counter] = i2c_module->DATA.reg;
    3c80:	2328      	movs	r3, #40	; 0x28
    3c82:	5cea      	ldrb	r2, [r5, r3]
    3c84:	464b      	mov	r3, r9
    3c86:	685b      	ldr	r3, [r3, #4]
    3c88:	4641      	mov	r1, r8
    3c8a:	545a      	strb	r2, [r3, r1]
    3c8c:	9b01      	ldr	r3, [sp, #4]
    3c8e:	e000      	b.n	3c92 <_i2c_master_read_packet+0x16a>
	if (tmp_status == STATUS_OK) {
		/* Read data buffer. */
		while (tmp_data_length--) {
			/* Check that bus ownership is not lost. */
			if (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(2))) {
				return STATUS_ERR_PACKET_COLLISION;
    3c90:	2341      	movs	r3, #65	; 0x41
		_i2c_master_wait_for_sync(module);
		packet->data[counter] = i2c_module->DATA.reg;
	}

	return tmp_status;
}
    3c92:	1c18      	adds	r0, r3, #0
    3c94:	b003      	add	sp, #12
    3c96:	bc3c      	pop	{r2, r3, r4, r5}
    3c98:	4690      	mov	r8, r2
    3c9a:	4699      	mov	r9, r3
    3c9c:	46a2      	mov	sl, r4
    3c9e:	46ab      	mov	fp, r5
    3ca0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3ca2:	46c0      	nop			; (mov r8, r8)
    3ca4:	00003b09 	.word	0x00003b09
    3ca8:	fffbffff 	.word	0xfffbffff
    3cac:	00003ad9 	.word	0x00003ad9
    3cb0:	00003aa9 	.word	0x00003aa9
    3cb4:	0000ffff 	.word	0x0000ffff
    3cb8:	000038b1 	.word	0x000038b1

00003cbc <_i2c_master_write_packet>:
 *                                      acknowledged the address
 */
static enum status_code _i2c_master_write_packet(
		struct i2c_master_module *const module,
		struct i2c_master_packet *const packet)
{
    3cbc:	b5f0      	push	{r4, r5, r6, r7, lr}
    3cbe:	465f      	mov	r7, fp
    3cc0:	4656      	mov	r6, sl
    3cc2:	464d      	mov	r5, r9
    3cc4:	4644      	mov	r4, r8
    3cc6:	b4f0      	push	{r4, r5, r6, r7}
    3cc8:	b083      	sub	sp, #12
    3cca:	1c06      	adds	r6, r0, #0
    3ccc:	1c0f      	adds	r7, r1, #0
	SercomI2cm *const i2c_module = &(module->hw->I2CM);
    3cce:	6805      	ldr	r5, [r0, #0]

	/* Return value. */
	enum status_code tmp_status;
	uint16_t tmp_data_length = packet->data_length;
    3cd0:	884c      	ldrh	r4, [r1, #2]

	_i2c_master_wait_for_sync(module);
    3cd2:	4b31      	ldr	r3, [pc, #196]	; (3d98 <_i2c_master_write_packet+0xdc>)
    3cd4:	4798      	blx	r3

	/* Switch to high speed mode */
	if (packet->high_speed) {
    3cd6:	7a7b      	ldrb	r3, [r7, #9]
    3cd8:	2b00      	cmp	r3, #0
    3cda:	d003      	beq.n	3ce4 <_i2c_master_write_packet+0x28>
		_i2c_master_send_hs_master_code(module, packet->hs_master_code);
    3cdc:	7ab9      	ldrb	r1, [r7, #10]
    3cde:	1c30      	adds	r0, r6, #0
    3ce0:	4b2e      	ldr	r3, [pc, #184]	; (3d9c <_i2c_master_write_packet+0xe0>)
    3ce2:	4798      	blx	r3
	}

	/* Set action to ACK. */
	i2c_module->CTRLB.reg &= ~SERCOM_I2CM_CTRLB_ACKACT;
    3ce4:	686a      	ldr	r2, [r5, #4]
    3ce6:	4b2e      	ldr	r3, [pc, #184]	; (3da0 <_i2c_master_write_packet+0xe4>)
    3ce8:	4013      	ands	r3, r2
    3cea:	606b      	str	r3, [r5, #4]

	/* Set address and direction bit. Will send start command on bus. */
	if (packet->ten_bit_address) {
    3cec:	7a3b      	ldrb	r3, [r7, #8]
    3cee:	2b00      	cmp	r3, #0
    3cf0:	d009      	beq.n	3d06 <_i2c_master_write_packet+0x4a>
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_WRITE |
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos) |
    3cf2:	7a7b      	ldrb	r3, [r7, #9]
    3cf4:	039a      	lsls	r2, r3, #14
	/* Set action to ACK. */
	i2c_module->CTRLB.reg &= ~SERCOM_I2CM_CTRLB_ACKACT;

	/* Set address and direction bit. Will send start command on bus. */
	if (packet->ten_bit_address) {
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_WRITE |
    3cf6:	883b      	ldrh	r3, [r7, #0]
    3cf8:	005b      	lsls	r3, r3, #1
    3cfa:	4313      	orrs	r3, r2
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos) |
    3cfc:	2280      	movs	r2, #128	; 0x80
    3cfe:	0212      	lsls	r2, r2, #8
    3d00:	4313      	orrs	r3, r2
	/* Set action to ACK. */
	i2c_module->CTRLB.reg &= ~SERCOM_I2CM_CTRLB_ACKACT;

	/* Set address and direction bit. Will send start command on bus. */
	if (packet->ten_bit_address) {
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_WRITE |
    3d02:	626b      	str	r3, [r5, #36]	; 0x24
    3d04:	e005      	b.n	3d12 <_i2c_master_write_packet+0x56>
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos) |
			SERCOM_I2CM_ADDR_TENBITEN;
	} else {
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_WRITE |
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos);
    3d06:	7a7b      	ldrb	r3, [r7, #9]
    3d08:	039a      	lsls	r2, r3, #14
	if (packet->ten_bit_address) {
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_WRITE |
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos) |
			SERCOM_I2CM_ADDR_TENBITEN;
	} else {
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_WRITE |
    3d0a:	883b      	ldrh	r3, [r7, #0]
    3d0c:	005b      	lsls	r3, r3, #1
    3d0e:	4313      	orrs	r3, r2
    3d10:	626b      	str	r3, [r5, #36]	; 0x24
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos);
	}
	/* Wait for response on bus. */
	tmp_status = _i2c_master_wait_for_bus(module);
    3d12:	1c30      	adds	r0, r6, #0
    3d14:	4b23      	ldr	r3, [pc, #140]	; (3da4 <_i2c_master_write_packet+0xe8>)
    3d16:	4798      	blx	r3
    3d18:	1e03      	subs	r3, r0, #0

	/* Check for address response error unless previous error is
	 * detected. */
	if (tmp_status == STATUS_OK) {
    3d1a:	d136      	bne.n	3d8a <_i2c_master_write_packet+0xce>
		tmp_status = _i2c_master_address_response(module);
    3d1c:	1c30      	adds	r0, r6, #0
    3d1e:	4b22      	ldr	r3, [pc, #136]	; (3da8 <_i2c_master_write_packet+0xec>)
    3d20:	4798      	blx	r3
    3d22:	1e03      	subs	r3, r0, #0
    3d24:	9001      	str	r0, [sp, #4]
	}

	/* Check that no error has occurred. */
	if (tmp_status == STATUS_OK) {
    3d26:	d130      	bne.n	3d8a <_i2c_master_write_packet+0xce>
    3d28:	46a0      	mov	r8, r4
    3d2a:	2400      	movs	r4, #0
		uint16_t buffer_counter = 0;

		/* Write data buffer. */
		while (tmp_data_length--) {
			/* Check that bus ownership is not lost. */
			if (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(2))) {
    3d2c:	3320      	adds	r3, #32
    3d2e:	4699      	mov	r9, r3
				return STATUS_ERR_PACKET_COLLISION;
			}

			/* Write byte to slave. */
			_i2c_master_wait_for_sync(module);
    3d30:	4b19      	ldr	r3, [pc, #100]	; (3d98 <_i2c_master_write_packet+0xdc>)
    3d32:	469b      	mov	fp, r3
			i2c_module->DATA.reg = packet->data[buffer_counter++];

			/* Wait for response. */
			tmp_status = _i2c_master_wait_for_bus(module);
    3d34:	4b1b      	ldr	r3, [pc, #108]	; (3da4 <_i2c_master_write_packet+0xe8>)
    3d36:	469a      	mov	sl, r3
    3d38:	e011      	b.n	3d5e <_i2c_master_write_packet+0xa2>
		uint16_t buffer_counter = 0;

		/* Write data buffer. */
		while (tmp_data_length--) {
			/* Check that bus ownership is not lost. */
			if (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(2))) {
    3d3a:	8b6b      	ldrh	r3, [r5, #26]
    3d3c:	464a      	mov	r2, r9
    3d3e:	4213      	tst	r3, r2
    3d40:	d022      	beq.n	3d88 <_i2c_master_write_packet+0xcc>
				return STATUS_ERR_PACKET_COLLISION;
			}

			/* Write byte to slave. */
			_i2c_master_wait_for_sync(module);
    3d42:	1c30      	adds	r0, r6, #0
    3d44:	47d8      	blx	fp
			i2c_module->DATA.reg = packet->data[buffer_counter++];
    3d46:	687b      	ldr	r3, [r7, #4]
    3d48:	5d1a      	ldrb	r2, [r3, r4]
    3d4a:	2328      	movs	r3, #40	; 0x28
    3d4c:	54ea      	strb	r2, [r5, r3]

			/* Wait for response. */
			tmp_status = _i2c_master_wait_for_bus(module);
    3d4e:	1c30      	adds	r0, r6, #0
    3d50:	47d0      	blx	sl

			/* Check for error. */
			if (tmp_status != STATUS_OK) {
    3d52:	2800      	cmp	r0, #0
    3d54:	d106      	bne.n	3d64 <_i2c_master_write_packet+0xa8>
				break;
			}

			/* Check for NACK from slave. */
			if (i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_RXNACK) {
    3d56:	8b6b      	ldrh	r3, [r5, #26]
    3d58:	3401      	adds	r4, #1
    3d5a:	075b      	lsls	r3, r3, #29
    3d5c:	d404      	bmi.n	3d68 <_i2c_master_write_packet+0xac>
	if (tmp_status == STATUS_OK) {
		/* Buffer counter. */
		uint16_t buffer_counter = 0;

		/* Write data buffer. */
		while (tmp_data_length--) {
    3d5e:	4544      	cmp	r4, r8
    3d60:	d1eb      	bne.n	3d3a <_i2c_master_write_packet+0x7e>
    3d62:	e003      	b.n	3d6c <_i2c_master_write_packet+0xb0>
			/* Write byte to slave. */
			_i2c_master_wait_for_sync(module);
			i2c_module->DATA.reg = packet->data[buffer_counter++];

			/* Wait for response. */
			tmp_status = _i2c_master_wait_for_bus(module);
    3d64:	9001      	str	r0, [sp, #4]
    3d66:	e001      	b.n	3d6c <_i2c_master_write_packet+0xb0>
			}

			/* Check for NACK from slave. */
			if (i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_RXNACK) {
				/* Return bad data value. */
				tmp_status = STATUS_ERR_OVERFLOW;
    3d68:	231e      	movs	r3, #30
    3d6a:	9301      	str	r3, [sp, #4]
				break;
			}
		}

		if (module->send_stop) {
    3d6c:	7ab3      	ldrb	r3, [r6, #10]
    3d6e:	9801      	ldr	r0, [sp, #4]
    3d70:	2b00      	cmp	r3, #0
    3d72:	d00a      	beq.n	3d8a <_i2c_master_write_packet+0xce>
			/* Stop command */
			_i2c_master_wait_for_sync(module);
    3d74:	1c30      	adds	r0, r6, #0
    3d76:	4b08      	ldr	r3, [pc, #32]	; (3d98 <_i2c_master_write_packet+0xdc>)
    3d78:	4798      	blx	r3
			i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(3);
    3d7a:	686b      	ldr	r3, [r5, #4]
    3d7c:	22c0      	movs	r2, #192	; 0xc0
    3d7e:	0292      	lsls	r2, r2, #10
    3d80:	4313      	orrs	r3, r2
    3d82:	606b      	str	r3, [r5, #4]
    3d84:	9801      	ldr	r0, [sp, #4]
    3d86:	e000      	b.n	3d8a <_i2c_master_write_packet+0xce>

		/* Write data buffer. */
		while (tmp_data_length--) {
			/* Check that bus ownership is not lost. */
			if (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(2))) {
				return STATUS_ERR_PACKET_COLLISION;
    3d88:	2041      	movs	r0, #65	; 0x41
			i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(3);
		}
	}

	return tmp_status;
}
    3d8a:	b003      	add	sp, #12
    3d8c:	bc3c      	pop	{r2, r3, r4, r5}
    3d8e:	4690      	mov	r8, r2
    3d90:	4699      	mov	r9, r3
    3d92:	46a2      	mov	sl, r4
    3d94:	46ab      	mov	fp, r5
    3d96:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3d98:	000038b1 	.word	0x000038b1
    3d9c:	00003b09 	.word	0x00003b09
    3da0:	fffbffff 	.word	0xfffbffff
    3da4:	00003ad9 	.word	0x00003ad9
    3da8:	00003aa9 	.word	0x00003aa9

00003dac <i2c_master_read_packet_wait>:
 *                                      acknowledged the address
 */
enum status_code i2c_master_read_packet_wait(
		struct i2c_master_module *const module,
		struct i2c_master_packet *const packet)
{
    3dac:	b508      	push	{r3, lr}
	Assert(module->hw);
	Assert(packet);

#if I2C_MASTER_CALLBACK_MODE == true
	/* Check if the I2C module is busy with a job. */
	if (module->buffer_remaining > 0) {
    3dae:	8b83      	ldrh	r3, [r0, #28]
    3db0:	b29b      	uxth	r3, r3
		return STATUS_BUSY;
    3db2:	2205      	movs	r2, #5
	Assert(module->hw);
	Assert(packet);

#if I2C_MASTER_CALLBACK_MODE == true
	/* Check if the I2C module is busy with a job. */
	if (module->buffer_remaining > 0) {
    3db4:	2b00      	cmp	r3, #0
    3db6:	d105      	bne.n	3dc4 <i2c_master_read_packet_wait+0x18>
		return STATUS_BUSY;
	}
#endif

	module->send_stop = true;
    3db8:	3301      	adds	r3, #1
    3dba:	7283      	strb	r3, [r0, #10]
	module->send_nack = true;
    3dbc:	72c3      	strb	r3, [r0, #11]
	
	return _i2c_master_read_packet(module, packet);
    3dbe:	4b02      	ldr	r3, [pc, #8]	; (3dc8 <i2c_master_read_packet_wait+0x1c>)
    3dc0:	4798      	blx	r3
    3dc2:	1c02      	adds	r2, r0, #0
}
    3dc4:	1c10      	adds	r0, r2, #0
    3dc6:	bd08      	pop	{r3, pc}
    3dc8:	00003b29 	.word	0x00003b29

00003dcc <i2c_master_write_packet_wait_no_stop>:
 *                                      more data
 */
enum status_code i2c_master_write_packet_wait_no_stop(
		struct i2c_master_module *const module,
		struct i2c_master_packet *const packet)
{
    3dcc:	b508      	push	{r3, lr}
	Assert(module->hw);
	Assert(packet);

#if I2C_MASTER_CALLBACK_MODE == true
	/* Check if the I2C module is busy with a job */
	if (module->buffer_remaining > 0) {
    3dce:	8b83      	ldrh	r3, [r0, #28]
    3dd0:	b29b      	uxth	r3, r3
		return STATUS_BUSY;
    3dd2:	2205      	movs	r2, #5
	Assert(module->hw);
	Assert(packet);

#if I2C_MASTER_CALLBACK_MODE == true
	/* Check if the I2C module is busy with a job */
	if (module->buffer_remaining > 0) {
    3dd4:	2b00      	cmp	r3, #0
    3dd6:	d105      	bne.n	3de4 <i2c_master_write_packet_wait_no_stop+0x18>
		return STATUS_BUSY;
	}
#endif

	module->send_stop = false;
    3dd8:	7283      	strb	r3, [r0, #10]
	module->send_nack = true;
    3dda:	3301      	adds	r3, #1
    3ddc:	72c3      	strb	r3, [r0, #11]

	return _i2c_master_write_packet(module, packet);
    3dde:	4b02      	ldr	r3, [pc, #8]	; (3de8 <i2c_master_write_packet_wait_no_stop+0x1c>)
    3de0:	4798      	blx	r3
    3de2:	1c02      	adds	r2, r0, #0
}
    3de4:	1c10      	adds	r0, r2, #0
    3de6:	bd08      	pop	{r3, pc}
    3de8:	00003cbd 	.word	0x00003cbd

00003dec <_i2c_master_wait_for_sync>:
    3dec:	6801      	ldr	r1, [r0, #0]
    3dee:	2207      	movs	r2, #7
    3df0:	69cb      	ldr	r3, [r1, #28]
    3df2:	421a      	tst	r2, r3
    3df4:	d1fc      	bne.n	3df0 <_i2c_master_wait_for_sync+0x4>
    3df6:	4770      	bx	lr

00003df8 <_i2c_master_read>:
    3df8:	b570      	push	{r4, r5, r6, lr}
    3dfa:	1c04      	adds	r4, r0, #0
    3dfc:	6806      	ldr	r6, [r0, #0]
    3dfe:	6832      	ldr	r2, [r6, #0]
    3e00:	8b43      	ldrh	r3, [r0, #26]
    3e02:	8b85      	ldrh	r5, [r0, #28]
    3e04:	1b5d      	subs	r5, r3, r5
    3e06:	b2ad      	uxth	r5, r5
    3e08:	8b83      	ldrh	r3, [r0, #28]
    3e0a:	3b01      	subs	r3, #1
    3e0c:	b29b      	uxth	r3, r3
    3e0e:	8383      	strh	r3, [r0, #28]
    3e10:	0113      	lsls	r3, r2, #4
    3e12:	d50c      	bpl.n	3e2e <_i2c_master_read+0x36>
    3e14:	7ac3      	ldrb	r3, [r0, #11]
    3e16:	2b00      	cmp	r3, #0
    3e18:	d015      	beq.n	3e46 <_i2c_master_read+0x4e>
    3e1a:	8b83      	ldrh	r3, [r0, #28]
    3e1c:	b29b      	uxth	r3, r3
    3e1e:	2b01      	cmp	r3, #1
    3e20:	d111      	bne.n	3e46 <_i2c_master_read+0x4e>
    3e22:	6873      	ldr	r3, [r6, #4]
    3e24:	2280      	movs	r2, #128	; 0x80
    3e26:	02d2      	lsls	r2, r2, #11
    3e28:	4313      	orrs	r3, r2
    3e2a:	6073      	str	r3, [r6, #4]
    3e2c:	e00b      	b.n	3e46 <_i2c_master_read+0x4e>
    3e2e:	7ac3      	ldrb	r3, [r0, #11]
    3e30:	2b00      	cmp	r3, #0
    3e32:	d008      	beq.n	3e46 <_i2c_master_read+0x4e>
    3e34:	8b83      	ldrh	r3, [r0, #28]
    3e36:	b29b      	uxth	r3, r3
    3e38:	2b00      	cmp	r3, #0
    3e3a:	d104      	bne.n	3e46 <_i2c_master_read+0x4e>
    3e3c:	6873      	ldr	r3, [r6, #4]
    3e3e:	2280      	movs	r2, #128	; 0x80
    3e40:	02d2      	lsls	r2, r2, #11
    3e42:	4313      	orrs	r3, r2
    3e44:	6073      	str	r3, [r6, #4]
    3e46:	8ba3      	ldrh	r3, [r4, #28]
    3e48:	b29b      	uxth	r3, r3
    3e4a:	2b00      	cmp	r3, #0
    3e4c:	d113      	bne.n	3e76 <_i2c_master_read+0x7e>
    3e4e:	7aa3      	ldrb	r3, [r4, #10]
    3e50:	2b00      	cmp	r3, #0
    3e52:	d008      	beq.n	3e66 <_i2c_master_read+0x6e>
    3e54:	1c20      	adds	r0, r4, #0
    3e56:	4b0d      	ldr	r3, [pc, #52]	; (3e8c <_i2c_master_read+0x94>)
    3e58:	4798      	blx	r3
    3e5a:	6873      	ldr	r3, [r6, #4]
    3e5c:	22c0      	movs	r2, #192	; 0xc0
    3e5e:	0292      	lsls	r2, r2, #10
    3e60:	4313      	orrs	r3, r2
    3e62:	6073      	str	r3, [r6, #4]
    3e64:	e007      	b.n	3e76 <_i2c_master_read+0x7e>
    3e66:	1c20      	adds	r0, r4, #0
    3e68:	4b08      	ldr	r3, [pc, #32]	; (3e8c <_i2c_master_read+0x94>)
    3e6a:	4798      	blx	r3
    3e6c:	6873      	ldr	r3, [r6, #4]
    3e6e:	2280      	movs	r2, #128	; 0x80
    3e70:	0252      	lsls	r2, r2, #9
    3e72:	4313      	orrs	r3, r2
    3e74:	6073      	str	r3, [r6, #4]
    3e76:	1c20      	adds	r0, r4, #0
    3e78:	4b04      	ldr	r3, [pc, #16]	; (3e8c <_i2c_master_read+0x94>)
    3e7a:	4798      	blx	r3
    3e7c:	6a23      	ldr	r3, [r4, #32]
    3e7e:	195d      	adds	r5, r3, r5
    3e80:	2328      	movs	r3, #40	; 0x28
    3e82:	5cf3      	ldrb	r3, [r6, r3]
    3e84:	b2db      	uxtb	r3, r3
    3e86:	702b      	strb	r3, [r5, #0]
    3e88:	bd70      	pop	{r4, r5, r6, pc}
    3e8a:	46c0      	nop			; (mov r8, r8)
    3e8c:	00003ded 	.word	0x00003ded

00003e90 <_i2c_master_write>:
    3e90:	b570      	push	{r4, r5, r6, lr}
    3e92:	6806      	ldr	r6, [r0, #0]
    3e94:	8b73      	ldrh	r3, [r6, #26]
    3e96:	075b      	lsls	r3, r3, #29
    3e98:	d503      	bpl.n	3ea2 <_i2c_master_write+0x12>
    3e9a:	221e      	movs	r2, #30
    3e9c:	2325      	movs	r3, #37	; 0x25
    3e9e:	54c2      	strb	r2, [r0, r3]
    3ea0:	e010      	b.n	3ec4 <_i2c_master_write+0x34>
    3ea2:	1c05      	adds	r5, r0, #0
    3ea4:	8b43      	ldrh	r3, [r0, #26]
    3ea6:	8b84      	ldrh	r4, [r0, #28]
    3ea8:	1b1c      	subs	r4, r3, r4
    3eaa:	b2a4      	uxth	r4, r4
    3eac:	8b83      	ldrh	r3, [r0, #28]
    3eae:	3b01      	subs	r3, #1
    3eb0:	b29b      	uxth	r3, r3
    3eb2:	8383      	strh	r3, [r0, #28]
    3eb4:	4b04      	ldr	r3, [pc, #16]	; (3ec8 <_i2c_master_write+0x38>)
    3eb6:	4798      	blx	r3
    3eb8:	6a2b      	ldr	r3, [r5, #32]
    3eba:	191c      	adds	r4, r3, r4
    3ebc:	7823      	ldrb	r3, [r4, #0]
    3ebe:	b2db      	uxtb	r3, r3
    3ec0:	2228      	movs	r2, #40	; 0x28
    3ec2:	54b3      	strb	r3, [r6, r2]
    3ec4:	bd70      	pop	{r4, r5, r6, pc}
    3ec6:	46c0      	nop			; (mov r8, r8)
    3ec8:	00003ded 	.word	0x00003ded

00003ecc <_i2c_master_interrupt_handler>:
    3ecc:	b570      	push	{r4, r5, r6, lr}
    3ece:	0080      	lsls	r0, r0, #2
    3ed0:	4b6c      	ldr	r3, [pc, #432]	; (4084 <_i2c_master_interrupt_handler+0x1b8>)
    3ed2:	58c4      	ldr	r4, [r0, r3]
    3ed4:	6825      	ldr	r5, [r4, #0]
    3ed6:	682b      	ldr	r3, [r5, #0]
    3ed8:	011b      	lsls	r3, r3, #4
    3eda:	0fda      	lsrs	r2, r3, #31
    3edc:	7e63      	ldrb	r3, [r4, #25]
    3ede:	7e26      	ldrb	r6, [r4, #24]
    3ee0:	401e      	ands	r6, r3
    3ee2:	8b63      	ldrh	r3, [r4, #26]
    3ee4:	b29b      	uxth	r3, r3
    3ee6:	2b00      	cmp	r3, #0
    3ee8:	d135      	bne.n	3f56 <_i2c_master_interrupt_handler+0x8a>
    3eea:	8ba3      	ldrh	r3, [r4, #28]
    3eec:	b29b      	uxth	r3, r3
    3eee:	2b00      	cmp	r3, #0
    3ef0:	d031      	beq.n	3f56 <_i2c_master_interrupt_handler+0x8a>
    3ef2:	7e2b      	ldrb	r3, [r5, #24]
    3ef4:	07db      	lsls	r3, r3, #31
    3ef6:	d508      	bpl.n	3f0a <_i2c_master_interrupt_handler+0x3e>
    3ef8:	2301      	movs	r3, #1
    3efa:	762b      	strb	r3, [r5, #24]
    3efc:	8b6b      	ldrh	r3, [r5, #26]
    3efe:	079b      	lsls	r3, r3, #30
    3f00:	d516      	bpl.n	3f30 <_i2c_master_interrupt_handler+0x64>
    3f02:	2241      	movs	r2, #65	; 0x41
    3f04:	2325      	movs	r3, #37	; 0x25
    3f06:	54e2      	strb	r2, [r4, r3]
    3f08:	e012      	b.n	3f30 <_i2c_master_interrupt_handler+0x64>
    3f0a:	8b6b      	ldrh	r3, [r5, #26]
    3f0c:	075b      	lsls	r3, r3, #29
    3f0e:	d50f      	bpl.n	3f30 <_i2c_master_interrupt_handler+0x64>
    3f10:	2218      	movs	r2, #24
    3f12:	2325      	movs	r3, #37	; 0x25
    3f14:	54e2      	strb	r2, [r4, r3]
    3f16:	2300      	movs	r3, #0
    3f18:	83a3      	strh	r3, [r4, #28]
    3f1a:	7aa3      	ldrb	r3, [r4, #10]
    3f1c:	2b00      	cmp	r3, #0
    3f1e:	d007      	beq.n	3f30 <_i2c_master_interrupt_handler+0x64>
    3f20:	1c20      	adds	r0, r4, #0
    3f22:	4b59      	ldr	r3, [pc, #356]	; (4088 <_i2c_master_interrupt_handler+0x1bc>)
    3f24:	4798      	blx	r3
    3f26:	686b      	ldr	r3, [r5, #4]
    3f28:	22c0      	movs	r2, #192	; 0xc0
    3f2a:	0292      	lsls	r2, r2, #10
    3f2c:	4313      	orrs	r3, r2
    3f2e:	606b      	str	r3, [r5, #4]
    3f30:	8ba3      	ldrh	r3, [r4, #28]
    3f32:	b29b      	uxth	r3, r3
    3f34:	8363      	strh	r3, [r4, #26]
    3f36:	2325      	movs	r3, #37	; 0x25
    3f38:	5ce3      	ldrb	r3, [r4, r3]
    3f3a:	2b05      	cmp	r3, #5
    3f3c:	d156      	bne.n	3fec <_i2c_master_interrupt_handler+0x120>
    3f3e:	331f      	adds	r3, #31
    3f40:	5ce3      	ldrb	r3, [r4, r3]
    3f42:	2b00      	cmp	r3, #0
    3f44:	d103      	bne.n	3f4e <_i2c_master_interrupt_handler+0x82>
    3f46:	1c20      	adds	r0, r4, #0
    3f48:	4b50      	ldr	r3, [pc, #320]	; (408c <_i2c_master_interrupt_handler+0x1c0>)
    3f4a:	4798      	blx	r3
    3f4c:	e04e      	b.n	3fec <_i2c_master_interrupt_handler+0x120>
    3f4e:	1c20      	adds	r0, r4, #0
    3f50:	4b4f      	ldr	r3, [pc, #316]	; (4090 <_i2c_master_interrupt_handler+0x1c4>)
    3f52:	4798      	blx	r3
    3f54:	e04a      	b.n	3fec <_i2c_master_interrupt_handler+0x120>
    3f56:	8b63      	ldrh	r3, [r4, #26]
    3f58:	b29b      	uxth	r3, r3
    3f5a:	2b00      	cmp	r3, #0
    3f5c:	d026      	beq.n	3fac <_i2c_master_interrupt_handler+0xe0>
    3f5e:	8ba3      	ldrh	r3, [r4, #28]
    3f60:	b29b      	uxth	r3, r3
    3f62:	2b00      	cmp	r3, #0
    3f64:	d122      	bne.n	3fac <_i2c_master_interrupt_handler+0xe0>
    3f66:	3325      	adds	r3, #37	; 0x25
    3f68:	5ce3      	ldrb	r3, [r4, r3]
    3f6a:	2b05      	cmp	r3, #5
    3f6c:	d11e      	bne.n	3fac <_i2c_master_interrupt_handler+0xe0>
    3f6e:	331f      	adds	r3, #31
    3f70:	5ce3      	ldrb	r3, [r4, r3]
    3f72:	2b00      	cmp	r3, #0
    3f74:	d11a      	bne.n	3fac <_i2c_master_interrupt_handler+0xe0>
    3f76:	3303      	adds	r3, #3
    3f78:	752b      	strb	r3, [r5, #20]
    3f7a:	2300      	movs	r3, #0
    3f7c:	8363      	strh	r3, [r4, #26]
    3f7e:	3325      	adds	r3, #37	; 0x25
    3f80:	2200      	movs	r2, #0
    3f82:	54e2      	strb	r2, [r4, r3]
    3f84:	7aa3      	ldrb	r3, [r4, #10]
    3f86:	2b00      	cmp	r3, #0
    3f88:	d008      	beq.n	3f9c <_i2c_master_interrupt_handler+0xd0>
    3f8a:	1c20      	adds	r0, r4, #0
    3f8c:	4b3e      	ldr	r3, [pc, #248]	; (4088 <_i2c_master_interrupt_handler+0x1bc>)
    3f8e:	4798      	blx	r3
    3f90:	686b      	ldr	r3, [r5, #4]
    3f92:	22c0      	movs	r2, #192	; 0xc0
    3f94:	0292      	lsls	r2, r2, #10
    3f96:	4313      	orrs	r3, r2
    3f98:	606b      	str	r3, [r5, #4]
    3f9a:	e001      	b.n	3fa0 <_i2c_master_interrupt_handler+0xd4>
    3f9c:	2301      	movs	r3, #1
    3f9e:	762b      	strb	r3, [r5, #24]
    3fa0:	07f3      	lsls	r3, r6, #31
    3fa2:	d523      	bpl.n	3fec <_i2c_master_interrupt_handler+0x120>
    3fa4:	68e3      	ldr	r3, [r4, #12]
    3fa6:	1c20      	adds	r0, r4, #0
    3fa8:	4798      	blx	r3
    3faa:	e01f      	b.n	3fec <_i2c_master_interrupt_handler+0x120>
    3fac:	8b63      	ldrh	r3, [r4, #26]
    3fae:	b29b      	uxth	r3, r3
    3fb0:	2b00      	cmp	r3, #0
    3fb2:	d01b      	beq.n	3fec <_i2c_master_interrupt_handler+0x120>
    3fb4:	8ba3      	ldrh	r3, [r4, #28]
    3fb6:	b29b      	uxth	r3, r3
    3fb8:	2b00      	cmp	r3, #0
    3fba:	d017      	beq.n	3fec <_i2c_master_interrupt_handler+0x120>
    3fbc:	8b6b      	ldrh	r3, [r5, #26]
    3fbe:	069b      	lsls	r3, r3, #26
    3fc0:	d409      	bmi.n	3fd6 <_i2c_master_interrupt_handler+0x10a>
    3fc2:	2a00      	cmp	r2, #0
    3fc4:	d003      	beq.n	3fce <_i2c_master_interrupt_handler+0x102>
    3fc6:	8ba3      	ldrh	r3, [r4, #28]
    3fc8:	b29b      	uxth	r3, r3
    3fca:	2b01      	cmp	r3, #1
    3fcc:	d003      	beq.n	3fd6 <_i2c_master_interrupt_handler+0x10a>
    3fce:	2241      	movs	r2, #65	; 0x41
    3fd0:	2325      	movs	r3, #37	; 0x25
    3fd2:	54e2      	strb	r2, [r4, r3]
    3fd4:	e00a      	b.n	3fec <_i2c_master_interrupt_handler+0x120>
    3fd6:	2324      	movs	r3, #36	; 0x24
    3fd8:	5ce3      	ldrb	r3, [r4, r3]
    3fda:	2b00      	cmp	r3, #0
    3fdc:	d103      	bne.n	3fe6 <_i2c_master_interrupt_handler+0x11a>
    3fde:	1c20      	adds	r0, r4, #0
    3fe0:	4b2a      	ldr	r3, [pc, #168]	; (408c <_i2c_master_interrupt_handler+0x1c0>)
    3fe2:	4798      	blx	r3
    3fe4:	e002      	b.n	3fec <_i2c_master_interrupt_handler+0x120>
    3fe6:	1c20      	adds	r0, r4, #0
    3fe8:	4b29      	ldr	r3, [pc, #164]	; (4090 <_i2c_master_interrupt_handler+0x1c4>)
    3fea:	4798      	blx	r3
    3fec:	8b63      	ldrh	r3, [r4, #26]
    3fee:	b29b      	uxth	r3, r3
    3ff0:	2b00      	cmp	r3, #0
    3ff2:	d025      	beq.n	4040 <_i2c_master_interrupt_handler+0x174>
    3ff4:	8ba3      	ldrh	r3, [r4, #28]
    3ff6:	b29b      	uxth	r3, r3
    3ff8:	2b00      	cmp	r3, #0
    3ffa:	d121      	bne.n	4040 <_i2c_master_interrupt_handler+0x174>
    3ffc:	3325      	adds	r3, #37	; 0x25
    3ffe:	5ce3      	ldrb	r3, [r4, r3]
    4000:	2b05      	cmp	r3, #5
    4002:	d11d      	bne.n	4040 <_i2c_master_interrupt_handler+0x174>
    4004:	331f      	adds	r3, #31
    4006:	5ce3      	ldrb	r3, [r4, r3]
    4008:	2b01      	cmp	r3, #1
    400a:	d119      	bne.n	4040 <_i2c_master_interrupt_handler+0x174>
    400c:	3302      	adds	r3, #2
    400e:	752b      	strb	r3, [r5, #20]
    4010:	2300      	movs	r3, #0
    4012:	8363      	strh	r3, [r4, #26]
    4014:	3325      	adds	r3, #37	; 0x25
    4016:	2200      	movs	r2, #0
    4018:	54e2      	strb	r2, [r4, r3]
    401a:	07b3      	lsls	r3, r6, #30
    401c:	d507      	bpl.n	402e <_i2c_master_interrupt_handler+0x162>
    401e:	2324      	movs	r3, #36	; 0x24
    4020:	5ce3      	ldrb	r3, [r4, r3]
    4022:	2b01      	cmp	r3, #1
    4024:	d103      	bne.n	402e <_i2c_master_interrupt_handler+0x162>
    4026:	6923      	ldr	r3, [r4, #16]
    4028:	1c20      	adds	r0, r4, #0
    402a:	4798      	blx	r3
    402c:	e008      	b.n	4040 <_i2c_master_interrupt_handler+0x174>
    402e:	07f3      	lsls	r3, r6, #31
    4030:	d506      	bpl.n	4040 <_i2c_master_interrupt_handler+0x174>
    4032:	2324      	movs	r3, #36	; 0x24
    4034:	5ce3      	ldrb	r3, [r4, r3]
    4036:	2b00      	cmp	r3, #0
    4038:	d102      	bne.n	4040 <_i2c_master_interrupt_handler+0x174>
    403a:	68e3      	ldr	r3, [r4, #12]
    403c:	1c20      	adds	r0, r4, #0
    403e:	4798      	blx	r3
    4040:	2325      	movs	r3, #37	; 0x25
    4042:	5ce3      	ldrb	r3, [r4, r3]
    4044:	2b05      	cmp	r3, #5
    4046:	d01c      	beq.n	4082 <_i2c_master_interrupt_handler+0x1b6>
    4048:	2325      	movs	r3, #37	; 0x25
    404a:	5ce3      	ldrb	r3, [r4, r3]
    404c:	2b00      	cmp	r3, #0
    404e:	d018      	beq.n	4082 <_i2c_master_interrupt_handler+0x1b6>
    4050:	2303      	movs	r3, #3
    4052:	752b      	strb	r3, [r5, #20]
    4054:	2300      	movs	r3, #0
    4056:	8363      	strh	r3, [r4, #26]
    4058:	83a3      	strh	r3, [r4, #28]
    405a:	3325      	adds	r3, #37	; 0x25
    405c:	5ce3      	ldrb	r3, [r4, r3]
    405e:	2b41      	cmp	r3, #65	; 0x41
    4060:	d00a      	beq.n	4078 <_i2c_master_interrupt_handler+0x1ac>
    4062:	7aa3      	ldrb	r3, [r4, #10]
    4064:	2b00      	cmp	r3, #0
    4066:	d007      	beq.n	4078 <_i2c_master_interrupt_handler+0x1ac>
    4068:	1c20      	adds	r0, r4, #0
    406a:	4b07      	ldr	r3, [pc, #28]	; (4088 <_i2c_master_interrupt_handler+0x1bc>)
    406c:	4798      	blx	r3
    406e:	686b      	ldr	r3, [r5, #4]
    4070:	22e0      	movs	r2, #224	; 0xe0
    4072:	02d2      	lsls	r2, r2, #11
    4074:	4313      	orrs	r3, r2
    4076:	606b      	str	r3, [r5, #4]
    4078:	0773      	lsls	r3, r6, #29
    407a:	d502      	bpl.n	4082 <_i2c_master_interrupt_handler+0x1b6>
    407c:	6963      	ldr	r3, [r4, #20]
    407e:	1c20      	adds	r0, r4, #0
    4080:	4798      	blx	r3
    4082:	bd70      	pop	{r4, r5, r6, pc}
    4084:	20000aa8 	.word	0x20000aa8
    4088:	00003ded 	.word	0x00003ded
    408c:	00003e91 	.word	0x00003e91
    4090:	00003df9 	.word	0x00003df9

00004094 <_tcc_get_inst_index>:
    4094:	4b08      	ldr	r3, [pc, #32]	; (40b8 <_tcc_get_inst_index+0x24>)
    4096:	4298      	cmp	r0, r3
    4098:	d00a      	beq.n	40b0 <_tcc_get_inst_index+0x1c>
    409a:	4b08      	ldr	r3, [pc, #32]	; (40bc <_tcc_get_inst_index+0x28>)
    409c:	4298      	cmp	r0, r3
    409e:	d005      	beq.n	40ac <_tcc_get_inst_index+0x18>
    40a0:	2300      	movs	r3, #0
    40a2:	4a07      	ldr	r2, [pc, #28]	; (40c0 <_tcc_get_inst_index+0x2c>)
    40a4:	4290      	cmp	r0, r2
    40a6:	d105      	bne.n	40b4 <_tcc_get_inst_index+0x20>
    40a8:	3302      	adds	r3, #2
    40aa:	e002      	b.n	40b2 <_tcc_get_inst_index+0x1e>
    40ac:	2301      	movs	r3, #1
    40ae:	e000      	b.n	40b2 <_tcc_get_inst_index+0x1e>
    40b0:	2300      	movs	r3, #0
    40b2:	b2db      	uxtb	r3, r3
    40b4:	1c18      	adds	r0, r3, #0
    40b6:	4770      	bx	lr
    40b8:	42002000 	.word	0x42002000
    40bc:	42002400 	.word	0x42002400
    40c0:	42002800 	.word	0x42002800

000040c4 <tcc_get_config_defaults>:
    40c4:	b510      	push	{r4, lr}
    40c6:	1c04      	adds	r4, r0, #0
    40c8:	1c08      	adds	r0, r1, #0
    40ca:	4b4f      	ldr	r3, [pc, #316]	; (4208 <tcc_get_config_defaults+0x144>)
    40cc:	4798      	blx	r3
    40ce:	2300      	movs	r3, #0
    40d0:	6023      	str	r3, [r4, #0]
    40d2:	0080      	lsls	r0, r0, #2
    40d4:	4a4d      	ldr	r2, [pc, #308]	; (420c <tcc_get_config_defaults+0x148>)
    40d6:	5882      	ldr	r2, [r0, r2]
    40d8:	6062      	str	r2, [r4, #4]
    40da:	72a3      	strb	r3, [r4, #10]
    40dc:	72e3      	strb	r3, [r4, #11]
    40de:	7323      	strb	r3, [r4, #12]
    40e0:	7263      	strb	r3, [r4, #9]
    40e2:	7223      	strb	r3, [r4, #8]
    40e4:	61e3      	str	r3, [r4, #28]
    40e6:	6223      	str	r3, [r4, #32]
    40e8:	6263      	str	r3, [r4, #36]	; 0x24
    40ea:	62a3      	str	r3, [r4, #40]	; 0x28
    40ec:	7523      	strb	r3, [r4, #20]
    40ee:	7563      	strb	r3, [r4, #21]
    40f0:	75a3      	strb	r3, [r4, #22]
    40f2:	75e3      	strb	r3, [r4, #23]
    40f4:	7623      	strb	r3, [r4, #24]
    40f6:	7663      	strb	r3, [r4, #25]
    40f8:	7423      	strb	r3, [r4, #16]
    40fa:	7463      	strb	r3, [r4, #17]
    40fc:	74a3      	strb	r3, [r4, #18]
    40fe:	74e3      	strb	r3, [r4, #19]
    4100:	222c      	movs	r2, #44	; 0x2c
    4102:	54a3      	strb	r3, [r4, r2]
    4104:	3201      	adds	r2, #1
    4106:	54a3      	strb	r3, [r4, r2]
    4108:	3201      	adds	r2, #1
    410a:	54a3      	strb	r3, [r4, r2]
    410c:	3201      	adds	r2, #1
    410e:	54a3      	strb	r3, [r4, r2]
    4110:	3201      	adds	r2, #1
    4112:	54a3      	strb	r3, [r4, r2]
    4114:	3201      	adds	r2, #1
    4116:	54a3      	strb	r3, [r4, r2]
    4118:	3201      	adds	r2, #1
    411a:	54a3      	strb	r3, [r4, r2]
    411c:	3201      	adds	r2, #1
    411e:	54a3      	strb	r3, [r4, r2]
    4120:	3201      	adds	r2, #1
    4122:	54a3      	strb	r3, [r4, r2]
    4124:	3201      	adds	r2, #1
    4126:	54a3      	strb	r3, [r4, r2]
    4128:	3201      	adds	r2, #1
    412a:	54a3      	strb	r3, [r4, r2]
    412c:	3201      	adds	r2, #1
    412e:	54a3      	strb	r3, [r4, r2]
    4130:	3201      	adds	r2, #1
    4132:	54a3      	strb	r3, [r4, r2]
    4134:	3201      	adds	r2, #1
    4136:	54a3      	strb	r3, [r4, r2]
    4138:	3201      	adds	r2, #1
    413a:	54a3      	strb	r3, [r4, r2]
    413c:	3201      	adds	r2, #1
    413e:	54a3      	strb	r3, [r4, r2]
    4140:	3201      	adds	r2, #1
    4142:	54a3      	strb	r3, [r4, r2]
    4144:	3201      	adds	r2, #1
    4146:	54a3      	strb	r3, [r4, r2]
    4148:	3201      	adds	r2, #1
    414a:	54a3      	strb	r3, [r4, r2]
    414c:	3201      	adds	r2, #1
    414e:	54a3      	strb	r3, [r4, r2]
    4150:	3201      	adds	r2, #1
    4152:	54a3      	strb	r3, [r4, r2]
    4154:	3201      	adds	r2, #1
    4156:	54a3      	strb	r3, [r4, r2]
    4158:	3201      	adds	r2, #1
    415a:	54a3      	strb	r3, [r4, r2]
    415c:	3201      	adds	r2, #1
    415e:	54a3      	strb	r3, [r4, r2]
    4160:	3201      	adds	r2, #1
    4162:	54a3      	strb	r3, [r4, r2]
    4164:	3201      	adds	r2, #1
    4166:	54a3      	strb	r3, [r4, r2]
    4168:	3201      	adds	r2, #1
    416a:	54a3      	strb	r3, [r4, r2]
    416c:	3201      	adds	r2, #1
    416e:	54a3      	strb	r3, [r4, r2]
    4170:	3201      	adds	r2, #1
    4172:	54a3      	strb	r3, [r4, r2]
    4174:	3201      	adds	r2, #1
    4176:	54a3      	strb	r3, [r4, r2]
    4178:	3201      	adds	r2, #1
    417a:	54a3      	strb	r3, [r4, r2]
    417c:	3201      	adds	r2, #1
    417e:	54a3      	strb	r3, [r4, r2]
    4180:	3201      	adds	r2, #1
    4182:	54a3      	strb	r3, [r4, r2]
    4184:	3201      	adds	r2, #1
    4186:	54a3      	strb	r3, [r4, r2]
    4188:	3201      	adds	r2, #1
    418a:	54a3      	strb	r3, [r4, r2]
    418c:	3201      	adds	r2, #1
    418e:	54a3      	strb	r3, [r4, r2]
    4190:	3201      	adds	r2, #1
    4192:	54a3      	strb	r3, [r4, r2]
    4194:	3201      	adds	r2, #1
    4196:	54a3      	strb	r3, [r4, r2]
    4198:	3201      	adds	r2, #1
    419a:	54a3      	strb	r3, [r4, r2]
    419c:	3201      	adds	r2, #1
    419e:	54a3      	strb	r3, [r4, r2]
    41a0:	3201      	adds	r2, #1
    41a2:	54a3      	strb	r3, [r4, r2]
    41a4:	3201      	adds	r2, #1
    41a6:	54a3      	strb	r3, [r4, r2]
    41a8:	3201      	adds	r2, #1
    41aa:	54a3      	strb	r3, [r4, r2]
    41ac:	3201      	adds	r2, #1
    41ae:	54a3      	strb	r3, [r4, r2]
    41b0:	3241      	adds	r2, #65	; 0x41
    41b2:	54a3      	strb	r3, [r4, r2]
    41b4:	65a3      	str	r3, [r4, #88]	; 0x58
    41b6:	67a3      	str	r3, [r4, #120]	; 0x78
    41b8:	3201      	adds	r2, #1
    41ba:	54a3      	strb	r3, [r4, r2]
    41bc:	65e3      	str	r3, [r4, #92]	; 0x5c
    41be:	67e3      	str	r3, [r4, #124]	; 0x7c
    41c0:	3201      	adds	r2, #1
    41c2:	54a3      	strb	r3, [r4, r2]
    41c4:	6623      	str	r3, [r4, #96]	; 0x60
    41c6:	3a1a      	subs	r2, #26
    41c8:	50a3      	str	r3, [r4, r2]
    41ca:	321b      	adds	r2, #27
    41cc:	54a3      	strb	r3, [r4, r2]
    41ce:	6663      	str	r3, [r4, #100]	; 0x64
    41d0:	3a17      	subs	r2, #23
    41d2:	50a3      	str	r3, [r4, r2]
    41d4:	3218      	adds	r2, #24
    41d6:	54a3      	strb	r3, [r4, r2]
    41d8:	66a3      	str	r3, [r4, #104]	; 0x68
    41da:	3a14      	subs	r2, #20
    41dc:	50a3      	str	r3, [r4, r2]
    41de:	3215      	adds	r2, #21
    41e0:	54a3      	strb	r3, [r4, r2]
    41e2:	66e3      	str	r3, [r4, #108]	; 0x6c
    41e4:	3a11      	subs	r2, #17
    41e6:	50a3      	str	r3, [r4, r2]
    41e8:	3212      	adds	r2, #18
    41ea:	54a3      	strb	r3, [r4, r2]
    41ec:	6723      	str	r3, [r4, #112]	; 0x70
    41ee:	3a0e      	subs	r2, #14
    41f0:	50a3      	str	r3, [r4, r2]
    41f2:	320f      	adds	r2, #15
    41f4:	54a3      	strb	r3, [r4, r2]
    41f6:	6763      	str	r3, [r4, #116]	; 0x74
    41f8:	3a0b      	subs	r2, #11
    41fa:	50a3      	str	r3, [r4, r2]
    41fc:	2101      	movs	r1, #1
    41fe:	320c      	adds	r2, #12
    4200:	54a1      	strb	r1, [r4, r2]
    4202:	3201      	adds	r2, #1
    4204:	54a3      	strb	r3, [r4, r2]
    4206:	bd10      	pop	{r4, pc}
    4208:	00004095 	.word	0x00004095
    420c:	00010bb0 	.word	0x00010bb0

00004210 <tcc_init>:
    4210:	b5f0      	push	{r4, r5, r6, r7, lr}
    4212:	465f      	mov	r7, fp
    4214:	4656      	mov	r6, sl
    4216:	464d      	mov	r5, r9
    4218:	4644      	mov	r4, r8
    421a:	b4f0      	push	{r4, r5, r6, r7}
    421c:	b08f      	sub	sp, #60	; 0x3c
    421e:	9000      	str	r0, [sp, #0]
    4220:	1c0c      	adds	r4, r1, #0
    4222:	1c17      	adds	r7, r2, #0
    4224:	1c08      	adds	r0, r1, #0
    4226:	4b87      	ldr	r3, [pc, #540]	; (4444 <tcc_init+0x234>)
    4228:	4798      	blx	r3
    422a:	1c05      	adds	r5, r0, #0
    422c:	1c06      	adds	r6, r0, #0
    422e:	4a86      	ldr	r2, [pc, #536]	; (4448 <tcc_init+0x238>)
    4230:	6a11      	ldr	r1, [r2, #32]
    4232:	0080      	lsls	r0, r0, #2
    4234:	4b85      	ldr	r3, [pc, #532]	; (444c <tcc_init+0x23c>)
    4236:	58c3      	ldr	r3, [r0, r3]
    4238:	430b      	orrs	r3, r1
    423a:	6213      	str	r3, [r2, #32]
    423c:	6823      	ldr	r3, [r4, #0]
    423e:	201c      	movs	r0, #28
    4240:	079b      	lsls	r3, r3, #30
    4242:	d500      	bpl.n	4246 <tcc_init+0x36>
    4244:	e1dd      	b.n	4602 <tcc_init+0x3f2>
    4246:	6823      	ldr	r3, [r4, #0]
    4248:	2201      	movs	r2, #1
    424a:	4013      	ands	r3, r2
    424c:	d000      	beq.n	4250 <tcc_init+0x40>
    424e:	e1d8      	b.n	4602 <tcc_init+0x3f2>
    4250:	00aa      	lsls	r2, r5, #2
    4252:	497f      	ldr	r1, [pc, #508]	; (4450 <tcc_init+0x240>)
    4254:	5852      	ldr	r2, [r2, r1]
    4256:	3805      	subs	r0, #5
    4258:	6839      	ldr	r1, [r7, #0]
    425a:	428a      	cmp	r2, r1
    425c:	d200      	bcs.n	4260 <tcc_init+0x50>
    425e:	e1d0      	b.n	4602 <tcc_init+0x3f2>
    4260:	6879      	ldr	r1, [r7, #4]
    4262:	428a      	cmp	r2, r1
    4264:	d200      	bcs.n	4268 <tcc_init+0x58>
    4266:	e1cc      	b.n	4602 <tcc_init+0x3f2>
    4268:	69f9      	ldr	r1, [r7, #28]
    426a:	428a      	cmp	r2, r1
    426c:	d200      	bcs.n	4270 <tcc_init+0x60>
    426e:	e1b3      	b.n	45d8 <tcc_init+0x3c8>
    4270:	6a39      	ldr	r1, [r7, #32]
    4272:	4291      	cmp	r1, r2
    4274:	d900      	bls.n	4278 <tcc_init+0x68>
    4276:	e1b1      	b.n	45dc <tcc_init+0x3cc>
    4278:	6a79      	ldr	r1, [r7, #36]	; 0x24
    427a:	428a      	cmp	r2, r1
    427c:	d200      	bcs.n	4280 <tcc_init+0x70>
    427e:	e1af      	b.n	45e0 <tcc_init+0x3d0>
    4280:	6ab9      	ldr	r1, [r7, #40]	; 0x28
    4282:	428a      	cmp	r2, r1
    4284:	d200      	bcs.n	4288 <tcc_init+0x78>
    4286:	e1ad      	b.n	45e4 <tcc_init+0x3d4>
    4288:	2298      	movs	r2, #152	; 0x98
    428a:	4694      	mov	ip, r2
    428c:	44bc      	add	ip, r7
    428e:	4662      	mov	r2, ip
    4290:	9204      	str	r2, [sp, #16]
    4292:	4661      	mov	r1, ip
    4294:	2200      	movs	r2, #0
    4296:	7808      	ldrb	r0, [r1, #0]
    4298:	2800      	cmp	r0, #0
    429a:	d004      	beq.n	42a6 <tcc_init+0x96>
    429c:	486d      	ldr	r0, [pc, #436]	; (4454 <tcc_init+0x244>)
    429e:	5d80      	ldrb	r0, [r0, r6]
    42a0:	4290      	cmp	r0, r2
    42a2:	dc00      	bgt.n	42a6 <tcc_init+0x96>
    42a4:	e1a0      	b.n	45e8 <tcc_init+0x3d8>
    42a6:	3201      	adds	r2, #1
    42a8:	3101      	adds	r1, #1
    42aa:	2a08      	cmp	r2, #8
    42ac:	d1f3      	bne.n	4296 <tcc_init+0x86>
    42ae:	2200      	movs	r2, #0
    42b0:	4690      	mov	r8, r2
    42b2:	2180      	movs	r1, #128	; 0x80
    42b4:	0449      	lsls	r1, r1, #17
    42b6:	468c      	mov	ip, r1
    42b8:	18b9      	adds	r1, r7, r2
    42ba:	7c09      	ldrb	r1, [r1, #16]
    42bc:	2901      	cmp	r1, #1
    42be:	d109      	bne.n	42d4 <tcc_init+0xc4>
    42c0:	4965      	ldr	r1, [pc, #404]	; (4458 <tcc_init+0x248>)
    42c2:	5d89      	ldrb	r1, [r1, r6]
    42c4:	4291      	cmp	r1, r2
    42c6:	da00      	bge.n	42ca <tcc_init+0xba>
    42c8:	e190      	b.n	45ec <tcc_init+0x3dc>
    42ca:	4661      	mov	r1, ip
    42cc:	4091      	lsls	r1, r2
    42ce:	4640      	mov	r0, r8
    42d0:	4308      	orrs	r0, r1
    42d2:	4680      	mov	r8, r0
    42d4:	3201      	adds	r2, #1
    42d6:	2a04      	cmp	r2, #4
    42d8:	d1ee      	bne.n	42b8 <tcc_init+0xa8>
    42da:	329d      	adds	r2, #157	; 0x9d
    42dc:	5cba      	ldrb	r2, [r7, r2]
    42de:	2a00      	cmp	r2, #0
    42e0:	d004      	beq.n	42ec <tcc_init+0xdc>
    42e2:	2280      	movs	r2, #128	; 0x80
    42e4:	0112      	lsls	r2, r2, #4
    42e6:	4641      	mov	r1, r8
    42e8:	4311      	orrs	r1, r2
    42ea:	4688      	mov	r8, r1
    42ec:	7b3a      	ldrb	r2, [r7, #12]
    42ee:	9206      	str	r2, [sp, #24]
    42f0:	7afa      	ldrb	r2, [r7, #11]
    42f2:	9207      	str	r2, [sp, #28]
    42f4:	7a3a      	ldrb	r2, [r7, #8]
    42f6:	1e51      	subs	r1, r2, #1
    42f8:	418a      	sbcs	r2, r1
    42fa:	0092      	lsls	r2, r2, #2
    42fc:	9203      	str	r2, [sp, #12]
    42fe:	7a7a      	ldrb	r2, [r7, #9]
    4300:	2a01      	cmp	r2, #1
    4302:	d102      	bne.n	430a <tcc_init+0xfa>
    4304:	9903      	ldr	r1, [sp, #12]
    4306:	4311      	orrs	r1, r2
    4308:	9103      	str	r1, [sp, #12]
    430a:	4a53      	ldr	r2, [pc, #332]	; (4458 <tcc_init+0x248>)
    430c:	5d52      	ldrb	r2, [r2, r5]
    430e:	1c11      	adds	r1, r2, #0
    4310:	9205      	str	r2, [sp, #20]
    4312:	2235      	movs	r2, #53	; 0x35
    4314:	5cb8      	ldrb	r0, [r7, r2]
    4316:	4281      	cmp	r1, r0
    4318:	d800      	bhi.n	431c <tcc_init+0x10c>
    431a:	e171      	b.n	4600 <tcc_init+0x3f0>
    431c:	222c      	movs	r2, #44	; 0x2c
    431e:	5cba      	ldrb	r2, [r7, r2]
    4320:	2a0f      	cmp	r2, #15
    4322:	d900      	bls.n	4326 <tcc_init+0x116>
    4324:	e16c      	b.n	4600 <tcc_init+0x3f0>
    4326:	212d      	movs	r1, #45	; 0x2d
    4328:	468c      	mov	ip, r1
    432a:	44bc      	add	ip, r7
    432c:	4661      	mov	r1, ip
    432e:	9101      	str	r1, [sp, #4]
    4330:	2100      	movs	r1, #0
    4332:	9608      	str	r6, [sp, #32]
    4334:	4699      	mov	r9, r3
    4336:	46bb      	mov	fp, r7
    4338:	1c0f      	adds	r7, r1, #0
    433a:	46a2      	mov	sl, r4
    433c:	9509      	str	r5, [sp, #36]	; 0x24
    433e:	e00c      	b.n	435a <tcc_init+0x14a>
    4340:	7c90      	ldrb	r0, [r2, #18]
    4342:	9b05      	ldr	r3, [sp, #20]
    4344:	4283      	cmp	r3, r0
    4346:	d800      	bhi.n	434a <tcc_init+0x13a>
    4348:	e15a      	b.n	4600 <tcc_init+0x3f0>
    434a:	7a52      	ldrb	r2, [r2, #9]
    434c:	9b01      	ldr	r3, [sp, #4]
    434e:	330a      	adds	r3, #10
    4350:	9301      	str	r3, [sp, #4]
    4352:	3704      	adds	r7, #4
    4354:	2a0f      	cmp	r2, #15
    4356:	d900      	bls.n	435a <tcc_init+0x14a>
    4358:	e152      	b.n	4600 <tcc_init+0x3f0>
    435a:	0611      	lsls	r1, r2, #24
    435c:	23f0      	movs	r3, #240	; 0xf0
    435e:	051b      	lsls	r3, r3, #20
    4360:	4019      	ands	r1, r3
    4362:	9b01      	ldr	r3, [sp, #4]
    4364:	1c1a      	adds	r2, r3, #0
    4366:	781d      	ldrb	r5, [r3, #0]
    4368:	042d      	lsls	r5, r5, #16
    436a:	24ff      	movs	r4, #255	; 0xff
    436c:	0424      	lsls	r4, r4, #16
    436e:	4025      	ands	r5, r4
    4370:	9502      	str	r5, [sp, #8]
    4372:	785b      	ldrb	r3, [r3, #1]
    4374:	2480      	movs	r4, #128	; 0x80
    4376:	2b00      	cmp	r3, #0
    4378:	d100      	bne.n	437c <tcc_init+0x16c>
    437a:	464c      	mov	r4, r9
    437c:	7896      	ldrb	r6, [r2, #2]
    437e:	2308      	movs	r3, #8
    4380:	2e00      	cmp	r6, #0
    4382:	d100      	bne.n	4386 <tcc_init+0x176>
    4384:	464b      	mov	r3, r9
    4386:	78d6      	ldrb	r6, [r2, #3]
    4388:	46b4      	mov	ip, r6
    438a:	2610      	movs	r6, #16
    438c:	4665      	mov	r5, ip
    438e:	2d00      	cmp	r5, #0
    4390:	d100      	bne.n	4394 <tcc_init+0x184>
    4392:	464e      	mov	r6, r9
    4394:	0280      	lsls	r0, r0, #10
    4396:	25c0      	movs	r5, #192	; 0xc0
    4398:	012d      	lsls	r5, r5, #4
    439a:	4028      	ands	r0, r5
    439c:	4301      	orrs	r1, r0
    439e:	7910      	ldrb	r0, [r2, #4]
    43a0:	2503      	movs	r5, #3
    43a2:	4028      	ands	r0, r5
    43a4:	4301      	orrs	r1, r0
    43a6:	9802      	ldr	r0, [sp, #8]
    43a8:	4301      	orrs	r1, r0
    43aa:	7955      	ldrb	r5, [r2, #5]
    43ac:	016d      	lsls	r5, r5, #5
    43ae:	2060      	movs	r0, #96	; 0x60
    43b0:	4028      	ands	r0, r5
    43b2:	4301      	orrs	r1, r0
    43b4:	1c0d      	adds	r5, r1, #0
    43b6:	7990      	ldrb	r0, [r2, #6]
    43b8:	0200      	lsls	r0, r0, #8
    43ba:	21c0      	movs	r1, #192	; 0xc0
    43bc:	0089      	lsls	r1, r1, #2
    43be:	4001      	ands	r1, r0
    43c0:	430d      	orrs	r5, r1
    43c2:	79d0      	ldrb	r0, [r2, #7]
    43c4:	0300      	lsls	r0, r0, #12
    43c6:	21e0      	movs	r1, #224	; 0xe0
    43c8:	01c9      	lsls	r1, r1, #7
    43ca:	4001      	ands	r1, r0
    43cc:	430d      	orrs	r5, r1
    43ce:	432c      	orrs	r4, r5
    43d0:	4323      	orrs	r3, r4
    43d2:	431e      	orrs	r6, r3
    43d4:	ab0c      	add	r3, sp, #48	; 0x30
    43d6:	50fe      	str	r6, [r7, r3]
    43d8:	2f04      	cmp	r7, #4
    43da:	d1b1      	bne.n	4340 <tcc_init+0x130>
    43dc:	9e08      	ldr	r6, [sp, #32]
    43de:	4654      	mov	r4, sl
    43e0:	465f      	mov	r7, fp
    43e2:	9d09      	ldr	r5, [sp, #36]	; 0x24
    43e4:	4b1b      	ldr	r3, [pc, #108]	; (4454 <tcc_init+0x244>)
    43e6:	5d5b      	ldrb	r3, [r3, r5]
    43e8:	469c      	mov	ip, r3
    43ea:	4658      	mov	r0, fp
    43ec:	3050      	adds	r0, #80	; 0x50
    43ee:	465a      	mov	r2, fp
    43f0:	3241      	adds	r2, #65	; 0x41
    43f2:	2300      	movs	r3, #0
    43f4:	2101      	movs	r1, #1
    43f6:	468b      	mov	fp, r1
    43f8:	2180      	movs	r1, #128	; 0x80
    43fa:	0249      	lsls	r1, r1, #9
    43fc:	468a      	mov	sl, r1
    43fe:	9401      	str	r4, [sp, #4]
    4400:	1c34      	adds	r4, r6, #0
    4402:	4666      	mov	r6, ip
    4404:	1c29      	adds	r1, r5, #0
    4406:	1c1d      	adds	r5, r3, #0
    4408:	46b9      	mov	r9, r7
    440a:	1c0f      	adds	r7, r1, #0
    440c:	9901      	ldr	r1, [sp, #4]
    440e:	468c      	mov	ip, r1
    4410:	7801      	ldrb	r1, [r0, #0]
    4412:	2900      	cmp	r1, #0
    4414:	d009      	beq.n	442a <tcc_init+0x21a>
    4416:	429e      	cmp	r6, r3
    4418:	d800      	bhi.n	441c <tcc_init+0x20c>
    441a:	e0e9      	b.n	45f0 <tcc_init+0x3e0>
    441c:	4651      	mov	r1, sl
    441e:	4099      	lsls	r1, r3
    4420:	430d      	orrs	r5, r1
    4422:	7811      	ldrb	r1, [r2, #0]
    4424:	2900      	cmp	r1, #0
    4426:	d106      	bne.n	4436 <tcc_init+0x226>
    4428:	e01b      	b.n	4462 <tcc_init+0x252>
    442a:	7811      	ldrb	r1, [r2, #0]
    442c:	2900      	cmp	r1, #0
    442e:	d018      	beq.n	4462 <tcc_init+0x252>
    4430:	429e      	cmp	r6, r3
    4432:	d800      	bhi.n	4436 <tcc_init+0x226>
    4434:	e0de      	b.n	45f4 <tcc_init+0x3e4>
    4436:	2902      	cmp	r1, #2
    4438:	d110      	bne.n	445c <tcc_init+0x24c>
    443a:	2102      	movs	r1, #2
    443c:	31ff      	adds	r1, #255	; 0xff
    443e:	4099      	lsls	r1, r3
    4440:	430d      	orrs	r5, r1
    4442:	e00e      	b.n	4462 <tcc_init+0x252>
    4444:	00004095 	.word	0x00004095
    4448:	40000400 	.word	0x40000400
    444c:	00010ba4 	.word	0x00010ba4
    4450:	00010bb0 	.word	0x00010bb0
    4454:	00010bc0 	.word	0x00010bc0
    4458:	00010bbc 	.word	0x00010bbc
    445c:	4659      	mov	r1, fp
    445e:	4099      	lsls	r1, r3
    4460:	430d      	orrs	r5, r1
    4462:	3301      	adds	r3, #1
    4464:	3001      	adds	r0, #1
    4466:	3202      	adds	r2, #2
    4468:	2b08      	cmp	r3, #8
    446a:	d1d1      	bne.n	4410 <tcc_init+0x200>
    446c:	1c26      	adds	r6, r4, #0
    446e:	4664      	mov	r4, ip
    4470:	1c3b      	adds	r3, r7, #0
    4472:	464f      	mov	r7, r9
    4474:	46a9      	mov	r9, r5
    4476:	1c1d      	adds	r5, r3, #0
    4478:	4b65      	ldr	r3, [pc, #404]	; (4610 <tcc_init+0x400>)
    447a:	5d5b      	ldrb	r3, [r3, r5]
    447c:	9301      	str	r3, [sp, #4]
    447e:	7e7b      	ldrb	r3, [r7, #25]
    4480:	011b      	lsls	r3, r3, #4
    4482:	2230      	movs	r2, #48	; 0x30
    4484:	4013      	ands	r3, r2
    4486:	7e3a      	ldrb	r2, [r7, #24]
    4488:	2107      	movs	r1, #7
    448a:	400a      	ands	r2, r1
    448c:	4313      	orrs	r3, r2
    448e:	1c18      	adds	r0, r3, #0
    4490:	2300      	movs	r3, #0
    4492:	2180      	movs	r1, #128	; 0x80
    4494:	0249      	lsls	r1, r1, #9
    4496:	18fa      	adds	r2, r7, r3
    4498:	7d12      	ldrb	r2, [r2, #20]
    449a:	2a00      	cmp	r2, #0
    449c:	d006      	beq.n	44ac <tcc_init+0x29c>
    449e:	9a01      	ldr	r2, [sp, #4]
    44a0:	429a      	cmp	r2, r3
    44a2:	dc00      	bgt.n	44a6 <tcc_init+0x296>
    44a4:	e0a8      	b.n	45f8 <tcc_init+0x3e8>
    44a6:	1c0a      	adds	r2, r1, #0
    44a8:	409a      	lsls	r2, r3
    44aa:	4310      	orrs	r0, r2
    44ac:	3301      	adds	r3, #1
    44ae:	2b04      	cmp	r3, #4
    44b0:	d1f1      	bne.n	4496 <tcc_init+0x286>
    44b2:	9002      	str	r0, [sp, #8]
    44b4:	9900      	ldr	r1, [sp, #0]
    44b6:	1c0b      	adds	r3, r1, #0
    44b8:	3304      	adds	r3, #4
    44ba:	3134      	adds	r1, #52	; 0x34
    44bc:	2200      	movs	r2, #0
    44be:	c304      	stmia	r3!, {r2}
    44c0:	428b      	cmp	r3, r1
    44c2:	d1fc      	bne.n	44be <tcc_init+0x2ae>
    44c4:	2300      	movs	r3, #0
    44c6:	9900      	ldr	r1, [sp, #0]
    44c8:	634b      	str	r3, [r1, #52]	; 0x34
    44ca:	638b      	str	r3, [r1, #56]	; 0x38
    44cc:	00aa      	lsls	r2, r5, #2
    44ce:	4b51      	ldr	r3, [pc, #324]	; (4614 <tcc_init+0x404>)
    44d0:	50d1      	str	r1, [r2, r3]
    44d2:	600c      	str	r4, [r1, #0]
    44d4:	23a0      	movs	r3, #160	; 0xa0
    44d6:	5cfa      	ldrb	r2, [r7, r3]
    44d8:	3b64      	subs	r3, #100	; 0x64
    44da:	54ca      	strb	r2, [r1, r3]
    44dc:	a90b      	add	r1, sp, #44	; 0x2c
    44de:	7abb      	ldrb	r3, [r7, #10]
    44e0:	700b      	strb	r3, [r1, #0]
    44e2:	4b4d      	ldr	r3, [pc, #308]	; (4618 <tcc_init+0x408>)
    44e4:	5d5b      	ldrb	r3, [r3, r5]
    44e6:	9300      	str	r3, [sp, #0]
    44e8:	1c18      	adds	r0, r3, #0
    44ea:	4b4c      	ldr	r3, [pc, #304]	; (461c <tcc_init+0x40c>)
    44ec:	4798      	blx	r3
    44ee:	9800      	ldr	r0, [sp, #0]
    44f0:	4b4b      	ldr	r3, [pc, #300]	; (4620 <tcc_init+0x410>)
    44f2:	4798      	blx	r3
    44f4:	4b4b      	ldr	r3, [pc, #300]	; (4624 <tcc_init+0x414>)
    44f6:	5d5b      	ldrb	r3, [r3, r5]
    44f8:	2b00      	cmp	r3, #0
    44fa:	dd29      	ble.n	4550 <tcc_init+0x340>
    44fc:	1c3d      	adds	r5, r7, #0
    44fe:	3558      	adds	r5, #88	; 0x58
    4500:	2397      	movs	r3, #151	; 0x97
    4502:	425b      	negs	r3, r3
    4504:	1bdb      	subs	r3, r3, r7
    4506:	469b      	mov	fp, r3
    4508:	4b46      	ldr	r3, [pc, #280]	; (4624 <tcc_init+0x414>)
    450a:	469a      	mov	sl, r3
    450c:	4643      	mov	r3, r8
    450e:	9300      	str	r3, [sp, #0]
    4510:	46a0      	mov	r8, r4
    4512:	1c34      	adds	r4, r6, #0
    4514:	9e04      	ldr	r6, [sp, #16]
    4516:	465b      	mov	r3, fp
    4518:	46bb      	mov	fp, r7
    451a:	1c1f      	adds	r7, r3, #0
    451c:	7833      	ldrb	r3, [r6, #0]
    451e:	2b00      	cmp	r3, #0
    4520:	d00b      	beq.n	453a <tcc_init+0x32a>
    4522:	2301      	movs	r3, #1
    4524:	aa0a      	add	r2, sp, #40	; 0x28
    4526:	7093      	strb	r3, [r2, #2]
    4528:	2200      	movs	r2, #0
    452a:	a90a      	add	r1, sp, #40	; 0x28
    452c:	70ca      	strb	r2, [r1, #3]
    452e:	6a2a      	ldr	r2, [r5, #32]
    4530:	700a      	strb	r2, [r1, #0]
    4532:	704b      	strb	r3, [r1, #1]
    4534:	7828      	ldrb	r0, [r5, #0]
    4536:	4b3c      	ldr	r3, [pc, #240]	; (4628 <tcc_init+0x418>)
    4538:	4798      	blx	r3
    453a:	19bb      	adds	r3, r7, r6
    453c:	3601      	adds	r6, #1
    453e:	3504      	adds	r5, #4
    4540:	4652      	mov	r2, sl
    4542:	5d12      	ldrb	r2, [r2, r4]
    4544:	429a      	cmp	r2, r3
    4546:	dce9      	bgt.n	451c <tcc_init+0x30c>
    4548:	4644      	mov	r4, r8
    454a:	9b00      	ldr	r3, [sp, #0]
    454c:	4698      	mov	r8, r3
    454e:	465f      	mov	r7, fp
    4550:	9b06      	ldr	r3, [sp, #24]
    4552:	031a      	lsls	r2, r3, #12
    4554:	9b07      	ldr	r3, [sp, #28]
    4556:	021b      	lsls	r3, r3, #8
    4558:	4313      	orrs	r3, r2
    455a:	4642      	mov	r2, r8
    455c:	4313      	orrs	r3, r2
    455e:	6023      	str	r3, [r4, #0]
    4560:	2204      	movs	r2, #4
    4562:	68a3      	ldr	r3, [r4, #8]
    4564:	421a      	tst	r2, r3
    4566:	d1fc      	bne.n	4562 <tcc_init+0x352>
    4568:	23ff      	movs	r3, #255	; 0xff
    456a:	7123      	strb	r3, [r4, #4]
    456c:	2204      	movs	r2, #4
    456e:	68a3      	ldr	r3, [r4, #8]
    4570:	421a      	tst	r2, r3
    4572:	d1fc      	bne.n	456e <tcc_init+0x35e>
    4574:	466b      	mov	r3, sp
    4576:	7b1b      	ldrb	r3, [r3, #12]
    4578:	7163      	strb	r3, [r4, #5]
    457a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    457c:	60e3      	str	r3, [r4, #12]
    457e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    4580:	6123      	str	r3, [r4, #16]
    4582:	464b      	mov	r3, r9
    4584:	61a3      	str	r3, [r4, #24]
    4586:	4a29      	ldr	r2, [pc, #164]	; (462c <tcc_init+0x41c>)
    4588:	68a3      	ldr	r3, [r4, #8]
    458a:	4213      	tst	r3, r2
    458c:	d1fc      	bne.n	4588 <tcc_init+0x378>
    458e:	9b02      	ldr	r3, [sp, #8]
    4590:	63e3      	str	r3, [r4, #60]	; 0x3c
    4592:	2210      	movs	r2, #16
    4594:	68a3      	ldr	r3, [r4, #8]
    4596:	421a      	tst	r2, r3
    4598:	d1fc      	bne.n	4594 <tcc_init+0x384>
    459a:	683b      	ldr	r3, [r7, #0]
    459c:	6363      	str	r3, [r4, #52]	; 0x34
    459e:	4a24      	ldr	r2, [pc, #144]	; (4630 <tcc_init+0x420>)
    45a0:	68a3      	ldr	r3, [r4, #8]
    45a2:	4213      	tst	r3, r2
    45a4:	d1fc      	bne.n	45a0 <tcc_init+0x390>
    45a6:	687b      	ldr	r3, [r7, #4]
    45a8:	6423      	str	r3, [r4, #64]	; 0x40
    45aa:	9801      	ldr	r0, [sp, #4]
    45ac:	2800      	cmp	r0, #0
    45ae:	dd25      	ble.n	45fc <tcc_init+0x3ec>
    45b0:	1c3d      	adds	r5, r7, #0
    45b2:	351c      	adds	r5, #28
    45b4:	2100      	movs	r1, #0
    45b6:	4e1f      	ldr	r6, [pc, #124]	; (4634 <tcc_init+0x424>)
    45b8:	1c32      	adds	r2, r6, #0
    45ba:	408a      	lsls	r2, r1
    45bc:	68a3      	ldr	r3, [r4, #8]
    45be:	4213      	tst	r3, r2
    45c0:	d1fc      	bne.n	45bc <tcc_init+0x3ac>
    45c2:	cd04      	ldmia	r5!, {r2}
    45c4:	1c0b      	adds	r3, r1, #0
    45c6:	3310      	adds	r3, #16
    45c8:	009b      	lsls	r3, r3, #2
    45ca:	18e3      	adds	r3, r4, r3
    45cc:	605a      	str	r2, [r3, #4]
    45ce:	3101      	adds	r1, #1
    45d0:	4288      	cmp	r0, r1
    45d2:	dcf1      	bgt.n	45b8 <tcc_init+0x3a8>
    45d4:	2000      	movs	r0, #0
    45d6:	e014      	b.n	4602 <tcc_init+0x3f2>
    45d8:	2017      	movs	r0, #23
    45da:	e012      	b.n	4602 <tcc_init+0x3f2>
    45dc:	2017      	movs	r0, #23
    45de:	e010      	b.n	4602 <tcc_init+0x3f2>
    45e0:	2017      	movs	r0, #23
    45e2:	e00e      	b.n	4602 <tcc_init+0x3f2>
    45e4:	2017      	movs	r0, #23
    45e6:	e00c      	b.n	4602 <tcc_init+0x3f2>
    45e8:	2017      	movs	r0, #23
    45ea:	e00a      	b.n	4602 <tcc_init+0x3f2>
    45ec:	2017      	movs	r0, #23
    45ee:	e008      	b.n	4602 <tcc_init+0x3f2>
    45f0:	2017      	movs	r0, #23
    45f2:	e006      	b.n	4602 <tcc_init+0x3f2>
    45f4:	2017      	movs	r0, #23
    45f6:	e004      	b.n	4602 <tcc_init+0x3f2>
    45f8:	2017      	movs	r0, #23
    45fa:	e002      	b.n	4602 <tcc_init+0x3f2>
    45fc:	2000      	movs	r0, #0
    45fe:	e000      	b.n	4602 <tcc_init+0x3f2>
    4600:	2017      	movs	r0, #23
    4602:	b00f      	add	sp, #60	; 0x3c
    4604:	bc3c      	pop	{r2, r3, r4, r5}
    4606:	4690      	mov	r8, r2
    4608:	4699      	mov	r9, r3
    460a:	46a2      	mov	sl, r4
    460c:	46ab      	mov	fp, r5
    460e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4610:	00010bbc 	.word	0x00010bbc
    4614:	20000988 	.word	0x20000988
    4618:	00010ba0 	.word	0x00010ba0
    461c:	00008c45 	.word	0x00008c45
    4620:	00008bb9 	.word	0x00008bb9
    4624:	00010bc0 	.word	0x00010bc0
    4628:	00008d3d 	.word	0x00008d3d
    462c:	00020040 	.word	0x00020040
    4630:	00040080 	.word	0x00040080
    4634:	00080100 	.word	0x00080100

00004638 <tcc_register_callback>:
    4638:	0092      	lsls	r2, r2, #2
    463a:	1883      	adds	r3, r0, r2
    463c:	6059      	str	r1, [r3, #4]
    463e:	4b03      	ldr	r3, [pc, #12]	; (464c <tcc_register_callback+0x14>)
    4640:	58d3      	ldr	r3, [r2, r3]
    4642:	6b42      	ldr	r2, [r0, #52]	; 0x34
    4644:	4313      	orrs	r3, r2
    4646:	6343      	str	r3, [r0, #52]	; 0x34
    4648:	2000      	movs	r0, #0
    464a:	4770      	bx	lr
    464c:	00010bc8 	.word	0x00010bc8

00004650 <tcc_enable_callback>:
    4650:	b538      	push	{r3, r4, r5, lr}
    4652:	1c04      	adds	r4, r0, #0
    4654:	1c0d      	adds	r5, r1, #0
    4656:	6800      	ldr	r0, [r0, #0]
    4658:	4b09      	ldr	r3, [pc, #36]	; (4680 <tcc_enable_callback+0x30>)
    465a:	4798      	blx	r3
    465c:	4b09      	ldr	r3, [pc, #36]	; (4684 <tcc_enable_callback+0x34>)
    465e:	5c1b      	ldrb	r3, [r3, r0]
    4660:	221f      	movs	r2, #31
    4662:	4013      	ands	r3, r2
    4664:	3a1e      	subs	r2, #30
    4666:	409a      	lsls	r2, r3
    4668:	1c13      	adds	r3, r2, #0
    466a:	4a07      	ldr	r2, [pc, #28]	; (4688 <tcc_enable_callback+0x38>)
    466c:	6013      	str	r3, [r2, #0]
    466e:	00ad      	lsls	r5, r5, #2
    4670:	4b06      	ldr	r3, [pc, #24]	; (468c <tcc_enable_callback+0x3c>)
    4672:	58ea      	ldr	r2, [r5, r3]
    4674:	6ba3      	ldr	r3, [r4, #56]	; 0x38
    4676:	4313      	orrs	r3, r2
    4678:	63a3      	str	r3, [r4, #56]	; 0x38
    467a:	6823      	ldr	r3, [r4, #0]
    467c:	629a      	str	r2, [r3, #40]	; 0x28
    467e:	bd38      	pop	{r3, r4, r5, pc}
    4680:	00004095 	.word	0x00004095
    4684:	00010bc4 	.word	0x00010bc4
    4688:	e000e100 	.word	0xe000e100
    468c:	00010bc8 	.word	0x00010bc8

00004690 <_tcc_interrupt_handler>:
    4690:	b5f0      	push	{r4, r5, r6, r7, lr}
    4692:	4647      	mov	r7, r8
    4694:	b480      	push	{r7}
    4696:	0080      	lsls	r0, r0, #2
    4698:	4b0d      	ldr	r3, [pc, #52]	; (46d0 <_tcc_interrupt_handler+0x40>)
    469a:	58c7      	ldr	r7, [r0, r3]
    469c:	683b      	ldr	r3, [r7, #0]
    469e:	6ade      	ldr	r6, [r3, #44]	; 0x2c
    46a0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    46a2:	401e      	ands	r6, r3
    46a4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    46a6:	401e      	ands	r6, r3
    46a8:	2400      	movs	r4, #0
    46aa:	4b0a      	ldr	r3, [pc, #40]	; (46d4 <_tcc_interrupt_handler+0x44>)
    46ac:	4698      	mov	r8, r3
    46ae:	4643      	mov	r3, r8
    46b0:	58e5      	ldr	r5, [r4, r3]
    46b2:	422e      	tst	r6, r5
    46b4:	d005      	beq.n	46c2 <_tcc_interrupt_handler+0x32>
    46b6:	193b      	adds	r3, r7, r4
    46b8:	685b      	ldr	r3, [r3, #4]
    46ba:	1c38      	adds	r0, r7, #0
    46bc:	4798      	blx	r3
    46be:	683b      	ldr	r3, [r7, #0]
    46c0:	62dd      	str	r5, [r3, #44]	; 0x2c
    46c2:	3404      	adds	r4, #4
    46c4:	2c30      	cmp	r4, #48	; 0x30
    46c6:	d1f2      	bne.n	46ae <_tcc_interrupt_handler+0x1e>
    46c8:	bc04      	pop	{r2}
    46ca:	4690      	mov	r8, r2
    46cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    46ce:	46c0      	nop			; (mov r8, r8)
    46d0:	20000988 	.word	0x20000988
    46d4:	00010bc8 	.word	0x00010bc8

000046d8 <TCC0_Handler>:
    46d8:	b508      	push	{r3, lr}
    46da:	2000      	movs	r0, #0
    46dc:	4b01      	ldr	r3, [pc, #4]	; (46e4 <TCC0_Handler+0xc>)
    46de:	4798      	blx	r3
    46e0:	bd08      	pop	{r3, pc}
    46e2:	46c0      	nop			; (mov r8, r8)
    46e4:	00004691 	.word	0x00004691

000046e8 <TCC1_Handler>:
    46e8:	b508      	push	{r3, lr}
    46ea:	2001      	movs	r0, #1
    46ec:	4b01      	ldr	r3, [pc, #4]	; (46f4 <TCC1_Handler+0xc>)
    46ee:	4798      	blx	r3
    46f0:	bd08      	pop	{r3, pc}
    46f2:	46c0      	nop			; (mov r8, r8)
    46f4:	00004691 	.word	0x00004691

000046f8 <TCC2_Handler>:
    46f8:	b508      	push	{r3, lr}
    46fa:	2002      	movs	r0, #2
    46fc:	4b01      	ldr	r3, [pc, #4]	; (4704 <TCC2_Handler+0xc>)
    46fe:	4798      	blx	r3
    4700:	bd08      	pop	{r3, pc}
    4702:	46c0      	nop			; (mov r8, r8)
    4704:	00004691 	.word	0x00004691

00004708 <delay_init>:
    4708:	b510      	push	{r4, lr}
    470a:	2000      	movs	r0, #0
    470c:	4b08      	ldr	r3, [pc, #32]	; (4730 <delay_init+0x28>)
    470e:	4798      	blx	r3
    4710:	4c08      	ldr	r4, [pc, #32]	; (4734 <delay_init+0x2c>)
    4712:	21fa      	movs	r1, #250	; 0xfa
    4714:	0089      	lsls	r1, r1, #2
    4716:	47a0      	blx	r4
    4718:	4b07      	ldr	r3, [pc, #28]	; (4738 <delay_init+0x30>)
    471a:	6018      	str	r0, [r3, #0]
    471c:	21fa      	movs	r1, #250	; 0xfa
    471e:	0089      	lsls	r1, r1, #2
    4720:	47a0      	blx	r4
    4722:	4b06      	ldr	r3, [pc, #24]	; (473c <delay_init+0x34>)
    4724:	6018      	str	r0, [r3, #0]
    4726:	2205      	movs	r2, #5
    4728:	4b05      	ldr	r3, [pc, #20]	; (4740 <delay_init+0x38>)
    472a:	601a      	str	r2, [r3, #0]
    472c:	bd10      	pop	{r4, pc}
    472e:	46c0      	nop			; (mov r8, r8)
    4730:	00008b2d 	.word	0x00008b2d
    4734:	00009c75 	.word	0x00009c75
    4738:	20000050 	.word	0x20000050
    473c:	2000004c 	.word	0x2000004c
    4740:	e000e010 	.word	0xe000e010

00004744 <delay_cycles_ms>:
    4744:	b530      	push	{r4, r5, lr}
    4746:	4b08      	ldr	r3, [pc, #32]	; (4768 <delay_cycles_ms+0x24>)
    4748:	681c      	ldr	r4, [r3, #0]
    474a:	4a08      	ldr	r2, [pc, #32]	; (476c <delay_cycles_ms+0x28>)
    474c:	2500      	movs	r5, #0
    474e:	2180      	movs	r1, #128	; 0x80
    4750:	0249      	lsls	r1, r1, #9
    4752:	e006      	b.n	4762 <delay_cycles_ms+0x1e>
    4754:	2c00      	cmp	r4, #0
    4756:	d004      	beq.n	4762 <delay_cycles_ms+0x1e>
    4758:	6054      	str	r4, [r2, #4]
    475a:	6095      	str	r5, [r2, #8]
    475c:	6813      	ldr	r3, [r2, #0]
    475e:	420b      	tst	r3, r1
    4760:	d0fc      	beq.n	475c <delay_cycles_ms+0x18>
    4762:	3801      	subs	r0, #1
    4764:	d2f6      	bcs.n	4754 <delay_cycles_ms+0x10>
    4766:	bd30      	pop	{r4, r5, pc}
    4768:	20000050 	.word	0x20000050
    476c:	e000e010 	.word	0xe000e010

00004770 <chip_isr>:
    4770:	b508      	push	{r3, lr}
    4772:	4b03      	ldr	r3, [pc, #12]	; (4780 <chip_isr+0x10>)
    4774:	681b      	ldr	r3, [r3, #0]
    4776:	2b00      	cmp	r3, #0
    4778:	d000      	beq.n	477c <chip_isr+0xc>
    477a:	4798      	blx	r3
    477c:	bd08      	pop	{r3, pc}
    477e:	46c0      	nop			; (mov r8, r8)
    4780:	2000066c 	.word	0x2000066c

00004784 <nm_bsp_sleep>:
    4784:	b538      	push	{r3, r4, r5, lr}
    4786:	2800      	cmp	r0, #0
    4788:	d006      	beq.n	4798 <nm_bsp_sleep+0x14>
    478a:	1c04      	adds	r4, r0, #0
    478c:	4d03      	ldr	r5, [pc, #12]	; (479c <nm_bsp_sleep+0x18>)
    478e:	2001      	movs	r0, #1
    4790:	47a8      	blx	r5
    4792:	3c01      	subs	r4, #1
    4794:	2c00      	cmp	r4, #0
    4796:	d1fa      	bne.n	478e <nm_bsp_sleep+0xa>
    4798:	bd38      	pop	{r3, r4, r5, pc}
    479a:	46c0      	nop			; (mov r8, r8)
    479c:	00004745 	.word	0x00004745

000047a0 <nm_bsp_reset>:
    47a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    47a2:	4c07      	ldr	r4, [pc, #28]	; (47c0 <nm_bsp_reset+0x20>)
    47a4:	2720      	movs	r7, #32
    47a6:	6167      	str	r7, [r4, #20]
    47a8:	2640      	movs	r6, #64	; 0x40
    47aa:	6166      	str	r6, [r4, #20]
    47ac:	2064      	movs	r0, #100	; 0x64
    47ae:	4d05      	ldr	r5, [pc, #20]	; (47c4 <nm_bsp_reset+0x24>)
    47b0:	47a8      	blx	r5
    47b2:	61a7      	str	r7, [r4, #24]
    47b4:	200a      	movs	r0, #10
    47b6:	47a8      	blx	r5
    47b8:	61a6      	str	r6, [r4, #24]
    47ba:	200a      	movs	r0, #10
    47bc:	47a8      	blx	r5
    47be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    47c0:	41004480 	.word	0x41004480
    47c4:	00004785 	.word	0x00004785

000047c8 <nm_bsp_init>:
    47c8:	b570      	push	{r4, r5, r6, lr}
    47ca:	b082      	sub	sp, #8
    47cc:	2300      	movs	r3, #0
    47ce:	4a13      	ldr	r2, [pc, #76]	; (481c <nm_bsp_init+0x54>)
    47d0:	6013      	str	r3, [r2, #0]
    47d2:	ac01      	add	r4, sp, #4
    47d4:	2501      	movs	r5, #1
    47d6:	7065      	strb	r5, [r4, #1]
    47d8:	70a3      	strb	r3, [r4, #2]
    47da:	7025      	strb	r5, [r4, #0]
    47dc:	2026      	movs	r0, #38	; 0x26
    47de:	1c21      	adds	r1, r4, #0
    47e0:	4e0f      	ldr	r6, [pc, #60]	; (4820 <nm_bsp_init+0x58>)
    47e2:	47b0      	blx	r6
    47e4:	2025      	movs	r0, #37	; 0x25
    47e6:	1c21      	adds	r1, r4, #0
    47e8:	47b0      	blx	r6
    47ea:	2027      	movs	r0, #39	; 0x27
    47ec:	1c21      	adds	r1, r4, #0
    47ee:	47b0      	blx	r6
    47f0:	4b0c      	ldr	r3, [pc, #48]	; (4824 <nm_bsp_init+0x5c>)
    47f2:	681b      	ldr	r3, [r3, #0]
    47f4:	421d      	tst	r5, r3
    47f6:	d003      	beq.n	4800 <nm_bsp_init+0x38>
    47f8:	4b0a      	ldr	r3, [pc, #40]	; (4824 <nm_bsp_init+0x5c>)
    47fa:	681b      	ldr	r3, [r3, #0]
    47fc:	079b      	lsls	r3, r3, #30
    47fe:	d401      	bmi.n	4804 <nm_bsp_init+0x3c>
    4800:	4b09      	ldr	r3, [pc, #36]	; (4828 <nm_bsp_init+0x60>)
    4802:	4798      	blx	r3
    4804:	4b09      	ldr	r3, [pc, #36]	; (482c <nm_bsp_init+0x64>)
    4806:	4798      	blx	r3
    4808:	2201      	movs	r2, #1
    480a:	4b09      	ldr	r3, [pc, #36]	; (4830 <nm_bsp_init+0x68>)
    480c:	701a      	strb	r2, [r3, #0]
    480e:	f3bf 8f5f 	dmb	sy
    4812:	b662      	cpsie	i
    4814:	2000      	movs	r0, #0
    4816:	b002      	add	sp, #8
    4818:	bd70      	pop	{r4, r5, r6, pc}
    481a:	46c0      	nop			; (mov r8, r8)
    481c:	2000066c 	.word	0x2000066c
    4820:	000076ed 	.word	0x000076ed
    4824:	e000e010 	.word	0xe000e010
    4828:	00004709 	.word	0x00004709
    482c:	000047a1 	.word	0x000047a1
    4830:	2000005c 	.word	0x2000005c

00004834 <nm_bsp_register_isr>:
    4834:	b510      	push	{r4, lr}
    4836:	b084      	sub	sp, #16
    4838:	4b0e      	ldr	r3, [pc, #56]	; (4874 <nm_bsp_register_isr+0x40>)
    483a:	6018      	str	r0, [r3, #0]
    483c:	ac01      	add	r4, sp, #4
    483e:	1c20      	adds	r0, r4, #0
    4840:	4b0d      	ldr	r3, [pc, #52]	; (4878 <nm_bsp_register_isr+0x44>)
    4842:	4798      	blx	r3
    4844:	2324      	movs	r3, #36	; 0x24
    4846:	9301      	str	r3, [sp, #4]
    4848:	2300      	movs	r3, #0
    484a:	6063      	str	r3, [r4, #4]
    484c:	3301      	adds	r3, #1
    484e:	7223      	strb	r3, [r4, #8]
    4850:	3301      	adds	r3, #1
    4852:	72e3      	strb	r3, [r4, #11]
    4854:	2004      	movs	r0, #4
    4856:	1c21      	adds	r1, r4, #0
    4858:	4b08      	ldr	r3, [pc, #32]	; (487c <nm_bsp_register_isr+0x48>)
    485a:	4798      	blx	r3
    485c:	4808      	ldr	r0, [pc, #32]	; (4880 <nm_bsp_register_isr+0x4c>)
    485e:	2104      	movs	r1, #4
    4860:	2200      	movs	r2, #0
    4862:	4b08      	ldr	r3, [pc, #32]	; (4884 <nm_bsp_register_isr+0x50>)
    4864:	4798      	blx	r3
    4866:	2004      	movs	r0, #4
    4868:	2100      	movs	r1, #0
    486a:	4b07      	ldr	r3, [pc, #28]	; (4888 <nm_bsp_register_isr+0x54>)
    486c:	4798      	blx	r3
    486e:	b004      	add	sp, #16
    4870:	bd10      	pop	{r4, pc}
    4872:	46c0      	nop			; (mov r8, r8)
    4874:	2000066c 	.word	0x2000066c
    4878:	00007661 	.word	0x00007661
    487c:	00007675 	.word	0x00007675
    4880:	00004771 	.word	0x00004771
    4884:	00007509 	.word	0x00007509
    4888:	00007535 	.word	0x00007535

0000488c <nm_bsp_interrupt_ctrl>:
    488c:	b508      	push	{r3, lr}
    488e:	2800      	cmp	r0, #0
    4890:	d004      	beq.n	489c <nm_bsp_interrupt_ctrl+0x10>
    4892:	2004      	movs	r0, #4
    4894:	2100      	movs	r1, #0
    4896:	4b04      	ldr	r3, [pc, #16]	; (48a8 <nm_bsp_interrupt_ctrl+0x1c>)
    4898:	4798      	blx	r3
    489a:	e003      	b.n	48a4 <nm_bsp_interrupt_ctrl+0x18>
    489c:	2004      	movs	r0, #4
    489e:	2100      	movs	r1, #0
    48a0:	4b02      	ldr	r3, [pc, #8]	; (48ac <nm_bsp_interrupt_ctrl+0x20>)
    48a2:	4798      	blx	r3
    48a4:	bd08      	pop	{r3, pc}
    48a6:	46c0      	nop			; (mov r8, r8)
    48a8:	00007535 	.word	0x00007535
    48ac:	00007555 	.word	0x00007555

000048b0 <nm_bus_init>:
*	@fn		nm_bus_init
*	@brief	Initialize the bus wrapper
*	@return	M2M_SUCCESS in case of success and M2M_ERR_BUS_FAIL in case of failure
*/
sint8 nm_bus_init(void *pvinit)
{
    48b0:	b530      	push	{r4, r5, lr}
    48b2:	b091      	sub	sp, #68	; 0x44
	
	print_to_terminal("I2C!!!!\n");

#elif defined CONF_WINC_USE_SPI

	print_to_terminal("SPI!!!!\n");
    48b4:	4830      	ldr	r0, [pc, #192]	; (4978 <nm_bus_init+0xc8>)
    48b6:	4b31      	ldr	r3, [pc, #196]	; (497c <nm_bus_init+0xcc>)
    48b8:	4798      	blx	r3
		const struct spi_slave_inst_config *const config)
{
	Assert(slave);
	Assert(config);

	slave->ss_pin          = config->ss_pin;
    48ba:	4c31      	ldr	r4, [pc, #196]	; (4980 <nm_bus_init+0xd0>)
    48bc:	2305      	movs	r3, #5
    48be:	7023      	strb	r3, [r4, #0]
	slave->address_enabled = config->address_enabled;
    48c0:	2300      	movs	r3, #0
    48c2:	7063      	strb	r3, [r4, #1]
	slave->address         = config->address;
    48c4:	70a3      	strb	r3, [r4, #2]
	/* Sanity check arguments */
	Assert(config);

	/* Default configuration values */
	config->direction  = PORT_PIN_DIR_INPUT;
	config->input_pull = PORT_PIN_PULL_UP;
    48c6:	a901      	add	r1, sp, #4
    48c8:	2201      	movs	r2, #1
    48ca:	704a      	strb	r2, [r1, #1]
	config->powersave  = false;
    48cc:	708b      	strb	r3, [r1, #2]
	/* Get default config for pin */
	struct port_config pin_conf;
	port_get_config_defaults(&pin_conf);

	/* Edit config to set the pin as output */
	pin_conf.direction = PORT_PIN_DIR_OUTPUT;
    48ce:	700a      	strb	r2, [r1, #0]

	/* Set config on Slave Select pin */
	port_pin_set_config(slave->ss_pin, &pin_conf);
    48d0:	2005      	movs	r0, #5
    48d2:	4b2c      	ldr	r3, [pc, #176]	; (4984 <nm_bus_init+0xd4>)
    48d4:	4798      	blx	r3
	port_pin_set_output_level(slave->ss_pin, true);
    48d6:	7823      	ldrb	r3, [r4, #0]
	uint8_t group_index = (gpio_pin / 32);

	/* Array of available ports. */
	Port *const ports[PORT_INST_NUM] = PORT_INSTS;

	if (port_index < PORT_INST_NUM) {
    48d8:	09d9      	lsrs	r1, r3, #7
		return &(ports[port_index]->Group[group_index]);
	} else {
		Assert(false);
		return NULL;
    48da:	2200      	movs	r2, #0
	uint8_t group_index = (gpio_pin / 32);

	/* Array of available ports. */
	Port *const ports[PORT_INST_NUM] = PORT_INSTS;

	if (port_index < PORT_INST_NUM) {
    48dc:	2900      	cmp	r1, #0
    48de:	d104      	bne.n	48ea <nm_bus_init+0x3a>
		return &(ports[port_index]->Group[group_index]);
    48e0:	095a      	lsrs	r2, r3, #5
    48e2:	01d2      	lsls	r2, r2, #7
    48e4:	4928      	ldr	r1, [pc, #160]	; (4988 <nm_bus_init+0xd8>)
    48e6:	468c      	mov	ip, r1
    48e8:	4462      	add	r2, ip
static inline void port_pin_set_output_level(
		const uint8_t gpio_pin,
		const bool level)
{
	PortGroup *const port_base = port_get_group_from_gpio_pin(gpio_pin);
	uint32_t pin_mask  = (1UL << (gpio_pin % 32));
    48ea:	211f      	movs	r1, #31
    48ec:	400b      	ands	r3, r1
    48ee:	391e      	subs	r1, #30
    48f0:	1c08      	adds	r0, r1, #0
    48f2:	4098      	lsls	r0, r3

	/* Set the pin to high or low atomically based on the requested level */
	if (level) {
		port_base->OUTSET.reg = pin_mask;
    48f4:	6190      	str	r0, [r2, #24]
{
	/* Sanity check arguments */
	Assert(config);

	/* Default configuration values */
	config->mode             = SPI_MODE_MASTER;
    48f6:	aa02      	add	r2, sp, #8
    48f8:	7011      	strb	r1, [r2, #0]
	config->data_order       = SPI_DATA_ORDER_MSB;
    48fa:	2300      	movs	r3, #0
    48fc:	6053      	str	r3, [r2, #4]
	config->transfer_mode    = SPI_TRANSFER_MODE_0;
    48fe:	6093      	str	r3, [r2, #8]
	config->mux_setting      = SPI_SIGNAL_MUX_SETTING_D;
	config->character_size   = SPI_CHARACTER_SIZE_8BIT;
    4900:	7413      	strb	r3, [r2, #16]
	config->run_in_standby   = false;
    4902:	7453      	strb	r3, [r2, #17]
	config->receiver_enable  = true;
    4904:	7491      	strb	r1, [r2, #18]
#  ifdef FEATURE_SPI_SLAVE_SELECT_LOW_DETECT
	config->select_slave_low_detect_enable= true;
    4906:	74d1      	strb	r1, [r2, #19]
#  endif
#  ifdef FEATURE_SPI_HARDWARE_SLAVE_SELECT
	config->master_slave_select_enable= false;
    4908:	7513      	strb	r3, [r2, #20]
#  endif
	config->generator_source = GCLK_GENERATOR_0;
    490a:	3123      	adds	r1, #35	; 0x23
    490c:	5453      	strb	r3, [r2, r1]

	/* Clear mode specific config */
	memset(&(config->mode_specific), 0, sizeof(config->mode_specific));
    490e:	9309      	str	r3, [sp, #36]	; 0x24
    4910:	930a      	str	r3, [sp, #40]	; 0x28
	slave_config.ss_pin = CONF_WINC_SPI_CS_PIN;
	spi_attach_slave(&slave_inst, &slave_config);

	/* Configure the SPI master. */
	spi_get_config_defaults(&config);
	config.mux_setting = CONF_WINC_SPI_SERCOM_MUX;
    4912:	2380      	movs	r3, #128	; 0x80
    4914:	025b      	lsls	r3, r3, #9
    4916:	60d3      	str	r3, [r2, #12]
	config.pinmux_pad0 = CONF_WINC_SPI_PINMUX_PAD0;
    4918:	4b1c      	ldr	r3, [pc, #112]	; (498c <nm_bus_init+0xdc>)
    491a:	6293      	str	r3, [r2, #40]	; 0x28
	config.pinmux_pad1 = CONF_WINC_SPI_PINMUX_PAD1;
    491c:	2301      	movs	r3, #1
    491e:	425b      	negs	r3, r3
    4920:	62d3      	str	r3, [r2, #44]	; 0x2c
	config.pinmux_pad2 = CONF_WINC_SPI_PINMUX_PAD2;
    4922:	4b1b      	ldr	r3, [pc, #108]	; (4990 <nm_bus_init+0xe0>)
    4924:	6313      	str	r3, [r2, #48]	; 0x30
	config.pinmux_pad3 = CONF_WINC_SPI_PINMUX_PAD3;
    4926:	4b1b      	ldr	r3, [pc, #108]	; (4994 <nm_bus_init+0xe4>)
    4928:	6353      	str	r3, [r2, #52]	; 0x34
	config.master_slave_select_enable = false;

	config.mode_specific.master.baudrate = CONF_WINC_SPI_CLOCK;
    492a:	4b1b      	ldr	r3, [pc, #108]	; (4998 <nm_bus_init+0xe8>)
    492c:	6193      	str	r3, [r2, #24]
	if (spi_init(&master, CONF_WINC_SPI_MODULE, &config) != STATUS_OK) {
    492e:	481b      	ldr	r0, [pc, #108]	; (499c <nm_bus_init+0xec>)
    4930:	491b      	ldr	r1, [pc, #108]	; (49a0 <nm_bus_init+0xf0>)
    4932:	4b1c      	ldr	r3, [pc, #112]	; (49a4 <nm_bus_init+0xf4>)
    4934:	4798      	blx	r3
    4936:	2800      	cmp	r0, #0
    4938:	d11a      	bne.n	4970 <nm_bus_init+0xc0>
{
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	SercomSpi *const spi_module = &(module->hw->SPI);
    493a:	4d18      	ldr	r5, [pc, #96]	; (499c <nm_bus_init+0xec>)
    493c:	682c      	ldr	r4, [r5, #0]

#  if SPI_CALLBACK_MODE == true
	system_interrupt_enable(_sercom_get_interrupt_vector(module->hw));
    493e:	1c20      	adds	r0, r4, #0
    4940:	4b19      	ldr	r3, [pc, #100]	; (49a8 <nm_bus_init+0xf8>)
    4942:	4798      	blx	r3
 * \param[in] vector Interrupt vector to enable
 */
static inline void system_interrupt_enable(
		const enum system_interrupt_vector vector)
{
	NVIC->ISER[0] = (uint32_t)(1 << ((uint32_t)vector & 0x0000001f));
    4944:	231f      	movs	r3, #31
    4946:	4018      	ands	r0, r3
    4948:	3b1e      	subs	r3, #30
    494a:	4083      	lsls	r3, r0
    494c:	1c18      	adds	r0, r3, #0
    494e:	4b17      	ldr	r3, [pc, #92]	; (49ac <nm_bus_init+0xfc>)
    4950:	6018      	str	r0, [r3, #0]
{
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	SercomSpi *const spi_module = &(module->hw->SPI);
    4952:	682a      	ldr	r2, [r5, #0]

#  ifdef FEATURE_SPI_SYNC_SCHEME_VERSION_2
	/* Return synchronization status */
	return (spi_module->SYNCBUSY.reg);
    4954:	69d3      	ldr	r3, [r2, #28]

#  if SPI_CALLBACK_MODE == true
	system_interrupt_enable(_sercom_get_interrupt_vector(module->hw));
#  endif

	while (spi_is_syncing(module)) {
    4956:	2b00      	cmp	r3, #0
    4958:	d1fc      	bne.n	4954 <nm_bus_init+0xa4>
		/* Wait until the synchronization is complete */
	}

	/* Enable SPI */
	spi_module->CTRLA.reg |= SERCOM_SPI_CTRLA_ENABLE;
    495a:	6822      	ldr	r2, [r4, #0]
    495c:	3302      	adds	r3, #2
    495e:	4313      	orrs	r3, r2
    4960:	6023      	str	r3, [r4, #0]
	}

	/* Enable the SPI master. */
	spi_enable(&master);

	nm_bsp_reset();
    4962:	4b13      	ldr	r3, [pc, #76]	; (49b0 <nm_bus_init+0x100>)
    4964:	4798      	blx	r3
	nm_bsp_sleep(1);
    4966:	2001      	movs	r0, #1
    4968:	4b12      	ldr	r3, [pc, #72]	; (49b4 <nm_bus_init+0x104>)
    496a:	4798      	blx	r3
#endif
	return result;
    496c:	2000      	movs	r0, #0
    496e:	e000      	b.n	4972 <nm_bus_init+0xc2>
	config.pinmux_pad3 = CONF_WINC_SPI_PINMUX_PAD3;
	config.master_slave_select_enable = false;

	config.mode_specific.master.baudrate = CONF_WINC_SPI_CLOCK;
	if (spi_init(&master, CONF_WINC_SPI_MODULE, &config) != STATUS_OK) {
		return M2M_ERR_BUS_FAIL;
    4970:	20fa      	movs	r0, #250	; 0xfa
    4972:	b240      	sxtb	r0, r0

	nm_bsp_reset();
	nm_bsp_sleep(1);
#endif
	return result;
}
    4974:	b011      	add	sp, #68	; 0x44
    4976:	bd30      	pop	{r4, r5, pc}
    4978:	00010bf8 	.word	0x00010bf8
    497c:	000090f5 	.word	0x000090f5
    4980:	20000994 	.word	0x20000994
    4984:	000076ed 	.word	0x000076ed
    4988:	41004400 	.word	0x41004400
    498c:	00040003 	.word	0x00040003
    4990:	00060003 	.word	0x00060003
    4994:	00070003 	.word	0x00070003
    4998:	00b71b00 	.word	0x00b71b00
    499c:	20000998 	.word	0x20000998
    49a0:	42000800 	.word	0x42000800
    49a4:	00007bdd 	.word	0x00007bdd
    49a8:	00007b51 	.word	0x00007b51
    49ac:	e000e100 	.word	0xe000e100
    49b0:	000047a1 	.word	0x000047a1
    49b4:	00004785 	.word	0x00004785

000049b8 <nm_bus_ioctl>:
*					Arbitrary parameter depenging on IOCTL
*	@return	M2M_SUCCESS in case of success and M2M_ERR_BUS_FAIL in case of failure
*	@note	For SPI only, it's important to be able to send/receive at the same time
*/
sint8 nm_bus_ioctl(uint8 u8Cmd, void* pvParameter)
{
    49b8:	b5f0      	push	{r4, r5, r6, r7, lr}
    49ba:	465f      	mov	r7, fp
    49bc:	4656      	mov	r6, sl
    49be:	464d      	mov	r5, r9
    49c0:	4644      	mov	r4, r8
    49c2:	b4f0      	push	{r4, r5, r6, r7}
    49c4:	b085      	sub	sp, #20
	sint8 s8Ret = 0;
	switch(u8Cmd)
    49c6:	2803      	cmp	r0, #3
    49c8:	d169      	bne.n	4a9e <nm_bus_ioctl+0xe6>
		}
		break;
#elif defined CONF_WINC_USE_SPI
		case NM_BUS_IOCTL_RW: {
			tstrNmSpiRw *pstrParam = (tstrNmSpiRw *)pvParameter;
			s8Ret = spi_rw(pstrParam->pu8InBuf, pstrParam->pu8OutBuf, pstrParam->u16Sz);
    49ca:	680e      	ldr	r6, [r1, #0]
    49cc:	684d      	ldr	r5, [r1, #4]
    49ce:	890c      	ldrh	r4, [r1, #8]
struct spi_module master;
struct spi_slave_inst slave_inst;

static sint8 spi_rw(uint8* pu8Mosi, uint8* pu8Miso, uint16 u16Sz)
{
	uint8 u8Dummy = 0;
    49d0:	2200      	movs	r2, #0
    49d2:	ab02      	add	r3, sp, #8
    49d4:	71da      	strb	r2, [r3, #7]
	uint8 u8SkipMosi = 0, u8SkipMiso = 0;
	uint16_t txd_data = 0;
	uint16_t rxd_data = 0;

	if (!pu8Mosi) {
    49d6:	2e00      	cmp	r6, #0
    49d8:	d008      	beq.n	49ec <nm_bus_ioctl+0x34>
		pu8Mosi = &u8Dummy;
		u8SkipMosi = 1;
	}
	else if(!pu8Miso) {
    49da:	2d00      	cmp	r5, #0
    49dc:	d15d      	bne.n	4a9a <nm_bus_ioctl+0xe2>
		pu8Miso = &u8Dummy;
		u8SkipMiso = 1;
    49de:	2301      	movs	r3, #1
    49e0:	4699      	mov	r9, r3
struct spi_slave_inst slave_inst;

static sint8 spi_rw(uint8* pu8Mosi, uint8* pu8Miso, uint16 u16Sz)
{
	uint8 u8Dummy = 0;
	uint8 u8SkipMosi = 0, u8SkipMiso = 0;
    49e2:	2300      	movs	r3, #0
    49e4:	9301      	str	r3, [sp, #4]
	if (!pu8Mosi) {
		pu8Mosi = &u8Dummy;
		u8SkipMosi = 1;
	}
	else if(!pu8Miso) {
		pu8Miso = &u8Dummy;
    49e6:	ab02      	add	r3, sp, #8
    49e8:	1ddd      	adds	r5, r3, #7
    49ea:	e005      	b.n	49f8 <nm_bus_ioctl+0x40>
struct spi_slave_inst slave_inst;

static sint8 spi_rw(uint8* pu8Mosi, uint8* pu8Miso, uint16 u16Sz)
{
	uint8 u8Dummy = 0;
	uint8 u8SkipMosi = 0, u8SkipMiso = 0;
    49ec:	2300      	movs	r3, #0
    49ee:	4699      	mov	r9, r3
	uint16_t txd_data = 0;
	uint16_t rxd_data = 0;

	if (!pu8Mosi) {
		pu8Mosi = &u8Dummy;
		u8SkipMosi = 1;
    49f0:	3301      	adds	r3, #1
    49f2:	9301      	str	r3, [sp, #4]
	uint8 u8SkipMosi = 0, u8SkipMiso = 0;
	uint16_t txd_data = 0;
	uint16_t rxd_data = 0;

	if (!pu8Mosi) {
		pu8Mosi = &u8Dummy;
    49f4:	ab02      	add	r3, sp, #8
    49f6:	1dde      	adds	r6, r3, #7
	}
	else {
		return M2M_ERR_BUS_FAIL;
	}

	spi_select_slave(&master, &slave_inst, true);
    49f8:	4832      	ldr	r0, [pc, #200]	; (4ac4 <nm_bus_ioctl+0x10c>)
    49fa:	4933      	ldr	r1, [pc, #204]	; (4ac8 <nm_bus_ioctl+0x110>)
    49fc:	2201      	movs	r2, #1
    49fe:	4b33      	ldr	r3, [pc, #204]	; (4acc <nm_bus_ioctl+0x114>)
    4a00:	4798      	blx	r3

	while (u16Sz) {
    4a02:	2c00      	cmp	r4, #0
    4a04:	d03c      	beq.n	4a80 <nm_bus_ioctl+0xc8>
{
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	SercomSpi *const spi_module = &(module->hw->SPI);
    4a06:	4b2f      	ldr	r3, [pc, #188]	; (4ac4 <nm_bus_ioctl+0x10c>)
    4a08:	469b      	mov	fp, r3

	/* Check interrupt flag */
	return (spi_module->INTFLAG.reg & SERCOM_SPI_INTFLAG_DRE);
    4a0a:	2701      	movs	r7, #1
	Assert(module->hw);

	SercomSpi *const spi_module = &(module->hw->SPI);

	/* Check interrupt flag */
	return (spi_module->INTFLAG.reg & SERCOM_SPI_INTFLAG_RXC);
    4a0c:	2204      	movs	r2, #4
		/* Clear overflow flag */
		spi_module->STATUS.reg |= SERCOM_SPI_STATUS_BUFOVF;
	}

	/* Read the character from the DATA register */
	if (module->character_size == SPI_CHARACTER_SIZE_9BIT) {
    4a0e:	469a      	mov	sl, r3

	/* Check if data is overflown */
	if (spi_module->STATUS.reg & SERCOM_SPI_STATUS_BUFOVF) {
		retval = STATUS_ERR_OVERFLOW;
		/* Clear overflow flag */
		spi_module->STATUS.reg |= SERCOM_SPI_STATUS_BUFOVF;
    4a10:	2304      	movs	r3, #4
    4a12:	4698      	mov	r8, r3
			;
		*pu8Miso = rxd_data;

		u16Sz--;
		if (!u8SkipMiso)
			pu8Miso++;
    4a14:	4649      	mov	r1, r9
    4a16:	424b      	negs	r3, r1
    4a18:	4159      	adcs	r1, r3
    4a1a:	4689      	mov	r9, r1
	}

	spi_select_slave(&master, &slave_inst, true);

	while (u16Sz) {
		txd_data = *pu8Mosi;
    4a1c:	7830      	ldrb	r0, [r6, #0]
{
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	SercomSpi *const spi_module = &(module->hw->SPI);
    4a1e:	465b      	mov	r3, fp
    4a20:	681b      	ldr	r3, [r3, #0]

	/* Check interrupt flag */
	return (spi_module->INTFLAG.reg & SERCOM_SPI_INTFLAG_DRE);
    4a22:	7e19      	ldrb	r1, [r3, #24]
		while (!spi_is_ready_to_write(&master))
    4a24:	4239      	tst	r1, r7
    4a26:	d0fc      	beq.n	4a22 <nm_bus_ioctl+0x6a>
    4a28:	7e19      	ldrb	r1, [r3, #24]
	Assert(module->hw);

	SercomSpi *const spi_module = &(module->hw->SPI);

	/* Check if the data register has been copied to the shift register */
	if (!spi_is_ready_to_write(module)) {
    4a2a:	4239      	tst	r1, r7
    4a2c:	d0fc      	beq.n	4a28 <nm_bus_ioctl+0x70>
		/* Data register has not been copied to the shift register, return */
		return STATUS_BUSY;
	}

	/* Write the character to the DATA register */
	spi_module->DATA.reg = tx_data & SERCOM_SPI_DATA_MASK;
    4a2e:	6298      	str	r0, [r3, #40]	; 0x28
	Assert(module->hw);

	SercomSpi *const spi_module = &(module->hw->SPI);

	/* Check interrupt flag */
	return (spi_module->INTFLAG.reg & SERCOM_SPI_INTFLAG_RXC);
    4a30:	7e19      	ldrb	r1, [r3, #24]
			;
		while(spi_write(&master, txd_data) != STATUS_OK)
			;

		/* Read SPI master data register. */
		while (!spi_is_ready_to_read(&master))
    4a32:	4211      	tst	r1, r2
    4a34:	d0fc      	beq.n	4a30 <nm_bus_ioctl+0x78>
		/* Clear overflow flag */
		spi_module->STATUS.reg |= SERCOM_SPI_STATUS_BUFOVF;
	}

	/* Read the character from the DATA register */
	if (module->character_size == SPI_CHARACTER_SIZE_9BIT) {
    4a36:	4651      	mov	r1, sl
    4a38:	7989      	ldrb	r1, [r1, #6]
    4a3a:	468c      	mov	ip, r1
	Assert(module->hw);

	SercomSpi *const spi_module = &(module->hw->SPI);

	/* Check interrupt flag */
	return (spi_module->INTFLAG.reg & SERCOM_SPI_INTFLAG_RXC);
    4a3c:	7e19      	ldrb	r1, [r3, #24]
	Assert(module->hw);

	SercomSpi *const spi_module = &(module->hw->SPI);

	/* Check if data is ready to be read */
	if (!spi_is_ready_to_read(module)) {
    4a3e:	4211      	tst	r1, r2
    4a40:	d0fc      	beq.n	4a3c <nm_bus_ioctl+0x84>

	/* Return value */
	enum status_code retval = STATUS_OK;

	/* Check if data is overflown */
	if (spi_module->STATUS.reg & SERCOM_SPI_STATUS_BUFOVF) {
    4a42:	8b59      	ldrh	r1, [r3, #26]
		/* No data has been received, return */
		return STATUS_ERR_IO;
	}

	/* Return value */
	enum status_code retval = STATUS_OK;
    4a44:	2000      	movs	r0, #0

	/* Check if data is overflown */
	if (spi_module->STATUS.reg & SERCOM_SPI_STATUS_BUFOVF) {
    4a46:	4211      	tst	r1, r2
    4a48:	d005      	beq.n	4a56 <nm_bus_ioctl+0x9e>
		retval = STATUS_ERR_OVERFLOW;
		/* Clear overflow flag */
		spi_module->STATUS.reg |= SERCOM_SPI_STATUS_BUFOVF;
    4a4a:	8b59      	ldrh	r1, [r3, #26]
    4a4c:	4640      	mov	r0, r8
    4a4e:	4301      	orrs	r1, r0
    4a50:	b289      	uxth	r1, r1
    4a52:	8359      	strh	r1, [r3, #26]
	/* Return value */
	enum status_code retval = STATUS_OK;

	/* Check if data is overflown */
	if (spi_module->STATUS.reg & SERCOM_SPI_STATUS_BUFOVF) {
		retval = STATUS_ERR_OVERFLOW;
    4a54:	201e      	movs	r0, #30
		/* Clear overflow flag */
		spi_module->STATUS.reg |= SERCOM_SPI_STATUS_BUFOVF;
	}

	/* Read the character from the DATA register */
	if (module->character_size == SPI_CHARACTER_SIZE_9BIT) {
    4a56:	4661      	mov	r1, ip
    4a58:	2901      	cmp	r1, #1
    4a5a:	d103      	bne.n	4a64 <nm_bus_ioctl+0xac>
		*rx_data = (spi_module->DATA.reg & SERCOM_SPI_DATA_MASK);
    4a5c:	6a99      	ldr	r1, [r3, #40]	; 0x28
    4a5e:	05c9      	lsls	r1, r1, #23
    4a60:	0dc9      	lsrs	r1, r1, #23
    4a62:	e001      	b.n	4a68 <nm_bus_ioctl+0xb0>
	} else {
		*rx_data = (uint8_t)spi_module->DATA.reg;
    4a64:	6a99      	ldr	r1, [r3, #40]	; 0x28
    4a66:	b2c9      	uxtb	r1, r1
			;
		while (spi_read(&master, &rxd_data) != STATUS_OK)
    4a68:	2800      	cmp	r0, #0
    4a6a:	d1e7      	bne.n	4a3c <nm_bus_ioctl+0x84>
			;
		*pu8Miso = rxd_data;
    4a6c:	7029      	strb	r1, [r5, #0]

		u16Sz--;
    4a6e:	3c01      	subs	r4, #1
    4a70:	b2a4      	uxth	r4, r4
		if (!u8SkipMiso)
			pu8Miso++;
    4a72:	444d      	add	r5, r9
		if (!u8SkipMosi)
			pu8Mosi++;
    4a74:	9b01      	ldr	r3, [sp, #4]
    4a76:	4259      	negs	r1, r3
    4a78:	414b      	adcs	r3, r1
    4a7a:	18f6      	adds	r6, r6, r3
		return M2M_ERR_BUS_FAIL;
	}

	spi_select_slave(&master, &slave_inst, true);

	while (u16Sz) {
    4a7c:	2c00      	cmp	r4, #0
    4a7e:	d1cd      	bne.n	4a1c <nm_bus_ioctl+0x64>
{
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	SercomSpi *const spi_module = &(module->hw->SPI);
    4a80:	4b10      	ldr	r3, [pc, #64]	; (4ac4 <nm_bus_ioctl+0x10c>)
    4a82:	6819      	ldr	r1, [r3, #0]

	/* Check interrupt flag */
	return (spi_module->INTFLAG.reg & SERCOM_SPI_INTFLAG_TXC);
    4a84:	2202      	movs	r2, #2
    4a86:	7e0b      	ldrb	r3, [r1, #24]
			pu8Miso++;
		if (!u8SkipMosi)
			pu8Mosi++;
	}

	while (!spi_is_write_complete(&master))
    4a88:	4213      	tst	r3, r2
    4a8a:	d0fc      	beq.n	4a86 <nm_bus_ioctl+0xce>
		;

	spi_select_slave(&master, &slave_inst, false);
    4a8c:	480d      	ldr	r0, [pc, #52]	; (4ac4 <nm_bus_ioctl+0x10c>)
    4a8e:	490e      	ldr	r1, [pc, #56]	; (4ac8 <nm_bus_ioctl+0x110>)
    4a90:	2200      	movs	r2, #0
    4a92:	4b0e      	ldr	r3, [pc, #56]	; (4acc <nm_bus_ioctl+0x114>)
    4a94:	4798      	blx	r3

	return M2M_SUCCESS;
    4a96:	2000      	movs	r0, #0
    4a98:	e00c      	b.n	4ab4 <nm_bus_ioctl+0xfc>
	else if(!pu8Miso) {
		pu8Miso = &u8Dummy;
		u8SkipMiso = 1;
	}
	else {
		return M2M_ERR_BUS_FAIL;
    4a9a:	20fa      	movs	r0, #250	; 0xfa
#elif defined CONF_WINC_USE_SPI
		case NM_BUS_IOCTL_RW: {
			tstrNmSpiRw *pstrParam = (tstrNmSpiRw *)pvParameter;
			s8Ret = spi_rw(pstrParam->pu8InBuf, pstrParam->pu8OutBuf, pstrParam->u16Sz);
		}
		break;
    4a9c:	e00a      	b.n	4ab4 <nm_bus_ioctl+0xfc>
#endif
		default:
			s8Ret = -1;
			M2M_ERR("invalide ioclt cmd\n");
    4a9e:	480c      	ldr	r0, [pc, #48]	; (4ad0 <nm_bus_ioctl+0x118>)
    4aa0:	490c      	ldr	r1, [pc, #48]	; (4ad4 <nm_bus_ioctl+0x11c>)
    4aa2:	228a      	movs	r2, #138	; 0x8a
    4aa4:	0052      	lsls	r2, r2, #1
    4aa6:	4c0c      	ldr	r4, [pc, #48]	; (4ad8 <nm_bus_ioctl+0x120>)
    4aa8:	47a0      	blx	r4
    4aaa:	480c      	ldr	r0, [pc, #48]	; (4adc <nm_bus_ioctl+0x124>)
    4aac:	47a0      	blx	r4
    4aae:	480c      	ldr	r0, [pc, #48]	; (4ae0 <nm_bus_ioctl+0x128>)
    4ab0:	47a0      	blx	r4
			s8Ret = spi_rw(pstrParam->pu8InBuf, pstrParam->pu8OutBuf, pstrParam->u16Sz);
		}
		break;
#endif
		default:
			s8Ret = -1;
    4ab2:	20ff      	movs	r0, #255	; 0xff
			M2M_ERR("invalide ioclt cmd\n");
			break;
	}

	return s8Ret;
    4ab4:	b240      	sxtb	r0, r0
}
    4ab6:	b005      	add	sp, #20
    4ab8:	bc3c      	pop	{r2, r3, r4, r5}
    4aba:	4690      	mov	r8, r2
    4abc:	4699      	mov	r9, r3
    4abe:	46a2      	mov	sl, r4
    4ac0:	46ab      	mov	fp, r5
    4ac2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4ac4:	20000998 	.word	0x20000998
    4ac8:	20000994 	.word	0x20000994
    4acc:	00007db1 	.word	0x00007db1
    4ad0:	00010c04 	.word	0x00010c04
    4ad4:	00010c2c 	.word	0x00010c2c
    4ad8:	000090f5 	.word	0x000090f5
    4adc:	00010c18 	.word	0x00010c18
    4ae0:	0000f0d0 	.word	0x0000f0d0

00004ae4 <nm_bus_deinit>:
/*
*	@fn		nm_bus_deinit
*	@brief	De-initialize the bus wrapper
*/
sint8 nm_bus_deinit(void)
{
    4ae4:	b538      	push	{r3, r4, r5, lr}
{
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	SercomSpi *const spi_module = &(module->hw->SPI);
    4ae6:	4d0b      	ldr	r5, [pc, #44]	; (4b14 <nm_bus_deinit+0x30>)
    4ae8:	682c      	ldr	r4, [r5, #0]

#  if SPI_CALLBACK_MODE == true
	system_interrupt_disable(_sercom_get_interrupt_vector(module->hw));
    4aea:	1c20      	adds	r0, r4, #0
    4aec:	4b0a      	ldr	r3, [pc, #40]	; (4b18 <nm_bus_deinit+0x34>)
    4aee:	4798      	blx	r3
 * \param[in] vector  Interrupt vector to disable
 */
static inline void system_interrupt_disable(
		const enum system_interrupt_vector vector)
{
	NVIC->ICER[0] = (uint32_t)(1 << ((uint32_t)vector & 0x0000001f));
    4af0:	231f      	movs	r3, #31
    4af2:	4018      	ands	r0, r3
    4af4:	3b1e      	subs	r3, #30
    4af6:	4083      	lsls	r3, r0
    4af8:	1c18      	adds	r0, r3, #0
    4afa:	2380      	movs	r3, #128	; 0x80
    4afc:	4a07      	ldr	r2, [pc, #28]	; (4b1c <nm_bus_deinit+0x38>)
    4afe:	50d0      	str	r0, [r2, r3]
{
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	SercomSpi *const spi_module = &(module->hw->SPI);
    4b00:	682a      	ldr	r2, [r5, #0]

#  ifdef FEATURE_SPI_SYNC_SCHEME_VERSION_2
	/* Return synchronization status */
	return (spi_module->SYNCBUSY.reg);
    4b02:	69d3      	ldr	r3, [r2, #28]

#  if SPI_CALLBACK_MODE == true
	system_interrupt_disable(_sercom_get_interrupt_vector(module->hw));
#  endif

	while (spi_is_syncing(module)) {
    4b04:	2b00      	cmp	r3, #0
    4b06:	d1fc      	bne.n	4b02 <nm_bus_deinit+0x1e>
		/* Wait until the synchronization is complete */
	}

	/* Disable SPI */
	spi_module->CTRLA.reg &= ~SERCOM_SPI_CTRLA_ENABLE;
    4b08:	6823      	ldr	r3, [r4, #0]
    4b0a:	2202      	movs	r2, #2
    4b0c:	4393      	bics	r3, r2
    4b0e:	6023      	str	r3, [r4, #0]
#endif /* CONF_WINC_USE_I2C */
#ifdef CONF_WINC_USE_SPI
	spi_disable(&master);
#endif /* CONF_WINC_USE_SPI */
	return result;
}
    4b10:	2000      	movs	r0, #0
    4b12:	bd38      	pop	{r3, r4, r5, pc}
    4b14:	20000998 	.word	0x20000998
    4b18:	00007b51 	.word	0x00007b51
    4b1c:	e000e100 	.word	0xe000e100

00004b20 <m2m_memcpy>:
    4b20:	2a00      	cmp	r2, #0
    4b22:	d006      	beq.n	4b32 <m2m_memcpy+0x12>
    4b24:	1882      	adds	r2, r0, r2
    4b26:	780b      	ldrb	r3, [r1, #0]
    4b28:	7003      	strb	r3, [r0, #0]
    4b2a:	3001      	adds	r0, #1
    4b2c:	3101      	adds	r1, #1
    4b2e:	4290      	cmp	r0, r2
    4b30:	d1f9      	bne.n	4b26 <m2m_memcpy+0x6>
    4b32:	4770      	bx	lr

00004b34 <m2m_memset>:
    4b34:	2a00      	cmp	r2, #0
    4b36:	d004      	beq.n	4b42 <m2m_memset+0xe>
    4b38:	1882      	adds	r2, r0, r2
    4b3a:	7001      	strb	r1, [r0, #0]
    4b3c:	3001      	adds	r0, #1
    4b3e:	4290      	cmp	r0, r2
    4b40:	d1fb      	bne.n	4b3a <m2m_memset+0x6>
    4b42:	4770      	bx	lr

00004b44 <m2m_strlen>:
    4b44:	1c03      	adds	r3, r0, #0
    4b46:	7802      	ldrb	r2, [r0, #0]
    4b48:	2a00      	cmp	r2, #0
    4b4a:	d007      	beq.n	4b5c <m2m_strlen+0x18>
    4b4c:	2000      	movs	r0, #0
    4b4e:	3001      	adds	r0, #1
    4b50:	b280      	uxth	r0, r0
    4b52:	3301      	adds	r3, #1
    4b54:	781a      	ldrb	r2, [r3, #0]
    4b56:	2a00      	cmp	r2, #0
    4b58:	d1f9      	bne.n	4b4e <m2m_strlen+0xa>
    4b5a:	e000      	b.n	4b5e <m2m_strlen+0x1a>
    4b5c:	2000      	movs	r0, #0
    4b5e:	4770      	bx	lr

00004b60 <m2m_strncmp>:
    4b60:	b510      	push	{r4, lr}
    4b62:	1c03      	adds	r3, r0, #0
    4b64:	2a00      	cmp	r2, #0
    4b66:	d01a      	beq.n	4b9e <m2m_strncmp+0x3e>
    4b68:	7800      	ldrb	r0, [r0, #0]
    4b6a:	780c      	ldrb	r4, [r1, #0]
    4b6c:	42a0      	cmp	r0, r4
    4b6e:	d10a      	bne.n	4b86 <m2m_strncmp+0x26>
    4b70:	2800      	cmp	r0, #0
    4b72:	d017      	beq.n	4ba4 <m2m_strncmp+0x44>
    4b74:	3a01      	subs	r2, #1
    4b76:	b292      	uxth	r2, r2
    4b78:	3201      	adds	r2, #1
    4b7a:	189a      	adds	r2, r3, r2
    4b7c:	e009      	b.n	4b92 <m2m_strncmp+0x32>
    4b7e:	7818      	ldrb	r0, [r3, #0]
    4b80:	780c      	ldrb	r4, [r1, #0]
    4b82:	42a0      	cmp	r0, r4
    4b84:	d003      	beq.n	4b8e <m2m_strncmp+0x2e>
    4b86:	42a0      	cmp	r0, r4
    4b88:	d30b      	bcc.n	4ba2 <m2m_strncmp+0x42>
    4b8a:	2001      	movs	r0, #1
    4b8c:	e00a      	b.n	4ba4 <m2m_strncmp+0x44>
    4b8e:	2800      	cmp	r0, #0
    4b90:	d008      	beq.n	4ba4 <m2m_strncmp+0x44>
    4b92:	3301      	adds	r3, #1
    4b94:	3101      	adds	r1, #1
    4b96:	4293      	cmp	r3, r2
    4b98:	d1f1      	bne.n	4b7e <m2m_strncmp+0x1e>
    4b9a:	2000      	movs	r0, #0
    4b9c:	e002      	b.n	4ba4 <m2m_strncmp+0x44>
    4b9e:	2000      	movs	r0, #0
    4ba0:	e000      	b.n	4ba4 <m2m_strncmp+0x44>
    4ba2:	20ff      	movs	r0, #255	; 0xff
    4ba4:	bd10      	pop	{r4, pc}
    4ba6:	46c0      	nop			; (mov r8, r8)

00004ba8 <m2m_strstr>:
    4ba8:	b5f0      	push	{r4, r5, r6, r7, lr}
    4baa:	b083      	sub	sp, #12
    4bac:	1c04      	adds	r4, r0, #0
    4bae:	780e      	ldrb	r6, [r1, #0]
    4bb0:	2e00      	cmp	r6, #0
    4bb2:	d017      	beq.n	4be4 <m2m_strstr+0x3c>
    4bb4:	1c4b      	adds	r3, r1, #1
    4bb6:	9300      	str	r3, [sp, #0]
    4bb8:	1c18      	adds	r0, r3, #0
    4bba:	4b0b      	ldr	r3, [pc, #44]	; (4be8 <m2m_strstr+0x40>)
    4bbc:	4798      	blx	r3
    4bbe:	9001      	str	r0, [sp, #4]
    4bc0:	4f0a      	ldr	r7, [pc, #40]	; (4bec <m2m_strstr+0x44>)
    4bc2:	e000      	b.n	4bc6 <m2m_strstr+0x1e>
    4bc4:	1c2c      	adds	r4, r5, #0
    4bc6:	1c65      	adds	r5, r4, #1
    4bc8:	7823      	ldrb	r3, [r4, #0]
    4bca:	2b00      	cmp	r3, #0
    4bcc:	d009      	beq.n	4be2 <m2m_strstr+0x3a>
    4bce:	42b3      	cmp	r3, r6
    4bd0:	d1f8      	bne.n	4bc4 <m2m_strstr+0x1c>
    4bd2:	1c28      	adds	r0, r5, #0
    4bd4:	9900      	ldr	r1, [sp, #0]
    4bd6:	9a01      	ldr	r2, [sp, #4]
    4bd8:	47b8      	blx	r7
    4bda:	2800      	cmp	r0, #0
    4bdc:	d1f2      	bne.n	4bc4 <m2m_strstr+0x1c>
    4bde:	1c20      	adds	r0, r4, #0
    4be0:	e000      	b.n	4be4 <m2m_strstr+0x3c>
    4be2:	2000      	movs	r0, #0
    4be4:	b003      	add	sp, #12
    4be6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4be8:	00004b45 	.word	0x00004b45
    4bec:	00004b61 	.word	0x00004b61

00004bf0 <isr>:
    4bf0:	4a02      	ldr	r2, [pc, #8]	; (4bfc <isr+0xc>)
    4bf2:	7813      	ldrb	r3, [r2, #0]
    4bf4:	3301      	adds	r3, #1
    4bf6:	b2db      	uxtb	r3, r3
    4bf8:	7013      	strb	r3, [r2, #0]
    4bfa:	4770      	bx	lr
    4bfc:	20000674 	.word	0x20000674

00004c00 <m2m_hif_cb>:
    4c00:	4770      	bx	lr
    4c02:	46c0      	nop			; (mov r8, r8)

00004c04 <hif_set_rx_done>:
    4c04:	b500      	push	{lr}
    4c06:	b083      	sub	sp, #12
    4c08:	2001      	movs	r0, #1
    4c0a:	4b09      	ldr	r3, [pc, #36]	; (4c30 <hif_set_rx_done+0x2c>)
    4c0c:	4798      	blx	r3
    4c0e:	4809      	ldr	r0, [pc, #36]	; (4c34 <hif_set_rx_done+0x30>)
    4c10:	a901      	add	r1, sp, #4
    4c12:	4b09      	ldr	r3, [pc, #36]	; (4c38 <hif_set_rx_done+0x34>)
    4c14:	4798      	blx	r3
    4c16:	2800      	cmp	r0, #0
    4c18:	d106      	bne.n	4c28 <hif_set_rx_done+0x24>
    4c1a:	2102      	movs	r1, #2
    4c1c:	9b01      	ldr	r3, [sp, #4]
    4c1e:	4319      	orrs	r1, r3
    4c20:	9101      	str	r1, [sp, #4]
    4c22:	4804      	ldr	r0, [pc, #16]	; (4c34 <hif_set_rx_done+0x30>)
    4c24:	4b05      	ldr	r3, [pc, #20]	; (4c3c <hif_set_rx_done+0x38>)
    4c26:	4798      	blx	r3
    4c28:	b240      	sxtb	r0, r0
    4c2a:	b003      	add	sp, #12
    4c2c:	bd00      	pop	{pc}
    4c2e:	46c0      	nop			; (mov r8, r8)
    4c30:	0000488d 	.word	0x0000488d
    4c34:	00001070 	.word	0x00001070
    4c38:	00006025 	.word	0x00006025
    4c3c:	00006031 	.word	0x00006031

00004c40 <hif_chip_wake>:
    4c40:	b508      	push	{r3, lr}
    4c42:	4b0f      	ldr	r3, [pc, #60]	; (4c80 <hif_chip_wake+0x40>)
    4c44:	781b      	ldrb	r3, [r3, #0]
    4c46:	2b00      	cmp	r3, #0
    4c48:	d111      	bne.n	4c6e <hif_chip_wake+0x2e>
    4c4a:	4b0e      	ldr	r3, [pc, #56]	; (4c84 <hif_chip_wake+0x44>)
    4c4c:	781b      	ldrb	r3, [r3, #0]
    4c4e:	2b03      	cmp	r3, #3
    4c50:	d003      	beq.n	4c5a <hif_chip_wake+0x1a>
    4c52:	4b0c      	ldr	r3, [pc, #48]	; (4c84 <hif_chip_wake+0x44>)
    4c54:	781b      	ldrb	r3, [r3, #0]
    4c56:	2b04      	cmp	r3, #4
    4c58:	d109      	bne.n	4c6e <hif_chip_wake+0x2e>
    4c5a:	4b0b      	ldr	r3, [pc, #44]	; (4c88 <hif_chip_wake+0x48>)
    4c5c:	4798      	blx	r3
    4c5e:	2800      	cmp	r0, #0
    4c60:	d10b      	bne.n	4c7a <hif_chip_wake+0x3a>
    4c62:	480a      	ldr	r0, [pc, #40]	; (4c8c <hif_chip_wake+0x4c>)
    4c64:	490a      	ldr	r1, [pc, #40]	; (4c90 <hif_chip_wake+0x50>)
    4c66:	4b0b      	ldr	r3, [pc, #44]	; (4c94 <hif_chip_wake+0x54>)
    4c68:	4798      	blx	r3
    4c6a:	2800      	cmp	r0, #0
    4c6c:	d105      	bne.n	4c7a <hif_chip_wake+0x3a>
    4c6e:	4a04      	ldr	r2, [pc, #16]	; (4c80 <hif_chip_wake+0x40>)
    4c70:	7813      	ldrb	r3, [r2, #0]
    4c72:	3301      	adds	r3, #1
    4c74:	b2db      	uxtb	r3, r3
    4c76:	7013      	strb	r3, [r2, #0]
    4c78:	2000      	movs	r0, #0
    4c7a:	b240      	sxtb	r0, r0
    4c7c:	bd08      	pop	{r3, pc}
    4c7e:	46c0      	nop			; (mov r8, r8)
    4c80:	2000068c 	.word	0x2000068c
    4c84:	2000067c 	.word	0x2000067c
    4c88:	00005b59 	.word	0x00005b59
    4c8c:	00001074 	.word	0x00001074
    4c90:	00005678 	.word	0x00005678
    4c94:	00006031 	.word	0x00006031

00004c98 <hif_chip_sleep>:
    4c98:	b500      	push	{lr}
    4c9a:	b083      	sub	sp, #12
    4c9c:	4b17      	ldr	r3, [pc, #92]	; (4cfc <hif_chip_sleep+0x64>)
    4c9e:	781b      	ldrb	r3, [r3, #0]
    4ca0:	2b00      	cmp	r3, #0
    4ca2:	d004      	beq.n	4cae <hif_chip_sleep+0x16>
    4ca4:	4a15      	ldr	r2, [pc, #84]	; (4cfc <hif_chip_sleep+0x64>)
    4ca6:	7813      	ldrb	r3, [r2, #0]
    4ca8:	3b01      	subs	r3, #1
    4caa:	b2db      	uxtb	r3, r3
    4cac:	7013      	strb	r3, [r2, #0]
    4cae:	4b13      	ldr	r3, [pc, #76]	; (4cfc <hif_chip_sleep+0x64>)
    4cb0:	781b      	ldrb	r3, [r3, #0]
    4cb2:	2000      	movs	r0, #0
    4cb4:	2b00      	cmp	r3, #0
    4cb6:	d11e      	bne.n	4cf6 <hif_chip_sleep+0x5e>
    4cb8:	4b11      	ldr	r3, [pc, #68]	; (4d00 <hif_chip_sleep+0x68>)
    4cba:	781b      	ldrb	r3, [r3, #0]
    4cbc:	2b03      	cmp	r3, #3
    4cbe:	d003      	beq.n	4cc8 <hif_chip_sleep+0x30>
    4cc0:	4b0f      	ldr	r3, [pc, #60]	; (4d00 <hif_chip_sleep+0x68>)
    4cc2:	781b      	ldrb	r3, [r3, #0]
    4cc4:	2b04      	cmp	r3, #4
    4cc6:	d116      	bne.n	4cf6 <hif_chip_sleep+0x5e>
    4cc8:	2300      	movs	r3, #0
    4cca:	9301      	str	r3, [sp, #4]
    4ccc:	480d      	ldr	r0, [pc, #52]	; (4d04 <hif_chip_sleep+0x6c>)
    4cce:	490e      	ldr	r1, [pc, #56]	; (4d08 <hif_chip_sleep+0x70>)
    4cd0:	4b0e      	ldr	r3, [pc, #56]	; (4d0c <hif_chip_sleep+0x74>)
    4cd2:	4798      	blx	r3
    4cd4:	2800      	cmp	r0, #0
    4cd6:	d10e      	bne.n	4cf6 <hif_chip_sleep+0x5e>
    4cd8:	3001      	adds	r0, #1
    4cda:	a901      	add	r1, sp, #4
    4cdc:	4b0c      	ldr	r3, [pc, #48]	; (4d10 <hif_chip_sleep+0x78>)
    4cde:	4798      	blx	r3
    4ce0:	2800      	cmp	r0, #0
    4ce2:	d108      	bne.n	4cf6 <hif_chip_sleep+0x5e>
    4ce4:	9901      	ldr	r1, [sp, #4]
    4ce6:	078b      	lsls	r3, r1, #30
    4ce8:	d505      	bpl.n	4cf6 <hif_chip_sleep+0x5e>
    4cea:	2302      	movs	r3, #2
    4cec:	4399      	bics	r1, r3
    4cee:	9101      	str	r1, [sp, #4]
    4cf0:	3001      	adds	r0, #1
    4cf2:	4b06      	ldr	r3, [pc, #24]	; (4d0c <hif_chip_sleep+0x74>)
    4cf4:	4798      	blx	r3
    4cf6:	b240      	sxtb	r0, r0
    4cf8:	b003      	add	sp, #12
    4cfa:	bd00      	pop	{pc}
    4cfc:	2000068c 	.word	0x2000068c
    4d00:	2000067c 	.word	0x2000067c
    4d04:	00001074 	.word	0x00001074
    4d08:	00004321 	.word	0x00004321
    4d0c:	00006031 	.word	0x00006031
    4d10:	00006025 	.word	0x00006025

00004d14 <hif_send>:
    4d14:	b5f0      	push	{r4, r5, r6, r7, lr}
    4d16:	465f      	mov	r7, fp
    4d18:	4656      	mov	r6, sl
    4d1a:	b4c0      	push	{r6, r7}
    4d1c:	b089      	sub	sp, #36	; 0x24
    4d1e:	4683      	mov	fp, r0
    4d20:	468a      	mov	sl, r1
    4d22:	9201      	str	r2, [sp, #4]
    4d24:	9300      	str	r3, [sp, #0]
    4d26:	ab10      	add	r3, sp, #64	; 0x40
    4d28:	cb80      	ldmia	r3!, {r7}
    4d2a:	881e      	ldrh	r6, [r3, #0]
    4d2c:	ab12      	add	r3, sp, #72	; 0x48
    4d2e:	881d      	ldrh	r5, [r3, #0]
    4d30:	227f      	movs	r2, #127	; 0x7f
    4d32:	400a      	ands	r2, r1
    4d34:	ab07      	add	r3, sp, #28
    4d36:	705a      	strb	r2, [r3, #1]
    4d38:	7018      	strb	r0, [r3, #0]
    4d3a:	2208      	movs	r2, #8
    4d3c:	805a      	strh	r2, [r3, #2]
    4d3e:	2f00      	cmp	r7, #0
    4d40:	d005      	beq.n	4d4e <hif_send+0x3a>
    4d42:	885a      	ldrh	r2, [r3, #2]
    4d44:	1992      	adds	r2, r2, r6
    4d46:	18aa      	adds	r2, r5, r2
    4d48:	b292      	uxth	r2, r2
    4d4a:	805a      	strh	r2, [r3, #2]
    4d4c:	e006      	b.n	4d5c <hif_send+0x48>
    4d4e:	ab07      	add	r3, sp, #28
    4d50:	885a      	ldrh	r2, [r3, #2]
    4d52:	9900      	ldr	r1, [sp, #0]
    4d54:	468c      	mov	ip, r1
    4d56:	4462      	add	r2, ip
    4d58:	b292      	uxth	r2, r2
    4d5a:	805a      	strh	r2, [r3, #2]
    4d5c:	4b55      	ldr	r3, [pc, #340]	; (4eb4 <hif_send+0x1a0>)
    4d5e:	4798      	blx	r3
    4d60:	1e04      	subs	r4, r0, #0
    4d62:	d000      	beq.n	4d66 <hif_send+0x52>
    4d64:	e08e      	b.n	4e84 <hif_send+0x170>
    4d66:	2300      	movs	r3, #0
    4d68:	9305      	str	r3, [sp, #20]
    4d6a:	aa02      	add	r2, sp, #8
    4d6c:	80d3      	strh	r3, [r2, #6]
    4d6e:	9304      	str	r3, [sp, #16]
    4d70:	9b04      	ldr	r3, [sp, #16]
    4d72:	465a      	mov	r2, fp
    4d74:	431a      	orrs	r2, r3
    4d76:	9204      	str	r2, [sp, #16]
    4d78:	9a04      	ldr	r2, [sp, #16]
    4d7a:	4653      	mov	r3, sl
    4d7c:	021b      	lsls	r3, r3, #8
    4d7e:	4313      	orrs	r3, r2
    4d80:	9304      	str	r3, [sp, #16]
    4d82:	ab07      	add	r3, sp, #28
    4d84:	885b      	ldrh	r3, [r3, #2]
    4d86:	9a04      	ldr	r2, [sp, #16]
    4d88:	041b      	lsls	r3, r3, #16
    4d8a:	4313      	orrs	r3, r2
    4d8c:	9304      	str	r3, [sp, #16]
    4d8e:	9904      	ldr	r1, [sp, #16]
    4d90:	4849      	ldr	r0, [pc, #292]	; (4eb8 <hif_send+0x1a4>)
    4d92:	4b4a      	ldr	r3, [pc, #296]	; (4ebc <hif_send+0x1a8>)
    4d94:	4798      	blx	r3
    4d96:	1e04      	subs	r4, r0, #0
    4d98:	d000      	beq.n	4d9c <hif_send+0x88>
    4d9a:	e085      	b.n	4ea8 <hif_send+0x194>
    4d9c:	2300      	movs	r3, #0
    4d9e:	9304      	str	r3, [sp, #16]
    4da0:	9a04      	ldr	r2, [sp, #16]
    4da2:	3302      	adds	r3, #2
    4da4:	4313      	orrs	r3, r2
    4da6:	9304      	str	r3, [sp, #16]
    4da8:	9904      	ldr	r1, [sp, #16]
    4daa:	4845      	ldr	r0, [pc, #276]	; (4ec0 <hif_send+0x1ac>)
    4dac:	4b43      	ldr	r3, [pc, #268]	; (4ebc <hif_send+0x1a8>)
    4dae:	4798      	blx	r3
    4db0:	1e04      	subs	r4, r0, #0
    4db2:	d000      	beq.n	4db6 <hif_send+0xa2>
    4db4:	e078      	b.n	4ea8 <hif_send+0x194>
    4db6:	2200      	movs	r2, #0
    4db8:	9205      	str	r2, [sp, #20]
    4dba:	ab02      	add	r3, sp, #8
    4dbc:	80da      	strh	r2, [r3, #6]
    4dbe:	3306      	adds	r3, #6
    4dc0:	881b      	ldrh	r3, [r3, #0]
    4dc2:	b29b      	uxth	r3, r3
    4dc4:	4a3f      	ldr	r2, [pc, #252]	; (4ec4 <hif_send+0x1b0>)
    4dc6:	4293      	cmp	r3, r2
    4dc8:	d81c      	bhi.n	4e04 <hif_send+0xf0>
    4dca:	4c3f      	ldr	r4, [pc, #252]	; (4ec8 <hif_send+0x1b4>)
    4dcc:	483c      	ldr	r0, [pc, #240]	; (4ec0 <hif_send+0x1ac>)
    4dce:	a904      	add	r1, sp, #16
    4dd0:	47a0      	blx	r4
    4dd2:	2800      	cmp	r0, #0
    4dd4:	d116      	bne.n	4e04 <hif_send+0xf0>
    4dd6:	9b04      	ldr	r3, [sp, #16]
    4dd8:	079b      	lsls	r3, r3, #30
    4dda:	d408      	bmi.n	4dee <hif_send+0xda>
    4ddc:	483b      	ldr	r0, [pc, #236]	; (4ecc <hif_send+0x1b8>)
    4dde:	a905      	add	r1, sp, #20
    4de0:	4b39      	ldr	r3, [pc, #228]	; (4ec8 <hif_send+0x1b4>)
    4de2:	4798      	blx	r3
    4de4:	2800      	cmp	r0, #0
    4de6:	d00d      	beq.n	4e04 <hif_send+0xf0>
    4de8:	2300      	movs	r3, #0
    4dea:	9305      	str	r3, [sp, #20]
    4dec:	e00a      	b.n	4e04 <hif_send+0xf0>
    4dee:	ab02      	add	r3, sp, #8
    4df0:	88da      	ldrh	r2, [r3, #6]
    4df2:	3201      	adds	r2, #1
    4df4:	b292      	uxth	r2, r2
    4df6:	80da      	strh	r2, [r3, #6]
    4df8:	3306      	adds	r3, #6
    4dfa:	881b      	ldrh	r3, [r3, #0]
    4dfc:	b29b      	uxth	r3, r3
    4dfe:	4a31      	ldr	r2, [pc, #196]	; (4ec4 <hif_send+0x1b0>)
    4e00:	4293      	cmp	r3, r2
    4e02:	d9e3      	bls.n	4dcc <hif_send+0xb8>
    4e04:	9b05      	ldr	r3, [sp, #20]
    4e06:	2b00      	cmp	r3, #0
    4e08:	d04d      	beq.n	4ea6 <hif_send+0x192>
    4e0a:	9b05      	ldr	r3, [sp, #20]
    4e0c:	9306      	str	r3, [sp, #24]
    4e0e:	a907      	add	r1, sp, #28
    4e10:	884b      	ldrh	r3, [r1, #2]
    4e12:	b29b      	uxth	r3, r3
    4e14:	804b      	strh	r3, [r1, #2]
    4e16:	9806      	ldr	r0, [sp, #24]
    4e18:	2208      	movs	r2, #8
    4e1a:	4b2d      	ldr	r3, [pc, #180]	; (4ed0 <hif_send+0x1bc>)
    4e1c:	4798      	blx	r3
    4e1e:	1e04      	subs	r4, r0, #0
    4e20:	d142      	bne.n	4ea8 <hif_send+0x194>
    4e22:	9b06      	ldr	r3, [sp, #24]
    4e24:	3308      	adds	r3, #8
    4e26:	9306      	str	r3, [sp, #24]
    4e28:	9b01      	ldr	r3, [sp, #4]
    4e2a:	2b00      	cmp	r3, #0
    4e2c:	d00b      	beq.n	4e46 <hif_send+0x132>
    4e2e:	9806      	ldr	r0, [sp, #24]
    4e30:	1c19      	adds	r1, r3, #0
    4e32:	9a00      	ldr	r2, [sp, #0]
    4e34:	4b26      	ldr	r3, [pc, #152]	; (4ed0 <hif_send+0x1bc>)
    4e36:	4798      	blx	r3
    4e38:	1e04      	subs	r4, r0, #0
    4e3a:	d135      	bne.n	4ea8 <hif_send+0x194>
    4e3c:	9b06      	ldr	r3, [sp, #24]
    4e3e:	9a00      	ldr	r2, [sp, #0]
    4e40:	4694      	mov	ip, r2
    4e42:	4463      	add	r3, ip
    4e44:	9306      	str	r3, [sp, #24]
    4e46:	2f00      	cmp	r7, #0
    4e48:	d00e      	beq.n	4e68 <hif_send+0x154>
    4e4a:	9b06      	ldr	r3, [sp, #24]
    4e4c:	9a00      	ldr	r2, [sp, #0]
    4e4e:	1aad      	subs	r5, r5, r2
    4e50:	18ed      	adds	r5, r5, r3
    4e52:	9506      	str	r5, [sp, #24]
    4e54:	9806      	ldr	r0, [sp, #24]
    4e56:	1c39      	adds	r1, r7, #0
    4e58:	1c32      	adds	r2, r6, #0
    4e5a:	4b1d      	ldr	r3, [pc, #116]	; (4ed0 <hif_send+0x1bc>)
    4e5c:	4798      	blx	r3
    4e5e:	1e04      	subs	r4, r0, #0
    4e60:	d122      	bne.n	4ea8 <hif_send+0x194>
    4e62:	9b06      	ldr	r3, [sp, #24]
    4e64:	18f3      	adds	r3, r6, r3
    4e66:	9306      	str	r3, [sp, #24]
    4e68:	9b05      	ldr	r3, [sp, #20]
    4e6a:	009b      	lsls	r3, r3, #2
    4e6c:	9304      	str	r3, [sp, #16]
    4e6e:	9a04      	ldr	r2, [sp, #16]
    4e70:	2302      	movs	r3, #2
    4e72:	4313      	orrs	r3, r2
    4e74:	9304      	str	r3, [sp, #16]
    4e76:	9904      	ldr	r1, [sp, #16]
    4e78:	4816      	ldr	r0, [pc, #88]	; (4ed4 <hif_send+0x1c0>)
    4e7a:	4b10      	ldr	r3, [pc, #64]	; (4ebc <hif_send+0x1a8>)
    4e7c:	4798      	blx	r3
    4e7e:	1e04      	subs	r4, r0, #0
    4e80:	d112      	bne.n	4ea8 <hif_send+0x194>
    4e82:	e00c      	b.n	4e9e <hif_send+0x18a>
    4e84:	4814      	ldr	r0, [pc, #80]	; (4ed8 <hif_send+0x1c4>)
    4e86:	4915      	ldr	r1, [pc, #84]	; (4edc <hif_send+0x1c8>)
    4e88:	2296      	movs	r2, #150	; 0x96
    4e8a:	32ff      	adds	r2, #255	; 0xff
    4e8c:	4b14      	ldr	r3, [pc, #80]	; (4ee0 <hif_send+0x1cc>)
    4e8e:	4798      	blx	r3
    4e90:	4814      	ldr	r0, [pc, #80]	; (4ee4 <hif_send+0x1d0>)
    4e92:	4b15      	ldr	r3, [pc, #84]	; (4ee8 <hif_send+0x1d4>)
    4e94:	4798      	blx	r3
    4e96:	200d      	movs	r0, #13
    4e98:	4b14      	ldr	r3, [pc, #80]	; (4eec <hif_send+0x1d8>)
    4e9a:	4798      	blx	r3
    4e9c:	e004      	b.n	4ea8 <hif_send+0x194>
    4e9e:	4b14      	ldr	r3, [pc, #80]	; (4ef0 <hif_send+0x1dc>)
    4ea0:	4798      	blx	r3
    4ea2:	1c04      	adds	r4, r0, #0
    4ea4:	e000      	b.n	4ea8 <hif_send+0x194>
    4ea6:	24fd      	movs	r4, #253	; 0xfd
    4ea8:	b260      	sxtb	r0, r4
    4eaa:	b009      	add	sp, #36	; 0x24
    4eac:	bc0c      	pop	{r2, r3}
    4eae:	4692      	mov	sl, r2
    4eb0:	469b      	mov	fp, r3
    4eb2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4eb4:	00004c41 	.word	0x00004c41
    4eb8:	0000108c 	.word	0x0000108c
    4ebc:	00006031 	.word	0x00006031
    4ec0:	00001078 	.word	0x00001078
    4ec4:	000003e7 	.word	0x000003e7
    4ec8:	00006025 	.word	0x00006025
    4ecc:	00150400 	.word	0x00150400
    4ed0:	000060a9 	.word	0x000060a9
    4ed4:	0000106c 	.word	0x0000106c
    4ed8:	00010c04 	.word	0x00010c04
    4edc:	00010eb0 	.word	0x00010eb0
    4ee0:	0000c7a9 	.word	0x0000c7a9
    4ee4:	00010c60 	.word	0x00010c60
    4ee8:	0000c8c9 	.word	0x0000c8c9
    4eec:	0000c7dd 	.word	0x0000c7dd
    4ef0:	00004c99 	.word	0x00004c99

00004ef4 <hif_handle_isr>:
    4ef4:	b5f0      	push	{r4, r5, r6, r7, lr}
    4ef6:	464f      	mov	r7, r9
    4ef8:	4646      	mov	r6, r8
    4efa:	b4c0      	push	{r6, r7}
    4efc:	b087      	sub	sp, #28
    4efe:	4ba3      	ldr	r3, [pc, #652]	; (518c <hif_handle_isr+0x298>)
    4f00:	4698      	mov	r8, r3
    4f02:	1c1f      	adds	r7, r3, #0
    4f04:	4ea2      	ldr	r6, [pc, #648]	; (5190 <hif_handle_isr+0x29c>)
    4f06:	e135      	b.n	5174 <hif_handle_isr+0x280>
    4f08:	783b      	ldrb	r3, [r7, #0]
    4f0a:	3b01      	subs	r3, #1
    4f0c:	b2db      	uxtb	r3, r3
    4f0e:	703b      	strb	r3, [r7, #0]
    4f10:	47b0      	blx	r6
    4f12:	1e04      	subs	r4, r0, #0
    4f14:	d000      	beq.n	4f18 <hif_handle_isr+0x24>
    4f16:	e110      	b.n	513a <hif_handle_isr+0x246>
    4f18:	489e      	ldr	r0, [pc, #632]	; (5194 <hif_handle_isr+0x2a0>)
    4f1a:	a903      	add	r1, sp, #12
    4f1c:	4b9e      	ldr	r3, [pc, #632]	; (5198 <hif_handle_isr+0x2a4>)
    4f1e:	4798      	blx	r3
    4f20:	1e04      	subs	r4, r0, #0
    4f22:	d000      	beq.n	4f26 <hif_handle_isr+0x32>
    4f24:	e0fc      	b.n	5120 <hif_handle_isr+0x22c>
    4f26:	9b03      	ldr	r3, [sp, #12]
    4f28:	07db      	lsls	r3, r3, #31
    4f2a:	d400      	bmi.n	4f2e <hif_handle_isr+0x3a>
    4f2c:	e0ec      	b.n	5108 <hif_handle_isr+0x214>
    4f2e:	2000      	movs	r0, #0
    4f30:	4b9a      	ldr	r3, [pc, #616]	; (519c <hif_handle_isr+0x2a8>)
    4f32:	4798      	blx	r3
    4f34:	4897      	ldr	r0, [pc, #604]	; (5194 <hif_handle_isr+0x2a0>)
    4f36:	a903      	add	r1, sp, #12
    4f38:	4b97      	ldr	r3, [pc, #604]	; (5198 <hif_handle_isr+0x2a4>)
    4f3a:	4798      	blx	r3
    4f3c:	1e04      	subs	r4, r0, #0
    4f3e:	d000      	beq.n	4f42 <hif_handle_isr+0x4e>
    4f40:	e10c      	b.n	515c <hif_handle_isr+0x268>
    4f42:	2301      	movs	r3, #1
    4f44:	9903      	ldr	r1, [sp, #12]
    4f46:	4399      	bics	r1, r3
    4f48:	9103      	str	r1, [sp, #12]
    4f4a:	4892      	ldr	r0, [pc, #584]	; (5194 <hif_handle_isr+0x2a0>)
    4f4c:	4b94      	ldr	r3, [pc, #592]	; (51a0 <hif_handle_isr+0x2ac>)
    4f4e:	4798      	blx	r3
    4f50:	1e04      	subs	r4, r0, #0
    4f52:	d000      	beq.n	4f56 <hif_handle_isr+0x62>
    4f54:	e102      	b.n	515c <hif_handle_isr+0x268>
    4f56:	488f      	ldr	r0, [pc, #572]	; (5194 <hif_handle_isr+0x2a0>)
    4f58:	a903      	add	r1, sp, #12
    4f5a:	4b8f      	ldr	r3, [pc, #572]	; (5198 <hif_handle_isr+0x2a4>)
    4f5c:	4798      	blx	r3
    4f5e:	1e04      	subs	r4, r0, #0
    4f60:	d00f      	beq.n	4f82 <hif_handle_isr+0x8e>
    4f62:	4890      	ldr	r0, [pc, #576]	; (51a4 <hif_handle_isr+0x2b0>)
    4f64:	4990      	ldr	r1, [pc, #576]	; (51a8 <hif_handle_isr+0x2b4>)
    4f66:	22e0      	movs	r2, #224	; 0xe0
    4f68:	0052      	lsls	r2, r2, #1
    4f6a:	4b90      	ldr	r3, [pc, #576]	; (51ac <hif_handle_isr+0x2b8>)
    4f6c:	4798      	blx	r3
    4f6e:	4890      	ldr	r0, [pc, #576]	; (51b0 <hif_handle_isr+0x2bc>)
    4f70:	4b90      	ldr	r3, [pc, #576]	; (51b4 <hif_handle_isr+0x2c0>)
    4f72:	4798      	blx	r3
    4f74:	200d      	movs	r0, #13
    4f76:	4b90      	ldr	r3, [pc, #576]	; (51b8 <hif_handle_isr+0x2c4>)
    4f78:	4798      	blx	r3
    4f7a:	2001      	movs	r0, #1
    4f7c:	4b87      	ldr	r3, [pc, #540]	; (519c <hif_handle_isr+0x2a8>)
    4f7e:	4798      	blx	r3
    4f80:	e0ec      	b.n	515c <hif_handle_isr+0x268>
    4f82:	2200      	movs	r2, #0
    4f84:	4b8d      	ldr	r3, [pc, #564]	; (51bc <hif_handle_isr+0x2c8>)
    4f86:	701a      	strb	r2, [r3, #0]
    4f88:	9b03      	ldr	r3, [sp, #12]
    4f8a:	049b      	lsls	r3, r3, #18
    4f8c:	0d1b      	lsrs	r3, r3, #20
    4f8e:	4699      	mov	r9, r3
    4f90:	d100      	bne.n	4f94 <hif_handle_isr+0xa0>
    4f92:	e0ac      	b.n	50ee <hif_handle_isr+0x1fa>
    4f94:	2300      	movs	r3, #0
    4f96:	9305      	str	r3, [sp, #20]
    4f98:	4889      	ldr	r0, [pc, #548]	; (51c0 <hif_handle_isr+0x2cc>)
    4f9a:	a905      	add	r1, sp, #20
    4f9c:	4b7e      	ldr	r3, [pc, #504]	; (5198 <hif_handle_isr+0x2a4>)
    4f9e:	4798      	blx	r3
    4fa0:	1e04      	subs	r4, r0, #0
    4fa2:	d00f      	beq.n	4fc4 <hif_handle_isr+0xd0>
    4fa4:	487f      	ldr	r0, [pc, #508]	; (51a4 <hif_handle_isr+0x2b0>)
    4fa6:	4980      	ldr	r1, [pc, #512]	; (51a8 <hif_handle_isr+0x2b4>)
    4fa8:	22e7      	movs	r2, #231	; 0xe7
    4faa:	0052      	lsls	r2, r2, #1
    4fac:	4b7f      	ldr	r3, [pc, #508]	; (51ac <hif_handle_isr+0x2b8>)
    4fae:	4798      	blx	r3
    4fb0:	4884      	ldr	r0, [pc, #528]	; (51c4 <hif_handle_isr+0x2d0>)
    4fb2:	4b80      	ldr	r3, [pc, #512]	; (51b4 <hif_handle_isr+0x2c0>)
    4fb4:	4798      	blx	r3
    4fb6:	200d      	movs	r0, #13
    4fb8:	4b7f      	ldr	r3, [pc, #508]	; (51b8 <hif_handle_isr+0x2c4>)
    4fba:	4798      	blx	r3
    4fbc:	2001      	movs	r0, #1
    4fbe:	4b77      	ldr	r3, [pc, #476]	; (519c <hif_handle_isr+0x2a8>)
    4fc0:	4798      	blx	r3
    4fc2:	e0c9      	b.n	5158 <hif_handle_isr+0x264>
    4fc4:	ad04      	add	r5, sp, #16
    4fc6:	9805      	ldr	r0, [sp, #20]
    4fc8:	1c29      	adds	r1, r5, #0
    4fca:	2204      	movs	r2, #4
    4fcc:	4b7e      	ldr	r3, [pc, #504]	; (51c8 <hif_handle_isr+0x2d4>)
    4fce:	4798      	blx	r3
    4fd0:	1c04      	adds	r4, r0, #0
    4fd2:	886b      	ldrh	r3, [r5, #2]
    4fd4:	b29b      	uxth	r3, r3
    4fd6:	806b      	strh	r3, [r5, #2]
    4fd8:	2800      	cmp	r0, #0
    4fda:	d00f      	beq.n	4ffc <hif_handle_isr+0x108>
    4fdc:	4871      	ldr	r0, [pc, #452]	; (51a4 <hif_handle_isr+0x2b0>)
    4fde:	4972      	ldr	r1, [pc, #456]	; (51a8 <hif_handle_isr+0x2b4>)
    4fe0:	22eb      	movs	r2, #235	; 0xeb
    4fe2:	0052      	lsls	r2, r2, #1
    4fe4:	4b71      	ldr	r3, [pc, #452]	; (51ac <hif_handle_isr+0x2b8>)
    4fe6:	4798      	blx	r3
    4fe8:	4878      	ldr	r0, [pc, #480]	; (51cc <hif_handle_isr+0x2d8>)
    4fea:	4b72      	ldr	r3, [pc, #456]	; (51b4 <hif_handle_isr+0x2c0>)
    4fec:	4798      	blx	r3
    4fee:	200d      	movs	r0, #13
    4ff0:	4b71      	ldr	r3, [pc, #452]	; (51b8 <hif_handle_isr+0x2c4>)
    4ff2:	4798      	blx	r3
    4ff4:	2001      	movs	r0, #1
    4ff6:	4b69      	ldr	r3, [pc, #420]	; (519c <hif_handle_isr+0x2a8>)
    4ff8:	4798      	blx	r3
    4ffa:	e0ad      	b.n	5158 <hif_handle_isr+0x264>
    4ffc:	ab04      	add	r3, sp, #16
    4ffe:	885b      	ldrh	r3, [r3, #2]
    5000:	b29b      	uxth	r3, r3
    5002:	4599      	cmp	r9, r3
    5004:	d01d      	beq.n	5042 <hif_handle_isr+0x14e>
    5006:	ab04      	add	r3, sp, #16
    5008:	885b      	ldrh	r3, [r3, #2]
    500a:	464a      	mov	r2, r9
    500c:	1ad3      	subs	r3, r2, r3
    500e:	2b04      	cmp	r3, #4
    5010:	dd17      	ble.n	5042 <hif_handle_isr+0x14e>
    5012:	4864      	ldr	r0, [pc, #400]	; (51a4 <hif_handle_isr+0x2b0>)
    5014:	4964      	ldr	r1, [pc, #400]	; (51a8 <hif_handle_isr+0x2b4>)
    5016:	22e0      	movs	r2, #224	; 0xe0
    5018:	32ff      	adds	r2, #255	; 0xff
    501a:	4c64      	ldr	r4, [pc, #400]	; (51ac <hif_handle_isr+0x2b8>)
    501c:	47a0      	blx	r4
    501e:	a904      	add	r1, sp, #16
    5020:	884a      	ldrh	r2, [r1, #2]
    5022:	b292      	uxth	r2, r2
    5024:	780b      	ldrb	r3, [r1, #0]
    5026:	b2db      	uxtb	r3, r3
    5028:	7849      	ldrb	r1, [r1, #1]
    502a:	9100      	str	r1, [sp, #0]
    502c:	4868      	ldr	r0, [pc, #416]	; (51d0 <hif_handle_isr+0x2dc>)
    502e:	4649      	mov	r1, r9
    5030:	47a0      	blx	r4
    5032:	200d      	movs	r0, #13
    5034:	4b60      	ldr	r3, [pc, #384]	; (51b8 <hif_handle_isr+0x2c4>)
    5036:	4798      	blx	r3
    5038:	2001      	movs	r0, #1
    503a:	4b58      	ldr	r3, [pc, #352]	; (519c <hif_handle_isr+0x2a8>)
    503c:	4798      	blx	r3
    503e:	24fa      	movs	r4, #250	; 0xfa
    5040:	e08a      	b.n	5158 <hif_handle_isr+0x264>
    5042:	ab04      	add	r3, sp, #16
    5044:	781b      	ldrb	r3, [r3, #0]
    5046:	2b01      	cmp	r3, #1
    5048:	d10d      	bne.n	5066 <hif_handle_isr+0x172>
    504a:	4b62      	ldr	r3, [pc, #392]	; (51d4 <hif_handle_isr+0x2e0>)
    504c:	681b      	ldr	r3, [r3, #0]
    504e:	2b00      	cmp	r3, #0
    5050:	d03b      	beq.n	50ca <hif_handle_isr+0x1d6>
    5052:	aa04      	add	r2, sp, #16
    5054:	7850      	ldrb	r0, [r2, #1]
    5056:	b2c0      	uxtb	r0, r0
    5058:	8851      	ldrh	r1, [r2, #2]
    505a:	3908      	subs	r1, #8
    505c:	b289      	uxth	r1, r1
    505e:	9a05      	ldr	r2, [sp, #20]
    5060:	3208      	adds	r2, #8
    5062:	4798      	blx	r3
    5064:	e031      	b.n	50ca <hif_handle_isr+0x1d6>
    5066:	ab04      	add	r3, sp, #16
    5068:	781b      	ldrb	r3, [r3, #0]
    506a:	2b02      	cmp	r3, #2
    506c:	d10d      	bne.n	508a <hif_handle_isr+0x196>
    506e:	4b5a      	ldr	r3, [pc, #360]	; (51d8 <hif_handle_isr+0x2e4>)
    5070:	681b      	ldr	r3, [r3, #0]
    5072:	2b00      	cmp	r3, #0
    5074:	d029      	beq.n	50ca <hif_handle_isr+0x1d6>
    5076:	aa04      	add	r2, sp, #16
    5078:	7850      	ldrb	r0, [r2, #1]
    507a:	b2c0      	uxtb	r0, r0
    507c:	8851      	ldrh	r1, [r2, #2]
    507e:	3908      	subs	r1, #8
    5080:	b289      	uxth	r1, r1
    5082:	9a05      	ldr	r2, [sp, #20]
    5084:	3208      	adds	r2, #8
    5086:	4798      	blx	r3
    5088:	e01f      	b.n	50ca <hif_handle_isr+0x1d6>
    508a:	ab04      	add	r3, sp, #16
    508c:	781b      	ldrb	r3, [r3, #0]
    508e:	2b04      	cmp	r3, #4
    5090:	d10d      	bne.n	50ae <hif_handle_isr+0x1ba>
    5092:	4b52      	ldr	r3, [pc, #328]	; (51dc <hif_handle_isr+0x2e8>)
    5094:	681b      	ldr	r3, [r3, #0]
    5096:	2b00      	cmp	r3, #0
    5098:	d017      	beq.n	50ca <hif_handle_isr+0x1d6>
    509a:	aa04      	add	r2, sp, #16
    509c:	7850      	ldrb	r0, [r2, #1]
    509e:	b2c0      	uxtb	r0, r0
    50a0:	8851      	ldrh	r1, [r2, #2]
    50a2:	3908      	subs	r1, #8
    50a4:	b289      	uxth	r1, r1
    50a6:	9a05      	ldr	r2, [sp, #20]
    50a8:	3208      	adds	r2, #8
    50aa:	4798      	blx	r3
    50ac:	e00d      	b.n	50ca <hif_handle_isr+0x1d6>
    50ae:	483d      	ldr	r0, [pc, #244]	; (51a4 <hif_handle_isr+0x2b0>)
    50b0:	493d      	ldr	r1, [pc, #244]	; (51a8 <hif_handle_isr+0x2b4>)
    50b2:	22fc      	movs	r2, #252	; 0xfc
    50b4:	0052      	lsls	r2, r2, #1
    50b6:	4b3d      	ldr	r3, [pc, #244]	; (51ac <hif_handle_isr+0x2b8>)
    50b8:	4798      	blx	r3
    50ba:	4849      	ldr	r0, [pc, #292]	; (51e0 <hif_handle_isr+0x2ec>)
    50bc:	4b3d      	ldr	r3, [pc, #244]	; (51b4 <hif_handle_isr+0x2c0>)
    50be:	4798      	blx	r3
    50c0:	200d      	movs	r0, #13
    50c2:	4b3d      	ldr	r3, [pc, #244]	; (51b8 <hif_handle_isr+0x2c4>)
    50c4:	4798      	blx	r3
    50c6:	24fa      	movs	r4, #250	; 0xfa
    50c8:	e046      	b.n	5158 <hif_handle_isr+0x264>
    50ca:	4b3c      	ldr	r3, [pc, #240]	; (51bc <hif_handle_isr+0x2c8>)
    50cc:	781b      	ldrb	r3, [r3, #0]
    50ce:	2b00      	cmp	r3, #0
    50d0:	d13f      	bne.n	5152 <hif_handle_isr+0x25e>
    50d2:	4834      	ldr	r0, [pc, #208]	; (51a4 <hif_handle_isr+0x2b0>)
    50d4:	4934      	ldr	r1, [pc, #208]	; (51a8 <hif_handle_isr+0x2b4>)
    50d6:	4a43      	ldr	r2, [pc, #268]	; (51e4 <hif_handle_isr+0x2f0>)
    50d8:	4b34      	ldr	r3, [pc, #208]	; (51ac <hif_handle_isr+0x2b8>)
    50da:	4798      	blx	r3
    50dc:	4842      	ldr	r0, [pc, #264]	; (51e8 <hif_handle_isr+0x2f4>)
    50de:	4b35      	ldr	r3, [pc, #212]	; (51b4 <hif_handle_isr+0x2c0>)
    50e0:	4798      	blx	r3
    50e2:	200d      	movs	r0, #13
    50e4:	4b34      	ldr	r3, [pc, #208]	; (51b8 <hif_handle_isr+0x2c4>)
    50e6:	4798      	blx	r3
    50e8:	4b40      	ldr	r3, [pc, #256]	; (51ec <hif_handle_isr+0x2f8>)
    50ea:	4798      	blx	r3
    50ec:	e031      	b.n	5152 <hif_handle_isr+0x25e>
    50ee:	482d      	ldr	r0, [pc, #180]	; (51a4 <hif_handle_isr+0x2b0>)
    50f0:	492d      	ldr	r1, [pc, #180]	; (51a8 <hif_handle_isr+0x2b4>)
    50f2:	4a3f      	ldr	r2, [pc, #252]	; (51f0 <hif_handle_isr+0x2fc>)
    50f4:	4b2d      	ldr	r3, [pc, #180]	; (51ac <hif_handle_isr+0x2b8>)
    50f6:	4798      	blx	r3
    50f8:	483e      	ldr	r0, [pc, #248]	; (51f4 <hif_handle_isr+0x300>)
    50fa:	4b2e      	ldr	r3, [pc, #184]	; (51b4 <hif_handle_isr+0x2c0>)
    50fc:	4798      	blx	r3
    50fe:	200d      	movs	r0, #13
    5100:	4b2d      	ldr	r3, [pc, #180]	; (51b8 <hif_handle_isr+0x2c4>)
    5102:	4798      	blx	r3
    5104:	24fe      	movs	r4, #254	; 0xfe
    5106:	e029      	b.n	515c <hif_handle_isr+0x268>
    5108:	4826      	ldr	r0, [pc, #152]	; (51a4 <hif_handle_isr+0x2b0>)
    510a:	4927      	ldr	r1, [pc, #156]	; (51a8 <hif_handle_isr+0x2b4>)
    510c:	4a3a      	ldr	r2, [pc, #232]	; (51f8 <hif_handle_isr+0x304>)
    510e:	4c27      	ldr	r4, [pc, #156]	; (51ac <hif_handle_isr+0x2b8>)
    5110:	47a0      	blx	r4
    5112:	483a      	ldr	r0, [pc, #232]	; (51fc <hif_handle_isr+0x308>)
    5114:	9903      	ldr	r1, [sp, #12]
    5116:	47a0      	blx	r4
    5118:	200d      	movs	r0, #13
    511a:	4b27      	ldr	r3, [pc, #156]	; (51b8 <hif_handle_isr+0x2c4>)
    511c:	4798      	blx	r3
    511e:	e018      	b.n	5152 <hif_handle_isr+0x25e>
    5120:	4820      	ldr	r0, [pc, #128]	; (51a4 <hif_handle_isr+0x2b0>)
    5122:	4921      	ldr	r1, [pc, #132]	; (51a8 <hif_handle_isr+0x2b4>)
    5124:	2285      	movs	r2, #133	; 0x85
    5126:	0092      	lsls	r2, r2, #2
    5128:	4b20      	ldr	r3, [pc, #128]	; (51ac <hif_handle_isr+0x2b8>)
    512a:	4798      	blx	r3
    512c:	4834      	ldr	r0, [pc, #208]	; (5200 <hif_handle_isr+0x30c>)
    512e:	4b21      	ldr	r3, [pc, #132]	; (51b4 <hif_handle_isr+0x2c0>)
    5130:	4798      	blx	r3
    5132:	200d      	movs	r0, #13
    5134:	4b20      	ldr	r3, [pc, #128]	; (51b8 <hif_handle_isr+0x2c4>)
    5136:	4798      	blx	r3
    5138:	e010      	b.n	515c <hif_handle_isr+0x268>
    513a:	481a      	ldr	r0, [pc, #104]	; (51a4 <hif_handle_isr+0x2b0>)
    513c:	491a      	ldr	r1, [pc, #104]	; (51a8 <hif_handle_isr+0x2b4>)
    513e:	4a31      	ldr	r2, [pc, #196]	; (5204 <hif_handle_isr+0x310>)
    5140:	4b1a      	ldr	r3, [pc, #104]	; (51ac <hif_handle_isr+0x2b8>)
    5142:	4798      	blx	r3
    5144:	4830      	ldr	r0, [pc, #192]	; (5208 <hif_handle_isr+0x314>)
    5146:	4b1b      	ldr	r3, [pc, #108]	; (51b4 <hif_handle_isr+0x2c0>)
    5148:	4798      	blx	r3
    514a:	200d      	movs	r0, #13
    514c:	4b1a      	ldr	r3, [pc, #104]	; (51b8 <hif_handle_isr+0x2c4>)
    514e:	4798      	blx	r3
    5150:	e004      	b.n	515c <hif_handle_isr+0x268>
    5152:	4b2e      	ldr	r3, [pc, #184]	; (520c <hif_handle_isr+0x318>)
    5154:	4798      	blx	r3
    5156:	1c04      	adds	r4, r0, #0
    5158:	2c00      	cmp	r4, #0
    515a:	d00b      	beq.n	5174 <hif_handle_isr+0x280>
    515c:	4811      	ldr	r0, [pc, #68]	; (51a4 <hif_handle_isr+0x2b0>)
    515e:	492c      	ldr	r1, [pc, #176]	; (5210 <hif_handle_isr+0x31c>)
    5160:	4a2c      	ldr	r2, [pc, #176]	; (5214 <hif_handle_isr+0x320>)
    5162:	4d12      	ldr	r5, [pc, #72]	; (51ac <hif_handle_isr+0x2b8>)
    5164:	47a8      	blx	r5
    5166:	b261      	sxtb	r1, r4
    5168:	482b      	ldr	r0, [pc, #172]	; (5218 <hif_handle_isr+0x324>)
    516a:	47a8      	blx	r5
    516c:	200d      	movs	r0, #13
    516e:	4b12      	ldr	r3, [pc, #72]	; (51b8 <hif_handle_isr+0x2c4>)
    5170:	4798      	blx	r3
    5172:	e6cd      	b.n	4f10 <hif_handle_isr+0x1c>
    5174:	4643      	mov	r3, r8
    5176:	781b      	ldrb	r3, [r3, #0]
    5178:	2b00      	cmp	r3, #0
    517a:	d000      	beq.n	517e <hif_handle_isr+0x28a>
    517c:	e6c4      	b.n	4f08 <hif_handle_isr+0x14>
    517e:	2000      	movs	r0, #0
    5180:	b007      	add	sp, #28
    5182:	bc0c      	pop	{r2, r3}
    5184:	4690      	mov	r8, r2
    5186:	4699      	mov	r9, r3
    5188:	bdf0      	pop	{r4, r5, r6, r7, pc}
    518a:	46c0      	nop			; (mov r8, r8)
    518c:	20000674 	.word	0x20000674
    5190:	00004c41 	.word	0x00004c41
    5194:	00001070 	.word	0x00001070
    5198:	00006025 	.word	0x00006025
    519c:	0000488d 	.word	0x0000488d
    51a0:	00006031 	.word	0x00006031
    51a4:	00010c04 	.word	0x00010c04
    51a8:	00010c58 	.word	0x00010c58
    51ac:	0000c7a9 	.word	0x0000c7a9
    51b0:	00010c7c 	.word	0x00010c7c
    51b4:	0000c8c9 	.word	0x0000c8c9
    51b8:	0000c7dd 	.word	0x0000c7dd
    51bc:	20000684 	.word	0x20000684
    51c0:	00001084 	.word	0x00001084
    51c4:	00010ca0 	.word	0x00010ca0
    51c8:	0000603d 	.word	0x0000603d
    51cc:	00010cc4 	.word	0x00010cc4
    51d0:	00010cdc 	.word	0x00010cdc
    51d4:	20000670 	.word	0x20000670
    51d8:	20000680 	.word	0x20000680
    51dc:	20000688 	.word	0x20000688
    51e0:	00010d1c 	.word	0x00010d1c
    51e4:	000001ff 	.word	0x000001ff
    51e8:	00010d34 	.word	0x00010d34
    51ec:	00004c05 	.word	0x00004c05
    51f0:	00000207 	.word	0x00000207
    51f4:	00010d58 	.word	0x00010d58
    51f8:	0000020e 	.word	0x0000020e
    51fc:	00010d6c 	.word	0x00010d6c
    5200:	00010d88 	.word	0x00010d88
    5204:	0000021a 	.word	0x0000021a
    5208:	00010dac 	.word	0x00010dac
    520c:	00004c99 	.word	0x00004c99
    5210:	00010ebc 	.word	0x00010ebc
    5214:	00000239 	.word	0x00000239
    5218:	00010dcc 	.word	0x00010dcc

0000521c <hif_receive>:
    521c:	b5f0      	push	{r4, r5, r6, r7, lr}
    521e:	4647      	mov	r7, r8
    5220:	b480      	push	{r7}
    5222:	b082      	sub	sp, #8
    5224:	1c06      	adds	r6, r0, #0
    5226:	1c0f      	adds	r7, r1, #0
    5228:	1c15      	adds	r5, r2, #0
    522a:	1c1c      	adds	r4, r3, #0
    522c:	2800      	cmp	r0, #0
    522e:	d003      	beq.n	5238 <hif_receive+0x1c>
    5230:	2900      	cmp	r1, #0
    5232:	d001      	beq.n	5238 <hif_receive+0x1c>
    5234:	2a00      	cmp	r2, #0
    5236:	d113      	bne.n	5260 <hif_receive+0x44>
    5238:	2c00      	cmp	r4, #0
    523a:	d004      	beq.n	5246 <hif_receive+0x2a>
    523c:	2201      	movs	r2, #1
    523e:	4b2d      	ldr	r3, [pc, #180]	; (52f4 <hif_receive+0xd8>)
    5240:	701a      	strb	r2, [r3, #0]
    5242:	4b2d      	ldr	r3, [pc, #180]	; (52f8 <hif_receive+0xdc>)
    5244:	4798      	blx	r3
    5246:	482d      	ldr	r0, [pc, #180]	; (52fc <hif_receive+0xe0>)
    5248:	492d      	ldr	r1, [pc, #180]	; (5300 <hif_receive+0xe4>)
    524a:	4a2e      	ldr	r2, [pc, #184]	; (5304 <hif_receive+0xe8>)
    524c:	4b2e      	ldr	r3, [pc, #184]	; (5308 <hif_receive+0xec>)
    524e:	4798      	blx	r3
    5250:	482e      	ldr	r0, [pc, #184]	; (530c <hif_receive+0xf0>)
    5252:	4b2f      	ldr	r3, [pc, #188]	; (5310 <hif_receive+0xf4>)
    5254:	4798      	blx	r3
    5256:	200d      	movs	r0, #13
    5258:	4b2e      	ldr	r3, [pc, #184]	; (5314 <hif_receive+0xf8>)
    525a:	4798      	blx	r3
    525c:	20f4      	movs	r0, #244	; 0xf4
    525e:	e044      	b.n	52ea <hif_receive+0xce>
    5260:	482d      	ldr	r0, [pc, #180]	; (5318 <hif_receive+0xfc>)
    5262:	4669      	mov	r1, sp
    5264:	4b2d      	ldr	r3, [pc, #180]	; (531c <hif_receive+0x100>)
    5266:	4798      	blx	r3
    5268:	2800      	cmp	r0, #0
    526a:	d13e      	bne.n	52ea <hif_receive+0xce>
    526c:	9b00      	ldr	r3, [sp, #0]
    526e:	4698      	mov	r8, r3
    5270:	482b      	ldr	r0, [pc, #172]	; (5320 <hif_receive+0x104>)
    5272:	a901      	add	r1, sp, #4
    5274:	4b29      	ldr	r3, [pc, #164]	; (531c <hif_receive+0x100>)
    5276:	4798      	blx	r3
    5278:	2800      	cmp	r0, #0
    527a:	d136      	bne.n	52ea <hif_receive+0xce>
    527c:	1c30      	adds	r0, r6, #0
    527e:	1c39      	adds	r1, r7, #0
    5280:	1c2a      	adds	r2, r5, #0
    5282:	4b28      	ldr	r3, [pc, #160]	; (5324 <hif_receive+0x108>)
    5284:	4798      	blx	r3
    5286:	2800      	cmp	r0, #0
    5288:	d12f      	bne.n	52ea <hif_receive+0xce>
    528a:	4643      	mov	r3, r8
    528c:	049f      	lsls	r7, r3, #18
    528e:	0d3f      	lsrs	r7, r7, #20
    5290:	42bd      	cmp	r5, r7
    5292:	d90d      	bls.n	52b0 <hif_receive+0x94>
    5294:	4819      	ldr	r0, [pc, #100]	; (52fc <hif_receive+0xe0>)
    5296:	491a      	ldr	r1, [pc, #104]	; (5300 <hif_receive+0xe4>)
    5298:	4a23      	ldr	r2, [pc, #140]	; (5328 <hif_receive+0x10c>)
    529a:	4c1b      	ldr	r4, [pc, #108]	; (5308 <hif_receive+0xec>)
    529c:	47a0      	blx	r4
    529e:	4823      	ldr	r0, [pc, #140]	; (532c <hif_receive+0x110>)
    52a0:	1c29      	adds	r1, r5, #0
    52a2:	1c3a      	adds	r2, r7, #0
    52a4:	47a0      	blx	r4
    52a6:	200d      	movs	r0, #13
    52a8:	4b1a      	ldr	r3, [pc, #104]	; (5314 <hif_receive+0xf8>)
    52aa:	4798      	blx	r3
    52ac:	20f4      	movs	r0, #244	; 0xf4
    52ae:	e01c      	b.n	52ea <hif_receive+0xce>
    52b0:	9b01      	ldr	r3, [sp, #4]
    52b2:	429e      	cmp	r6, r3
    52b4:	d303      	bcc.n	52be <hif_receive+0xa2>
    52b6:	1972      	adds	r2, r6, r5
    52b8:	18ff      	adds	r7, r7, r3
    52ba:	42ba      	cmp	r2, r7
    52bc:	d90c      	bls.n	52d8 <hif_receive+0xbc>
    52be:	480f      	ldr	r0, [pc, #60]	; (52fc <hif_receive+0xe0>)
    52c0:	490f      	ldr	r1, [pc, #60]	; (5300 <hif_receive+0xe4>)
    52c2:	4a1b      	ldr	r2, [pc, #108]	; (5330 <hif_receive+0x114>)
    52c4:	4b10      	ldr	r3, [pc, #64]	; (5308 <hif_receive+0xec>)
    52c6:	4798      	blx	r3
    52c8:	481a      	ldr	r0, [pc, #104]	; (5334 <hif_receive+0x118>)
    52ca:	4b11      	ldr	r3, [pc, #68]	; (5310 <hif_receive+0xf4>)
    52cc:	4798      	blx	r3
    52ce:	200d      	movs	r0, #13
    52d0:	4b10      	ldr	r3, [pc, #64]	; (5314 <hif_receive+0xf8>)
    52d2:	4798      	blx	r3
    52d4:	20f4      	movs	r0, #244	; 0xf4
    52d6:	e008      	b.n	52ea <hif_receive+0xce>
    52d8:	42ba      	cmp	r2, r7
    52da:	d001      	beq.n	52e0 <hif_receive+0xc4>
    52dc:	2c00      	cmp	r4, #0
    52de:	d004      	beq.n	52ea <hif_receive+0xce>
    52e0:	2201      	movs	r2, #1
    52e2:	4b04      	ldr	r3, [pc, #16]	; (52f4 <hif_receive+0xd8>)
    52e4:	701a      	strb	r2, [r3, #0]
    52e6:	4b04      	ldr	r3, [pc, #16]	; (52f8 <hif_receive+0xdc>)
    52e8:	4798      	blx	r3
    52ea:	b240      	sxtb	r0, r0
    52ec:	b002      	add	sp, #8
    52ee:	bc04      	pop	{r2}
    52f0:	4690      	mov	r8, r2
    52f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    52f4:	20000684 	.word	0x20000684
    52f8:	00004c05 	.word	0x00004c05
    52fc:	00010c04 	.word	0x00010c04
    5300:	00010c3c 	.word	0x00010c3c
    5304:	0000025e 	.word	0x0000025e
    5308:	0000c7a9 	.word	0x0000c7a9
    530c:	00010dfc 	.word	0x00010dfc
    5310:	0000c8c9 	.word	0x0000c8c9
    5314:	0000c7dd 	.word	0x0000c7dd
    5318:	00001070 	.word	0x00001070
    531c:	00006025 	.word	0x00006025
    5320:	00001084 	.word	0x00001084
    5324:	0000603d 	.word	0x0000603d
    5328:	00000271 	.word	0x00000271
    532c:	00010e1c 	.word	0x00010e1c
    5330:	00000277 	.word	0x00000277
    5334:	00010e60 	.word	0x00010e60

00005338 <hif_register_cb>:
    5338:	b538      	push	{r3, r4, r5, lr}
    533a:	2802      	cmp	r0, #2
    533c:	d008      	beq.n	5350 <hif_register_cb+0x18>
    533e:	d802      	bhi.n	5346 <hif_register_cb+0xe>
    5340:	2801      	cmp	r0, #1
    5342:	d009      	beq.n	5358 <hif_register_cb+0x20>
    5344:	e014      	b.n	5370 <hif_register_cb+0x38>
    5346:	2803      	cmp	r0, #3
    5348:	d00e      	beq.n	5368 <hif_register_cb+0x30>
    534a:	2804      	cmp	r0, #4
    534c:	d008      	beq.n	5360 <hif_register_cb+0x28>
    534e:	e00f      	b.n	5370 <hif_register_cb+0x38>
    5350:	4b0f      	ldr	r3, [pc, #60]	; (5390 <hif_register_cb+0x58>)
    5352:	6019      	str	r1, [r3, #0]
    5354:	2000      	movs	r0, #0
    5356:	e018      	b.n	538a <hif_register_cb+0x52>
    5358:	4b0e      	ldr	r3, [pc, #56]	; (5394 <hif_register_cb+0x5c>)
    535a:	6019      	str	r1, [r3, #0]
    535c:	2000      	movs	r0, #0
    535e:	e014      	b.n	538a <hif_register_cb+0x52>
    5360:	4b0d      	ldr	r3, [pc, #52]	; (5398 <hif_register_cb+0x60>)
    5362:	6019      	str	r1, [r3, #0]
    5364:	2000      	movs	r0, #0
    5366:	e010      	b.n	538a <hif_register_cb+0x52>
    5368:	4b0c      	ldr	r3, [pc, #48]	; (539c <hif_register_cb+0x64>)
    536a:	6019      	str	r1, [r3, #0]
    536c:	2000      	movs	r0, #0
    536e:	e00c      	b.n	538a <hif_register_cb+0x52>
    5370:	1c04      	adds	r4, r0, #0
    5372:	480b      	ldr	r0, [pc, #44]	; (53a0 <hif_register_cb+0x68>)
    5374:	490b      	ldr	r1, [pc, #44]	; (53a4 <hif_register_cb+0x6c>)
    5376:	4a0c      	ldr	r2, [pc, #48]	; (53a8 <hif_register_cb+0x70>)
    5378:	4d0c      	ldr	r5, [pc, #48]	; (53ac <hif_register_cb+0x74>)
    537a:	47a8      	blx	r5
    537c:	480c      	ldr	r0, [pc, #48]	; (53b0 <hif_register_cb+0x78>)
    537e:	1c21      	adds	r1, r4, #0
    5380:	47a8      	blx	r5
    5382:	200d      	movs	r0, #13
    5384:	4b0b      	ldr	r3, [pc, #44]	; (53b4 <hif_register_cb+0x7c>)
    5386:	4798      	blx	r3
    5388:	20f4      	movs	r0, #244	; 0xf4
    538a:	b240      	sxtb	r0, r0
    538c:	bd38      	pop	{r3, r4, r5, pc}
    538e:	46c0      	nop			; (mov r8, r8)
    5390:	20000680 	.word	0x20000680
    5394:	20000670 	.word	0x20000670
    5398:	20000688 	.word	0x20000688
    539c:	20000678 	.word	0x20000678
    53a0:	00010c04 	.word	0x00010c04
    53a4:	00010c48 	.word	0x00010c48
    53a8:	000002a6 	.word	0x000002a6
    53ac:	0000c7a9 	.word	0x0000c7a9
    53b0:	00010ea4 	.word	0x00010ea4
    53b4:	0000c7dd 	.word	0x0000c7dd

000053b8 <hif_init>:
    53b8:	b508      	push	{r3, lr}
    53ba:	2300      	movs	r3, #0
    53bc:	4a09      	ldr	r2, [pc, #36]	; (53e4 <hif_init+0x2c>)
    53be:	6013      	str	r3, [r2, #0]
    53c0:	4a09      	ldr	r2, [pc, #36]	; (53e8 <hif_init+0x30>)
    53c2:	6013      	str	r3, [r2, #0]
    53c4:	4a09      	ldr	r2, [pc, #36]	; (53ec <hif_init+0x34>)
    53c6:	7013      	strb	r3, [r2, #0]
    53c8:	4a09      	ldr	r2, [pc, #36]	; (53f0 <hif_init+0x38>)
    53ca:	7013      	strb	r3, [r2, #0]
    53cc:	4a09      	ldr	r2, [pc, #36]	; (53f4 <hif_init+0x3c>)
    53ce:	7013      	strb	r3, [r2, #0]
    53d0:	4809      	ldr	r0, [pc, #36]	; (53f8 <hif_init+0x40>)
    53d2:	4b0a      	ldr	r3, [pc, #40]	; (53fc <hif_init+0x44>)
    53d4:	4798      	blx	r3
    53d6:	2003      	movs	r0, #3
    53d8:	4909      	ldr	r1, [pc, #36]	; (5400 <hif_init+0x48>)
    53da:	4b0a      	ldr	r3, [pc, #40]	; (5404 <hif_init+0x4c>)
    53dc:	4798      	blx	r3
    53de:	2000      	movs	r0, #0
    53e0:	bd08      	pop	{r3, pc}
    53e2:	46c0      	nop			; (mov r8, r8)
    53e4:	20000670 	.word	0x20000670
    53e8:	20000680 	.word	0x20000680
    53ec:	2000068c 	.word	0x2000068c
    53f0:	2000067c 	.word	0x2000067c
    53f4:	20000674 	.word	0x20000674
    53f8:	00004bf1 	.word	0x00004bf1
    53fc:	00004835 	.word	0x00004835
    5400:	00004c01 	.word	0x00004c01
    5404:	00005339 	.word	0x00005339

00005408 <m2m_wifi_cb>:
*	@author
*	@date
*	@version	1.0
*/
static void m2m_wifi_cb(uint8 u8OpCode, uint16 u16DataSize, uint32 u32Addr)
{
    5408:	b530      	push	{r4, r5, lr}
    540a:	b09f      	sub	sp, #124	; 0x7c
    540c:	1c04      	adds	r4, r0, #0
    540e:	1c15      	adds	r5, r2, #0
	uint8 rx_buf[8];
	if (u8OpCode == M2M_WIFI_RESP_CON_STATE_CHANGED)
    5410:	282c      	cmp	r0, #44	; 0x2c
    5412:	d111      	bne.n	5438 <m2m_wifi_cb+0x30>
	{
		tstrM2mWifiStateChanged strState;
		if (hif_receive(u32Addr, (uint8*) &strState,sizeof(tstrM2mWifiStateChanged), 0) == M2M_SUCCESS)
    5414:	1c10      	adds	r0, r2, #0
    5416:	a903      	add	r1, sp, #12
    5418:	2204      	movs	r2, #4
    541a:	2300      	movs	r3, #0
    541c:	4c85      	ldr	r4, [pc, #532]	; (5634 <m2m_wifi_cb+0x22c>)
    541e:	47a0      	blx	r4
    5420:	2800      	cmp	r0, #0
    5422:	d000      	beq.n	5426 <m2m_wifi_cb+0x1e>
    5424:	e103      	b.n	562e <m2m_wifi_cb+0x226>
		{
			if (gpfAppWifiCb)
    5426:	4b84      	ldr	r3, [pc, #528]	; (5638 <m2m_wifi_cb+0x230>)
    5428:	681b      	ldr	r3, [r3, #0]
    542a:	2b00      	cmp	r3, #0
    542c:	d100      	bne.n	5430 <m2m_wifi_cb+0x28>
    542e:	e0fe      	b.n	562e <m2m_wifi_cb+0x226>
				gpfAppWifiCb(M2M_WIFI_RESP_CON_STATE_CHANGED, &strState);
    5430:	302c      	adds	r0, #44	; 0x2c
    5432:	a903      	add	r1, sp, #12
    5434:	4798      	blx	r3
    5436:	e0fa      	b.n	562e <m2m_wifi_cb+0x226>
		}
	}
	else if (u8OpCode == M2M_WIFI_RESP_GET_SYS_TIME)
    5438:	281b      	cmp	r0, #27
    543a:	d111      	bne.n	5460 <m2m_wifi_cb+0x58>
	{
		tstrSystemTime strSysTime;
		if (hif_receive(u32Addr, (uint8*) &strSysTime,sizeof(tstrSystemTime), 0) == M2M_SUCCESS)
    543c:	1c10      	adds	r0, r2, #0
    543e:	a903      	add	r1, sp, #12
    5440:	2208      	movs	r2, #8
    5442:	2300      	movs	r3, #0
    5444:	4c7b      	ldr	r4, [pc, #492]	; (5634 <m2m_wifi_cb+0x22c>)
    5446:	47a0      	blx	r4
    5448:	2800      	cmp	r0, #0
    544a:	d000      	beq.n	544e <m2m_wifi_cb+0x46>
    544c:	e0ef      	b.n	562e <m2m_wifi_cb+0x226>
		{
			if (gpfAppWifiCb)
    544e:	4b7a      	ldr	r3, [pc, #488]	; (5638 <m2m_wifi_cb+0x230>)
    5450:	681b      	ldr	r3, [r3, #0]
    5452:	2b00      	cmp	r3, #0
    5454:	d100      	bne.n	5458 <m2m_wifi_cb+0x50>
    5456:	e0ea      	b.n	562e <m2m_wifi_cb+0x226>
				gpfAppWifiCb(M2M_WIFI_RESP_GET_SYS_TIME, &strSysTime);
    5458:	301b      	adds	r0, #27
    545a:	a903      	add	r1, sp, #12
    545c:	4798      	blx	r3
    545e:	e0e6      	b.n	562e <m2m_wifi_cb+0x226>
		}
	}
	else if(u8OpCode == M2M_WIFI_RESP_CONN_INFO)
    5460:	2806      	cmp	r0, #6
    5462:	d111      	bne.n	5488 <m2m_wifi_cb+0x80>
	{
		tstrM2MConnInfo		strConnInfo;
		if(hif_receive(u32Addr, (uint8*)&strConnInfo, sizeof(tstrM2MConnInfo), 1) == M2M_SUCCESS)
    5464:	1c10      	adds	r0, r2, #0
    5466:	a903      	add	r1, sp, #12
    5468:	2230      	movs	r2, #48	; 0x30
    546a:	2301      	movs	r3, #1
    546c:	4c71      	ldr	r4, [pc, #452]	; (5634 <m2m_wifi_cb+0x22c>)
    546e:	47a0      	blx	r4
    5470:	2800      	cmp	r0, #0
    5472:	d000      	beq.n	5476 <m2m_wifi_cb+0x6e>
    5474:	e0db      	b.n	562e <m2m_wifi_cb+0x226>
		{
			if(gpfAppWifiCb)
    5476:	4b70      	ldr	r3, [pc, #448]	; (5638 <m2m_wifi_cb+0x230>)
    5478:	681b      	ldr	r3, [r3, #0]
    547a:	2b00      	cmp	r3, #0
    547c:	d100      	bne.n	5480 <m2m_wifi_cb+0x78>
    547e:	e0d6      	b.n	562e <m2m_wifi_cb+0x226>
				gpfAppWifiCb(M2M_WIFI_RESP_CONN_INFO, &strConnInfo);
    5480:	3006      	adds	r0, #6
    5482:	a903      	add	r1, sp, #12
    5484:	4798      	blx	r3
    5486:	e0d2      	b.n	562e <m2m_wifi_cb+0x226>
		}
	}
	else if (u8OpCode == M2M_WIFI_RESP_MEMORY_RECOVER)
    5488:	280e      	cmp	r0, #14
    548a:	d100      	bne.n	548e <m2m_wifi_cb+0x86>
    548c:	e0cf      	b.n	562e <m2m_wifi_cb+0x226>
			if (app_wifi_recover_cb)
				app_wifi_recover_cb(strState.u8CurrState);
		}
#endif
	}
	else if (u8OpCode == M2M_WIFI_REQ_DHCP_CONF)
    548e:	2836      	cmp	r0, #54	; 0x36
    5490:	d111      	bne.n	54b6 <m2m_wifi_cb+0xae>
	{
		tstrM2MIPConfig strIpConfig;
		if (hif_receive(u32Addr, (uint8 *)&strIpConfig, sizeof(tstrM2MIPConfig), 0) == M2M_SUCCESS)
    5492:	1c10      	adds	r0, r2, #0
    5494:	a903      	add	r1, sp, #12
    5496:	2210      	movs	r2, #16
    5498:	2300      	movs	r3, #0
    549a:	4c66      	ldr	r4, [pc, #408]	; (5634 <m2m_wifi_cb+0x22c>)
    549c:	47a0      	blx	r4
    549e:	2800      	cmp	r0, #0
    54a0:	d000      	beq.n	54a4 <m2m_wifi_cb+0x9c>
    54a2:	e0c4      	b.n	562e <m2m_wifi_cb+0x226>
		{
			if (gpfAppWifiCb)
    54a4:	4b64      	ldr	r3, [pc, #400]	; (5638 <m2m_wifi_cb+0x230>)
    54a6:	681b      	ldr	r3, [r3, #0]
    54a8:	2b00      	cmp	r3, #0
    54aa:	d100      	bne.n	54ae <m2m_wifi_cb+0xa6>
    54ac:	e0bf      	b.n	562e <m2m_wifi_cb+0x226>
				gpfAppWifiCb(M2M_WIFI_REQ_DHCP_CONF, (uint8 *)&strIpConfig.u32StaticIP);
    54ae:	3036      	adds	r0, #54	; 0x36
    54b0:	a903      	add	r1, sp, #12
    54b2:	4798      	blx	r3
    54b4:	e0bb      	b.n	562e <m2m_wifi_cb+0x226>
		}
	}
	else if (u8OpCode == M2M_WIFI_REQ_WPS)
    54b6:	2833      	cmp	r0, #51	; 0x33
    54b8:	d116      	bne.n	54e8 <m2m_wifi_cb+0xe0>
	{
		tstrM2MWPSInfo strWps;
		m2m_memset((uint8*)&strWps,0,sizeof(tstrM2MWPSInfo));
    54ba:	a803      	add	r0, sp, #12
    54bc:	2100      	movs	r1, #0
    54be:	2264      	movs	r2, #100	; 0x64
    54c0:	4b5e      	ldr	r3, [pc, #376]	; (563c <m2m_wifi_cb+0x234>)
    54c2:	4798      	blx	r3
		if(hif_receive(u32Addr, (uint8*)&strWps, sizeof(tstrM2MWPSInfo), 0) == M2M_SUCCESS)
    54c4:	1c28      	adds	r0, r5, #0
    54c6:	a903      	add	r1, sp, #12
    54c8:	2264      	movs	r2, #100	; 0x64
    54ca:	2300      	movs	r3, #0
    54cc:	4c59      	ldr	r4, [pc, #356]	; (5634 <m2m_wifi_cb+0x22c>)
    54ce:	47a0      	blx	r4
    54d0:	2800      	cmp	r0, #0
    54d2:	d000      	beq.n	54d6 <m2m_wifi_cb+0xce>
    54d4:	e0ab      	b.n	562e <m2m_wifi_cb+0x226>
		{
			if (gpfAppWifiCb)
    54d6:	4b58      	ldr	r3, [pc, #352]	; (5638 <m2m_wifi_cb+0x230>)
    54d8:	681b      	ldr	r3, [r3, #0]
    54da:	2b00      	cmp	r3, #0
    54dc:	d100      	bne.n	54e0 <m2m_wifi_cb+0xd8>
    54de:	e0a6      	b.n	562e <m2m_wifi_cb+0x226>
				gpfAppWifiCb(M2M_WIFI_REQ_WPS, &strWps);
    54e0:	3033      	adds	r0, #51	; 0x33
    54e2:	a903      	add	r1, sp, #12
    54e4:	4798      	blx	r3
    54e6:	e0a2      	b.n	562e <m2m_wifi_cb+0x226>
		}
	}
	else if (u8OpCode == M2M_WIFI_RESP_IP_CONFLICT)
    54e8:	2838      	cmp	r0, #56	; 0x38
    54ea:	d122      	bne.n	5532 <m2m_wifi_cb+0x12a>
	{
		uint32  u32ConflictedIP;
		if(hif_receive(u32Addr, (uint8 *)&u32ConflictedIP, sizeof(u32ConflictedIP), 0) == M2M_SUCCESS)
    54ec:	1c10      	adds	r0, r2, #0
    54ee:	a903      	add	r1, sp, #12
    54f0:	2204      	movs	r2, #4
    54f2:	2300      	movs	r3, #0
    54f4:	4c4f      	ldr	r4, [pc, #316]	; (5634 <m2m_wifi_cb+0x22c>)
    54f6:	47a0      	blx	r4
    54f8:	2800      	cmp	r0, #0
    54fa:	d000      	beq.n	54fe <m2m_wifi_cb+0xf6>
    54fc:	e097      	b.n	562e <m2m_wifi_cb+0x226>
		{
			M2M_INFO("Conflicted IP \" %u.%u.%u.%u \" \n",
    54fe:	4850      	ldr	r0, [pc, #320]	; (5640 <m2m_wifi_cb+0x238>)
    5500:	4c50      	ldr	r4, [pc, #320]	; (5644 <m2m_wifi_cb+0x23c>)
    5502:	47a0      	blx	r4
    5504:	9803      	ldr	r0, [sp, #12]
    5506:	25ff      	movs	r5, #255	; 0xff
    5508:	1c29      	adds	r1, r5, #0
    550a:	4001      	ands	r1, r0
    550c:	0a02      	lsrs	r2, r0, #8
    550e:	402a      	ands	r2, r5
    5510:	0c03      	lsrs	r3, r0, #16
    5512:	402b      	ands	r3, r5
    5514:	0e00      	lsrs	r0, r0, #24
    5516:	9000      	str	r0, [sp, #0]
    5518:	484b      	ldr	r0, [pc, #300]	; (5648 <m2m_wifi_cb+0x240>)
    551a:	47a0      	blx	r4
    551c:	484b      	ldr	r0, [pc, #300]	; (564c <m2m_wifi_cb+0x244>)
    551e:	47a0      	blx	r4
				BYTE_0(u32ConflictedIP),BYTE_1(u32ConflictedIP),BYTE_2(u32ConflictedIP),BYTE_3(u32ConflictedIP));
			if (gpfAppWifiCb)
    5520:	4b45      	ldr	r3, [pc, #276]	; (5638 <m2m_wifi_cb+0x230>)
    5522:	681b      	ldr	r3, [r3, #0]
    5524:	2b00      	cmp	r3, #0
    5526:	d100      	bne.n	552a <m2m_wifi_cb+0x122>
    5528:	e081      	b.n	562e <m2m_wifi_cb+0x226>
				gpfAppWifiCb(M2M_WIFI_RESP_IP_CONFLICT, NULL);
    552a:	2038      	movs	r0, #56	; 0x38
    552c:	2100      	movs	r1, #0
    552e:	4798      	blx	r3
    5530:	e07d      	b.n	562e <m2m_wifi_cb+0x226>

		}
	}
	else if (u8OpCode == M2M_WIFI_RESP_SCAN_DONE)
    5532:	2811      	cmp	r0, #17
    5534:	d116      	bne.n	5564 <m2m_wifi_cb+0x15c>
	{
		tstrM2mScanDone strState;
		gu8scanInProgress = 0;
    5536:	2200      	movs	r2, #0
    5538:	4b45      	ldr	r3, [pc, #276]	; (5650 <m2m_wifi_cb+0x248>)
    553a:	701a      	strb	r2, [r3, #0]
		if(hif_receive(u32Addr, (uint8*)&strState, sizeof(tstrM2mScanDone), 0) == M2M_SUCCESS)
    553c:	1c28      	adds	r0, r5, #0
    553e:	a903      	add	r1, sp, #12
    5540:	3204      	adds	r2, #4
    5542:	2300      	movs	r3, #0
    5544:	4c3b      	ldr	r4, [pc, #236]	; (5634 <m2m_wifi_cb+0x22c>)
    5546:	47a0      	blx	r4
    5548:	2800      	cmp	r0, #0
    554a:	d170      	bne.n	562e <m2m_wifi_cb+0x226>
		{
			gu8ChNum = strState.u8NumofCh;
    554c:	ab03      	add	r3, sp, #12
    554e:	781a      	ldrb	r2, [r3, #0]
    5550:	4b40      	ldr	r3, [pc, #256]	; (5654 <m2m_wifi_cb+0x24c>)
    5552:	701a      	strb	r2, [r3, #0]
			if (gpfAppWifiCb)
    5554:	4b38      	ldr	r3, [pc, #224]	; (5638 <m2m_wifi_cb+0x230>)
    5556:	681b      	ldr	r3, [r3, #0]
    5558:	2b00      	cmp	r3, #0
    555a:	d068      	beq.n	562e <m2m_wifi_cb+0x226>
				gpfAppWifiCb(M2M_WIFI_RESP_SCAN_DONE, &strState);
    555c:	3011      	adds	r0, #17
    555e:	a903      	add	r1, sp, #12
    5560:	4798      	blx	r3
    5562:	e064      	b.n	562e <m2m_wifi_cb+0x226>
		}
	}
	else if (u8OpCode == M2M_WIFI_RESP_SCAN_RESULT)
    5564:	2813      	cmp	r0, #19
    5566:	d10f      	bne.n	5588 <m2m_wifi_cb+0x180>
	{
		tstrM2mWifiscanResult strScanResult;
		if(hif_receive(u32Addr, (uint8*)&strScanResult, sizeof(tstrM2mWifiscanResult), 0) == M2M_SUCCESS)
    5568:	1c10      	adds	r0, r2, #0
    556a:	a903      	add	r1, sp, #12
    556c:	222c      	movs	r2, #44	; 0x2c
    556e:	2300      	movs	r3, #0
    5570:	4c30      	ldr	r4, [pc, #192]	; (5634 <m2m_wifi_cb+0x22c>)
    5572:	47a0      	blx	r4
    5574:	2800      	cmp	r0, #0
    5576:	d15a      	bne.n	562e <m2m_wifi_cb+0x226>
		{
			if (gpfAppWifiCb)
    5578:	4b2f      	ldr	r3, [pc, #188]	; (5638 <m2m_wifi_cb+0x230>)
    557a:	681b      	ldr	r3, [r3, #0]
    557c:	2b00      	cmp	r3, #0
    557e:	d056      	beq.n	562e <m2m_wifi_cb+0x226>
				gpfAppWifiCb(M2M_WIFI_RESP_SCAN_RESULT, &strScanResult);
    5580:	3013      	adds	r0, #19
    5582:	a903      	add	r1, sp, #12
    5584:	4798      	blx	r3
    5586:	e052      	b.n	562e <m2m_wifi_cb+0x226>
		}
	}
	else if (u8OpCode == M2M_WIFI_RESP_CURRENT_RSSI)
    5588:	2804      	cmp	r0, #4
    558a:	d10f      	bne.n	55ac <m2m_wifi_cb+0x1a4>
	{
		if (hif_receive(u32Addr, rx_buf, 4, 0) == M2M_SUCCESS)
    558c:	1c10      	adds	r0, r2, #0
    558e:	a91c      	add	r1, sp, #112	; 0x70
    5590:	2204      	movs	r2, #4
    5592:	2300      	movs	r3, #0
    5594:	4c27      	ldr	r4, [pc, #156]	; (5634 <m2m_wifi_cb+0x22c>)
    5596:	47a0      	blx	r4
    5598:	2800      	cmp	r0, #0
    559a:	d148      	bne.n	562e <m2m_wifi_cb+0x226>
		{
			if (gpfAppWifiCb)
    559c:	4b26      	ldr	r3, [pc, #152]	; (5638 <m2m_wifi_cb+0x230>)
    559e:	681b      	ldr	r3, [r3, #0]
    55a0:	2b00      	cmp	r3, #0
    55a2:	d044      	beq.n	562e <m2m_wifi_cb+0x226>
				gpfAppWifiCb(M2M_WIFI_RESP_CURRENT_RSSI, rx_buf);
    55a4:	3004      	adds	r0, #4
    55a6:	a91c      	add	r1, sp, #112	; 0x70
    55a8:	4798      	blx	r3
    55aa:	e040      	b.n	562e <m2m_wifi_cb+0x226>
		}
	}
	else if (u8OpCode == M2M_WIFI_RESP_CLIENT_INFO)
    55ac:	2879      	cmp	r0, #121	; 0x79
    55ae:	d10f      	bne.n	55d0 <m2m_wifi_cb+0x1c8>
	{
		if (hif_receive(u32Addr, rx_buf, 4, 0) == M2M_SUCCESS)
    55b0:	1c10      	adds	r0, r2, #0
    55b2:	a91c      	add	r1, sp, #112	; 0x70
    55b4:	2204      	movs	r2, #4
    55b6:	2300      	movs	r3, #0
    55b8:	4c1e      	ldr	r4, [pc, #120]	; (5634 <m2m_wifi_cb+0x22c>)
    55ba:	47a0      	blx	r4
    55bc:	2800      	cmp	r0, #0
    55be:	d136      	bne.n	562e <m2m_wifi_cb+0x226>
		{
			if (gpfAppWifiCb)
    55c0:	4b1d      	ldr	r3, [pc, #116]	; (5638 <m2m_wifi_cb+0x230>)
    55c2:	681b      	ldr	r3, [r3, #0]
    55c4:	2b00      	cmp	r3, #0
    55c6:	d032      	beq.n	562e <m2m_wifi_cb+0x226>
				gpfAppWifiCb(M2M_WIFI_RESP_CLIENT_INFO, rx_buf);
    55c8:	3079      	adds	r0, #121	; 0x79
    55ca:	a91c      	add	r1, sp, #112	; 0x70
    55cc:	4798      	blx	r3
    55ce:	e02e      	b.n	562e <m2m_wifi_cb+0x226>
		}
	}
	else if(u8OpCode == M2M_WIFI_RESP_PROVISION_INFO)
    55d0:	2809      	cmp	r0, #9
    55d2:	d10f      	bne.n	55f4 <m2m_wifi_cb+0x1ec>
	{
		tstrM2MProvisionInfo	strProvInfo;
		if(hif_receive(u32Addr, (uint8*)&strProvInfo, sizeof(tstrM2MProvisionInfo), 1) == M2M_SUCCESS)
    55d4:	1c10      	adds	r0, r2, #0
    55d6:	a903      	add	r1, sp, #12
    55d8:	2264      	movs	r2, #100	; 0x64
    55da:	2301      	movs	r3, #1
    55dc:	4c15      	ldr	r4, [pc, #84]	; (5634 <m2m_wifi_cb+0x22c>)
    55de:	47a0      	blx	r4
    55e0:	2800      	cmp	r0, #0
    55e2:	d124      	bne.n	562e <m2m_wifi_cb+0x226>
		{
			if(gpfAppWifiCb)
    55e4:	4b14      	ldr	r3, [pc, #80]	; (5638 <m2m_wifi_cb+0x230>)
    55e6:	681b      	ldr	r3, [r3, #0]
    55e8:	2b00      	cmp	r3, #0
    55ea:	d020      	beq.n	562e <m2m_wifi_cb+0x226>
				gpfAppWifiCb(M2M_WIFI_RESP_PROVISION_INFO, &strProvInfo);
    55ec:	3009      	adds	r0, #9
    55ee:	a903      	add	r1, sp, #12
    55f0:	4798      	blx	r3
    55f2:	e01c      	b.n	562e <m2m_wifi_cb+0x226>
		}
	}
	else if(u8OpCode == M2M_WIFI_RESP_DEFAULT_CONNECT)
    55f4:	282a      	cmp	r0, #42	; 0x2a
    55f6:	d10f      	bne.n	5618 <m2m_wifi_cb+0x210>
	{
		tstrM2MDefaultConnResp	strResp;
		if(hif_receive(u32Addr, (uint8*)&strResp, sizeof(tstrM2MDefaultConnResp), 1) == M2M_SUCCESS)
    55f8:	1c10      	adds	r0, r2, #0
    55fa:	a903      	add	r1, sp, #12
    55fc:	2204      	movs	r2, #4
    55fe:	2301      	movs	r3, #1
    5600:	4c0c      	ldr	r4, [pc, #48]	; (5634 <m2m_wifi_cb+0x22c>)
    5602:	47a0      	blx	r4
    5604:	2800      	cmp	r0, #0
    5606:	d112      	bne.n	562e <m2m_wifi_cb+0x226>
		{
			if(gpfAppWifiCb)
    5608:	4b0b      	ldr	r3, [pc, #44]	; (5638 <m2m_wifi_cb+0x230>)
    560a:	681b      	ldr	r3, [r3, #0]
    560c:	2b00      	cmp	r3, #0
    560e:	d00e      	beq.n	562e <m2m_wifi_cb+0x226>
				gpfAppWifiCb(M2M_WIFI_RESP_DEFAULT_CONNECT, &strResp);
    5610:	302a      	adds	r0, #42	; 0x2a
    5612:	a903      	add	r1, sp, #12
    5614:	4798      	blx	r3
    5616:	e00a      	b.n	562e <m2m_wifi_cb+0x226>
		}
	}
#endif
	else
	{
		M2M_ERR("REQ Not defined %d\n",u8OpCode);
    5618:	480f      	ldr	r0, [pc, #60]	; (5658 <m2m_wifi_cb+0x250>)
    561a:	4910      	ldr	r1, [pc, #64]	; (565c <m2m_wifi_cb+0x254>)
    561c:	228d      	movs	r2, #141	; 0x8d
    561e:	0052      	lsls	r2, r2, #1
    5620:	4d08      	ldr	r5, [pc, #32]	; (5644 <m2m_wifi_cb+0x23c>)
    5622:	47a8      	blx	r5
    5624:	480e      	ldr	r0, [pc, #56]	; (5660 <m2m_wifi_cb+0x258>)
    5626:	1c21      	adds	r1, r4, #0
    5628:	47a8      	blx	r5
    562a:	4808      	ldr	r0, [pc, #32]	; (564c <m2m_wifi_cb+0x244>)
    562c:	47a8      	blx	r5
	}
}
    562e:	b01f      	add	sp, #124	; 0x7c
    5630:	bd30      	pop	{r4, r5, pc}
    5632:	46c0      	nop			; (mov r8, r8)
    5634:	0000521d 	.word	0x0000521d
    5638:	20000690 	.word	0x20000690
    563c:	00004b35 	.word	0x00004b35
    5640:	00010f14 	.word	0x00010f14
    5644:	000090f5 	.word	0x000090f5
    5648:	00010f20 	.word	0x00010f20
    564c:	0000f0d0 	.word	0x0000f0d0
    5650:	20000694 	.word	0x20000694
    5654:	20000695 	.word	0x20000695
    5658:	00010c04 	.word	0x00010c04
    565c:	00010ecc 	.word	0x00010ecc
    5660:	00010f40 	.word	0x00010f40

00005664 <m2m_validate_ap_parameters>:
_EXIT0:
	return ret;
}

static sint8 m2m_validate_ap_parameters(CONST tstrM2MAPConfig* pstrM2MAPConfig)
{
    5664:	b510      	push	{r4, lr}
    5666:	1e04      	subs	r4, r0, #0
	sint8 s8Ret = M2M_SUCCESS;
	/* Check for incoming pointer */
	if(pstrM2MAPConfig == NULL)
    5668:	d10b      	bne.n	5682 <m2m_validate_ap_parameters+0x1e>
	{
		M2M_ERR("INVALID POINTER\n");
    566a:	484d      	ldr	r0, [pc, #308]	; (57a0 <m2m_validate_ap_parameters+0x13c>)
    566c:	494d      	ldr	r1, [pc, #308]	; (57a4 <m2m_validate_ap_parameters+0x140>)
    566e:	2234      	movs	r2, #52	; 0x34
    5670:	32ff      	adds	r2, #255	; 0xff
    5672:	4c4d      	ldr	r4, [pc, #308]	; (57a8 <m2m_validate_ap_parameters+0x144>)
    5674:	47a0      	blx	r4
    5676:	484d      	ldr	r0, [pc, #308]	; (57ac <m2m_validate_ap_parameters+0x148>)
    5678:	47a0      	blx	r4
    567a:	484d      	ldr	r0, [pc, #308]	; (57b0 <m2m_validate_ap_parameters+0x14c>)
    567c:	47a0      	blx	r4
		s8Ret = M2M_ERR_FAIL;
    567e:	23f4      	movs	r3, #244	; 0xf4
		goto ERR1;
    5680:	e08c      	b.n	579c <m2m_validate_ap_parameters+0x138>
	}
	/* Check for SSID */
	if((m2m_strlen((uint8 *)pstrM2MAPConfig->au8SSID) <= 0) || (m2m_strlen((uint8 *)pstrM2MAPConfig->au8SSID) >= M2M_MAX_SSID_LEN))
    5682:	4b4c      	ldr	r3, [pc, #304]	; (57b4 <m2m_validate_ap_parameters+0x150>)
    5684:	4798      	blx	r3
    5686:	2800      	cmp	r0, #0
    5688:	d004      	beq.n	5694 <m2m_validate_ap_parameters+0x30>
    568a:	1c20      	adds	r0, r4, #0
    568c:	4b49      	ldr	r3, [pc, #292]	; (57b4 <m2m_validate_ap_parameters+0x150>)
    568e:	4798      	blx	r3
    5690:	2820      	cmp	r0, #32
    5692:	d90b      	bls.n	56ac <m2m_validate_ap_parameters+0x48>
	{
		M2M_ERR("INVALID SSID\n");
    5694:	4842      	ldr	r0, [pc, #264]	; (57a0 <m2m_validate_ap_parameters+0x13c>)
    5696:	4943      	ldr	r1, [pc, #268]	; (57a4 <m2m_validate_ap_parameters+0x140>)
    5698:	229d      	movs	r2, #157	; 0x9d
    569a:	0052      	lsls	r2, r2, #1
    569c:	4c42      	ldr	r4, [pc, #264]	; (57a8 <m2m_validate_ap_parameters+0x144>)
    569e:	47a0      	blx	r4
    56a0:	4845      	ldr	r0, [pc, #276]	; (57b8 <m2m_validate_ap_parameters+0x154>)
    56a2:	47a0      	blx	r4
    56a4:	4842      	ldr	r0, [pc, #264]	; (57b0 <m2m_validate_ap_parameters+0x14c>)
    56a6:	47a0      	blx	r4
		s8Ret = M2M_ERR_FAIL;
    56a8:	23f4      	movs	r3, #244	; 0xf4
		goto ERR1;
    56aa:	e077      	b.n	579c <m2m_validate_ap_parameters+0x138>
	}
	/* Check for Channel */
	if(pstrM2MAPConfig->u8ListenChannel > M2M_WIFI_CH_14 || pstrM2MAPConfig->u8ListenChannel < M2M_WIFI_CH_1)
    56ac:	2321      	movs	r3, #33	; 0x21
    56ae:	5ce3      	ldrb	r3, [r4, r3]
    56b0:	2b0d      	cmp	r3, #13
    56b2:	d90b      	bls.n	56cc <m2m_validate_ap_parameters+0x68>
	{
		M2M_ERR("INVALID CH\n");
    56b4:	483a      	ldr	r0, [pc, #232]	; (57a0 <m2m_validate_ap_parameters+0x13c>)
    56b6:	493b      	ldr	r1, [pc, #236]	; (57a4 <m2m_validate_ap_parameters+0x140>)
    56b8:	2242      	movs	r2, #66	; 0x42
    56ba:	32ff      	adds	r2, #255	; 0xff
    56bc:	4c3a      	ldr	r4, [pc, #232]	; (57a8 <m2m_validate_ap_parameters+0x144>)
    56be:	47a0      	blx	r4
    56c0:	483e      	ldr	r0, [pc, #248]	; (57bc <m2m_validate_ap_parameters+0x158>)
    56c2:	47a0      	blx	r4
    56c4:	483a      	ldr	r0, [pc, #232]	; (57b0 <m2m_validate_ap_parameters+0x14c>)
    56c6:	47a0      	blx	r4
		s8Ret = M2M_ERR_FAIL;
    56c8:	23f4      	movs	r3, #244	; 0xf4
		goto ERR1;
    56ca:	e067      	b.n	579c <m2m_validate_ap_parameters+0x138>
	}
	/* Check for DHCP Server IP address */
	if(!(pstrM2MAPConfig->au8DHCPServerIP[0] || pstrM2MAPConfig->au8DHCPServerIP[1]))
    56cc:	2341      	movs	r3, #65	; 0x41
    56ce:	5ce3      	ldrb	r3, [r4, r3]
    56d0:	2b00      	cmp	r3, #0
    56d2:	d113      	bne.n	56fc <m2m_validate_ap_parameters+0x98>
    56d4:	3342      	adds	r3, #66	; 0x42
    56d6:	5ce3      	ldrb	r3, [r4, r3]
    56d8:	2b00      	cmp	r3, #0
    56da:	d10f      	bne.n	56fc <m2m_validate_ap_parameters+0x98>
	{
		if(!(pstrM2MAPConfig->au8DHCPServerIP[2]))
    56dc:	3343      	adds	r3, #67	; 0x43
    56de:	5ce3      	ldrb	r3, [r4, r3]
    56e0:	2b00      	cmp	r3, #0
    56e2:	d10b      	bne.n	56fc <m2m_validate_ap_parameters+0x98>
		{
			M2M_ERR("INVALID DHCP SERVER IP\n");
    56e4:	482e      	ldr	r0, [pc, #184]	; (57a0 <m2m_validate_ap_parameters+0x13c>)
    56e6:	492f      	ldr	r1, [pc, #188]	; (57a4 <m2m_validate_ap_parameters+0x140>)
    56e8:	22a5      	movs	r2, #165	; 0xa5
    56ea:	0052      	lsls	r2, r2, #1
    56ec:	4c2e      	ldr	r4, [pc, #184]	; (57a8 <m2m_validate_ap_parameters+0x144>)
    56ee:	47a0      	blx	r4
    56f0:	4833      	ldr	r0, [pc, #204]	; (57c0 <m2m_validate_ap_parameters+0x15c>)
    56f2:	47a0      	blx	r4
    56f4:	482e      	ldr	r0, [pc, #184]	; (57b0 <m2m_validate_ap_parameters+0x14c>)
    56f6:	47a0      	blx	r4
			s8Ret = M2M_ERR_FAIL;
    56f8:	23f4      	movs	r3, #244	; 0xf4
			goto ERR1;
    56fa:	e04f      	b.n	579c <m2m_validate_ap_parameters+0x138>
		}
	}
	/* Check for Security */
	if(pstrM2MAPConfig->u8SecType == M2M_WIFI_SEC_OPEN)
    56fc:	233f      	movs	r3, #63	; 0x3f
    56fe:	5ce3      	ldrb	r3, [r4, r3]
    5700:	2b01      	cmp	r3, #1
    5702:	d04a      	beq.n	579a <m2m_validate_ap_parameters+0x136>
	{
		goto ERR1;
	}
	else if(pstrM2MAPConfig->u8SecType == M2M_WIFI_SEC_WEP)
    5704:	2b03      	cmp	r3, #3
    5706:	d13c      	bne.n	5782 <m2m_validate_ap_parameters+0x11e>
	{
		/* Check for WEP Key index */
		if((pstrM2MAPConfig->u8KeyIndx <= 0) || (pstrM2MAPConfig->u8KeyIndx > WEP_KEY_MAX_INDEX))
    5708:	331f      	adds	r3, #31
    570a:	5ce3      	ldrb	r3, [r4, r3]
    570c:	3b01      	subs	r3, #1
    570e:	2b03      	cmp	r3, #3
    5710:	d90b      	bls.n	572a <m2m_validate_ap_parameters+0xc6>
		{
			M2M_ERR("INVALID KEY INDEX\n");
    5712:	4823      	ldr	r0, [pc, #140]	; (57a0 <m2m_validate_ap_parameters+0x13c>)
    5714:	4923      	ldr	r1, [pc, #140]	; (57a4 <m2m_validate_ap_parameters+0x140>)
    5716:	225a      	movs	r2, #90	; 0x5a
    5718:	32ff      	adds	r2, #255	; 0xff
    571a:	4c23      	ldr	r4, [pc, #140]	; (57a8 <m2m_validate_ap_parameters+0x144>)
    571c:	47a0      	blx	r4
    571e:	4829      	ldr	r0, [pc, #164]	; (57c4 <m2m_validate_ap_parameters+0x160>)
    5720:	47a0      	blx	r4
    5722:	4823      	ldr	r0, [pc, #140]	; (57b0 <m2m_validate_ap_parameters+0x14c>)
    5724:	47a0      	blx	r4
			s8Ret = M2M_ERR_FAIL;
    5726:	23f4      	movs	r3, #244	; 0xf4
			goto ERR1;
    5728:	e038      	b.n	579c <m2m_validate_ap_parameters+0x138>
		}
		/* Check for WEP Key size */
		if(	(pstrM2MAPConfig->u8KeySz != WEP_40_KEY_STRING_SIZE) &&
    572a:	2323      	movs	r3, #35	; 0x23
    572c:	5ce3      	ldrb	r3, [r4, r3]
    572e:	2210      	movs	r2, #16
    5730:	4393      	bics	r3, r2
    5732:	2b0a      	cmp	r3, #10
    5734:	d00b      	beq.n	574e <m2m_validate_ap_parameters+0xea>
			(pstrM2MAPConfig->u8KeySz != WEP_104_KEY_STRING_SIZE)
		)
		{
			M2M_ERR("INVALID KEY SIZE\n");
    5736:	481a      	ldr	r0, [pc, #104]	; (57a0 <m2m_validate_ap_parameters+0x13c>)
    5738:	491a      	ldr	r1, [pc, #104]	; (57a4 <m2m_validate_ap_parameters+0x140>)
    573a:	3253      	adds	r2, #83	; 0x53
    573c:	32ff      	adds	r2, #255	; 0xff
    573e:	4c1a      	ldr	r4, [pc, #104]	; (57a8 <m2m_validate_ap_parameters+0x144>)
    5740:	47a0      	blx	r4
    5742:	4821      	ldr	r0, [pc, #132]	; (57c8 <m2m_validate_ap_parameters+0x164>)
    5744:	47a0      	blx	r4
    5746:	481a      	ldr	r0, [pc, #104]	; (57b0 <m2m_validate_ap_parameters+0x14c>)
    5748:	47a0      	blx	r4
			s8Ret = M2M_ERR_FAIL;
    574a:	23f4      	movs	r3, #244	; 0xf4
			goto ERR1;
    574c:	e026      	b.n	579c <m2m_validate_ap_parameters+0x138>
		}
		/* Check for WEP Key */
		if((pstrM2MAPConfig->au8WepKey == NULL) || (m2m_strlen((uint8 *)pstrM2MAPConfig->au8WepKey) <= 0) || (m2m_strlen((uint8 *)pstrM2MAPConfig->au8WepKey) > WEP_104_KEY_STRING_SIZE))
    574e:	3424      	adds	r4, #36	; 0x24
    5750:	2c00      	cmp	r4, #0
    5752:	d00a      	beq.n	576a <m2m_validate_ap_parameters+0x106>
    5754:	1c20      	adds	r0, r4, #0
    5756:	4b17      	ldr	r3, [pc, #92]	; (57b4 <m2m_validate_ap_parameters+0x150>)
    5758:	4798      	blx	r3
    575a:	2800      	cmp	r0, #0
    575c:	d005      	beq.n	576a <m2m_validate_ap_parameters+0x106>
    575e:	1c20      	adds	r0, r4, #0
    5760:	4b14      	ldr	r3, [pc, #80]	; (57b4 <m2m_validate_ap_parameters+0x150>)
    5762:	4798      	blx	r3
	return ret;
}

static sint8 m2m_validate_ap_parameters(CONST tstrM2MAPConfig* pstrM2MAPConfig)
{
	sint8 s8Ret = M2M_SUCCESS;
    5764:	2300      	movs	r3, #0
			M2M_ERR("INVALID KEY SIZE\n");
			s8Ret = M2M_ERR_FAIL;
			goto ERR1;
		}
		/* Check for WEP Key */
		if((pstrM2MAPConfig->au8WepKey == NULL) || (m2m_strlen((uint8 *)pstrM2MAPConfig->au8WepKey) <= 0) || (m2m_strlen((uint8 *)pstrM2MAPConfig->au8WepKey) > WEP_104_KEY_STRING_SIZE))
    5766:	281a      	cmp	r0, #26
    5768:	d918      	bls.n	579c <m2m_validate_ap_parameters+0x138>
		{
			M2M_ERR("INVALID WEP KEY\n");
    576a:	480d      	ldr	r0, [pc, #52]	; (57a0 <m2m_validate_ap_parameters+0x13c>)
    576c:	490d      	ldr	r1, [pc, #52]	; (57a4 <m2m_validate_ap_parameters+0x140>)
    576e:	226a      	movs	r2, #106	; 0x6a
    5770:	32ff      	adds	r2, #255	; 0xff
    5772:	4c0d      	ldr	r4, [pc, #52]	; (57a8 <m2m_validate_ap_parameters+0x144>)
    5774:	47a0      	blx	r4
    5776:	4815      	ldr	r0, [pc, #84]	; (57cc <m2m_validate_ap_parameters+0x168>)
    5778:	47a0      	blx	r4
    577a:	480d      	ldr	r0, [pc, #52]	; (57b0 <m2m_validate_ap_parameters+0x14c>)
    577c:	47a0      	blx	r4
			s8Ret = M2M_ERR_FAIL;
    577e:	23f4      	movs	r3, #244	; 0xf4
			goto ERR1;
    5780:	e00c      	b.n	579c <m2m_validate_ap_parameters+0x138>
		}
	}
	else
	{
		M2M_ERR("INVALID AUTHENTICATION MODE\n");
    5782:	4807      	ldr	r0, [pc, #28]	; (57a0 <m2m_validate_ap_parameters+0x13c>)
    5784:	4907      	ldr	r1, [pc, #28]	; (57a4 <m2m_validate_ap_parameters+0x140>)
    5786:	22b8      	movs	r2, #184	; 0xb8
    5788:	0052      	lsls	r2, r2, #1
    578a:	4c07      	ldr	r4, [pc, #28]	; (57a8 <m2m_validate_ap_parameters+0x144>)
    578c:	47a0      	blx	r4
    578e:	4810      	ldr	r0, [pc, #64]	; (57d0 <m2m_validate_ap_parameters+0x16c>)
    5790:	47a0      	blx	r4
    5792:	4807      	ldr	r0, [pc, #28]	; (57b0 <m2m_validate_ap_parameters+0x14c>)
    5794:	47a0      	blx	r4
		s8Ret = M2M_ERR_FAIL;
    5796:	23f4      	movs	r3, #244	; 0xf4
		goto ERR1;
    5798:	e000      	b.n	579c <m2m_validate_ap_parameters+0x138>
	return ret;
}

static sint8 m2m_validate_ap_parameters(CONST tstrM2MAPConfig* pstrM2MAPConfig)
{
	sint8 s8Ret = M2M_SUCCESS;
    579a:	2300      	movs	r3, #0
		s8Ret = M2M_ERR_FAIL;
		goto ERR1;
	}

ERR1:
	return s8Ret;
    579c:	b258      	sxtb	r0, r3
}
    579e:	bd10      	pop	{r4, pc}
    57a0:	00010c04 	.word	0x00010c04
    57a4:	00010ed8 	.word	0x00010ed8
    57a8:	000090f5 	.word	0x000090f5
    57ac:	00010f54 	.word	0x00010f54
    57b0:	0000f0d0 	.word	0x0000f0d0
    57b4:	00004b45 	.word	0x00004b45
    57b8:	00010f68 	.word	0x00010f68
    57bc:	00010f78 	.word	0x00010f78
    57c0:	00010f84 	.word	0x00010f84
    57c4:	00010f9c 	.word	0x00010f9c
    57c8:	00010fb0 	.word	0x00010fb0
    57cc:	00010fc4 	.word	0x00010fc4
    57d0:	00010fd8 	.word	0x00010fd8

000057d4 <m2m_wifi_init>:

sint8 m2m_wifi_init(tstrWifiInitParam * param)
{
    57d4:	b510      	push	{r4, lr}
	sint8 ret = M2M_SUCCESS;
	
	if(param == NULL) {
    57d6:	2800      	cmp	r0, #0
    57d8:	d018      	beq.n	580c <m2m_wifi_init+0x38>
		ret = M2M_ERR_FAIL;
		goto _EXIT0;
	}
		
	gpfAppWifiCb = param->pfAppWifiCb;
    57da:	6802      	ldr	r2, [r0, #0]
    57dc:	4b0d      	ldr	r3, [pc, #52]	; (5814 <m2m_wifi_init+0x40>)
    57de:	601a      	str	r2, [r3, #0]
#endif

#ifdef CONF_MGMT
	gpfAppMonCb  = param->pfAppMonCb;
#endif
	gu8scanInProgress = 0;
    57e0:	2200      	movs	r2, #0
    57e2:	4b0d      	ldr	r3, [pc, #52]	; (5818 <m2m_wifi_init+0x44>)
    57e4:	701a      	strb	r2, [r3, #0]
	/* Apply device specific initialization. */	
	ret = nm_drv_init(NULL);
    57e6:	2000      	movs	r0, #0
    57e8:	4b0c      	ldr	r3, [pc, #48]	; (581c <m2m_wifi_init+0x48>)
    57ea:	4798      	blx	r3
    57ec:	1e04      	subs	r4, r0, #0
	if(ret != M2M_SUCCESS) 	goto _EXIT0;
    57ee:	d10e      	bne.n	580e <m2m_wifi_init+0x3a>
	/* Initialize host interface module */
	ret = hif_init(NULL);
    57f0:	2000      	movs	r0, #0
    57f2:	4b0b      	ldr	r3, [pc, #44]	; (5820 <m2m_wifi_init+0x4c>)
    57f4:	4798      	blx	r3
    57f6:	1e04      	subs	r4, r0, #0
	if(ret != M2M_SUCCESS) 	goto _EXIT1;
    57f8:	d104      	bne.n	5804 <m2m_wifi_init+0x30>

	hif_register_cb(M2M_REQ_GRP_WIFI,m2m_wifi_cb);
    57fa:	2001      	movs	r0, #1
    57fc:	4909      	ldr	r1, [pc, #36]	; (5824 <m2m_wifi_init+0x50>)
    57fe:	4b0a      	ldr	r3, [pc, #40]	; (5828 <m2m_wifi_init+0x54>)
    5800:	4798      	blx	r3

	goto _EXIT0;
    5802:	e004      	b.n	580e <m2m_wifi_init+0x3a>

_EXIT1:
	nm_drv_deinit(NULL);
    5804:	2000      	movs	r0, #0
    5806:	4b09      	ldr	r3, [pc, #36]	; (582c <m2m_wifi_init+0x58>)
    5808:	4798      	blx	r3
    580a:	e000      	b.n	580e <m2m_wifi_init+0x3a>
sint8 m2m_wifi_init(tstrWifiInitParam * param)
{
	sint8 ret = M2M_SUCCESS;
	
	if(param == NULL) {
		ret = M2M_ERR_FAIL;
    580c:	24f4      	movs	r4, #244	; 0xf4
	goto _EXIT0;

_EXIT1:
	nm_drv_deinit(NULL);
_EXIT0:
	return ret;
    580e:	b260      	sxtb	r0, r4
}
    5810:	bd10      	pop	{r4, pc}
    5812:	46c0      	nop			; (mov r8, r8)
    5814:	20000690 	.word	0x20000690
    5818:	20000694 	.word	0x20000694
    581c:	00006115 	.word	0x00006115
    5820:	000053b9 	.word	0x000053b9
    5824:	00005409 	.word	0x00005409
    5828:	00005339 	.word	0x00005339
    582c:	000062c5 	.word	0x000062c5

00005830 <m2m_wifi_handle_events>:
	return M2M_SUCCESS;
}


sint8 m2m_wifi_handle_events(void * arg)
{
    5830:	b508      	push	{r3, lr}
	return hif_handle_isr();
    5832:	4b01      	ldr	r3, [pc, #4]	; (5838 <m2m_wifi_handle_events+0x8>)
    5834:	4798      	blx	r3
}
    5836:	bd08      	pop	{r3, pc}
    5838:	00004ef5 	.word	0x00004ef5

0000583c <m2m_wifi_connect_sc>:
sint8 m2m_wifi_connect(char *pcSsid, uint8 u8SsidLen, uint8 u8SecType, void *pvAuthInfo, uint16 u16Ch)
{
	return m2m_wifi_connect_sc(pcSsid, u8SsidLen, u8SecType, pvAuthInfo,  u16Ch,0);
}
sint8 m2m_wifi_connect_sc(char *pcSsid, uint8 u8SsidLen, uint8 u8SecType, void *pvAuthInfo, uint16 u16Ch, uint8 u8NoSaveCred)
{
    583c:	b5f0      	push	{r4, r5, r6, r7, lr}
    583e:	4657      	mov	r7, sl
    5840:	464e      	mov	r6, r9
    5842:	b4c0      	push	{r6, r7}
    5844:	b0a3      	sub	sp, #140	; 0x8c
    5846:	9005      	str	r0, [sp, #20]
    5848:	1c0c      	adds	r4, r1, #0
    584a:	1c17      	adds	r7, r2, #0
    584c:	1c1e      	adds	r6, r3, #0
    584e:	ab2a      	add	r3, sp, #168	; 0xa8
    5850:	881b      	ldrh	r3, [r3, #0]
    5852:	469a      	mov	sl, r3
    5854:	ab2b      	add	r3, sp, #172	; 0xac
    5856:	781b      	ldrb	r3, [r3, #0]
    5858:	4699      	mov	r9, r3
	sint8				ret = M2M_SUCCESS;
	tstrM2mWifiConnect	strConnect;
	tstrM2MWifiSecInfo	*pstrAuthInfo;
	if(u8SecType != M2M_WIFI_SEC_OPEN)
    585a:	2a01      	cmp	r2, #1
    585c:	d017      	beq.n	588e <m2m_wifi_connect_sc+0x52>
	{
		if((pvAuthInfo == NULL)||(m2m_strlen(pvAuthInfo)<=0)||(m2m_strlen(pvAuthInfo)>=M2M_MAX_PSK_LEN))
    585e:	2e00      	cmp	r6, #0
    5860:	d009      	beq.n	5876 <m2m_wifi_connect_sc+0x3a>
    5862:	1c30      	adds	r0, r6, #0
    5864:	4b5c      	ldr	r3, [pc, #368]	; (59d8 <m2m_wifi_connect_sc+0x19c>)
    5866:	4798      	blx	r3
    5868:	2800      	cmp	r0, #0
    586a:	d004      	beq.n	5876 <m2m_wifi_connect_sc+0x3a>
    586c:	1c30      	adds	r0, r6, #0
    586e:	4b5a      	ldr	r3, [pc, #360]	; (59d8 <m2m_wifi_connect_sc+0x19c>)
    5870:	4798      	blx	r3
    5872:	2840      	cmp	r0, #64	; 0x40
    5874:	d90b      	bls.n	588e <m2m_wifi_connect_sc+0x52>
		{
			M2M_ERR("PSK LEN INVALID\n");
    5876:	4859      	ldr	r0, [pc, #356]	; (59dc <m2m_wifi_connect_sc+0x1a0>)
    5878:	4959      	ldr	r1, [pc, #356]	; (59e0 <m2m_wifi_connect_sc+0x1a4>)
    587a:	22c2      	movs	r2, #194	; 0xc2
    587c:	32ff      	adds	r2, #255	; 0xff
    587e:	4c59      	ldr	r4, [pc, #356]	; (59e4 <m2m_wifi_connect_sc+0x1a8>)
    5880:	47a0      	blx	r4
    5882:	4859      	ldr	r0, [pc, #356]	; (59e8 <m2m_wifi_connect_sc+0x1ac>)
    5884:	47a0      	blx	r4
    5886:	4859      	ldr	r0, [pc, #356]	; (59ec <m2m_wifi_connect_sc+0x1b0>)
    5888:	47a0      	blx	r4
			ret = M2M_ERR_FAIL;
    588a:	20f4      	movs	r0, #244	; 0xf4
			goto ERR1;
    588c:	e09e      	b.n	59cc <m2m_wifi_connect_sc+0x190>
		}
	}
	if((u8SsidLen<=0)||(u8SsidLen>=M2M_MAX_SSID_LEN))
    588e:	1e63      	subs	r3, r4, #1
    5890:	2b1f      	cmp	r3, #31
    5892:	d90b      	bls.n	58ac <m2m_wifi_connect_sc+0x70>
	{
		M2M_ERR("SSID LEN INVALID\n");
    5894:	4851      	ldr	r0, [pc, #324]	; (59dc <m2m_wifi_connect_sc+0x1a0>)
    5896:	4952      	ldr	r1, [pc, #328]	; (59e0 <m2m_wifi_connect_sc+0x1a4>)
    5898:	22e4      	movs	r2, #228	; 0xe4
    589a:	0052      	lsls	r2, r2, #1
    589c:	4c51      	ldr	r4, [pc, #324]	; (59e4 <m2m_wifi_connect_sc+0x1a8>)
    589e:	47a0      	blx	r4
    58a0:	4853      	ldr	r0, [pc, #332]	; (59f0 <m2m_wifi_connect_sc+0x1b4>)
    58a2:	47a0      	blx	r4
    58a4:	4851      	ldr	r0, [pc, #324]	; (59ec <m2m_wifi_connect_sc+0x1b0>)
    58a6:	47a0      	blx	r4
		ret = M2M_ERR_FAIL;
    58a8:	20f4      	movs	r0, #244	; 0xf4
		goto ERR1;
    58aa:	e08f      	b.n	59cc <m2m_wifi_connect_sc+0x190>
	}

	if(u16Ch>M2M_WIFI_CH_14)
    58ac:	4653      	mov	r3, sl
    58ae:	2b0d      	cmp	r3, #13
    58b0:	d90d      	bls.n	58ce <m2m_wifi_connect_sc+0x92>
	{
		if(u16Ch!=M2M_WIFI_CH_ALL)
    58b2:	2bff      	cmp	r3, #255	; 0xff
    58b4:	d00b      	beq.n	58ce <m2m_wifi_connect_sc+0x92>
		{
			M2M_ERR("CH INVALID\n");
    58b6:	4849      	ldr	r0, [pc, #292]	; (59dc <m2m_wifi_connect_sc+0x1a0>)
    58b8:	4949      	ldr	r1, [pc, #292]	; (59e0 <m2m_wifi_connect_sc+0x1a4>)
    58ba:	22d2      	movs	r2, #210	; 0xd2
    58bc:	32ff      	adds	r2, #255	; 0xff
    58be:	4c49      	ldr	r4, [pc, #292]	; (59e4 <m2m_wifi_connect_sc+0x1a8>)
    58c0:	47a0      	blx	r4
    58c2:	484c      	ldr	r0, [pc, #304]	; (59f4 <m2m_wifi_connect_sc+0x1b8>)
    58c4:	47a0      	blx	r4
    58c6:	4849      	ldr	r0, [pc, #292]	; (59ec <m2m_wifi_connect_sc+0x1b0>)
    58c8:	47a0      	blx	r4
			ret = M2M_ERR_FAIL;
    58ca:	20f4      	movs	r0, #244	; 0xf4
			goto ERR1;
    58cc:	e07e      	b.n	59cc <m2m_wifi_connect_sc+0x190>
		}
	}


	m2m_memcpy(strConnect.au8SSID, (uint8*)pcSsid, u8SsidLen);
    58ce:	ad07      	add	r5, sp, #28
    58d0:	205a      	movs	r0, #90	; 0x5a
    58d2:	ab02      	add	r3, sp, #8
    58d4:	469c      	mov	ip, r3
    58d6:	4460      	add	r0, ip
    58d8:	9905      	ldr	r1, [sp, #20]
    58da:	1c22      	adds	r2, r4, #0
    58dc:	4b46      	ldr	r3, [pc, #280]	; (59f8 <m2m_wifi_connect_sc+0x1bc>)
    58de:	4798      	blx	r3
	strConnect.au8SSID[u8SsidLen]	= 0;
    58e0:	192c      	adds	r4, r5, r4
    58e2:	3440      	adds	r4, #64	; 0x40
    58e4:	2300      	movs	r3, #0
    58e6:	71a3      	strb	r3, [r4, #6]
	strConnect.u16Ch				= NM_BSP_B_L_16(u16Ch);
    58e8:	3344      	adds	r3, #68	; 0x44
    58ea:	4652      	mov	r2, sl
    58ec:	52ea      	strh	r2, [r5, r3]
	/* Credentials will be Not be saved if u8NoSaveCred is set */ 
	strConnect.u8NoSaveCred 			= u8NoSaveCred ? 1:0;
    58ee:	464b      	mov	r3, r9
    58f0:	1e5a      	subs	r2, r3, #1
    58f2:	4193      	sbcs	r3, r2
    58f4:	2267      	movs	r2, #103	; 0x67
    58f6:	54ab      	strb	r3, [r5, r2]
	pstrAuthInfo = &strConnect.strSec;
	pstrAuthInfo->u8SecType		= u8SecType;
    58f8:	2341      	movs	r3, #65	; 0x41
    58fa:	54ef      	strb	r7, [r5, r3]

	if(u8SecType == M2M_WIFI_SEC_WEP)
    58fc:	2f03      	cmp	r7, #3
    58fe:	d139      	bne.n	5974 <m2m_wifi_connect_sc+0x138>
	{
		tstrM2mWifiWepParams	* pstrWepParams = (tstrM2mWifiWepParams*)pvAuthInfo;
		tstrM2mWifiWepParams	*pstrWep = &pstrAuthInfo->uniAuth.strWepInfo;
		pstrWep->u8KeyIndx =pstrWepParams->u8KeyIndx-1;
    5900:	7833      	ldrb	r3, [r6, #0]
    5902:	3b01      	subs	r3, #1
    5904:	b2db      	uxtb	r3, r3
    5906:	aa07      	add	r2, sp, #28
    5908:	7013      	strb	r3, [r2, #0]

		if(pstrWep->u8KeyIndx >= WEP_KEY_MAX_INDEX)
    590a:	2b03      	cmp	r3, #3
    590c:	d90d      	bls.n	592a <m2m_wifi_connect_sc+0xee>
		{
			M2M_ERR("Invalid Wep key index %d\n", pstrWep->u8KeyIndx);
    590e:	4833      	ldr	r0, [pc, #204]	; (59dc <m2m_wifi_connect_sc+0x1a0>)
    5910:	4933      	ldr	r1, [pc, #204]	; (59e0 <m2m_wifi_connect_sc+0x1a4>)
    5912:	22f4      	movs	r2, #244	; 0xf4
    5914:	0052      	lsls	r2, r2, #1
    5916:	4c33      	ldr	r4, [pc, #204]	; (59e4 <m2m_wifi_connect_sc+0x1a8>)
    5918:	47a0      	blx	r4
    591a:	ab07      	add	r3, sp, #28
    591c:	7819      	ldrb	r1, [r3, #0]
    591e:	4837      	ldr	r0, [pc, #220]	; (59fc <m2m_wifi_connect_sc+0x1c0>)
    5920:	47a0      	blx	r4
    5922:	4832      	ldr	r0, [pc, #200]	; (59ec <m2m_wifi_connect_sc+0x1b0>)
    5924:	47a0      	blx	r4
			ret = M2M_ERR_FAIL;
    5926:	20f4      	movs	r0, #244	; 0xf4
			goto ERR1;
    5928:	e050      	b.n	59cc <m2m_wifi_connect_sc+0x190>
		}
		pstrWep->u8KeySz = pstrWepParams->u8KeySz-1;
    592a:	7872      	ldrb	r2, [r6, #1]
    592c:	1e51      	subs	r1, r2, #1
    592e:	ab07      	add	r3, sp, #28
    5930:	7059      	strb	r1, [r3, #1]
		if ((pstrWep->u8KeySz != WEP_40_KEY_STRING_SIZE)&& (pstrWep->u8KeySz != WEP_104_KEY_STRING_SIZE))
    5932:	2310      	movs	r3, #16
    5934:	1c11      	adds	r1, r2, #0
    5936:	4399      	bics	r1, r3
    5938:	290b      	cmp	r1, #11
    593a:	d00d      	beq.n	5958 <m2m_wifi_connect_sc+0x11c>
		{
			M2M_ERR("Invalid Wep key length %d\n", pstrWep->u8KeySz);
    593c:	4827      	ldr	r0, [pc, #156]	; (59dc <m2m_wifi_connect_sc+0x1a0>)
    593e:	4928      	ldr	r1, [pc, #160]	; (59e0 <m2m_wifi_connect_sc+0x1a4>)
    5940:	22f0      	movs	r2, #240	; 0xf0
    5942:	32ff      	adds	r2, #255	; 0xff
    5944:	4c27      	ldr	r4, [pc, #156]	; (59e4 <m2m_wifi_connect_sc+0x1a8>)
    5946:	47a0      	blx	r4
    5948:	ab07      	add	r3, sp, #28
    594a:	7859      	ldrb	r1, [r3, #1]
    594c:	482c      	ldr	r0, [pc, #176]	; (5a00 <m2m_wifi_connect_sc+0x1c4>)
    594e:	47a0      	blx	r4
    5950:	4826      	ldr	r0, [pc, #152]	; (59ec <m2m_wifi_connect_sc+0x1b0>)
    5952:	47a0      	blx	r4
			ret = M2M_ERR_FAIL;
    5954:	20f4      	movs	r0, #244	; 0xf4
			goto ERR1;
    5956:	e039      	b.n	59cc <m2m_wifi_connect_sc+0x190>
		}
		m2m_memcpy((uint8*)pstrWep->au8WepKey,(uint8*)pstrWepParams->au8WepKey, pstrWepParams->u8KeySz);
    5958:	1cb1      	adds	r1, r6, #2
    595a:	2016      	movs	r0, #22
    595c:	ab02      	add	r3, sp, #8
    595e:	469c      	mov	ip, r3
    5960:	4460      	add	r0, ip
    5962:	4b25      	ldr	r3, [pc, #148]	; (59f8 <m2m_wifi_connect_sc+0x1bc>)
    5964:	4798      	blx	r3
		pstrWep->au8WepKey[pstrWepParams->u8KeySz] = 0;
    5966:	7873      	ldrb	r3, [r6, #1]
    5968:	aa07      	add	r2, sp, #28
    596a:	4694      	mov	ip, r2
    596c:	4463      	add	r3, ip
    596e:	2200      	movs	r2, #0
    5970:	709a      	strb	r2, [r3, #2]
    5972:	e021      	b.n	59b8 <m2m_wifi_connect_sc+0x17c>

	}


	else if(u8SecType == M2M_WIFI_SEC_WPA_PSK)
    5974:	2f02      	cmp	r7, #2
    5976:	d109      	bne.n	598c <m2m_wifi_connect_sc+0x150>
	{
		uint8	u8KeyLen = m2m_strlen((uint8*)pvAuthInfo) + 1;
    5978:	1c30      	adds	r0, r6, #0
    597a:	4b17      	ldr	r3, [pc, #92]	; (59d8 <m2m_wifi_connect_sc+0x19c>)
    597c:	4798      	blx	r3
    597e:	3001      	adds	r0, #1
		m2m_memcpy(pstrAuthInfo->uniAuth.au8PSK, (uint8*)pvAuthInfo, u8KeyLen);
    5980:	b2c2      	uxtb	r2, r0
    5982:	a807      	add	r0, sp, #28
    5984:	1c31      	adds	r1, r6, #0
    5986:	4b1c      	ldr	r3, [pc, #112]	; (59f8 <m2m_wifi_connect_sc+0x1bc>)
    5988:	4798      	blx	r3
    598a:	e015      	b.n	59b8 <m2m_wifi_connect_sc+0x17c>
	}
	else if(u8SecType == M2M_WIFI_SEC_802_1X)
    598c:	2f04      	cmp	r7, #4
    598e:	d105      	bne.n	599c <m2m_wifi_connect_sc+0x160>
	{
		m2m_memcpy((uint8*)&pstrAuthInfo->uniAuth.strCred1x, (uint8*)pvAuthInfo, sizeof(tstr1xAuthCredentials));
    5990:	a807      	add	r0, sp, #28
    5992:	1c31      	adds	r1, r6, #0
    5994:	223e      	movs	r2, #62	; 0x3e
    5996:	4b18      	ldr	r3, [pc, #96]	; (59f8 <m2m_wifi_connect_sc+0x1bc>)
    5998:	4798      	blx	r3
    599a:	e00d      	b.n	59b8 <m2m_wifi_connect_sc+0x17c>
	}
	else if(u8SecType == M2M_WIFI_SEC_OPEN)
    599c:	2f01      	cmp	r7, #1
    599e:	d00b      	beq.n	59b8 <m2m_wifi_connect_sc+0x17c>
	{

	}
	else
	{
		M2M_ERR("undefined sec type\n");
    59a0:	480e      	ldr	r0, [pc, #56]	; (59dc <m2m_wifi_connect_sc+0x1a0>)
    59a2:	490f      	ldr	r1, [pc, #60]	; (59e0 <m2m_wifi_connect_sc+0x1a4>)
    59a4:	2282      	movs	r2, #130	; 0x82
    59a6:	0092      	lsls	r2, r2, #2
    59a8:	4c0e      	ldr	r4, [pc, #56]	; (59e4 <m2m_wifi_connect_sc+0x1a8>)
    59aa:	47a0      	blx	r4
    59ac:	4815      	ldr	r0, [pc, #84]	; (5a04 <m2m_wifi_connect_sc+0x1c8>)
    59ae:	47a0      	blx	r4
    59b0:	480e      	ldr	r0, [pc, #56]	; (59ec <m2m_wifi_connect_sc+0x1b0>)
    59b2:	47a0      	blx	r4
		ret = M2M_ERR_FAIL;
    59b4:	20f4      	movs	r0, #244	; 0xf4
		goto ERR1;
    59b6:	e009      	b.n	59cc <m2m_wifi_connect_sc+0x190>
	}

	ret = hif_send(M2M_REQ_GRP_WIFI, M2M_WIFI_REQ_CONNECT, (uint8*)&strConnect, sizeof(tstrM2mWifiConnect),NULL, 0,0);
    59b8:	2300      	movs	r3, #0
    59ba:	9300      	str	r3, [sp, #0]
    59bc:	9301      	str	r3, [sp, #4]
    59be:	9302      	str	r3, [sp, #8]
    59c0:	2001      	movs	r0, #1
    59c2:	2128      	movs	r1, #40	; 0x28
    59c4:	aa07      	add	r2, sp, #28
    59c6:	336c      	adds	r3, #108	; 0x6c
    59c8:	4c0f      	ldr	r4, [pc, #60]	; (5a08 <m2m_wifi_connect_sc+0x1cc>)
    59ca:	47a0      	blx	r4

ERR1:
	return ret;
    59cc:	b240      	sxtb	r0, r0
}
    59ce:	b023      	add	sp, #140	; 0x8c
    59d0:	bc0c      	pop	{r2, r3}
    59d2:	4691      	mov	r9, r2
    59d4:	469a      	mov	sl, r3
    59d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    59d8:	00004b45 	.word	0x00004b45
    59dc:	00010c04 	.word	0x00010c04
    59e0:	00011100 	.word	0x00011100
    59e4:	000090f5 	.word	0x000090f5
    59e8:	00010ff8 	.word	0x00010ff8
    59ec:	0000f0d0 	.word	0x0000f0d0
    59f0:	0001100c 	.word	0x0001100c
    59f4:	00011020 	.word	0x00011020
    59f8:	00004b21 	.word	0x00004b21
    59fc:	0001102c 	.word	0x0001102c
    5a00:	00011048 	.word	0x00011048
    5a04:	00011064 	.word	0x00011064
    5a08:	00004d15 	.word	0x00004d15

00005a0c <m2m_wifi_connect>:
{
	return hif_send(M2M_REQ_GRP_WIFI, M2M_WIFI_REQ_DEFAULT_CONNECT, NULL, 0,NULL, 0,0);
}

sint8 m2m_wifi_connect(char *pcSsid, uint8 u8SsidLen, uint8 u8SecType, void *pvAuthInfo, uint16 u16Ch)
{
    5a0c:	b510      	push	{r4, lr}
    5a0e:	b082      	sub	sp, #8
    5a10:	ac04      	add	r4, sp, #16
    5a12:	8824      	ldrh	r4, [r4, #0]
	return m2m_wifi_connect_sc(pcSsid, u8SsidLen, u8SecType, pvAuthInfo,  u16Ch,0);
    5a14:	9400      	str	r4, [sp, #0]
    5a16:	2400      	movs	r4, #0
    5a18:	9401      	str	r4, [sp, #4]
    5a1a:	4c02      	ldr	r4, [pc, #8]	; (5a24 <m2m_wifi_connect+0x18>)
    5a1c:	47a0      	blx	r4
}
    5a1e:	b002      	add	sp, #8
    5a20:	bd10      	pop	{r4, pc}
    5a22:	46c0      	nop			; (mov r8, r8)
    5a24:	0000583d 	.word	0x0000583d

00005a28 <m2m_wifi_disconnect>:
ERR1:
	return ret;
}

sint8 m2m_wifi_disconnect(void)
{
    5a28:	b510      	push	{r4, lr}
    5a2a:	b084      	sub	sp, #16
	return hif_send(M2M_REQ_GRP_WIFI, M2M_WIFI_REQ_DISCONNECT, NULL, 0, NULL, 0,0);
    5a2c:	2300      	movs	r3, #0
    5a2e:	9300      	str	r3, [sp, #0]
    5a30:	9301      	str	r3, [sp, #4]
    5a32:	9302      	str	r3, [sp, #8]
    5a34:	2001      	movs	r0, #1
    5a36:	212b      	movs	r1, #43	; 0x2b
    5a38:	2200      	movs	r2, #0
    5a3a:	4c02      	ldr	r4, [pc, #8]	; (5a44 <m2m_wifi_disconnect+0x1c>)
    5a3c:	47a0      	blx	r4
}
    5a3e:	b004      	add	sp, #16
    5a40:	bd10      	pop	{r4, pc}
    5a42:	46c0      	nop			; (mov r8, r8)
    5a44:	00004d15 	.word	0x00004d15

00005a48 <m2m_wifi_request_dhcp_client>:

sint8 m2m_wifi_request_dhcp_client(void)
{
	/*legacy API should be removed */
	return 0;
}
    5a48:	2000      	movs	r0, #0
    5a4a:	4770      	bx	lr

00005a4c <m2m_wifi_get_mac_address>:
@return      The function shall return M2M_SUCCESS for success and a negative value otherwise.
@sa          m2m_wifi_get_otp_mac_address
@pre         m2m_wifi_init required to call any WIFI/socket function
*/
sint8 m2m_wifi_get_mac_address(uint8 *pu8MacAddr)
{
    5a4c:	b510      	push	{r4, lr}
    5a4e:	1c04      	adds	r4, r0, #0
	sint8 ret = M2M_SUCCESS;
	ret = hif_chip_wake();
    5a50:	4b06      	ldr	r3, [pc, #24]	; (5a6c <m2m_wifi_get_mac_address+0x20>)
    5a52:	4798      	blx	r3
	if(ret == M2M_SUCCESS)
    5a54:	2800      	cmp	r0, #0
    5a56:	d106      	bne.n	5a66 <m2m_wifi_get_mac_address+0x1a>
	{
		ret = nmi_get_mac_address(pu8MacAddr);
    5a58:	1c20      	adds	r0, r4, #0
    5a5a:	4b05      	ldr	r3, [pc, #20]	; (5a70 <m2m_wifi_get_mac_address+0x24>)
    5a5c:	4798      	blx	r3
		if(ret == M2M_SUCCESS)
    5a5e:	2800      	cmp	r0, #0
    5a60:	d101      	bne.n	5a66 <m2m_wifi_get_mac_address+0x1a>
		{
			ret = hif_chip_sleep();
    5a62:	4b04      	ldr	r3, [pc, #16]	; (5a74 <m2m_wifi_get_mac_address+0x28>)
    5a64:	4798      	blx	r3
		}
	}

	return ret;
    5a66:	b240      	sxtb	r0, r0
}
    5a68:	bd10      	pop	{r4, pc}
    5a6a:	46c0      	nop			; (mov r8, r8)
    5a6c:	00004c41 	.word	0x00004c41
    5a70:	00005fb9 	.word	0x00005fb9
    5a74:	00004c99 	.word	0x00004c99

00005a78 <m2m_wifi_start_provision_mode>:
	return s8Ret;
}
#endif

sint8 m2m_wifi_start_provision_mode(tstrM2MAPConfig *pstrAPConfig, char *pcHttpServerDomainName, uint8 bEnableHttpRedirect)
{
    5a78:	b570      	push	{r4, r5, r6, lr}
    5a7a:	b0a8      	sub	sp, #160	; 0xa0
    5a7c:	1c04      	adds	r4, r0, #0
    5a7e:	1c0d      	adds	r5, r1, #0
    5a80:	1c16      	adds	r6, r2, #0
	sint8	s8Ret = M2M_ERR_FAIL;

	if((pstrAPConfig != NULL))
    5a82:	2800      	cmp	r0, #0
    5a84:	d032      	beq.n	5aec <m2m_wifi_start_provision_mode+0x74>
	{
		tstrM2MProvisionModeConfig	strProvConfig;
		if(M2M_SUCCESS == m2m_validate_ap_parameters(pstrAPConfig))
    5a86:	4b1b      	ldr	r3, [pc, #108]	; (5af4 <m2m_wifi_start_provision_mode+0x7c>)
    5a88:	4798      	blx	r3
}
#endif

sint8 m2m_wifi_start_provision_mode(tstrM2MAPConfig *pstrAPConfig, char *pcHttpServerDomainName, uint8 bEnableHttpRedirect)
{
	sint8	s8Ret = M2M_ERR_FAIL;
    5a8a:	23f4      	movs	r3, #244	; 0xf4

	if((pstrAPConfig != NULL))
	{
		tstrM2MProvisionModeConfig	strProvConfig;
		if(M2M_SUCCESS == m2m_validate_ap_parameters(pstrAPConfig))
    5a8c:	2800      	cmp	r0, #0
    5a8e:	d12e      	bne.n	5aee <m2m_wifi_start_provision_mode+0x76>
		{
			m2m_memcpy((uint8*)&strProvConfig.strApConfig, (uint8*)pstrAPConfig, sizeof(tstrM2MAPConfig));
    5a90:	a805      	add	r0, sp, #20
    5a92:	1c21      	adds	r1, r4, #0
    5a94:	2248      	movs	r2, #72	; 0x48
    5a96:	4b18      	ldr	r3, [pc, #96]	; (5af8 <m2m_wifi_start_provision_mode+0x80>)
    5a98:	4798      	blx	r3
			if((m2m_strlen((uint8 *)pcHttpServerDomainName) <= 0) || (NULL == pcHttpServerDomainName))
    5a9a:	1c28      	adds	r0, r5, #0
    5a9c:	4b17      	ldr	r3, [pc, #92]	; (5afc <m2m_wifi_start_provision_mode+0x84>)
    5a9e:	4798      	blx	r3
    5aa0:	2800      	cmp	r0, #0
    5aa2:	d001      	beq.n	5aa8 <m2m_wifi_start_provision_mode+0x30>
    5aa4:	2d00      	cmp	r5, #0
    5aa6:	d10b      	bne.n	5ac0 <m2m_wifi_start_provision_mode+0x48>
			{
				M2M_ERR("INVALID DOMAIN NAME\n");
    5aa8:	4815      	ldr	r0, [pc, #84]	; (5b00 <m2m_wifi_start_provision_mode+0x88>)
    5aaa:	4916      	ldr	r1, [pc, #88]	; (5b04 <m2m_wifi_start_provision_mode+0x8c>)
    5aac:	22fb      	movs	r2, #251	; 0xfb
    5aae:	0092      	lsls	r2, r2, #2
    5ab0:	4c15      	ldr	r4, [pc, #84]	; (5b08 <m2m_wifi_start_provision_mode+0x90>)
    5ab2:	47a0      	blx	r4
    5ab4:	4815      	ldr	r0, [pc, #84]	; (5b0c <m2m_wifi_start_provision_mode+0x94>)
    5ab6:	47a0      	blx	r4
    5ab8:	4815      	ldr	r0, [pc, #84]	; (5b10 <m2m_wifi_start_provision_mode+0x98>)
    5aba:	47a0      	blx	r4
}
#endif

sint8 m2m_wifi_start_provision_mode(tstrM2MAPConfig *pstrAPConfig, char *pcHttpServerDomainName, uint8 bEnableHttpRedirect)
{
	sint8	s8Ret = M2M_ERR_FAIL;
    5abc:	23f4      	movs	r3, #244	; 0xf4
    5abe:	e016      	b.n	5aee <m2m_wifi_start_provision_mode+0x76>
			if((m2m_strlen((uint8 *)pcHttpServerDomainName) <= 0) || (NULL == pcHttpServerDomainName))
			{
				M2M_ERR("INVALID DOMAIN NAME\n");
				goto ERR1;
			}
			m2m_memcpy((uint8*)strProvConfig.acHttpServerDomainName, (uint8*)pcHttpServerDomainName, 64);
    5ac0:	ac05      	add	r4, sp, #20
    5ac2:	a817      	add	r0, sp, #92	; 0x5c
    5ac4:	1c29      	adds	r1, r5, #0
    5ac6:	2240      	movs	r2, #64	; 0x40
    5ac8:	4b0b      	ldr	r3, [pc, #44]	; (5af8 <m2m_wifi_start_provision_mode+0x80>)
    5aca:	4798      	blx	r3
			strProvConfig.u8EnableRedirect = bEnableHttpRedirect;
    5acc:	2388      	movs	r3, #136	; 0x88
    5ace:	54e6      	strb	r6, [r4, r3]

			/* Stop Scan if it is ongoing.
			*/
			gu8scanInProgress = 0;
    5ad0:	2300      	movs	r3, #0
    5ad2:	4a10      	ldr	r2, [pc, #64]	; (5b14 <m2m_wifi_start_provision_mode+0x9c>)
    5ad4:	7013      	strb	r3, [r2, #0]
			s8Ret = hif_send(M2M_REQ_GRP_WIFI, M2M_WIFI_REQ_START_PROVISION_MODE | M2M_REQ_DATA_PKT,
    5ad6:	9300      	str	r3, [sp, #0]
    5ad8:	9301      	str	r3, [sp, #4]
    5ada:	9302      	str	r3, [sp, #8]
    5adc:	2001      	movs	r0, #1
    5ade:	2188      	movs	r1, #136	; 0x88
    5ae0:	1c22      	adds	r2, r4, #0
    5ae2:	338c      	adds	r3, #140	; 0x8c
    5ae4:	4c0c      	ldr	r4, [pc, #48]	; (5b18 <m2m_wifi_start_provision_mode+0xa0>)
    5ae6:	47a0      	blx	r4
    5ae8:	1c03      	adds	r3, r0, #0
    5aea:	e000      	b.n	5aee <m2m_wifi_start_provision_mode+0x76>
}
#endif

sint8 m2m_wifi_start_provision_mode(tstrM2MAPConfig *pstrAPConfig, char *pcHttpServerDomainName, uint8 bEnableHttpRedirect)
{
	sint8	s8Ret = M2M_ERR_FAIL;
    5aec:	23f4      	movs	r3, #244	; 0xf4
		{
			/*goto ERR1;*/
		}
	}
ERR1:
	return s8Ret;
    5aee:	b258      	sxtb	r0, r3
}
    5af0:	b028      	add	sp, #160	; 0xa0
    5af2:	bd70      	pop	{r4, r5, r6, pc}
    5af4:	00005665 	.word	0x00005665
    5af8:	00004b21 	.word	0x00004b21
    5afc:	00004b45 	.word	0x00004b45
    5b00:	00010c04 	.word	0x00010c04
    5b04:	00010ef4 	.word	0x00010ef4
    5b08:	000090f5 	.word	0x000090f5
    5b0c:	000110e8 	.word	0x000110e8
    5b10:	0000f0d0 	.word	0x0000f0d0
    5b14:	20000694 	.word	0x20000694
    5b18:	00004d15 	.word	0x00004d15

00005b1c <chip_apply_conf>:
    5b1c:	b5f0      	push	{r4, r5, r6, r7, lr}
    5b1e:	b083      	sub	sp, #12
    5b20:	1c04      	adds	r4, r0, #0
    5b22:	25a5      	movs	r5, #165	; 0xa5
    5b24:	016d      	lsls	r5, r5, #5
    5b26:	4e0a      	ldr	r6, [pc, #40]	; (5b50 <chip_apply_conf+0x34>)
    5b28:	4f0a      	ldr	r7, [pc, #40]	; (5b54 <chip_apply_conf+0x38>)
    5b2a:	1c28      	adds	r0, r5, #0
    5b2c:	1c21      	adds	r1, r4, #0
    5b2e:	47b0      	blx	r6
    5b30:	2c00      	cmp	r4, #0
    5b32:	d009      	beq.n	5b48 <chip_apply_conf+0x2c>
    5b34:	2300      	movs	r3, #0
    5b36:	9301      	str	r3, [sp, #4]
    5b38:	1c28      	adds	r0, r5, #0
    5b3a:	a901      	add	r1, sp, #4
    5b3c:	47b8      	blx	r7
    5b3e:	2800      	cmp	r0, #0
    5b40:	d1f3      	bne.n	5b2a <chip_apply_conf+0xe>
    5b42:	9b01      	ldr	r3, [sp, #4]
    5b44:	429c      	cmp	r4, r3
    5b46:	d1f0      	bne.n	5b2a <chip_apply_conf+0xe>
    5b48:	2000      	movs	r0, #0
    5b4a:	b003      	add	sp, #12
    5b4c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5b4e:	46c0      	nop			; (mov r8, r8)
    5b50:	00006031 	.word	0x00006031
    5b54:	00006025 	.word	0x00006025

00005b58 <nm_clkless_wake>:
    5b58:	b5f0      	push	{r4, r5, r6, r7, lr}
    5b5a:	465f      	mov	r7, fp
    5b5c:	4656      	mov	r6, sl
    5b5e:	4645      	mov	r5, r8
    5b60:	b4e0      	push	{r5, r6, r7}
    5b62:	b084      	sub	sp, #16
    5b64:	2001      	movs	r0, #1
    5b66:	a903      	add	r1, sp, #12
    5b68:	4b37      	ldr	r3, [pc, #220]	; (5c48 <nm_clkless_wake+0xf0>)
    5b6a:	4798      	blx	r3
    5b6c:	9001      	str	r0, [sp, #4]
    5b6e:	2400      	movs	r4, #0
    5b70:	2800      	cmp	r0, #0
    5b72:	d00b      	beq.n	5b8c <nm_clkless_wake+0x34>
    5b74:	4835      	ldr	r0, [pc, #212]	; (5c4c <nm_clkless_wake+0xf4>)
    5b76:	4936      	ldr	r1, [pc, #216]	; (5c50 <nm_clkless_wake+0xf8>)
    5b78:	226f      	movs	r2, #111	; 0x6f
    5b7a:	4b36      	ldr	r3, [pc, #216]	; (5c54 <nm_clkless_wake+0xfc>)
    5b7c:	4798      	blx	r3
    5b7e:	4836      	ldr	r0, [pc, #216]	; (5c58 <nm_clkless_wake+0x100>)
    5b80:	4b36      	ldr	r3, [pc, #216]	; (5c5c <nm_clkless_wake+0x104>)
    5b82:	4798      	blx	r3
    5b84:	200d      	movs	r0, #13
    5b86:	4b36      	ldr	r3, [pc, #216]	; (5c60 <nm_clkless_wake+0x108>)
    5b88:	4798      	blx	r3
    5b8a:	e053      	b.n	5c34 <nm_clkless_wake+0xdc>
    5b8c:	4b35      	ldr	r3, [pc, #212]	; (5c64 <nm_clkless_wake+0x10c>)
    5b8e:	469b      	mov	fp, r3
    5b90:	4b35      	ldr	r3, [pc, #212]	; (5c68 <nm_clkless_wake+0x110>)
    5b92:	469a      	mov	sl, r3
    5b94:	4b2c      	ldr	r3, [pc, #176]	; (5c48 <nm_clkless_wake+0xf0>)
    5b96:	4698      	mov	r8, r3
    5b98:	2102      	movs	r1, #2
    5b9a:	9b03      	ldr	r3, [sp, #12]
    5b9c:	4319      	orrs	r1, r3
    5b9e:	2001      	movs	r0, #1
    5ba0:	47d8      	blx	fp
    5ba2:	4653      	mov	r3, sl
    5ba4:	6818      	ldr	r0, [r3, #0]
    5ba6:	a902      	add	r1, sp, #8
    5ba8:	47c0      	blx	r8
    5baa:	2800      	cmp	r0, #0
    5bac:	d106      	bne.n	5bbc <nm_clkless_wake+0x64>
    5bae:	9b02      	ldr	r3, [sp, #8]
    5bb0:	2b00      	cmp	r3, #0
    5bb2:	d003      	beq.n	5bbc <nm_clkless_wake+0x64>
    5bb4:	4d2d      	ldr	r5, [pc, #180]	; (5c6c <nm_clkless_wake+0x114>)
    5bb6:	4f2e      	ldr	r7, [pc, #184]	; (5c70 <nm_clkless_wake+0x118>)
    5bb8:	4e2b      	ldr	r6, [pc, #172]	; (5c68 <nm_clkless_wake+0x110>)
    5bba:	e029      	b.n	5c10 <nm_clkless_wake+0xb8>
    5bbc:	220e      	movs	r2, #14
    5bbe:	4b2a      	ldr	r3, [pc, #168]	; (5c68 <nm_clkless_wake+0x110>)
    5bc0:	601a      	str	r2, [r3, #0]
    5bc2:	200e      	movs	r0, #14
    5bc4:	a902      	add	r1, sp, #8
    5bc6:	4b20      	ldr	r3, [pc, #128]	; (5c48 <nm_clkless_wake+0xf0>)
    5bc8:	4798      	blx	r3
    5bca:	1e05      	subs	r5, r0, #0
    5bcc:	d0f2      	beq.n	5bb4 <nm_clkless_wake+0x5c>
    5bce:	481f      	ldr	r0, [pc, #124]	; (5c4c <nm_clkless_wake+0xf4>)
    5bd0:	491f      	ldr	r1, [pc, #124]	; (5c50 <nm_clkless_wake+0xf8>)
    5bd2:	2285      	movs	r2, #133	; 0x85
    5bd4:	4b1f      	ldr	r3, [pc, #124]	; (5c54 <nm_clkless_wake+0xfc>)
    5bd6:	4798      	blx	r3
    5bd8:	4826      	ldr	r0, [pc, #152]	; (5c74 <nm_clkless_wake+0x11c>)
    5bda:	4b20      	ldr	r3, [pc, #128]	; (5c5c <nm_clkless_wake+0x104>)
    5bdc:	4798      	blx	r3
    5bde:	200d      	movs	r0, #13
    5be0:	4b1f      	ldr	r3, [pc, #124]	; (5c60 <nm_clkless_wake+0x108>)
    5be2:	4798      	blx	r3
    5be4:	9501      	str	r5, [sp, #4]
    5be6:	e025      	b.n	5c34 <nm_clkless_wake+0xdc>
    5be8:	2001      	movs	r0, #1
    5bea:	47b8      	blx	r7
    5bec:	6830      	ldr	r0, [r6, #0]
    5bee:	a902      	add	r1, sp, #8
    5bf0:	4b15      	ldr	r3, [pc, #84]	; (5c48 <nm_clkless_wake+0xf0>)
    5bf2:	4798      	blx	r3
    5bf4:	9b02      	ldr	r3, [sp, #8]
    5bf6:	075b      	lsls	r3, r3, #29
    5bf8:	d40a      	bmi.n	5c10 <nm_clkless_wake+0xb8>
    5bfa:	4814      	ldr	r0, [pc, #80]	; (5c4c <nm_clkless_wake+0xf4>)
    5bfc:	4914      	ldr	r1, [pc, #80]	; (5c50 <nm_clkless_wake+0xf8>)
    5bfe:	2298      	movs	r2, #152	; 0x98
    5c00:	4b14      	ldr	r3, [pc, #80]	; (5c54 <nm_clkless_wake+0xfc>)
    5c02:	4798      	blx	r3
    5c04:	481c      	ldr	r0, [pc, #112]	; (5c78 <nm_clkless_wake+0x120>)
    5c06:	4b15      	ldr	r3, [pc, #84]	; (5c5c <nm_clkless_wake+0x104>)
    5c08:	4798      	blx	r3
    5c0a:	200d      	movs	r0, #13
    5c0c:	4b14      	ldr	r3, [pc, #80]	; (5c60 <nm_clkless_wake+0x108>)
    5c0e:	4798      	blx	r3
    5c10:	9b02      	ldr	r3, [sp, #8]
    5c12:	075b      	lsls	r3, r3, #29
    5c14:	d40e      	bmi.n	5c34 <nm_clkless_wake+0xdc>
    5c16:	3401      	adds	r4, #1
    5c18:	1c20      	adds	r0, r4, #0
    5c1a:	2103      	movs	r1, #3
    5c1c:	47a8      	blx	r5
    5c1e:	2900      	cmp	r1, #0
    5c20:	d0e2      	beq.n	5be8 <nm_clkless_wake+0x90>
    5c22:	2102      	movs	r1, #2
    5c24:	9b03      	ldr	r3, [sp, #12]
    5c26:	4319      	orrs	r1, r3
    5c28:	2001      	movs	r0, #1
    5c2a:	4b0e      	ldr	r3, [pc, #56]	; (5c64 <nm_clkless_wake+0x10c>)
    5c2c:	4798      	blx	r3
    5c2e:	9b02      	ldr	r3, [sp, #8]
    5c30:	075b      	lsls	r3, r3, #29
    5c32:	d5b1      	bpl.n	5b98 <nm_clkless_wake+0x40>
    5c34:	466b      	mov	r3, sp
    5c36:	2004      	movs	r0, #4
    5c38:	5618      	ldrsb	r0, [r3, r0]
    5c3a:	b004      	add	sp, #16
    5c3c:	bc1c      	pop	{r2, r3, r4}
    5c3e:	4690      	mov	r8, r2
    5c40:	469a      	mov	sl, r3
    5c42:	46a3      	mov	fp, r4
    5c44:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5c46:	46c0      	nop			; (mov r8, r8)
    5c48:	00006025 	.word	0x00006025
    5c4c:	00010c04 	.word	0x00010c04
    5c50:	00011234 	.word	0x00011234
    5c54:	0000c7a9 	.word	0x0000c7a9
    5c58:	00011120 	.word	0x00011120
    5c5c:	0000c8c9 	.word	0x0000c8c9
    5c60:	0000c7dd 	.word	0x0000c7dd
    5c64:	00006031 	.word	0x00006031
    5c68:	20000058 	.word	0x20000058
    5c6c:	00009d81 	.word	0x00009d81
    5c70:	00004785 	.word	0x00004785
    5c74:	00011140 	.word	0x00011140
    5c78:	00011160 	.word	0x00011160

00005c7c <enable_interrupts>:
    5c7c:	b500      	push	{lr}
    5c7e:	b083      	sub	sp, #12
    5c80:	4816      	ldr	r0, [pc, #88]	; (5cdc <enable_interrupts+0x60>)
    5c82:	a901      	add	r1, sp, #4
    5c84:	4b16      	ldr	r3, [pc, #88]	; (5ce0 <enable_interrupts+0x64>)
    5c86:	4798      	blx	r3
    5c88:	2800      	cmp	r0, #0
    5c8a:	d11c      	bne.n	5cc6 <enable_interrupts+0x4a>
    5c8c:	2180      	movs	r1, #128	; 0x80
    5c8e:	0049      	lsls	r1, r1, #1
    5c90:	9b01      	ldr	r3, [sp, #4]
    5c92:	4319      	orrs	r1, r3
    5c94:	9101      	str	r1, [sp, #4]
    5c96:	4811      	ldr	r0, [pc, #68]	; (5cdc <enable_interrupts+0x60>)
    5c98:	4b12      	ldr	r3, [pc, #72]	; (5ce4 <enable_interrupts+0x68>)
    5c9a:	4798      	blx	r3
    5c9c:	2800      	cmp	r0, #0
    5c9e:	d114      	bne.n	5cca <enable_interrupts+0x4e>
    5ca0:	20d0      	movs	r0, #208	; 0xd0
    5ca2:	0140      	lsls	r0, r0, #5
    5ca4:	a901      	add	r1, sp, #4
    5ca6:	4b0e      	ldr	r3, [pc, #56]	; (5ce0 <enable_interrupts+0x64>)
    5ca8:	4798      	blx	r3
    5caa:	2800      	cmp	r0, #0
    5cac:	d10f      	bne.n	5cce <enable_interrupts+0x52>
    5cae:	2180      	movs	r1, #128	; 0x80
    5cb0:	0249      	lsls	r1, r1, #9
    5cb2:	9b01      	ldr	r3, [sp, #4]
    5cb4:	4319      	orrs	r1, r3
    5cb6:	9101      	str	r1, [sp, #4]
    5cb8:	20d0      	movs	r0, #208	; 0xd0
    5cba:	0140      	lsls	r0, r0, #5
    5cbc:	4b09      	ldr	r3, [pc, #36]	; (5ce4 <enable_interrupts+0x68>)
    5cbe:	4798      	blx	r3
    5cc0:	2800      	cmp	r0, #0
    5cc2:	d106      	bne.n	5cd2 <enable_interrupts+0x56>
    5cc4:	e006      	b.n	5cd4 <enable_interrupts+0x58>
    5cc6:	20fa      	movs	r0, #250	; 0xfa
    5cc8:	e004      	b.n	5cd4 <enable_interrupts+0x58>
    5cca:	20fa      	movs	r0, #250	; 0xfa
    5ccc:	e002      	b.n	5cd4 <enable_interrupts+0x58>
    5cce:	20fa      	movs	r0, #250	; 0xfa
    5cd0:	e000      	b.n	5cd4 <enable_interrupts+0x58>
    5cd2:	20fa      	movs	r0, #250	; 0xfa
    5cd4:	b240      	sxtb	r0, r0
    5cd6:	b003      	add	sp, #12
    5cd8:	bd00      	pop	{pc}
    5cda:	46c0      	nop			; (mov r8, r8)
    5cdc:	00001408 	.word	0x00001408
    5ce0:	00006025 	.word	0x00006025
    5ce4:	00006031 	.word	0x00006031

00005ce8 <nmi_get_chipid>:
    5ce8:	b510      	push	{r4, lr}
    5cea:	b082      	sub	sp, #8
    5cec:	4b20      	ldr	r3, [pc, #128]	; (5d70 <nmi_get_chipid+0x88>)
    5cee:	681c      	ldr	r4, [r3, #0]
    5cf0:	2c00      	cmp	r4, #0
    5cf2:	d137      	bne.n	5d64 <nmi_get_chipid+0x7c>
    5cf4:	2080      	movs	r0, #128	; 0x80
    5cf6:	0140      	lsls	r0, r0, #5
    5cf8:	1c19      	adds	r1, r3, #0
    5cfa:	4b1e      	ldr	r3, [pc, #120]	; (5d74 <nmi_get_chipid+0x8c>)
    5cfc:	4798      	blx	r3
    5cfe:	2800      	cmp	r0, #0
    5d00:	d003      	beq.n	5d0a <nmi_get_chipid+0x22>
    5d02:	2200      	movs	r2, #0
    5d04:	4b1a      	ldr	r3, [pc, #104]	; (5d70 <nmi_get_chipid+0x88>)
    5d06:	601a      	str	r2, [r3, #0]
    5d08:	e02e      	b.n	5d68 <nmi_get_chipid+0x80>
    5d0a:	481b      	ldr	r0, [pc, #108]	; (5d78 <nmi_get_chipid+0x90>)
    5d0c:	a901      	add	r1, sp, #4
    5d0e:	4b19      	ldr	r3, [pc, #100]	; (5d74 <nmi_get_chipid+0x8c>)
    5d10:	4798      	blx	r3
    5d12:	2800      	cmp	r0, #0
    5d14:	d003      	beq.n	5d1e <nmi_get_chipid+0x36>
    5d16:	2200      	movs	r2, #0
    5d18:	4b15      	ldr	r3, [pc, #84]	; (5d70 <nmi_get_chipid+0x88>)
    5d1a:	601a      	str	r2, [r3, #0]
    5d1c:	e024      	b.n	5d68 <nmi_get_chipid+0x80>
    5d1e:	4b14      	ldr	r3, [pc, #80]	; (5d70 <nmi_get_chipid+0x88>)
    5d20:	681b      	ldr	r3, [r3, #0]
    5d22:	4a16      	ldr	r2, [pc, #88]	; (5d7c <nmi_get_chipid+0x94>)
    5d24:	4293      	cmp	r3, r2
    5d26:	d106      	bne.n	5d36 <nmi_get_chipid+0x4e>
    5d28:	9b01      	ldr	r3, [sp, #4]
    5d2a:	2b01      	cmp	r3, #1
    5d2c:	d012      	beq.n	5d54 <nmi_get_chipid+0x6c>
    5d2e:	4a14      	ldr	r2, [pc, #80]	; (5d80 <nmi_get_chipid+0x98>)
    5d30:	4b0f      	ldr	r3, [pc, #60]	; (5d70 <nmi_get_chipid+0x88>)
    5d32:	601a      	str	r2, [r3, #0]
    5d34:	e00e      	b.n	5d54 <nmi_get_chipid+0x6c>
    5d36:	4a13      	ldr	r2, [pc, #76]	; (5d84 <nmi_get_chipid+0x9c>)
    5d38:	4293      	cmp	r3, r2
    5d3a:	d10b      	bne.n	5d54 <nmi_get_chipid+0x6c>
    5d3c:	9b01      	ldr	r3, [sp, #4]
    5d3e:	2b03      	cmp	r3, #3
    5d40:	d008      	beq.n	5d54 <nmi_get_chipid+0x6c>
    5d42:	2b04      	cmp	r3, #4
    5d44:	d103      	bne.n	5d4e <nmi_get_chipid+0x66>
    5d46:	4a10      	ldr	r2, [pc, #64]	; (5d88 <nmi_get_chipid+0xa0>)
    5d48:	4b09      	ldr	r3, [pc, #36]	; (5d70 <nmi_get_chipid+0x88>)
    5d4a:	601a      	str	r2, [r3, #0]
    5d4c:	e002      	b.n	5d54 <nmi_get_chipid+0x6c>
    5d4e:	4a0f      	ldr	r2, [pc, #60]	; (5d8c <nmi_get_chipid+0xa4>)
    5d50:	4b07      	ldr	r3, [pc, #28]	; (5d70 <nmi_get_chipid+0x88>)
    5d52:	601a      	str	r2, [r3, #0]
    5d54:	4a06      	ldr	r2, [pc, #24]	; (5d70 <nmi_get_chipid+0x88>)
    5d56:	4b0e      	ldr	r3, [pc, #56]	; (5d90 <nmi_get_chipid+0xa8>)
    5d58:	6811      	ldr	r1, [r2, #0]
    5d5a:	400b      	ands	r3, r1
    5d5c:	21a0      	movs	r1, #160	; 0xa0
    5d5e:	02c9      	lsls	r1, r1, #11
    5d60:	430b      	orrs	r3, r1
    5d62:	6013      	str	r3, [r2, #0]
    5d64:	4b02      	ldr	r3, [pc, #8]	; (5d70 <nmi_get_chipid+0x88>)
    5d66:	681c      	ldr	r4, [r3, #0]
    5d68:	1c20      	adds	r0, r4, #0
    5d6a:	b002      	add	sp, #8
    5d6c:	bd10      	pop	{r4, pc}
    5d6e:	46c0      	nop			; (mov r8, r8)
    5d70:	20000698 	.word	0x20000698
    5d74:	00006025 	.word	0x00006025
    5d78:	000013f4 	.word	0x000013f4
    5d7c:	001002a0 	.word	0x001002a0
    5d80:	001002a1 	.word	0x001002a1
    5d84:	001002b0 	.word	0x001002b0
    5d88:	001002b1 	.word	0x001002b1
    5d8c:	001002b2 	.word	0x001002b2
    5d90:	fff0ffff 	.word	0xfff0ffff

00005d94 <wait_for_bootrom>:
    5d94:	b5f0      	push	{r4, r5, r6, r7, lr}
    5d96:	4647      	mov	r7, r8
    5d98:	b480      	push	{r7}
    5d9a:	4680      	mov	r8, r0
    5d9c:	4d23      	ldr	r5, [pc, #140]	; (5e2c <wait_for_bootrom+0x98>)
    5d9e:	4c24      	ldr	r4, [pc, #144]	; (5e30 <wait_for_bootrom+0x9c>)
    5da0:	4e24      	ldr	r6, [pc, #144]	; (5e34 <wait_for_bootrom+0xa0>)
    5da2:	1c28      	adds	r0, r5, #0
    5da4:	47a0      	blx	r4
    5da6:	2800      	cmp	r0, #0
    5da8:	db02      	blt.n	5db0 <wait_for_bootrom+0x1c>
    5daa:	2001      	movs	r0, #1
    5dac:	47b0      	blx	r6
    5dae:	e7f8      	b.n	5da2 <wait_for_bootrom+0xe>
    5db0:	4821      	ldr	r0, [pc, #132]	; (5e38 <wait_for_bootrom+0xa4>)
    5db2:	4b1f      	ldr	r3, [pc, #124]	; (5e30 <wait_for_bootrom+0x9c>)
    5db4:	4798      	blx	r3
    5db6:	07c3      	lsls	r3, r0, #31
    5db8:	d527      	bpl.n	5e0a <wait_for_bootrom+0x76>
    5dba:	e008      	b.n	5dce <wait_for_bootrom+0x3a>
    5dbc:	2001      	movs	r0, #1
    5dbe:	47b8      	blx	r7
    5dc0:	481e      	ldr	r0, [pc, #120]	; (5e3c <wait_for_bootrom+0xa8>)
    5dc2:	47b0      	blx	r6
    5dc4:	3c01      	subs	r4, #1
    5dc6:	2c00      	cmp	r4, #0
    5dc8:	d01d      	beq.n	5e06 <wait_for_bootrom+0x72>
    5dca:	42a8      	cmp	r0, r5
    5dcc:	d1f6      	bne.n	5dbc <wait_for_bootrom+0x28>
    5dce:	4643      	mov	r3, r8
    5dd0:	2b02      	cmp	r3, #2
    5dd2:	d103      	bne.n	5ddc <wait_for_bootrom+0x48>
    5dd4:	481a      	ldr	r0, [pc, #104]	; (5e40 <wait_for_bootrom+0xac>)
    5dd6:	491b      	ldr	r1, [pc, #108]	; (5e44 <wait_for_bootrom+0xb0>)
    5dd8:	4b1b      	ldr	r3, [pc, #108]	; (5e48 <wait_for_bootrom+0xb4>)
    5dda:	4798      	blx	r3
    5ddc:	4b1b      	ldr	r3, [pc, #108]	; (5e4c <wait_for_bootrom+0xb8>)
    5dde:	4798      	blx	r3
    5de0:	0500      	lsls	r0, r0, #20
    5de2:	0d00      	lsrs	r0, r0, #20
    5de4:	23e8      	movs	r3, #232	; 0xe8
    5de6:	009b      	lsls	r3, r3, #2
    5de8:	4298      	cmp	r0, r3
    5dea:	d103      	bne.n	5df4 <wait_for_bootrom+0x60>
    5dec:	2002      	movs	r0, #2
    5dee:	4b18      	ldr	r3, [pc, #96]	; (5e50 <wait_for_bootrom+0xbc>)
    5df0:	4798      	blx	r3
    5df2:	e002      	b.n	5dfa <wait_for_bootrom+0x66>
    5df4:	2000      	movs	r0, #0
    5df6:	4b16      	ldr	r3, [pc, #88]	; (5e50 <wait_for_bootrom+0xbc>)
    5df8:	4798      	blx	r3
    5dfa:	4810      	ldr	r0, [pc, #64]	; (5e3c <wait_for_bootrom+0xa8>)
    5dfc:	4915      	ldr	r1, [pc, #84]	; (5e54 <wait_for_bootrom+0xc0>)
    5dfe:	4b12      	ldr	r3, [pc, #72]	; (5e48 <wait_for_bootrom+0xb4>)
    5e00:	4798      	blx	r3
    5e02:	2000      	movs	r0, #0
    5e04:	e00d      	b.n	5e22 <wait_for_bootrom+0x8e>
    5e06:	20fb      	movs	r0, #251	; 0xfb
    5e08:	e00b      	b.n	5e22 <wait_for_bootrom+0x8e>
    5e0a:	2001      	movs	r0, #1
    5e0c:	4b09      	ldr	r3, [pc, #36]	; (5e34 <wait_for_bootrom+0xa0>)
    5e0e:	4798      	blx	r3
    5e10:	480a      	ldr	r0, [pc, #40]	; (5e3c <wait_for_bootrom+0xa8>)
    5e12:	4b07      	ldr	r3, [pc, #28]	; (5e30 <wait_for_bootrom+0x9c>)
    5e14:	4798      	blx	r3
    5e16:	24fa      	movs	r4, #250	; 0xfa
    5e18:	00e4      	lsls	r4, r4, #3
    5e1a:	4d0f      	ldr	r5, [pc, #60]	; (5e58 <wait_for_bootrom+0xc4>)
    5e1c:	4f05      	ldr	r7, [pc, #20]	; (5e34 <wait_for_bootrom+0xa0>)
    5e1e:	4e04      	ldr	r6, [pc, #16]	; (5e30 <wait_for_bootrom+0x9c>)
    5e20:	e7d3      	b.n	5dca <wait_for_bootrom+0x36>
    5e22:	b240      	sxtb	r0, r0
    5e24:	bc04      	pop	{r2}
    5e26:	4690      	mov	r8, r2
    5e28:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5e2a:	46c0      	nop			; (mov r8, r8)
    5e2c:	00001014 	.word	0x00001014
    5e30:	00006019 	.word	0x00006019
    5e34:	00004785 	.word	0x00004785
    5e38:	000207bc 	.word	0x000207bc
    5e3c:	000c000c 	.word	0x000c000c
    5e40:	000207ac 	.word	0x000207ac
    5e44:	3c1cd57d 	.word	0x3c1cd57d
    5e48:	00006031 	.word	0x00006031
    5e4c:	00005ce9 	.word	0x00005ce9
    5e50:	00005b1d 	.word	0x00005b1d
    5e54:	ef522f61 	.word	0xef522f61
    5e58:	10add09e 	.word	0x10add09e

00005e5c <wait_for_firmware_start>:
    5e5c:	b570      	push	{r4, r5, r6, lr}
    5e5e:	b082      	sub	sp, #8
    5e60:	4b14      	ldr	r3, [pc, #80]	; (5eb4 <wait_for_firmware_start+0x58>)
    5e62:	9301      	str	r3, [sp, #4]
    5e64:	4b14      	ldr	r3, [pc, #80]	; (5eb8 <wait_for_firmware_start+0x5c>)
    5e66:	9300      	str	r3, [sp, #0]
    5e68:	2802      	cmp	r0, #2
    5e6a:	d10c      	bne.n	5e86 <wait_for_firmware_start+0x2a>
    5e6c:	4b13      	ldr	r3, [pc, #76]	; (5ebc <wait_for_firmware_start+0x60>)
    5e6e:	9301      	str	r3, [sp, #4]
    5e70:	4b13      	ldr	r3, [pc, #76]	; (5ec0 <wait_for_firmware_start+0x64>)
    5e72:	9300      	str	r3, [sp, #0]
    5e74:	e007      	b.n	5e86 <wait_for_firmware_start+0x2a>
    5e76:	2002      	movs	r0, #2
    5e78:	47b0      	blx	r6
    5e7a:	9801      	ldr	r0, [sp, #4]
    5e7c:	47a8      	blx	r5
    5e7e:	3c01      	subs	r4, #1
    5e80:	2c00      	cmp	r4, #0
    5e82:	d104      	bne.n	5e8e <wait_for_firmware_start+0x32>
    5e84:	e011      	b.n	5eaa <wait_for_firmware_start+0x4e>
    5e86:	4c0f      	ldr	r4, [pc, #60]	; (5ec4 <wait_for_firmware_start+0x68>)
    5e88:	2000      	movs	r0, #0
    5e8a:	4e0f      	ldr	r6, [pc, #60]	; (5ec8 <wait_for_firmware_start+0x6c>)
    5e8c:	4d0f      	ldr	r5, [pc, #60]	; (5ecc <wait_for_firmware_start+0x70>)
    5e8e:	9b00      	ldr	r3, [sp, #0]
    5e90:	4283      	cmp	r3, r0
    5e92:	d1f0      	bne.n	5e76 <wait_for_firmware_start+0x1a>
    5e94:	9a00      	ldr	r2, [sp, #0]
    5e96:	2000      	movs	r0, #0
    5e98:	4b07      	ldr	r3, [pc, #28]	; (5eb8 <wait_for_firmware_start+0x5c>)
    5e9a:	429a      	cmp	r2, r3
    5e9c:	d106      	bne.n	5eac <wait_for_firmware_start+0x50>
    5e9e:	4805      	ldr	r0, [pc, #20]	; (5eb4 <wait_for_firmware_start+0x58>)
    5ea0:	2100      	movs	r1, #0
    5ea2:	4b0b      	ldr	r3, [pc, #44]	; (5ed0 <wait_for_firmware_start+0x74>)
    5ea4:	4798      	blx	r3
    5ea6:	2000      	movs	r0, #0
    5ea8:	e000      	b.n	5eac <wait_for_firmware_start+0x50>
    5eaa:	20fb      	movs	r0, #251	; 0xfb
    5eac:	b240      	sxtb	r0, r0
    5eae:	b002      	add	sp, #8
    5eb0:	bd70      	pop	{r4, r5, r6, pc}
    5eb2:	46c0      	nop			; (mov r8, r8)
    5eb4:	0000108c 	.word	0x0000108c
    5eb8:	02532636 	.word	0x02532636
    5ebc:	000207ac 	.word	0x000207ac
    5ec0:	d75dc1c3 	.word	0xd75dc1c3
    5ec4:	000007d1 	.word	0x000007d1
    5ec8:	00004785 	.word	0x00004785
    5ecc:	00006019 	.word	0x00006019
    5ed0:	00006031 	.word	0x00006031

00005ed4 <chip_deinit>:
    5ed4:	b5f0      	push	{r4, r5, r6, r7, lr}
    5ed6:	b083      	sub	sp, #12
    5ed8:	2300      	movs	r3, #0
    5eda:	9301      	str	r3, [sp, #4]
    5edc:	20a0      	movs	r0, #160	; 0xa0
    5ede:	0140      	lsls	r0, r0, #5
    5ee0:	a901      	add	r1, sp, #4
    5ee2:	4b28      	ldr	r3, [pc, #160]	; (5f84 <chip_deinit+0xb0>)
    5ee4:	4798      	blx	r3
    5ee6:	2800      	cmp	r0, #0
    5ee8:	d00b      	beq.n	5f02 <chip_deinit+0x2e>
    5eea:	4827      	ldr	r0, [pc, #156]	; (5f88 <chip_deinit+0xb4>)
    5eec:	4927      	ldr	r1, [pc, #156]	; (5f8c <chip_deinit+0xb8>)
    5eee:	2293      	movs	r2, #147	; 0x93
    5ef0:	0092      	lsls	r2, r2, #2
    5ef2:	4b27      	ldr	r3, [pc, #156]	; (5f90 <chip_deinit+0xbc>)
    5ef4:	4798      	blx	r3
    5ef6:	4827      	ldr	r0, [pc, #156]	; (5f94 <chip_deinit+0xc0>)
    5ef8:	4b27      	ldr	r3, [pc, #156]	; (5f98 <chip_deinit+0xc4>)
    5efa:	4798      	blx	r3
    5efc:	200d      	movs	r0, #13
    5efe:	4b27      	ldr	r3, [pc, #156]	; (5f9c <chip_deinit+0xc8>)
    5f00:	4798      	blx	r3
    5f02:	4927      	ldr	r1, [pc, #156]	; (5fa0 <chip_deinit+0xcc>)
    5f04:	9b01      	ldr	r3, [sp, #4]
    5f06:	4019      	ands	r1, r3
    5f08:	9101      	str	r1, [sp, #4]
    5f0a:	20a0      	movs	r0, #160	; 0xa0
    5f0c:	0140      	lsls	r0, r0, #5
    5f0e:	4b25      	ldr	r3, [pc, #148]	; (5fa4 <chip_deinit+0xd0>)
    5f10:	4798      	blx	r3
    5f12:	1c04      	adds	r4, r0, #0
    5f14:	260a      	movs	r6, #10
    5f16:	2800      	cmp	r0, #0
    5f18:	d00c      	beq.n	5f34 <chip_deinit+0x60>
    5f1a:	481b      	ldr	r0, [pc, #108]	; (5f88 <chip_deinit+0xb4>)
    5f1c:	491b      	ldr	r1, [pc, #108]	; (5f8c <chip_deinit+0xb8>)
    5f1e:	4a22      	ldr	r2, [pc, #136]	; (5fa8 <chip_deinit+0xd4>)
    5f20:	4b1b      	ldr	r3, [pc, #108]	; (5f90 <chip_deinit+0xbc>)
    5f22:	4798      	blx	r3
    5f24:	4821      	ldr	r0, [pc, #132]	; (5fac <chip_deinit+0xd8>)
    5f26:	4b1c      	ldr	r3, [pc, #112]	; (5f98 <chip_deinit+0xc4>)
    5f28:	4798      	blx	r3
    5f2a:	200d      	movs	r0, #13
    5f2c:	4b1b      	ldr	r3, [pc, #108]	; (5f9c <chip_deinit+0xc8>)
    5f2e:	4798      	blx	r3
    5f30:	1c20      	adds	r0, r4, #0
    5f32:	e023      	b.n	5f7c <chip_deinit+0xa8>
    5f34:	4f13      	ldr	r7, [pc, #76]	; (5f84 <chip_deinit+0xb0>)
    5f36:	4d1b      	ldr	r5, [pc, #108]	; (5fa4 <chip_deinit+0xd0>)
    5f38:	20a0      	movs	r0, #160	; 0xa0
    5f3a:	0140      	lsls	r0, r0, #5
    5f3c:	a901      	add	r1, sp, #4
    5f3e:	47b8      	blx	r7
    5f40:	1e04      	subs	r4, r0, #0
    5f42:	d00c      	beq.n	5f5e <chip_deinit+0x8a>
    5f44:	4810      	ldr	r0, [pc, #64]	; (5f88 <chip_deinit+0xb4>)
    5f46:	4911      	ldr	r1, [pc, #68]	; (5f8c <chip_deinit+0xb8>)
    5f48:	4a19      	ldr	r2, [pc, #100]	; (5fb0 <chip_deinit+0xdc>)
    5f4a:	4b11      	ldr	r3, [pc, #68]	; (5f90 <chip_deinit+0xbc>)
    5f4c:	4798      	blx	r3
    5f4e:	4819      	ldr	r0, [pc, #100]	; (5fb4 <chip_deinit+0xe0>)
    5f50:	4b11      	ldr	r3, [pc, #68]	; (5f98 <chip_deinit+0xc4>)
    5f52:	4798      	blx	r3
    5f54:	200d      	movs	r0, #13
    5f56:	4b11      	ldr	r3, [pc, #68]	; (5f9c <chip_deinit+0xc8>)
    5f58:	4798      	blx	r3
    5f5a:	1c20      	adds	r0, r4, #0
    5f5c:	e00e      	b.n	5f7c <chip_deinit+0xa8>
    5f5e:	9901      	ldr	r1, [sp, #4]
    5f60:	054b      	lsls	r3, r1, #21
    5f62:	d50a      	bpl.n	5f7a <chip_deinit+0xa6>
    5f64:	4b0e      	ldr	r3, [pc, #56]	; (5fa0 <chip_deinit+0xcc>)
    5f66:	4019      	ands	r1, r3
    5f68:	9101      	str	r1, [sp, #4]
    5f6a:	20a0      	movs	r0, #160	; 0xa0
    5f6c:	0140      	lsls	r0, r0, #5
    5f6e:	47a8      	blx	r5
    5f70:	3e01      	subs	r6, #1
    5f72:	b2f6      	uxtb	r6, r6
    5f74:	2e00      	cmp	r6, #0
    5f76:	d1df      	bne.n	5f38 <chip_deinit+0x64>
    5f78:	e000      	b.n	5f7c <chip_deinit+0xa8>
    5f7a:	2000      	movs	r0, #0
    5f7c:	b240      	sxtb	r0, r0
    5f7e:	b003      	add	sp, #12
    5f80:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5f82:	46c0      	nop			; (mov r8, r8)
    5f84:	00006025 	.word	0x00006025
    5f88:	00010c04 	.word	0x00010c04
    5f8c:	00011114 	.word	0x00011114
    5f90:	0000c7a9 	.word	0x0000c7a9
    5f94:	000111ac 	.word	0x000111ac
    5f98:	0000c8c9 	.word	0x0000c8c9
    5f9c:	0000c7dd 	.word	0x0000c7dd
    5fa0:	fffffbff 	.word	0xfffffbff
    5fa4:	00006031 	.word	0x00006031
    5fa8:	00000252 	.word	0x00000252
    5fac:	000111c4 	.word	0x000111c4
    5fb0:	00000259 	.word	0x00000259
    5fb4:	000111dc 	.word	0x000111dc

00005fb8 <nmi_get_mac_address>:
    5fb8:	b530      	push	{r4, r5, lr}
    5fba:	b085      	sub	sp, #20
    5fbc:	1c05      	adds	r5, r0, #0
    5fbe:	480c      	ldr	r0, [pc, #48]	; (5ff0 <nmi_get_mac_address+0x38>)
    5fc0:	a903      	add	r1, sp, #12
    5fc2:	4b0c      	ldr	r3, [pc, #48]	; (5ff4 <nmi_get_mac_address+0x3c>)
    5fc4:	4798      	blx	r3
    5fc6:	1e04      	subs	r4, r0, #0
    5fc8:	d10f      	bne.n	5fea <nmi_get_mac_address+0x32>
    5fca:	9b03      	ldr	r3, [sp, #12]
    5fcc:	0418      	lsls	r0, r3, #16
    5fce:	0c00      	lsrs	r0, r0, #16
    5fd0:	9003      	str	r0, [sp, #12]
    5fd2:	23c0      	movs	r3, #192	; 0xc0
    5fd4:	029b      	lsls	r3, r3, #10
    5fd6:	4318      	orrs	r0, r3
    5fd8:	a901      	add	r1, sp, #4
    5fda:	2206      	movs	r2, #6
    5fdc:	4b06      	ldr	r3, [pc, #24]	; (5ff8 <nmi_get_mac_address+0x40>)
    5fde:	4798      	blx	r3
    5fe0:	1c28      	adds	r0, r5, #0
    5fe2:	a901      	add	r1, sp, #4
    5fe4:	2206      	movs	r2, #6
    5fe6:	4b05      	ldr	r3, [pc, #20]	; (5ffc <nmi_get_mac_address+0x44>)
    5fe8:	4798      	blx	r3
    5fea:	1c20      	adds	r0, r4, #0
    5fec:	b005      	add	sp, #20
    5fee:	bd30      	pop	{r4, r5, pc}
    5ff0:	0000149c 	.word	0x0000149c
    5ff4:	00006025 	.word	0x00006025
    5ff8:	0000603d 	.word	0x0000603d
    5ffc:	00004b21 	.word	0x00004b21

00006000 <nm_bus_iface_init>:
    6000:	b508      	push	{r3, lr}
    6002:	4b01      	ldr	r3, [pc, #4]	; (6008 <nm_bus_iface_init+0x8>)
    6004:	4798      	blx	r3
    6006:	bd08      	pop	{r3, pc}
    6008:	000048b1 	.word	0x000048b1

0000600c <nm_bus_iface_deinit>:
    600c:	b508      	push	{r3, lr}
    600e:	4b01      	ldr	r3, [pc, #4]	; (6014 <nm_bus_iface_deinit+0x8>)
    6010:	4798      	blx	r3
    6012:	bd08      	pop	{r3, pc}
    6014:	00004ae5 	.word	0x00004ae5

00006018 <nm_read_reg>:
    6018:	b508      	push	{r3, lr}
    601a:	4b01      	ldr	r3, [pc, #4]	; (6020 <nm_read_reg+0x8>)
    601c:	4798      	blx	r3
    601e:	bd08      	pop	{r3, pc}
    6020:	000068a1 	.word	0x000068a1

00006024 <nm_read_reg_with_ret>:
    6024:	b508      	push	{r3, lr}
    6026:	4b01      	ldr	r3, [pc, #4]	; (602c <nm_read_reg_with_ret+0x8>)
    6028:	4798      	blx	r3
    602a:	bd08      	pop	{r3, pc}
    602c:	000068b5 	.word	0x000068b5

00006030 <nm_write_reg>:
    6030:	b508      	push	{r3, lr}
    6032:	4b01      	ldr	r3, [pc, #4]	; (6038 <nm_write_reg+0x8>)
    6034:	4798      	blx	r3
    6036:	bd08      	pop	{r3, pc}
    6038:	000068cd 	.word	0x000068cd

0000603c <nm_read_block>:
    603c:	b5f0      	push	{r4, r5, r6, r7, lr}
    603e:	464f      	mov	r7, r9
    6040:	4646      	mov	r6, r8
    6042:	b4c0      	push	{r6, r7}
    6044:	b083      	sub	sp, #12
    6046:	1c06      	adds	r6, r0, #0
    6048:	4689      	mov	r9, r1
    604a:	1c15      	adds	r5, r2, #0
    604c:	4b14      	ldr	r3, [pc, #80]	; (60a0 <nm_read_block+0x64>)
    604e:	881b      	ldrh	r3, [r3, #0]
    6050:	3b08      	subs	r3, #8
    6052:	b29b      	uxth	r3, r3
    6054:	9301      	str	r3, [sp, #4]
    6056:	1c1c      	adds	r4, r3, #0
    6058:	429a      	cmp	r2, r3
    605a:	d807      	bhi.n	606c <nm_read_block+0x30>
    605c:	2700      	movs	r7, #0
    605e:	1c39      	adds	r1, r7, #0
    6060:	4449      	add	r1, r9
    6062:	b2aa      	uxth	r2, r5
    6064:	1c30      	adds	r0, r6, #0
    6066:	4b0f      	ldr	r3, [pc, #60]	; (60a4 <nm_read_block+0x68>)
    6068:	4798      	blx	r3
    606a:	e012      	b.n	6092 <nm_read_block+0x56>
    606c:	9b01      	ldr	r3, [sp, #4]
    606e:	1ad5      	subs	r5, r2, r3
    6070:	2700      	movs	r7, #0
    6072:	4b0c      	ldr	r3, [pc, #48]	; (60a4 <nm_read_block+0x68>)
    6074:	4698      	mov	r8, r3
    6076:	464b      	mov	r3, r9
    6078:	19d9      	adds	r1, r3, r7
    607a:	1c30      	adds	r0, r6, #0
    607c:	9a01      	ldr	r2, [sp, #4]
    607e:	47c0      	blx	r8
    6080:	2800      	cmp	r0, #0
    6082:	d106      	bne.n	6092 <nm_read_block+0x56>
    6084:	193f      	adds	r7, r7, r4
    6086:	1936      	adds	r6, r6, r4
    6088:	1b2b      	subs	r3, r5, r4
    608a:	42ac      	cmp	r4, r5
    608c:	d2e7      	bcs.n	605e <nm_read_block+0x22>
    608e:	1c1d      	adds	r5, r3, #0
    6090:	e7f1      	b.n	6076 <nm_read_block+0x3a>
    6092:	b240      	sxtb	r0, r0
    6094:	b003      	add	sp, #12
    6096:	bc0c      	pop	{r2, r3}
    6098:	4690      	mov	r8, r2
    609a:	4699      	mov	r9, r3
    609c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    609e:	46c0      	nop			; (mov r8, r8)
    60a0:	20000054 	.word	0x20000054
    60a4:	000068e5 	.word	0x000068e5

000060a8 <nm_write_block>:
    60a8:	b5f0      	push	{r4, r5, r6, r7, lr}
    60aa:	464f      	mov	r7, r9
    60ac:	4646      	mov	r6, r8
    60ae:	b4c0      	push	{r6, r7}
    60b0:	b083      	sub	sp, #12
    60b2:	1c06      	adds	r6, r0, #0
    60b4:	4689      	mov	r9, r1
    60b6:	1c15      	adds	r5, r2, #0
    60b8:	4b14      	ldr	r3, [pc, #80]	; (610c <nm_write_block+0x64>)
    60ba:	881b      	ldrh	r3, [r3, #0]
    60bc:	3b08      	subs	r3, #8
    60be:	b29b      	uxth	r3, r3
    60c0:	9301      	str	r3, [sp, #4]
    60c2:	1c1c      	adds	r4, r3, #0
    60c4:	429a      	cmp	r2, r3
    60c6:	d807      	bhi.n	60d8 <nm_write_block+0x30>
    60c8:	2700      	movs	r7, #0
    60ca:	1c39      	adds	r1, r7, #0
    60cc:	4449      	add	r1, r9
    60ce:	b2aa      	uxth	r2, r5
    60d0:	1c30      	adds	r0, r6, #0
    60d2:	4b0f      	ldr	r3, [pc, #60]	; (6110 <nm_write_block+0x68>)
    60d4:	4798      	blx	r3
    60d6:	e012      	b.n	60fe <nm_write_block+0x56>
    60d8:	9b01      	ldr	r3, [sp, #4]
    60da:	1ad5      	subs	r5, r2, r3
    60dc:	2700      	movs	r7, #0
    60de:	4b0c      	ldr	r3, [pc, #48]	; (6110 <nm_write_block+0x68>)
    60e0:	4698      	mov	r8, r3
    60e2:	464b      	mov	r3, r9
    60e4:	19d9      	adds	r1, r3, r7
    60e6:	1c30      	adds	r0, r6, #0
    60e8:	9a01      	ldr	r2, [sp, #4]
    60ea:	47c0      	blx	r8
    60ec:	2800      	cmp	r0, #0
    60ee:	d106      	bne.n	60fe <nm_write_block+0x56>
    60f0:	193f      	adds	r7, r7, r4
    60f2:	1936      	adds	r6, r6, r4
    60f4:	1b2b      	subs	r3, r5, r4
    60f6:	42ac      	cmp	r4, r5
    60f8:	d2e7      	bcs.n	60ca <nm_write_block+0x22>
    60fa:	1c1d      	adds	r5, r3, #0
    60fc:	e7f1      	b.n	60e2 <nm_write_block+0x3a>
    60fe:	b240      	sxtb	r0, r0
    6100:	b003      	add	sp, #12
    6102:	bc0c      	pop	{r2, r3}
    6104:	4690      	mov	r8, r2
    6106:	4699      	mov	r9, r3
    6108:	bdf0      	pop	{r4, r5, r6, r7, pc}
    610a:	46c0      	nop			; (mov r8, r8)
    610c:	20000054 	.word	0x20000054
    6110:	000069bd 	.word	0x000069bd

00006114 <nm_drv_init>:
*	@author	M. Abdelmawla
*	@date	15 July 2012
*	@version	1.0
*/
sint8 nm_drv_init(void * arg)
{
    6114:	b5f0      	push	{r4, r5, r6, r7, lr}
    6116:	465f      	mov	r7, fp
    6118:	4656      	mov	r6, sl
    611a:	464d      	mov	r5, r9
    611c:	b4e0      	push	{r5, r6, r7}
    611e:	b08c      	sub	sp, #48	; 0x30
	tstrM2mRev strtmp;
	sint8 ret = M2M_SUCCESS;
	uint8 u8Mode = M2M_WIFI_MODE_NORMAL;
	
	if(NULL != arg) {
    6120:	2800      	cmp	r0, #0
    6122:	d006      	beq.n	6132 <nm_drv_init+0x1e>
		if(M2M_WIFI_MODE_CONFIG == *((uint8 *)arg)) {
    6124:	7803      	ldrb	r3, [r0, #0]
			u8Mode = M2M_WIFI_MODE_CONFIG;
    6126:	3b02      	subs	r3, #2
    6128:	1e5a      	subs	r2, r3, #1
    612a:	4193      	sbcs	r3, r2
    612c:	2502      	movs	r5, #2
    612e:	1aed      	subs	r5, r5, r3
    6130:	e000      	b.n	6134 <nm_drv_init+0x20>
*/
sint8 nm_drv_init(void * arg)
{
	tstrM2mRev strtmp;
	sint8 ret = M2M_SUCCESS;
	uint8 u8Mode = M2M_WIFI_MODE_NORMAL;
    6132:	2501      	movs	r5, #1
		}
	} else {
		/*continue running*/
	}
	
	ret = nm_bus_iface_init(NULL);
    6134:	2000      	movs	r0, #0
    6136:	4b4d      	ldr	r3, [pc, #308]	; (626c <nm_drv_init+0x158>)
    6138:	4798      	blx	r3
    613a:	1e04      	subs	r4, r0, #0
	if (M2M_SUCCESS != ret) {
    613c:	d009      	beq.n	6152 <nm_drv_init+0x3e>
		M2M_ERR("[nmi start]: fail init bus\n");
    613e:	484c      	ldr	r0, [pc, #304]	; (6270 <nm_drv_init+0x15c>)
    6140:	494c      	ldr	r1, [pc, #304]	; (6274 <nm_drv_init+0x160>)
    6142:	22a0      	movs	r2, #160	; 0xa0
    6144:	4d4c      	ldr	r5, [pc, #304]	; (6278 <nm_drv_init+0x164>)
    6146:	47a8      	blx	r5
    6148:	484c      	ldr	r0, [pc, #304]	; (627c <nm_drv_init+0x168>)
    614a:	47a8      	blx	r5
    614c:	484c      	ldr	r0, [pc, #304]	; (6280 <nm_drv_init+0x16c>)
    614e:	47a8      	blx	r5
		goto ERR1;
    6150:	e084      	b.n	625c <nm_drv_init+0x148>
	ret = chip_reset();
	if (M2M_SUCCESS != ret) {
		goto ERR2;
	}
#endif
	M2M_INFO("Chip ID %lx\n", nmi_get_chipid());
    6152:	484c      	ldr	r0, [pc, #304]	; (6284 <nm_drv_init+0x170>)
    6154:	4c48      	ldr	r4, [pc, #288]	; (6278 <nm_drv_init+0x164>)
    6156:	47a0      	blx	r4
    6158:	4b4b      	ldr	r3, [pc, #300]	; (6288 <nm_drv_init+0x174>)
    615a:	4798      	blx	r3
    615c:	1c01      	adds	r1, r0, #0
    615e:	484b      	ldr	r0, [pc, #300]	; (628c <nm_drv_init+0x178>)
    6160:	47a0      	blx	r4
    6162:	4847      	ldr	r0, [pc, #284]	; (6280 <nm_drv_init+0x16c>)
    6164:	47a0      	blx	r4
	ret = cpu_start();
	if (M2M_SUCCESS != ret) {
		goto ERR2;
	}
#endif
	ret = wait_for_bootrom(u8Mode);
    6166:	1c28      	adds	r0, r5, #0
    6168:	4b49      	ldr	r3, [pc, #292]	; (6290 <nm_drv_init+0x17c>)
    616a:	4798      	blx	r3
    616c:	1e04      	subs	r4, r0, #0
	if (M2M_SUCCESS != ret) {
    616e:	d173      	bne.n	6258 <nm_drv_init+0x144>
		goto ERR2;
	}
		
	ret = wait_for_firmware_start(u8Mode);
    6170:	1c28      	adds	r0, r5, #0
    6172:	4b48      	ldr	r3, [pc, #288]	; (6294 <nm_drv_init+0x180>)
    6174:	4798      	blx	r3
    6176:	1e04      	subs	r4, r0, #0
	if (M2M_SUCCESS != ret) {
    6178:	d16e      	bne.n	6258 <nm_drv_init+0x144>
		goto ERR2;
	}
	
	if(M2M_WIFI_MODE_CONFIG == u8Mode) {
    617a:	2d02      	cmp	r5, #2
    617c:	d06e      	beq.n	625c <nm_drv_init+0x148>
		goto ERR1;
	} else {
		/*continue running*/
	}
	
	ret = enable_interrupts();
    617e:	4b46      	ldr	r3, [pc, #280]	; (6298 <nm_drv_init+0x184>)
    6180:	4798      	blx	r3
    6182:	1e04      	subs	r4, r0, #0
	if (M2M_SUCCESS != ret) {
    6184:	d009      	beq.n	619a <nm_drv_init+0x86>
		M2M_ERR("failed to enable interrupts..\n");
    6186:	483a      	ldr	r0, [pc, #232]	; (6270 <nm_drv_init+0x15c>)
    6188:	493a      	ldr	r1, [pc, #232]	; (6274 <nm_drv_init+0x160>)
    618a:	22d8      	movs	r2, #216	; 0xd8
    618c:	4d3a      	ldr	r5, [pc, #232]	; (6278 <nm_drv_init+0x164>)
    618e:	47a8      	blx	r5
    6190:	4842      	ldr	r0, [pc, #264]	; (629c <nm_drv_init+0x188>)
    6192:	47a8      	blx	r5
    6194:	483a      	ldr	r0, [pc, #232]	; (6280 <nm_drv_init+0x16c>)
    6196:	47a8      	blx	r5
		goto ERR2;
    6198:	e05e      	b.n	6258 <nm_drv_init+0x144>
*	@version	1.0
*/
static sint8 nm_get_firmware_info(tstrM2mRev* M2mRev)
{
	uint16  curr_drv_ver, min_req_drv_ver,curr_firm_ver;
	uint32	reg = 0;
    619a:	2300      	movs	r3, #0
    619c:	9303      	str	r3, [sp, #12]
	sint8	ret = M2M_SUCCESS;

	ret = nm_read_reg_with_ret(NMI_REV_REG, &reg);
    619e:	4840      	ldr	r0, [pc, #256]	; (62a0 <nm_drv_init+0x18c>)
    61a0:	a903      	add	r1, sp, #12
    61a2:	4b40      	ldr	r3, [pc, #256]	; (62a4 <nm_drv_init+0x190>)
    61a4:	4798      	blx	r3
    61a6:	9001      	str	r0, [sp, #4]

	M2mRev->u8DriverMajor	= M2M_GET_DRV_MAJOR(reg);
    61a8:	9e03      	ldr	r6, [sp, #12]
    61aa:	0c33      	lsrs	r3, r6, #16
    61ac:	b29c      	uxth	r4, r3
	M2mRev->u8DriverMinor   = M2M_GET_DRV_MINOR(reg);
	M2mRev->u8DriverPatch	= M2M_GET_DRV_PATCH(reg);
    61ae:	270f      	movs	r7, #15
    61b0:	403b      	ands	r3, r7
    61b2:	4699      	mov	r9, r3
	M2mRev->u8FirmwareMajor	= M2M_GET_FW_MAJOR(reg);
    61b4:	b2b5      	uxth	r5, r6
    61b6:	0a2b      	lsrs	r3, r5, #8
    61b8:	469a      	mov	sl, r3
	M2mRev->u8FirmwareMinor = M2M_GET_FW_MINOR(reg);
    61ba:	092d      	lsrs	r5, r5, #4
    61bc:	403d      	ands	r5, r7
	M2mRev->u8FirmwarePatch = M2M_GET_FW_PATCH(reg);
    61be:	403e      	ands	r6, r7
	M2mRev->u32Chipid	= nmi_get_chipid();
    61c0:	4b31      	ldr	r3, [pc, #196]	; (6288 <nm_drv_init+0x174>)
    61c2:	4798      	blx	r3
	
	curr_firm_ver   = M2M_MAKE_VERSION(M2mRev->u8FirmwareMajor, M2mRev->u8FirmwareMinor,M2mRev->u8FirmwarePatch);
    61c4:	4653      	mov	r3, sl
    61c6:	021b      	lsls	r3, r3, #8
    61c8:	4333      	orrs	r3, r6
    61ca:	012a      	lsls	r2, r5, #4
    61cc:	4313      	orrs	r3, r2
	curr_drv_ver    = M2M_MAKE_VERSION(M2M_DRIVER_VERSION_MAJOR_NO, M2M_DRIVER_VERSION_MINOR_NO, M2M_DRIVER_VERSION_PATCH_NO);
	min_req_drv_ver = M2M_MAKE_VERSION(M2mRev->u8DriverMajor, M2mRev->u8DriverMinor,M2mRev->u8DriverPatch);
    61ce:	0a22      	lsrs	r2, r4, #8
    61d0:	4693      	mov	fp, r2
	sint8	ret = M2M_SUCCESS;

	ret = nm_read_reg_with_ret(NMI_REV_REG, &reg);

	M2mRev->u8DriverMajor	= M2M_GET_DRV_MAJOR(reg);
	M2mRev->u8DriverMinor   = M2M_GET_DRV_MINOR(reg);
    61d2:	0924      	lsrs	r4, r4, #4
	M2mRev->u8FirmwarePatch = M2M_GET_FW_PATCH(reg);
	M2mRev->u32Chipid	= nmi_get_chipid();
	
	curr_firm_ver   = M2M_MAKE_VERSION(M2mRev->u8FirmwareMajor, M2mRev->u8FirmwareMinor,M2mRev->u8FirmwarePatch);
	curr_drv_ver    = M2M_MAKE_VERSION(M2M_DRIVER_VERSION_MAJOR_NO, M2M_DRIVER_VERSION_MINOR_NO, M2M_DRIVER_VERSION_PATCH_NO);
	min_req_drv_ver = M2M_MAKE_VERSION(M2mRev->u8DriverMajor, M2mRev->u8DriverMinor,M2mRev->u8DriverPatch);
    61d4:	4027      	ands	r7, r4
    61d6:	0212      	lsls	r2, r2, #8
    61d8:	4649      	mov	r1, r9
    61da:	430a      	orrs	r2, r1
    61dc:	0139      	lsls	r1, r7, #4
	if(curr_drv_ver <  min_req_drv_ver) {
    61de:	430a      	orrs	r2, r1
    61e0:	2199      	movs	r1, #153	; 0x99
    61e2:	0149      	lsls	r1, r1, #5
    61e4:	428a      	cmp	r2, r1
    61e6:	d901      	bls.n	61ec <nm_drv_init+0xd8>
		/*The current driver version should be larger or equal 
		than the min driver that the current firmware support  */
		ret = M2M_ERR_FW_VER_MISMATCH;
    61e8:	22f3      	movs	r2, #243	; 0xf3
    61ea:	9201      	str	r2, [sp, #4]
	}
	if(curr_drv_ver >  curr_firm_ver) {
    61ec:	4a2e      	ldr	r2, [pc, #184]	; (62a8 <nm_drv_init+0x194>)
    61ee:	4293      	cmp	r3, r2
    61f0:	d801      	bhi.n	61f6 <nm_drv_init+0xe2>
		/*The current driver should be equal or less than the firmware version*/
		ret = M2M_ERR_FW_VER_MISMATCH;
    61f2:	23f3      	movs	r3, #243	; 0xf3
    61f4:	9301      	str	r3, [sp, #4]
		goto ERR2;
	}
	
	ret = nm_get_firmware_info(&strtmp);

	M2M_INFO("Firmware ver   : %u.%u.%u\n", strtmp.u8FirmwareMajor, strtmp.u8FirmwareMinor, strtmp.u8FirmwarePatch);
    61f6:	4823      	ldr	r0, [pc, #140]	; (6284 <nm_drv_init+0x170>)
    61f8:	4c1f      	ldr	r4, [pc, #124]	; (6278 <nm_drv_init+0x164>)
    61fa:	47a0      	blx	r4
    61fc:	482b      	ldr	r0, [pc, #172]	; (62ac <nm_drv_init+0x198>)
    61fe:	4651      	mov	r1, sl
    6200:	1c2a      	adds	r2, r5, #0
    6202:	1c33      	adds	r3, r6, #0
    6204:	47a0      	blx	r4
    6206:	4e1e      	ldr	r6, [pc, #120]	; (6280 <nm_drv_init+0x16c>)
    6208:	1c30      	adds	r0, r6, #0
    620a:	47a0      	blx	r4
	M2M_INFO("Min driver ver : %u.%u.%u\n", strtmp.u8DriverMajor, strtmp.u8DriverMinor, strtmp.u8DriverPatch);
    620c:	481d      	ldr	r0, [pc, #116]	; (6284 <nm_drv_init+0x170>)
    620e:	47a0      	blx	r4
    6210:	4827      	ldr	r0, [pc, #156]	; (62b0 <nm_drv_init+0x19c>)
    6212:	4659      	mov	r1, fp
    6214:	1c3a      	adds	r2, r7, #0
    6216:	464b      	mov	r3, r9
    6218:	47a0      	blx	r4
    621a:	1c30      	adds	r0, r6, #0
    621c:	47a0      	blx	r4
	M2M_INFO("Curr driver ver: %u.%u.%u\n", M2M_DRIVER_VERSION_MAJOR_NO, M2M_DRIVER_VERSION_MINOR_NO, M2M_DRIVER_VERSION_PATCH_NO);
    621e:	4819      	ldr	r0, [pc, #100]	; (6284 <nm_drv_init+0x170>)
    6220:	47a0      	blx	r4
    6222:	4824      	ldr	r0, [pc, #144]	; (62b4 <nm_drv_init+0x1a0>)
    6224:	2113      	movs	r1, #19
    6226:	2202      	movs	r2, #2
    6228:	2300      	movs	r3, #0
    622a:	47a0      	blx	r4
    622c:	1c30      	adds	r0, r6, #0
    622e:	47a0      	blx	r4
	
	if(strtmp.u8FirmwareMajor != M2M_DRIVER_VERSION_MAJOR_NO
			|| strtmp.u8FirmwareMinor != M2M_DRIVER_VERSION_MINOR_NO)
    6230:	ab04      	add	r3, sp, #16
    6232:	4652      	mov	r2, sl
    6234:	701a      	strb	r2, [r3, #0]
    6236:	705d      	strb	r5, [r3, #1]

	M2M_INFO("Firmware ver   : %u.%u.%u\n", strtmp.u8FirmwareMajor, strtmp.u8FirmwareMinor, strtmp.u8FirmwarePatch);
	M2M_INFO("Min driver ver : %u.%u.%u\n", strtmp.u8DriverMajor, strtmp.u8DriverMinor, strtmp.u8DriverPatch);
	M2M_INFO("Curr driver ver: %u.%u.%u\n", M2M_DRIVER_VERSION_MAJOR_NO, M2M_DRIVER_VERSION_MINOR_NO, M2M_DRIVER_VERSION_PATCH_NO);
	
	if(strtmp.u8FirmwareMajor != M2M_DRIVER_VERSION_MAJOR_NO
    6238:	881a      	ldrh	r2, [r3, #0]
	if (M2M_SUCCESS != ret) {
		M2M_ERR("failed to enable interrupts..\n");
		goto ERR2;
	}
	
	ret = nm_get_firmware_info(&strtmp);
    623a:	9c01      	ldr	r4, [sp, #4]

	M2M_INFO("Firmware ver   : %u.%u.%u\n", strtmp.u8FirmwareMajor, strtmp.u8FirmwareMinor, strtmp.u8FirmwarePatch);
	M2M_INFO("Min driver ver : %u.%u.%u\n", strtmp.u8DriverMajor, strtmp.u8DriverMinor, strtmp.u8DriverPatch);
	M2M_INFO("Curr driver ver: %u.%u.%u\n", M2M_DRIVER_VERSION_MAJOR_NO, M2M_DRIVER_VERSION_MINOR_NO, M2M_DRIVER_VERSION_PATCH_NO);
	
	if(strtmp.u8FirmwareMajor != M2M_DRIVER_VERSION_MAJOR_NO
    623c:	4b1e      	ldr	r3, [pc, #120]	; (62b8 <nm_drv_init+0x1a4>)
    623e:	429a      	cmp	r2, r3
    6240:	d00c      	beq.n	625c <nm_drv_init+0x148>
			|| strtmp.u8FirmwareMinor != M2M_DRIVER_VERSION_MINOR_NO)
	{
		ret = M2M_ERR_FW_VER_MISMATCH;
		M2M_ERR("Mismatch Firmawre Version\n");
    6242:	480b      	ldr	r0, [pc, #44]	; (6270 <nm_drv_init+0x15c>)
    6244:	490b      	ldr	r1, [pc, #44]	; (6274 <nm_drv_init+0x160>)
    6246:	22e6      	movs	r2, #230	; 0xe6
    6248:	4c0b      	ldr	r4, [pc, #44]	; (6278 <nm_drv_init+0x164>)
    624a:	47a0      	blx	r4
    624c:	481b      	ldr	r0, [pc, #108]	; (62bc <nm_drv_init+0x1a8>)
    624e:	47a0      	blx	r4
    6250:	480b      	ldr	r0, [pc, #44]	; (6280 <nm_drv_init+0x16c>)
    6252:	47a0      	blx	r4
	M2M_INFO("Curr driver ver: %u.%u.%u\n", M2M_DRIVER_VERSION_MAJOR_NO, M2M_DRIVER_VERSION_MINOR_NO, M2M_DRIVER_VERSION_PATCH_NO);
	
	if(strtmp.u8FirmwareMajor != M2M_DRIVER_VERSION_MAJOR_NO
			|| strtmp.u8FirmwareMinor != M2M_DRIVER_VERSION_MINOR_NO)
	{
		ret = M2M_ERR_FW_VER_MISMATCH;
    6254:	24f3      	movs	r4, #243	; 0xf3
    6256:	e001      	b.n	625c <nm_drv_init+0x148>
	}


	return ret;
ERR2:
	nm_bus_iface_deinit();
    6258:	4b19      	ldr	r3, [pc, #100]	; (62c0 <nm_drv_init+0x1ac>)
    625a:	4798      	blx	r3
    625c:	b260      	sxtb	r0, r4
ERR1:	
	return ret;
}
    625e:	b00c      	add	sp, #48	; 0x30
    6260:	bc1c      	pop	{r2, r3, r4}
    6262:	4691      	mov	r9, r2
    6264:	469a      	mov	sl, r3
    6266:	46a3      	mov	fp, r4
    6268:	bdf0      	pop	{r4, r5, r6, r7, pc}
    626a:	46c0      	nop			; (mov r8, r8)
    626c:	00006001 	.word	0x00006001
    6270:	00010c04 	.word	0x00010c04
    6274:	00011244 	.word	0x00011244
    6278:	000090f5 	.word	0x000090f5
    627c:	00011260 	.word	0x00011260
    6280:	0000f0d0 	.word	0x0000f0d0
    6284:	00010f14 	.word	0x00010f14
    6288:	00005ce9 	.word	0x00005ce9
    628c:	0001127c 	.word	0x0001127c
    6290:	00005d95 	.word	0x00005d95
    6294:	00005e5d 	.word	0x00005e5d
    6298:	00005c7d 	.word	0x00005c7d
    629c:	0001128c 	.word	0x0001128c
    62a0:	000207ac 	.word	0x000207ac
    62a4:	00006025 	.word	0x00006025
    62a8:	0000131f 	.word	0x0000131f
    62ac:	000112ac 	.word	0x000112ac
    62b0:	000112c8 	.word	0x000112c8
    62b4:	000112e4 	.word	0x000112e4
    62b8:	00000213 	.word	0x00000213
    62bc:	00011300 	.word	0x00011300
    62c0:	0000600d 	.word	0x0000600d

000062c4 <nm_drv_deinit>:
*	@author	M. Abdelmawla
*	@date	17 July 2012
*	@version	1.0
*/
sint8 nm_drv_deinit(void * arg) 
{
    62c4:	b538      	push	{r3, r4, r5, lr}
	sint8 ret;
	
	ret = chip_deinit();
    62c6:	4b0f      	ldr	r3, [pc, #60]	; (6304 <nm_drv_deinit+0x40>)
    62c8:	4798      	blx	r3
    62ca:	1e04      	subs	r4, r0, #0
	if (M2M_SUCCESS != ret) {
    62cc:	d009      	beq.n	62e2 <nm_drv_deinit+0x1e>
		M2M_ERR("[nmi stop]: chip_deinit fail\n");
    62ce:	480e      	ldr	r0, [pc, #56]	; (6308 <nm_drv_deinit+0x44>)
    62d0:	490e      	ldr	r1, [pc, #56]	; (630c <nm_drv_deinit+0x48>)
    62d2:	22fe      	movs	r2, #254	; 0xfe
    62d4:	4d0e      	ldr	r5, [pc, #56]	; (6310 <nm_drv_deinit+0x4c>)
    62d6:	47a8      	blx	r5
    62d8:	480e      	ldr	r0, [pc, #56]	; (6314 <nm_drv_deinit+0x50>)
    62da:	47a8      	blx	r5
    62dc:	480e      	ldr	r0, [pc, #56]	; (6318 <nm_drv_deinit+0x54>)
    62de:	47a8      	blx	r5
		goto ERR1;
    62e0:	e00d      	b.n	62fe <nm_drv_deinit+0x3a>
	}

	ret = nm_bus_iface_deinit();
    62e2:	4b0e      	ldr	r3, [pc, #56]	; (631c <nm_drv_deinit+0x58>)
    62e4:	4798      	blx	r3
    62e6:	1e04      	subs	r4, r0, #0
	if (M2M_SUCCESS != ret) {
    62e8:	d009      	beq.n	62fe <nm_drv_deinit+0x3a>
		M2M_ERR("[nmi stop]: fail init bus\n");
    62ea:	4807      	ldr	r0, [pc, #28]	; (6308 <nm_drv_deinit+0x44>)
    62ec:	4907      	ldr	r1, [pc, #28]	; (630c <nm_drv_deinit+0x48>)
    62ee:	2282      	movs	r2, #130	; 0x82
    62f0:	0052      	lsls	r2, r2, #1
    62f2:	4d07      	ldr	r5, [pc, #28]	; (6310 <nm_drv_deinit+0x4c>)
    62f4:	47a8      	blx	r5
    62f6:	480a      	ldr	r0, [pc, #40]	; (6320 <nm_drv_deinit+0x5c>)
    62f8:	47a8      	blx	r5
    62fa:	4807      	ldr	r0, [pc, #28]	; (6318 <nm_drv_deinit+0x54>)
    62fc:	47a8      	blx	r5
	/* Must do this after global reset to set SPI data packet size. */
	nm_spi_deinit();
#endif

ERR1:
	return ret;
    62fe:	b260      	sxtb	r0, r4
}
    6300:	bd38      	pop	{r3, r4, r5, pc}
    6302:	46c0      	nop			; (mov r8, r8)
    6304:	00005ed5 	.word	0x00005ed5
    6308:	00010c04 	.word	0x00010c04
    630c:	00011250 	.word	0x00011250
    6310:	000090f5 	.word	0x000090f5
    6314:	0001131c 	.word	0x0001131c
    6318:	0000f0d0 	.word	0x0000f0d0
    631c:	0000600d 	.word	0x0000600d
    6320:	0001133c 	.word	0x0001133c

00006324 <nmi_spi_read>:
    6324:	b500      	push	{lr}
    6326:	b085      	sub	sp, #20
    6328:	ab01      	add	r3, sp, #4
    632a:	2200      	movs	r2, #0
    632c:	9201      	str	r2, [sp, #4]
    632e:	9002      	str	r0, [sp, #8]
    6330:	8119      	strh	r1, [r3, #8]
    6332:	2003      	movs	r0, #3
    6334:	1c19      	adds	r1, r3, #0
    6336:	4b02      	ldr	r3, [pc, #8]	; (6340 <nmi_spi_read+0x1c>)
    6338:	4798      	blx	r3
    633a:	b005      	add	sp, #20
    633c:	bd00      	pop	{pc}
    633e:	46c0      	nop			; (mov r8, r8)
    6340:	000049b9 	.word	0x000049b9

00006344 <spi_cmd_rsp>:
    6344:	b5f0      	push	{r4, r5, r6, r7, lr}
    6346:	b083      	sub	sp, #12
    6348:	1e06      	subs	r6, r0, #0
    634a:	2ecf      	cmp	r6, #207	; 0xcf
    634c:	d004      	beq.n	6358 <spi_cmd_rsp+0x14>
    634e:	1c03      	adds	r3, r0, #0
    6350:	333b      	adds	r3, #59	; 0x3b
    6352:	b2db      	uxtb	r3, r3
    6354:	2b01      	cmp	r3, #1
    6356:	d807      	bhi.n	6368 <spi_cmd_rsp+0x24>
    6358:	466b      	mov	r3, sp
    635a:	1dd8      	adds	r0, r3, #7
    635c:	2101      	movs	r1, #1
    635e:	4b24      	ldr	r3, [pc, #144]	; (63f0 <spi_cmd_rsp+0xac>)
    6360:	4798      	blx	r3
    6362:	2300      	movs	r3, #0
    6364:	2800      	cmp	r0, #0
    6366:	d140      	bne.n	63ea <spi_cmd_rsp+0xa6>
    6368:	240b      	movs	r4, #11
    636a:	466b      	mov	r3, sp
    636c:	1ddd      	adds	r5, r3, #7
    636e:	4f20      	ldr	r7, [pc, #128]	; (63f0 <spi_cmd_rsp+0xac>)
    6370:	1c28      	adds	r0, r5, #0
    6372:	2101      	movs	r1, #1
    6374:	47b8      	blx	r7
    6376:	2800      	cmp	r0, #0
    6378:	d00d      	beq.n	6396 <spi_cmd_rsp+0x52>
    637a:	481e      	ldr	r0, [pc, #120]	; (63f4 <spi_cmd_rsp+0xb0>)
    637c:	491e      	ldr	r1, [pc, #120]	; (63f8 <spi_cmd_rsp+0xb4>)
    637e:	223c      	movs	r2, #60	; 0x3c
    6380:	32ff      	adds	r2, #255	; 0xff
    6382:	4b1e      	ldr	r3, [pc, #120]	; (63fc <spi_cmd_rsp+0xb8>)
    6384:	4798      	blx	r3
    6386:	481e      	ldr	r0, [pc, #120]	; (6400 <spi_cmd_rsp+0xbc>)
    6388:	4b1e      	ldr	r3, [pc, #120]	; (6404 <spi_cmd_rsp+0xc0>)
    638a:	4798      	blx	r3
    638c:	200d      	movs	r0, #13
    638e:	4b1e      	ldr	r3, [pc, #120]	; (6408 <spi_cmd_rsp+0xc4>)
    6390:	4798      	blx	r3
    6392:	2300      	movs	r3, #0
    6394:	e029      	b.n	63ea <spi_cmd_rsp+0xa6>
    6396:	782b      	ldrb	r3, [r5, #0]
    6398:	42b3      	cmp	r3, r6
    639a:	d005      	beq.n	63a8 <spi_cmd_rsp+0x64>
    639c:	3c01      	subs	r4, #1
    639e:	b2e4      	uxtb	r4, r4
    63a0:	2c00      	cmp	r4, #0
    63a2:	d1e5      	bne.n	6370 <spi_cmd_rsp+0x2c>
    63a4:	340b      	adds	r4, #11
    63a6:	e000      	b.n	63aa <spi_cmd_rsp+0x66>
    63a8:	240b      	movs	r4, #11
    63aa:	466b      	mov	r3, sp
    63ac:	1ddd      	adds	r5, r3, #7
    63ae:	4e10      	ldr	r6, [pc, #64]	; (63f0 <spi_cmd_rsp+0xac>)
    63b0:	1c28      	adds	r0, r5, #0
    63b2:	2101      	movs	r1, #1
    63b4:	47b0      	blx	r6
    63b6:	2800      	cmp	r0, #0
    63b8:	d00d      	beq.n	63d6 <spi_cmd_rsp+0x92>
    63ba:	480e      	ldr	r0, [pc, #56]	; (63f4 <spi_cmd_rsp+0xb0>)
    63bc:	490e      	ldr	r1, [pc, #56]	; (63f8 <spi_cmd_rsp+0xb4>)
    63be:	224a      	movs	r2, #74	; 0x4a
    63c0:	32ff      	adds	r2, #255	; 0xff
    63c2:	4b0e      	ldr	r3, [pc, #56]	; (63fc <spi_cmd_rsp+0xb8>)
    63c4:	4798      	blx	r3
    63c6:	480e      	ldr	r0, [pc, #56]	; (6400 <spi_cmd_rsp+0xbc>)
    63c8:	4b0e      	ldr	r3, [pc, #56]	; (6404 <spi_cmd_rsp+0xc0>)
    63ca:	4798      	blx	r3
    63cc:	200d      	movs	r0, #13
    63ce:	4b0e      	ldr	r3, [pc, #56]	; (6408 <spi_cmd_rsp+0xc4>)
    63d0:	4798      	blx	r3
    63d2:	2300      	movs	r3, #0
    63d4:	e009      	b.n	63ea <spi_cmd_rsp+0xa6>
    63d6:	782b      	ldrb	r3, [r5, #0]
    63d8:	2b00      	cmp	r3, #0
    63da:	d005      	beq.n	63e8 <spi_cmd_rsp+0xa4>
    63dc:	3c01      	subs	r4, #1
    63de:	b2e4      	uxtb	r4, r4
    63e0:	2c00      	cmp	r4, #0
    63e2:	d1e5      	bne.n	63b0 <spi_cmd_rsp+0x6c>
    63e4:	2301      	movs	r3, #1
    63e6:	e000      	b.n	63ea <spi_cmd_rsp+0xa6>
    63e8:	2301      	movs	r3, #1
    63ea:	b258      	sxtb	r0, r3
    63ec:	b003      	add	sp, #12
    63ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
    63f0:	00006325 	.word	0x00006325
    63f4:	00010c04 	.word	0x00010c04
    63f8:	000113bc 	.word	0x000113bc
    63fc:	0000c7a9 	.word	0x0000c7a9
    6400:	000113e4 	.word	0x000113e4
    6404:	0000c8c9 	.word	0x0000c8c9
    6408:	0000c7dd 	.word	0x0000c7dd

0000640c <spi_data_read>:
    640c:	b5f0      	push	{r4, r5, r6, r7, lr}
    640e:	465f      	mov	r7, fp
    6410:	4656      	mov	r6, sl
    6412:	464d      	mov	r5, r9
    6414:	4644      	mov	r4, r8
    6416:	b4f0      	push	{r4, r5, r6, r7}
    6418:	b085      	sub	sp, #20
    641a:	4682      	mov	sl, r0
    641c:	4689      	mov	r9, r1
    641e:	4693      	mov	fp, r2
    6420:	2300      	movs	r3, #0
    6422:	4698      	mov	r8, r3
    6424:	4f41      	ldr	r7, [pc, #260]	; (652c <spi_data_read+0x120>)
    6426:	2380      	movs	r3, #128	; 0x80
    6428:	019b      	lsls	r3, r3, #6
    642a:	4599      	cmp	r9, r3
    642c:	d804      	bhi.n	6438 <spi_data_read+0x2c>
    642e:	464b      	mov	r3, r9
    6430:	466a      	mov	r2, sp
    6432:	80d3      	strh	r3, [r2, #6]
    6434:	88d6      	ldrh	r6, [r2, #6]
    6436:	e001      	b.n	643c <spi_data_read+0x30>
    6438:	2680      	movs	r6, #128	; 0x80
    643a:	01b6      	lsls	r6, r6, #6
    643c:	240a      	movs	r4, #10
    643e:	ab02      	add	r3, sp, #8
    6440:	1cdd      	adds	r5, r3, #3
    6442:	1c28      	adds	r0, r5, #0
    6444:	2101      	movs	r1, #1
    6446:	47b8      	blx	r7
    6448:	2800      	cmp	r0, #0
    644a:	d00d      	beq.n	6468 <spi_data_read+0x5c>
    644c:	4838      	ldr	r0, [pc, #224]	; (6530 <spi_data_read+0x124>)
    644e:	4939      	ldr	r1, [pc, #228]	; (6534 <spi_data_read+0x128>)
    6450:	226c      	movs	r2, #108	; 0x6c
    6452:	32ff      	adds	r2, #255	; 0xff
    6454:	4b38      	ldr	r3, [pc, #224]	; (6538 <spi_data_read+0x12c>)
    6456:	4798      	blx	r3
    6458:	4838      	ldr	r0, [pc, #224]	; (653c <spi_data_read+0x130>)
    645a:	4b39      	ldr	r3, [pc, #228]	; (6540 <spi_data_read+0x134>)
    645c:	4798      	blx	r3
    645e:	200d      	movs	r0, #13
    6460:	4b38      	ldr	r3, [pc, #224]	; (6544 <spi_data_read+0x138>)
    6462:	4798      	blx	r3
    6464:	2000      	movs	r0, #0
    6466:	e058      	b.n	651a <spi_data_read+0x10e>
    6468:	782b      	ldrb	r3, [r5, #0]
    646a:	091b      	lsrs	r3, r3, #4
    646c:	2b0f      	cmp	r3, #15
    646e:	d005      	beq.n	647c <spi_data_read+0x70>
    6470:	3c01      	subs	r4, #1
    6472:	b2a4      	uxth	r4, r4
    6474:	b223      	sxth	r3, r4
    6476:	3301      	adds	r3, #1
    6478:	d1e3      	bne.n	6442 <spi_data_read+0x36>
    647a:	e002      	b.n	6482 <spi_data_read+0x76>
    647c:	b224      	sxth	r4, r4
    647e:	2c00      	cmp	r4, #0
    6480:	dc0e      	bgt.n	64a0 <spi_data_read+0x94>
    6482:	482b      	ldr	r0, [pc, #172]	; (6530 <spi_data_read+0x124>)
    6484:	492b      	ldr	r1, [pc, #172]	; (6534 <spi_data_read+0x128>)
    6486:	2278      	movs	r2, #120	; 0x78
    6488:	32ff      	adds	r2, #255	; 0xff
    648a:	4c2b      	ldr	r4, [pc, #172]	; (6538 <spi_data_read+0x12c>)
    648c:	47a0      	blx	r4
    648e:	ab02      	add	r3, sp, #8
    6490:	78d9      	ldrb	r1, [r3, #3]
    6492:	482d      	ldr	r0, [pc, #180]	; (6548 <spi_data_read+0x13c>)
    6494:	47a0      	blx	r4
    6496:	200d      	movs	r0, #13
    6498:	4b2a      	ldr	r3, [pc, #168]	; (6544 <spi_data_read+0x138>)
    649a:	4798      	blx	r3
    649c:	2000      	movs	r0, #0
    649e:	e03c      	b.n	651a <spi_data_read+0x10e>
    64a0:	b2b6      	uxth	r6, r6
    64a2:	4643      	mov	r3, r8
    64a4:	b218      	sxth	r0, r3
    64a6:	4450      	add	r0, sl
    64a8:	1c31      	adds	r1, r6, #0
    64aa:	4b20      	ldr	r3, [pc, #128]	; (652c <spi_data_read+0x120>)
    64ac:	4798      	blx	r3
    64ae:	2800      	cmp	r0, #0
    64b0:	d00d      	beq.n	64ce <spi_data_read+0xc2>
    64b2:	481f      	ldr	r0, [pc, #124]	; (6530 <spi_data_read+0x124>)
    64b4:	491f      	ldr	r1, [pc, #124]	; (6534 <spi_data_read+0x128>)
    64b6:	22c0      	movs	r2, #192	; 0xc0
    64b8:	0052      	lsls	r2, r2, #1
    64ba:	4b1f      	ldr	r3, [pc, #124]	; (6538 <spi_data_read+0x12c>)
    64bc:	4798      	blx	r3
    64be:	4823      	ldr	r0, [pc, #140]	; (654c <spi_data_read+0x140>)
    64c0:	4b1f      	ldr	r3, [pc, #124]	; (6540 <spi_data_read+0x134>)
    64c2:	4798      	blx	r3
    64c4:	200d      	movs	r0, #13
    64c6:	4b1f      	ldr	r3, [pc, #124]	; (6544 <spi_data_read+0x138>)
    64c8:	4798      	blx	r3
    64ca:	2000      	movs	r0, #0
    64cc:	e025      	b.n	651a <spi_data_read+0x10e>
    64ce:	465b      	mov	r3, fp
    64d0:	2b00      	cmp	r3, #0
    64d2:	d117      	bne.n	6504 <spi_data_read+0xf8>
    64d4:	4b1e      	ldr	r3, [pc, #120]	; (6550 <spi_data_read+0x144>)
    64d6:	781b      	ldrb	r3, [r3, #0]
    64d8:	2b00      	cmp	r3, #0
    64da:	d113      	bne.n	6504 <spi_data_read+0xf8>
    64dc:	a803      	add	r0, sp, #12
    64de:	2102      	movs	r1, #2
    64e0:	4b12      	ldr	r3, [pc, #72]	; (652c <spi_data_read+0x120>)
    64e2:	4798      	blx	r3
    64e4:	2800      	cmp	r0, #0
    64e6:	d00d      	beq.n	6504 <spi_data_read+0xf8>
    64e8:	4811      	ldr	r0, [pc, #68]	; (6530 <spi_data_read+0x124>)
    64ea:	4912      	ldr	r1, [pc, #72]	; (6534 <spi_data_read+0x128>)
    64ec:	228c      	movs	r2, #140	; 0x8c
    64ee:	32ff      	adds	r2, #255	; 0xff
    64f0:	4b11      	ldr	r3, [pc, #68]	; (6538 <spi_data_read+0x12c>)
    64f2:	4798      	blx	r3
    64f4:	4817      	ldr	r0, [pc, #92]	; (6554 <spi_data_read+0x148>)
    64f6:	4b12      	ldr	r3, [pc, #72]	; (6540 <spi_data_read+0x134>)
    64f8:	4798      	blx	r3
    64fa:	200d      	movs	r0, #13
    64fc:	4b11      	ldr	r3, [pc, #68]	; (6544 <spi_data_read+0x138>)
    64fe:	4798      	blx	r3
    6500:	2000      	movs	r0, #0
    6502:	e00a      	b.n	651a <spi_data_read+0x10e>
    6504:	4643      	mov	r3, r8
    6506:	18f3      	adds	r3, r6, r3
    6508:	b29b      	uxth	r3, r3
    650a:	4698      	mov	r8, r3
    650c:	464b      	mov	r3, r9
    650e:	1b9e      	subs	r6, r3, r6
    6510:	b2b3      	uxth	r3, r6
    6512:	4699      	mov	r9, r3
    6514:	2b00      	cmp	r3, #0
    6516:	d186      	bne.n	6426 <spi_data_read+0x1a>
    6518:	2001      	movs	r0, #1
    651a:	b240      	sxtb	r0, r0
    651c:	b005      	add	sp, #20
    651e:	bc3c      	pop	{r2, r3, r4, r5}
    6520:	4690      	mov	r8, r2
    6522:	4699      	mov	r9, r3
    6524:	46a2      	mov	sl, r4
    6526:	46ab      	mov	fp, r5
    6528:	bdf0      	pop	{r4, r5, r6, r7, pc}
    652a:	46c0      	nop			; (mov r8, r8)
    652c:	00006325 	.word	0x00006325
    6530:	00010c04 	.word	0x00010c04
    6534:	00011998 	.word	0x00011998
    6538:	0000c7a9 	.word	0x0000c7a9
    653c:	00011418 	.word	0x00011418
    6540:	0000c8c9 	.word	0x0000c8c9
    6544:	0000c7dd 	.word	0x0000c7dd
    6548:	0001144c 	.word	0x0001144c
    654c:	0001147c 	.word	0x0001147c
    6550:	2000069c 	.word	0x2000069c
    6554:	000114ac 	.word	0x000114ac

00006558 <nmi_spi_write>:
    6558:	b500      	push	{lr}
    655a:	b085      	sub	sp, #20
    655c:	ab01      	add	r3, sp, #4
    655e:	9001      	str	r0, [sp, #4]
    6560:	2200      	movs	r2, #0
    6562:	9202      	str	r2, [sp, #8]
    6564:	8119      	strh	r1, [r3, #8]
    6566:	2003      	movs	r0, #3
    6568:	1c19      	adds	r1, r3, #0
    656a:	4b02      	ldr	r3, [pc, #8]	; (6574 <nmi_spi_write+0x1c>)
    656c:	4798      	blx	r3
    656e:	b005      	add	sp, #20
    6570:	bd00      	pop	{pc}
    6572:	46c0      	nop			; (mov r8, r8)
    6574:	000049b9 	.word	0x000049b9

00006578 <spi_cmd>:
    6578:	b570      	push	{r4, r5, r6, lr}
    657a:	b084      	sub	sp, #16
    657c:	ac08      	add	r4, sp, #32
    657e:	7825      	ldrb	r5, [r4, #0]
    6580:	ac01      	add	r4, sp, #4
    6582:	7020      	strb	r0, [r4, #0]
    6584:	303f      	adds	r0, #63	; 0x3f
    6586:	b2c4      	uxtb	r4, r0
    6588:	2c0e      	cmp	r4, #14
    658a:	d900      	bls.n	658e <spi_cmd+0x16>
    658c:	e092      	b.n	66b4 <spi_cmd+0x13c>
    658e:	00a0      	lsls	r0, r4, #2
    6590:	4c50      	ldr	r4, [pc, #320]	; (66d4 <spi_cmd+0x15c>)
    6592:	5820      	ldr	r0, [r4, r0]
    6594:	4687      	mov	pc, r0
    6596:	ab01      	add	r3, sp, #4
    6598:	0c0a      	lsrs	r2, r1, #16
    659a:	705a      	strb	r2, [r3, #1]
    659c:	0a0a      	lsrs	r2, r1, #8
    659e:	709a      	strb	r2, [r3, #2]
    65a0:	70d9      	strb	r1, [r3, #3]
    65a2:	2105      	movs	r1, #5
    65a4:	e08e      	b.n	66c4 <spi_cmd+0x14c>
    65a6:	0a0b      	lsrs	r3, r1, #8
    65a8:	b2db      	uxtb	r3, r3
    65aa:	2d00      	cmp	r5, #0
    65ac:	d102      	bne.n	65b4 <spi_cmd+0x3c>
    65ae:	aa01      	add	r2, sp, #4
    65b0:	7053      	strb	r3, [r2, #1]
    65b2:	e004      	b.n	65be <spi_cmd+0x46>
    65b4:	2280      	movs	r2, #128	; 0x80
    65b6:	4252      	negs	r2, r2
    65b8:	4313      	orrs	r3, r2
    65ba:	aa01      	add	r2, sp, #4
    65bc:	7053      	strb	r3, [r2, #1]
    65be:	ab01      	add	r3, sp, #4
    65c0:	7099      	strb	r1, [r3, #2]
    65c2:	2200      	movs	r2, #0
    65c4:	70da      	strb	r2, [r3, #3]
    65c6:	2105      	movs	r1, #5
    65c8:	e07c      	b.n	66c4 <spi_cmd+0x14c>
    65ca:	ab01      	add	r3, sp, #4
    65cc:	2200      	movs	r2, #0
    65ce:	705a      	strb	r2, [r3, #1]
    65d0:	709a      	strb	r2, [r3, #2]
    65d2:	70da      	strb	r2, [r3, #3]
    65d4:	2105      	movs	r1, #5
    65d6:	e075      	b.n	66c4 <spi_cmd+0x14c>
    65d8:	ab01      	add	r3, sp, #4
    65da:	2200      	movs	r2, #0
    65dc:	705a      	strb	r2, [r3, #1]
    65de:	709a      	strb	r2, [r3, #2]
    65e0:	70da      	strb	r2, [r3, #3]
    65e2:	2105      	movs	r1, #5
    65e4:	e06e      	b.n	66c4 <spi_cmd+0x14c>
    65e6:	ab01      	add	r3, sp, #4
    65e8:	22ff      	movs	r2, #255	; 0xff
    65ea:	705a      	strb	r2, [r3, #1]
    65ec:	709a      	strb	r2, [r3, #2]
    65ee:	70da      	strb	r2, [r3, #3]
    65f0:	2105      	movs	r1, #5
    65f2:	e067      	b.n	66c4 <spi_cmd+0x14c>
    65f4:	aa01      	add	r2, sp, #4
    65f6:	0c08      	lsrs	r0, r1, #16
    65f8:	7050      	strb	r0, [r2, #1]
    65fa:	0a08      	lsrs	r0, r1, #8
    65fc:	7090      	strb	r0, [r2, #2]
    65fe:	70d1      	strb	r1, [r2, #3]
    6600:	0a19      	lsrs	r1, r3, #8
    6602:	7111      	strb	r1, [r2, #4]
    6604:	7153      	strb	r3, [r2, #5]
    6606:	2107      	movs	r1, #7
    6608:	e05c      	b.n	66c4 <spi_cmd+0x14c>
    660a:	aa01      	add	r2, sp, #4
    660c:	0c08      	lsrs	r0, r1, #16
    660e:	7050      	strb	r0, [r2, #1]
    6610:	0a08      	lsrs	r0, r1, #8
    6612:	7090      	strb	r0, [r2, #2]
    6614:	70d1      	strb	r1, [r2, #3]
    6616:	0c19      	lsrs	r1, r3, #16
    6618:	7111      	strb	r1, [r2, #4]
    661a:	0a19      	lsrs	r1, r3, #8
    661c:	7151      	strb	r1, [r2, #5]
    661e:	7193      	strb	r3, [r2, #6]
    6620:	2108      	movs	r1, #8
    6622:	e04f      	b.n	66c4 <spi_cmd+0x14c>
    6624:	0a0b      	lsrs	r3, r1, #8
    6626:	b2db      	uxtb	r3, r3
    6628:	2d00      	cmp	r5, #0
    662a:	d102      	bne.n	6632 <spi_cmd+0xba>
    662c:	a801      	add	r0, sp, #4
    662e:	7043      	strb	r3, [r0, #1]
    6630:	e004      	b.n	663c <spi_cmd+0xc4>
    6632:	2080      	movs	r0, #128	; 0x80
    6634:	4240      	negs	r0, r0
    6636:	4303      	orrs	r3, r0
    6638:	a801      	add	r0, sp, #4
    663a:	7043      	strb	r3, [r0, #1]
    663c:	ab01      	add	r3, sp, #4
    663e:	7099      	strb	r1, [r3, #2]
    6640:	0e11      	lsrs	r1, r2, #24
    6642:	70d9      	strb	r1, [r3, #3]
    6644:	0c11      	lsrs	r1, r2, #16
    6646:	7119      	strb	r1, [r3, #4]
    6648:	0a11      	lsrs	r1, r2, #8
    664a:	7159      	strb	r1, [r3, #5]
    664c:	719a      	strb	r2, [r3, #6]
    664e:	2108      	movs	r1, #8
    6650:	e038      	b.n	66c4 <spi_cmd+0x14c>
    6652:	ab01      	add	r3, sp, #4
    6654:	0c08      	lsrs	r0, r1, #16
    6656:	7058      	strb	r0, [r3, #1]
    6658:	0a08      	lsrs	r0, r1, #8
    665a:	7098      	strb	r0, [r3, #2]
    665c:	70d9      	strb	r1, [r3, #3]
    665e:	0e11      	lsrs	r1, r2, #24
    6660:	7119      	strb	r1, [r3, #4]
    6662:	0c11      	lsrs	r1, r2, #16
    6664:	7159      	strb	r1, [r3, #5]
    6666:	0a11      	lsrs	r1, r2, #8
    6668:	7199      	strb	r1, [r3, #6]
    666a:	71da      	strb	r2, [r3, #7]
    666c:	2109      	movs	r1, #9
    666e:	e029      	b.n	66c4 <spi_cmd+0x14c>
    6670:	7810      	ldrb	r0, [r2, #0]
    6672:	005b      	lsls	r3, r3, #1
    6674:	4043      	eors	r3, r0
    6676:	5ce3      	ldrb	r3, [r4, r3]
    6678:	3201      	adds	r2, #1
    667a:	42aa      	cmp	r2, r5
    667c:	d1f8      	bne.n	6670 <spi_cmd+0xf8>
    667e:	005b      	lsls	r3, r3, #1
    6680:	aa01      	add	r2, sp, #4
    6682:	5593      	strb	r3, [r2, r6]
    6684:	e001      	b.n	668a <spi_cmd+0x112>
    6686:	3901      	subs	r1, #1
    6688:	b2c9      	uxtb	r1, r1
    668a:	b289      	uxth	r1, r1
    668c:	a801      	add	r0, sp, #4
    668e:	4b12      	ldr	r3, [pc, #72]	; (66d8 <spi_cmd+0x160>)
    6690:	4798      	blx	r3
    6692:	2301      	movs	r3, #1
    6694:	2800      	cmp	r0, #0
    6696:	d01a      	beq.n	66ce <spi_cmd+0x156>
    6698:	4810      	ldr	r0, [pc, #64]	; (66dc <spi_cmd+0x164>)
    669a:	4911      	ldr	r1, [pc, #68]	; (66e0 <spi_cmd+0x168>)
    669c:	228e      	movs	r2, #142	; 0x8e
    669e:	0052      	lsls	r2, r2, #1
    66a0:	4b10      	ldr	r3, [pc, #64]	; (66e4 <spi_cmd+0x16c>)
    66a2:	4798      	blx	r3
    66a4:	4810      	ldr	r0, [pc, #64]	; (66e8 <spi_cmd+0x170>)
    66a6:	4b11      	ldr	r3, [pc, #68]	; (66ec <spi_cmd+0x174>)
    66a8:	4798      	blx	r3
    66aa:	200d      	movs	r0, #13
    66ac:	4b10      	ldr	r3, [pc, #64]	; (66f0 <spi_cmd+0x178>)
    66ae:	4798      	blx	r3
    66b0:	2300      	movs	r3, #0
    66b2:	e00c      	b.n	66ce <spi_cmd+0x156>
    66b4:	2300      	movs	r3, #0
    66b6:	e00a      	b.n	66ce <spi_cmd+0x156>
    66b8:	1e4e      	subs	r6, r1, #1
    66ba:	aa01      	add	r2, sp, #4
    66bc:	1995      	adds	r5, r2, r6
    66be:	237f      	movs	r3, #127	; 0x7f
    66c0:	4c0c      	ldr	r4, [pc, #48]	; (66f4 <spi_cmd+0x17c>)
    66c2:	e7d5      	b.n	6670 <spi_cmd+0xf8>
    66c4:	4b0c      	ldr	r3, [pc, #48]	; (66f8 <spi_cmd+0x180>)
    66c6:	781b      	ldrb	r3, [r3, #0]
    66c8:	2b00      	cmp	r3, #0
    66ca:	d0f5      	beq.n	66b8 <spi_cmd+0x140>
    66cc:	e7db      	b.n	6686 <spi_cmd+0x10e>
    66ce:	b258      	sxtb	r0, r3
    66d0:	b004      	add	sp, #16
    66d2:	bd70      	pop	{r4, r5, r6, pc}
    66d4:	00011358 	.word	0x00011358
    66d8:	00006559 	.word	0x00006559
    66dc:	00010c04 	.word	0x00010c04
    66e0:	000113a4 	.word	0x000113a4
    66e4:	0000c7a9 	.word	0x0000c7a9
    66e8:	000114e0 	.word	0x000114e0
    66ec:	0000c8c9 	.word	0x0000c8c9
    66f0:	0000c7dd 	.word	0x0000c7dd
    66f4:	00011898 	.word	0x00011898
    66f8:	2000069c 	.word	0x2000069c

000066fc <spi_write_reg>:
    66fc:	b570      	push	{r4, r5, r6, lr}
    66fe:	b082      	sub	sp, #8
    6700:	1c04      	adds	r4, r0, #0
    6702:	1c0a      	adds	r2, r1, #0
    6704:	2830      	cmp	r0, #48	; 0x30
    6706:	d902      	bls.n	670e <spi_write_reg+0x12>
    6708:	2300      	movs	r3, #0
    670a:	25c9      	movs	r5, #201	; 0xc9
    670c:	e001      	b.n	6712 <spi_write_reg+0x16>
    670e:	2301      	movs	r3, #1
    6710:	25c3      	movs	r5, #195	; 0xc3
    6712:	9300      	str	r3, [sp, #0]
    6714:	1c28      	adds	r0, r5, #0
    6716:	1c21      	adds	r1, r4, #0
    6718:	2304      	movs	r3, #4
    671a:	4e16      	ldr	r6, [pc, #88]	; (6774 <spi_write_reg+0x78>)
    671c:	47b0      	blx	r6
    671e:	2801      	cmp	r0, #1
    6720:	d00c      	beq.n	673c <spi_write_reg+0x40>
    6722:	4815      	ldr	r0, [pc, #84]	; (6778 <spi_write_reg+0x7c>)
    6724:	4915      	ldr	r1, [pc, #84]	; (677c <spi_write_reg+0x80>)
    6726:	4a16      	ldr	r2, [pc, #88]	; (6780 <spi_write_reg+0x84>)
    6728:	4d16      	ldr	r5, [pc, #88]	; (6784 <spi_write_reg+0x88>)
    672a:	47a8      	blx	r5
    672c:	4816      	ldr	r0, [pc, #88]	; (6788 <spi_write_reg+0x8c>)
    672e:	1c21      	adds	r1, r4, #0
    6730:	47a8      	blx	r5
    6732:	200d      	movs	r0, #13
    6734:	4b15      	ldr	r3, [pc, #84]	; (678c <spi_write_reg+0x90>)
    6736:	4798      	blx	r3
    6738:	2300      	movs	r3, #0
    673a:	e018      	b.n	676e <spi_write_reg+0x72>
    673c:	1c28      	adds	r0, r5, #0
    673e:	4b14      	ldr	r3, [pc, #80]	; (6790 <spi_write_reg+0x94>)
    6740:	4798      	blx	r3
    6742:	2301      	movs	r3, #1
    6744:	2801      	cmp	r0, #1
    6746:	d012      	beq.n	676e <spi_write_reg+0x72>
    6748:	480b      	ldr	r0, [pc, #44]	; (6778 <spi_write_reg+0x7c>)
    674a:	490c      	ldr	r1, [pc, #48]	; (677c <spi_write_reg+0x80>)
    674c:	4a11      	ldr	r2, [pc, #68]	; (6794 <spi_write_reg+0x98>)
    674e:	4d0d      	ldr	r5, [pc, #52]	; (6784 <spi_write_reg+0x88>)
    6750:	47a8      	blx	r5
    6752:	4811      	ldr	r0, [pc, #68]	; (6798 <spi_write_reg+0x9c>)
    6754:	1c21      	adds	r1, r4, #0
    6756:	47a8      	blx	r5
    6758:	200d      	movs	r0, #13
    675a:	4b0c      	ldr	r3, [pc, #48]	; (678c <spi_write_reg+0x90>)
    675c:	4798      	blx	r3
    675e:	2300      	movs	r3, #0
    6760:	9300      	str	r3, [sp, #0]
    6762:	20cf      	movs	r0, #207	; 0xcf
    6764:	2100      	movs	r1, #0
    6766:	2200      	movs	r2, #0
    6768:	4c02      	ldr	r4, [pc, #8]	; (6774 <spi_write_reg+0x78>)
    676a:	47a0      	blx	r4
    676c:	2300      	movs	r3, #0
    676e:	b258      	sxtb	r0, r3
    6770:	b002      	add	sp, #8
    6772:	bd70      	pop	{r4, r5, r6, pc}
    6774:	00006579 	.word	0x00006579
    6778:	00010c04 	.word	0x00010c04
    677c:	00011394 	.word	0x00011394
    6780:	000001ff 	.word	0x000001ff
    6784:	0000c7a9 	.word	0x0000c7a9
    6788:	0001150c 	.word	0x0001150c
    678c:	0000c7dd 	.word	0x0000c7dd
    6790:	00006345 	.word	0x00006345
    6794:	00000205 	.word	0x00000205
    6798:	00011538 	.word	0x00011538

0000679c <spi_read_reg>:
    679c:	b5f0      	push	{r4, r5, r6, r7, lr}
    679e:	b087      	sub	sp, #28
    67a0:	1e04      	subs	r4, r0, #0
    67a2:	9103      	str	r1, [sp, #12]
    67a4:	2cff      	cmp	r4, #255	; 0xff
    67a6:	d902      	bls.n	67ae <spi_read_reg+0x12>
    67a8:	2600      	movs	r6, #0
    67aa:	25ca      	movs	r5, #202	; 0xca
    67ac:	e001      	b.n	67b2 <spi_read_reg+0x16>
    67ae:	2601      	movs	r6, #1
    67b0:	25c4      	movs	r5, #196	; 0xc4
    67b2:	9600      	str	r6, [sp, #0]
    67b4:	1c28      	adds	r0, r5, #0
    67b6:	1c21      	adds	r1, r4, #0
    67b8:	2200      	movs	r2, #0
    67ba:	2304      	movs	r3, #4
    67bc:	4f2a      	ldr	r7, [pc, #168]	; (6868 <spi_read_reg+0xcc>)
    67be:	47b8      	blx	r7
    67c0:	2801      	cmp	r0, #1
    67c2:	d00c      	beq.n	67de <spi_read_reg+0x42>
    67c4:	4829      	ldr	r0, [pc, #164]	; (686c <spi_read_reg+0xd0>)
    67c6:	492a      	ldr	r1, [pc, #168]	; (6870 <spi_read_reg+0xd4>)
    67c8:	4a2a      	ldr	r2, [pc, #168]	; (6874 <spi_read_reg+0xd8>)
    67ca:	4d2b      	ldr	r5, [pc, #172]	; (6878 <spi_read_reg+0xdc>)
    67cc:	47a8      	blx	r5
    67ce:	482b      	ldr	r0, [pc, #172]	; (687c <spi_read_reg+0xe0>)
    67d0:	1c21      	adds	r1, r4, #0
    67d2:	47a8      	blx	r5
    67d4:	200d      	movs	r0, #13
    67d6:	4b2a      	ldr	r3, [pc, #168]	; (6880 <spi_read_reg+0xe4>)
    67d8:	4798      	blx	r3
    67da:	2000      	movs	r0, #0
    67dc:	e041      	b.n	6862 <spi_read_reg+0xc6>
    67de:	1c28      	adds	r0, r5, #0
    67e0:	4b28      	ldr	r3, [pc, #160]	; (6884 <spi_read_reg+0xe8>)
    67e2:	4798      	blx	r3
    67e4:	2801      	cmp	r0, #1
    67e6:	d013      	beq.n	6810 <spi_read_reg+0x74>
    67e8:	4820      	ldr	r0, [pc, #128]	; (686c <spi_read_reg+0xd0>)
    67ea:	4921      	ldr	r1, [pc, #132]	; (6870 <spi_read_reg+0xd4>)
    67ec:	4a26      	ldr	r2, [pc, #152]	; (6888 <spi_read_reg+0xec>)
    67ee:	4d22      	ldr	r5, [pc, #136]	; (6878 <spi_read_reg+0xdc>)
    67f0:	47a8      	blx	r5
    67f2:	4826      	ldr	r0, [pc, #152]	; (688c <spi_read_reg+0xf0>)
    67f4:	1c21      	adds	r1, r4, #0
    67f6:	47a8      	blx	r5
    67f8:	200d      	movs	r0, #13
    67fa:	4b21      	ldr	r3, [pc, #132]	; (6880 <spi_read_reg+0xe4>)
    67fc:	4798      	blx	r3
    67fe:	2300      	movs	r3, #0
    6800:	9300      	str	r3, [sp, #0]
    6802:	20cf      	movs	r0, #207	; 0xcf
    6804:	2100      	movs	r1, #0
    6806:	2200      	movs	r2, #0
    6808:	4c17      	ldr	r4, [pc, #92]	; (6868 <spi_read_reg+0xcc>)
    680a:	47a0      	blx	r4
    680c:	2000      	movs	r0, #0
    680e:	e028      	b.n	6862 <spi_read_reg+0xc6>
    6810:	a805      	add	r0, sp, #20
    6812:	2104      	movs	r1, #4
    6814:	1c32      	adds	r2, r6, #0
    6816:	4b1e      	ldr	r3, [pc, #120]	; (6890 <spi_read_reg+0xf4>)
    6818:	4798      	blx	r3
    681a:	2801      	cmp	r0, #1
    681c:	d013      	beq.n	6846 <spi_read_reg+0xaa>
    681e:	4813      	ldr	r0, [pc, #76]	; (686c <spi_read_reg+0xd0>)
    6820:	4913      	ldr	r1, [pc, #76]	; (6870 <spi_read_reg+0xd4>)
    6822:	4a1c      	ldr	r2, [pc, #112]	; (6894 <spi_read_reg+0xf8>)
    6824:	4b14      	ldr	r3, [pc, #80]	; (6878 <spi_read_reg+0xdc>)
    6826:	4798      	blx	r3
    6828:	481b      	ldr	r0, [pc, #108]	; (6898 <spi_read_reg+0xfc>)
    682a:	4b1c      	ldr	r3, [pc, #112]	; (689c <spi_read_reg+0x100>)
    682c:	4798      	blx	r3
    682e:	200d      	movs	r0, #13
    6830:	4b13      	ldr	r3, [pc, #76]	; (6880 <spi_read_reg+0xe4>)
    6832:	4798      	blx	r3
    6834:	2300      	movs	r3, #0
    6836:	9300      	str	r3, [sp, #0]
    6838:	20cf      	movs	r0, #207	; 0xcf
    683a:	2100      	movs	r1, #0
    683c:	2200      	movs	r2, #0
    683e:	4c0a      	ldr	r4, [pc, #40]	; (6868 <spi_read_reg+0xcc>)
    6840:	47a0      	blx	r4
    6842:	2000      	movs	r0, #0
    6844:	e00d      	b.n	6862 <spi_read_reg+0xc6>
    6846:	aa05      	add	r2, sp, #20
    6848:	7853      	ldrb	r3, [r2, #1]
    684a:	0219      	lsls	r1, r3, #8
    684c:	7893      	ldrb	r3, [r2, #2]
    684e:	041b      	lsls	r3, r3, #16
    6850:	430b      	orrs	r3, r1
    6852:	7811      	ldrb	r1, [r2, #0]
    6854:	430b      	orrs	r3, r1
    6856:	78d2      	ldrb	r2, [r2, #3]
    6858:	0612      	lsls	r2, r2, #24
    685a:	4313      	orrs	r3, r2
    685c:	9a03      	ldr	r2, [sp, #12]
    685e:	6013      	str	r3, [r2, #0]
    6860:	2001      	movs	r0, #1
    6862:	b240      	sxtb	r0, r0
    6864:	b007      	add	sp, #28
    6866:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6868:	00006579 	.word	0x00006579
    686c:	00010c04 	.word	0x00010c04
    6870:	000113c8 	.word	0x000113c8
    6874:	00000259 	.word	0x00000259
    6878:	0000c7a9 	.word	0x0000c7a9
    687c:	00011570 	.word	0x00011570
    6880:	0000c7dd 	.word	0x0000c7dd
    6884:	00006345 	.word	0x00006345
    6888:	0000025f 	.word	0x0000025f
    688c:	0001159c 	.word	0x0001159c
    6890:	0000640d 	.word	0x0000640d
    6894:	00000267 	.word	0x00000267
    6898:	000115d0 	.word	0x000115d0
    689c:	0000c8c9 	.word	0x0000c8c9

000068a0 <nm_spi_read_reg>:
    68a0:	b500      	push	{lr}
    68a2:	b083      	sub	sp, #12
    68a4:	a901      	add	r1, sp, #4
    68a6:	4b02      	ldr	r3, [pc, #8]	; (68b0 <nm_spi_read_reg+0x10>)
    68a8:	4798      	blx	r3
    68aa:	9801      	ldr	r0, [sp, #4]
    68ac:	b003      	add	sp, #12
    68ae:	bd00      	pop	{pc}
    68b0:	0000679d 	.word	0x0000679d

000068b4 <nm_spi_read_reg_with_ret>:
    68b4:	b508      	push	{r3, lr}
    68b6:	4b04      	ldr	r3, [pc, #16]	; (68c8 <nm_spi_read_reg_with_ret+0x14>)
    68b8:	4798      	blx	r3
    68ba:	2300      	movs	r3, #0
    68bc:	2801      	cmp	r0, #1
    68be:	d000      	beq.n	68c2 <nm_spi_read_reg_with_ret+0xe>
    68c0:	33fa      	adds	r3, #250	; 0xfa
    68c2:	b258      	sxtb	r0, r3
    68c4:	bd08      	pop	{r3, pc}
    68c6:	46c0      	nop			; (mov r8, r8)
    68c8:	0000679d 	.word	0x0000679d

000068cc <nm_spi_write_reg>:
    68cc:	b508      	push	{r3, lr}
    68ce:	4b04      	ldr	r3, [pc, #16]	; (68e0 <nm_spi_write_reg+0x14>)
    68d0:	4798      	blx	r3
    68d2:	2300      	movs	r3, #0
    68d4:	2801      	cmp	r0, #1
    68d6:	d000      	beq.n	68da <nm_spi_write_reg+0xe>
    68d8:	33fa      	adds	r3, #250	; 0xfa
    68da:	b258      	sxtb	r0, r3
    68dc:	bd08      	pop	{r3, pc}
    68de:	46c0      	nop			; (mov r8, r8)
    68e0:	000066fd 	.word	0x000066fd

000068e4 <nm_spi_read_block>:
    68e4:	b5f0      	push	{r4, r5, r6, r7, lr}
    68e6:	b083      	sub	sp, #12
    68e8:	1c04      	adds	r4, r0, #0
    68ea:	1c0e      	adds	r6, r1, #0
    68ec:	1c15      	adds	r5, r2, #0
    68ee:	2300      	movs	r3, #0
    68f0:	9300      	str	r3, [sp, #0]
    68f2:	20c8      	movs	r0, #200	; 0xc8
    68f4:	1c21      	adds	r1, r4, #0
    68f6:	2200      	movs	r2, #0
    68f8:	1c2b      	adds	r3, r5, #0
    68fa:	4f24      	ldr	r7, [pc, #144]	; (698c <nm_spi_read_block+0xa8>)
    68fc:	47b8      	blx	r7
    68fe:	2801      	cmp	r0, #1
    6900:	d00c      	beq.n	691c <nm_spi_read_block+0x38>
    6902:	4823      	ldr	r0, [pc, #140]	; (6990 <nm_spi_read_block+0xac>)
    6904:	4923      	ldr	r1, [pc, #140]	; (6994 <nm_spi_read_block+0xb0>)
    6906:	22a2      	movs	r2, #162	; 0xa2
    6908:	0092      	lsls	r2, r2, #2
    690a:	4d23      	ldr	r5, [pc, #140]	; (6998 <nm_spi_read_block+0xb4>)
    690c:	47a8      	blx	r5
    690e:	4823      	ldr	r0, [pc, #140]	; (699c <nm_spi_read_block+0xb8>)
    6910:	1c21      	adds	r1, r4, #0
    6912:	47a8      	blx	r5
    6914:	200d      	movs	r0, #13
    6916:	4b22      	ldr	r3, [pc, #136]	; (69a0 <nm_spi_read_block+0xbc>)
    6918:	4798      	blx	r3
    691a:	e032      	b.n	6982 <nm_spi_read_block+0x9e>
    691c:	20c8      	movs	r0, #200	; 0xc8
    691e:	4b21      	ldr	r3, [pc, #132]	; (69a4 <nm_spi_read_block+0xc0>)
    6920:	4798      	blx	r3
    6922:	2801      	cmp	r0, #1
    6924:	d012      	beq.n	694c <nm_spi_read_block+0x68>
    6926:	481a      	ldr	r0, [pc, #104]	; (6990 <nm_spi_read_block+0xac>)
    6928:	491a      	ldr	r1, [pc, #104]	; (6994 <nm_spi_read_block+0xb0>)
    692a:	4a1f      	ldr	r2, [pc, #124]	; (69a8 <nm_spi_read_block+0xc4>)
    692c:	4d1a      	ldr	r5, [pc, #104]	; (6998 <nm_spi_read_block+0xb4>)
    692e:	47a8      	blx	r5
    6930:	481e      	ldr	r0, [pc, #120]	; (69ac <nm_spi_read_block+0xc8>)
    6932:	1c21      	adds	r1, r4, #0
    6934:	47a8      	blx	r5
    6936:	200d      	movs	r0, #13
    6938:	4b19      	ldr	r3, [pc, #100]	; (69a0 <nm_spi_read_block+0xbc>)
    693a:	4798      	blx	r3
    693c:	2300      	movs	r3, #0
    693e:	9300      	str	r3, [sp, #0]
    6940:	20cf      	movs	r0, #207	; 0xcf
    6942:	2100      	movs	r1, #0
    6944:	2200      	movs	r2, #0
    6946:	4c11      	ldr	r4, [pc, #68]	; (698c <nm_spi_read_block+0xa8>)
    6948:	47a0      	blx	r4
    694a:	e01a      	b.n	6982 <nm_spi_read_block+0x9e>
    694c:	1c30      	adds	r0, r6, #0
    694e:	1c29      	adds	r1, r5, #0
    6950:	2200      	movs	r2, #0
    6952:	4b17      	ldr	r3, [pc, #92]	; (69b0 <nm_spi_read_block+0xcc>)
    6954:	4798      	blx	r3
    6956:	2300      	movs	r3, #0
    6958:	2801      	cmp	r0, #1
    695a:	d013      	beq.n	6984 <nm_spi_read_block+0xa0>
    695c:	480c      	ldr	r0, [pc, #48]	; (6990 <nm_spi_read_block+0xac>)
    695e:	490d      	ldr	r1, [pc, #52]	; (6994 <nm_spi_read_block+0xb0>)
    6960:	22a6      	movs	r2, #166	; 0xa6
    6962:	0092      	lsls	r2, r2, #2
    6964:	4b0c      	ldr	r3, [pc, #48]	; (6998 <nm_spi_read_block+0xb4>)
    6966:	4798      	blx	r3
    6968:	4812      	ldr	r0, [pc, #72]	; (69b4 <nm_spi_read_block+0xd0>)
    696a:	4b13      	ldr	r3, [pc, #76]	; (69b8 <nm_spi_read_block+0xd4>)
    696c:	4798      	blx	r3
    696e:	200d      	movs	r0, #13
    6970:	4b0b      	ldr	r3, [pc, #44]	; (69a0 <nm_spi_read_block+0xbc>)
    6972:	4798      	blx	r3
    6974:	2300      	movs	r3, #0
    6976:	9300      	str	r3, [sp, #0]
    6978:	20cf      	movs	r0, #207	; 0xcf
    697a:	2100      	movs	r1, #0
    697c:	2200      	movs	r2, #0
    697e:	4c03      	ldr	r4, [pc, #12]	; (698c <nm_spi_read_block+0xa8>)
    6980:	47a0      	blx	r4
    6982:	23fa      	movs	r3, #250	; 0xfa
    6984:	b258      	sxtb	r0, r3
    6986:	b003      	add	sp, #12
    6988:	bdf0      	pop	{r4, r5, r6, r7, pc}
    698a:	46c0      	nop			; (mov r8, r8)
    698c:	00006579 	.word	0x00006579
    6990:	00010c04 	.word	0x00010c04
    6994:	000113d8 	.word	0x000113d8
    6998:	0000c7a9 	.word	0x0000c7a9
    699c:	000116c4 	.word	0x000116c4
    69a0:	0000c7dd 	.word	0x0000c7dd
    69a4:	00006345 	.word	0x00006345
    69a8:	0000028e 	.word	0x0000028e
    69ac:	000116f4 	.word	0x000116f4
    69b0:	0000640d 	.word	0x0000640d
    69b4:	0001172c 	.word	0x0001172c
    69b8:	0000c8c9 	.word	0x0000c8c9

000069bc <nm_spi_write_block>:
    69bc:	b5f0      	push	{r4, r5, r6, r7, lr}
    69be:	464f      	mov	r7, r9
    69c0:	4646      	mov	r6, r8
    69c2:	b4c0      	push	{r6, r7}
    69c4:	b087      	sub	sp, #28
    69c6:	1c04      	adds	r4, r0, #0
    69c8:	4689      	mov	r9, r1
    69ca:	1c15      	adds	r5, r2, #0
    69cc:	2300      	movs	r3, #0
    69ce:	9300      	str	r3, [sp, #0]
    69d0:	20c7      	movs	r0, #199	; 0xc7
    69d2:	1c21      	adds	r1, r4, #0
    69d4:	2200      	movs	r2, #0
    69d6:	1c2b      	adds	r3, r5, #0
    69d8:	4e55      	ldr	r6, [pc, #340]	; (6b30 <nm_spi_write_block+0x174>)
    69da:	47b0      	blx	r6
    69dc:	2801      	cmp	r0, #1
    69de:	d00b      	beq.n	69f8 <nm_spi_write_block+0x3c>
    69e0:	4854      	ldr	r0, [pc, #336]	; (6b34 <nm_spi_write_block+0x178>)
    69e2:	4955      	ldr	r1, [pc, #340]	; (6b38 <nm_spi_write_block+0x17c>)
    69e4:	4a55      	ldr	r2, [pc, #340]	; (6b3c <nm_spi_write_block+0x180>)
    69e6:	4d56      	ldr	r5, [pc, #344]	; (6b40 <nm_spi_write_block+0x184>)
    69e8:	47a8      	blx	r5
    69ea:	4856      	ldr	r0, [pc, #344]	; (6b44 <nm_spi_write_block+0x188>)
    69ec:	1c21      	adds	r1, r4, #0
    69ee:	47a8      	blx	r5
    69f0:	200d      	movs	r0, #13
    69f2:	4b55      	ldr	r3, [pc, #340]	; (6b48 <nm_spi_write_block+0x18c>)
    69f4:	4798      	blx	r3
    69f6:	e094      	b.n	6b22 <nm_spi_write_block+0x166>
    69f8:	20c7      	movs	r0, #199	; 0xc7
    69fa:	4b54      	ldr	r3, [pc, #336]	; (6b4c <nm_spi_write_block+0x190>)
    69fc:	4798      	blx	r3
    69fe:	2801      	cmp	r0, #1
    6a00:	d012      	beq.n	6a28 <nm_spi_write_block+0x6c>
    6a02:	484c      	ldr	r0, [pc, #304]	; (6b34 <nm_spi_write_block+0x178>)
    6a04:	494c      	ldr	r1, [pc, #304]	; (6b38 <nm_spi_write_block+0x17c>)
    6a06:	4a52      	ldr	r2, [pc, #328]	; (6b50 <nm_spi_write_block+0x194>)
    6a08:	4d4d      	ldr	r5, [pc, #308]	; (6b40 <nm_spi_write_block+0x184>)
    6a0a:	47a8      	blx	r5
    6a0c:	4851      	ldr	r0, [pc, #324]	; (6b54 <nm_spi_write_block+0x198>)
    6a0e:	1c21      	adds	r1, r4, #0
    6a10:	47a8      	blx	r5
    6a12:	200d      	movs	r0, #13
    6a14:	4b4c      	ldr	r3, [pc, #304]	; (6b48 <nm_spi_write_block+0x18c>)
    6a16:	4798      	blx	r3
    6a18:	2300      	movs	r3, #0
    6a1a:	9300      	str	r3, [sp, #0]
    6a1c:	20cf      	movs	r0, #207	; 0xcf
    6a1e:	2100      	movs	r1, #0
    6a20:	2200      	movs	r2, #0
    6a22:	4c43      	ldr	r4, [pc, #268]	; (6b30 <nm_spi_write_block+0x174>)
    6a24:	47a0      	blx	r4
    6a26:	e07c      	b.n	6b22 <nm_spi_write_block+0x166>
    6a28:	2200      	movs	r2, #0
    6a2a:	ab05      	add	r3, sp, #20
    6a2c:	801a      	strh	r2, [r3, #0]
    6a2e:	2700      	movs	r7, #0
    6a30:	2380      	movs	r3, #128	; 0x80
    6a32:	019b      	lsls	r3, r3, #6
    6a34:	4698      	mov	r8, r3
    6a36:	466a      	mov	r2, sp
    6a38:	81d3      	strh	r3, [r2, #14]
    6a3a:	4e47      	ldr	r6, [pc, #284]	; (6b58 <nm_spi_write_block+0x19c>)
    6a3c:	1c2c      	adds	r4, r5, #0
    6a3e:	4545      	cmp	r5, r8
    6a40:	d901      	bls.n	6a46 <nm_spi_write_block+0x8a>
    6a42:	466b      	mov	r3, sp
    6a44:	89dc      	ldrh	r4, [r3, #14]
    6a46:	b2a4      	uxth	r4, r4
    6a48:	2f00      	cmp	r7, #0
    6a4a:	d104      	bne.n	6a56 <nm_spi_write_block+0x9a>
    6a4c:	2303      	movs	r3, #3
    6a4e:	4545      	cmp	r5, r8
    6a50:	d906      	bls.n	6a60 <nm_spi_write_block+0xa4>
    6a52:	3b02      	subs	r3, #2
    6a54:	e004      	b.n	6a60 <nm_spi_write_block+0xa4>
    6a56:	2300      	movs	r3, #0
    6a58:	4642      	mov	r2, r8
    6a5a:	42aa      	cmp	r2, r5
    6a5c:	415b      	adcs	r3, r3
    6a5e:	3302      	adds	r3, #2
    6a60:	200b      	movs	r0, #11
    6a62:	aa02      	add	r2, sp, #8
    6a64:	4694      	mov	ip, r2
    6a66:	4460      	add	r0, ip
    6a68:	2210      	movs	r2, #16
    6a6a:	4252      	negs	r2, r2
    6a6c:	4313      	orrs	r3, r2
    6a6e:	7003      	strb	r3, [r0, #0]
    6a70:	2101      	movs	r1, #1
    6a72:	47b0      	blx	r6
    6a74:	2800      	cmp	r0, #0
    6a76:	d00c      	beq.n	6a92 <nm_spi_write_block+0xd6>
    6a78:	482e      	ldr	r0, [pc, #184]	; (6b34 <nm_spi_write_block+0x178>)
    6a7a:	4938      	ldr	r1, [pc, #224]	; (6b5c <nm_spi_write_block+0x1a0>)
    6a7c:	22de      	movs	r2, #222	; 0xde
    6a7e:	0052      	lsls	r2, r2, #1
    6a80:	4b2f      	ldr	r3, [pc, #188]	; (6b40 <nm_spi_write_block+0x184>)
    6a82:	4798      	blx	r3
    6a84:	4836      	ldr	r0, [pc, #216]	; (6b60 <nm_spi_write_block+0x1a4>)
    6a86:	4b37      	ldr	r3, [pc, #220]	; (6b64 <nm_spi_write_block+0x1a8>)
    6a88:	4798      	blx	r3
    6a8a:	200d      	movs	r0, #13
    6a8c:	4b2e      	ldr	r3, [pc, #184]	; (6b48 <nm_spi_write_block+0x18c>)
    6a8e:	4798      	blx	r3
    6a90:	e031      	b.n	6af6 <nm_spi_write_block+0x13a>
    6a92:	b238      	sxth	r0, r7
    6a94:	4448      	add	r0, r9
    6a96:	1c21      	adds	r1, r4, #0
    6a98:	4b2f      	ldr	r3, [pc, #188]	; (6b58 <nm_spi_write_block+0x19c>)
    6a9a:	4798      	blx	r3
    6a9c:	2800      	cmp	r0, #0
    6a9e:	d00c      	beq.n	6aba <nm_spi_write_block+0xfe>
    6aa0:	4824      	ldr	r0, [pc, #144]	; (6b34 <nm_spi_write_block+0x178>)
    6aa2:	492e      	ldr	r1, [pc, #184]	; (6b5c <nm_spi_write_block+0x1a0>)
    6aa4:	22c6      	movs	r2, #198	; 0xc6
    6aa6:	32ff      	adds	r2, #255	; 0xff
    6aa8:	4b25      	ldr	r3, [pc, #148]	; (6b40 <nm_spi_write_block+0x184>)
    6aaa:	4798      	blx	r3
    6aac:	482e      	ldr	r0, [pc, #184]	; (6b68 <nm_spi_write_block+0x1ac>)
    6aae:	4b2d      	ldr	r3, [pc, #180]	; (6b64 <nm_spi_write_block+0x1a8>)
    6ab0:	4798      	blx	r3
    6ab2:	200d      	movs	r0, #13
    6ab4:	4b24      	ldr	r3, [pc, #144]	; (6b48 <nm_spi_write_block+0x18c>)
    6ab6:	4798      	blx	r3
    6ab8:	e01d      	b.n	6af6 <nm_spi_write_block+0x13a>
    6aba:	4b2c      	ldr	r3, [pc, #176]	; (6b6c <nm_spi_write_block+0x1b0>)
    6abc:	781b      	ldrb	r3, [r3, #0]
    6abe:	2b00      	cmp	r3, #0
    6ac0:	d112      	bne.n	6ae8 <nm_spi_write_block+0x12c>
    6ac2:	a805      	add	r0, sp, #20
    6ac4:	2102      	movs	r1, #2
    6ac6:	4b24      	ldr	r3, [pc, #144]	; (6b58 <nm_spi_write_block+0x19c>)
    6ac8:	4798      	blx	r3
    6aca:	2800      	cmp	r0, #0
    6acc:	d00c      	beq.n	6ae8 <nm_spi_write_block+0x12c>
    6ace:	4819      	ldr	r0, [pc, #100]	; (6b34 <nm_spi_write_block+0x178>)
    6ad0:	4922      	ldr	r1, [pc, #136]	; (6b5c <nm_spi_write_block+0x1a0>)
    6ad2:	22d0      	movs	r2, #208	; 0xd0
    6ad4:	32ff      	adds	r2, #255	; 0xff
    6ad6:	4b1a      	ldr	r3, [pc, #104]	; (6b40 <nm_spi_write_block+0x184>)
    6ad8:	4798      	blx	r3
    6ada:	4825      	ldr	r0, [pc, #148]	; (6b70 <nm_spi_write_block+0x1b4>)
    6adc:	4b21      	ldr	r3, [pc, #132]	; (6b64 <nm_spi_write_block+0x1a8>)
    6ade:	4798      	blx	r3
    6ae0:	200d      	movs	r0, #13
    6ae2:	4b19      	ldr	r3, [pc, #100]	; (6b48 <nm_spi_write_block+0x18c>)
    6ae4:	4798      	blx	r3
    6ae6:	e006      	b.n	6af6 <nm_spi_write_block+0x13a>
    6ae8:	19e7      	adds	r7, r4, r7
    6aea:	b2bf      	uxth	r7, r7
    6aec:	1b2d      	subs	r5, r5, r4
    6aee:	b2ad      	uxth	r5, r5
    6af0:	2d00      	cmp	r5, #0
    6af2:	d1a3      	bne.n	6a3c <nm_spi_write_block+0x80>
    6af4:	e013      	b.n	6b1e <nm_spi_write_block+0x162>
    6af6:	480f      	ldr	r0, [pc, #60]	; (6b34 <nm_spi_write_block+0x178>)
    6af8:	490f      	ldr	r1, [pc, #60]	; (6b38 <nm_spi_write_block+0x17c>)
    6afa:	4a1e      	ldr	r2, [pc, #120]	; (6b74 <nm_spi_write_block+0x1b8>)
    6afc:	4b10      	ldr	r3, [pc, #64]	; (6b40 <nm_spi_write_block+0x184>)
    6afe:	4798      	blx	r3
    6b00:	481d      	ldr	r0, [pc, #116]	; (6b78 <nm_spi_write_block+0x1bc>)
    6b02:	4b18      	ldr	r3, [pc, #96]	; (6b64 <nm_spi_write_block+0x1a8>)
    6b04:	4798      	blx	r3
    6b06:	200d      	movs	r0, #13
    6b08:	4b0f      	ldr	r3, [pc, #60]	; (6b48 <nm_spi_write_block+0x18c>)
    6b0a:	4798      	blx	r3
    6b0c:	2300      	movs	r3, #0
    6b0e:	9300      	str	r3, [sp, #0]
    6b10:	20cf      	movs	r0, #207	; 0xcf
    6b12:	2100      	movs	r1, #0
    6b14:	2200      	movs	r2, #0
    6b16:	4c06      	ldr	r4, [pc, #24]	; (6b30 <nm_spi_write_block+0x174>)
    6b18:	47a0      	blx	r4
    6b1a:	2000      	movs	r0, #0
    6b1c:	e002      	b.n	6b24 <nm_spi_write_block+0x168>
    6b1e:	2000      	movs	r0, #0
    6b20:	e000      	b.n	6b24 <nm_spi_write_block+0x168>
    6b22:	20fa      	movs	r0, #250	; 0xfa
    6b24:	b240      	sxtb	r0, r0
    6b26:	b007      	add	sp, #28
    6b28:	bc0c      	pop	{r2, r3}
    6b2a:	4690      	mov	r8, r2
    6b2c:	4699      	mov	r9, r3
    6b2e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6b30:	00006579 	.word	0x00006579
    6b34:	00010c04 	.word	0x00010c04
    6b38:	000113ac 	.word	0x000113ac
    6b3c:	00000223 	.word	0x00000223
    6b40:	0000c7a9 	.word	0x0000c7a9
    6b44:	00011754 	.word	0x00011754
    6b48:	0000c7dd 	.word	0x0000c7dd
    6b4c:	00006345 	.word	0x00006345
    6b50:	00000229 	.word	0x00000229
    6b54:	00011784 	.word	0x00011784
    6b58:	00006559 	.word	0x00006559
    6b5c:	00011888 	.word	0x00011888
    6b60:	000117bc 	.word	0x000117bc
    6b64:	0000c8c9 	.word	0x0000c8c9
    6b68:	000117f4 	.word	0x000117f4
    6b6c:	2000069c 	.word	0x2000069c
    6b70:	00011828 	.word	0x00011828
    6b74:	0000023a 	.word	0x0000023a
    6b78:	00011860 	.word	0x00011860

00006b7c <Socket_ReadSocketData>:
    6b7c:	b5f0      	push	{r4, r5, r6, r7, lr}
    6b7e:	465f      	mov	r7, fp
    6b80:	4656      	mov	r6, sl
    6b82:	464d      	mov	r5, r9
    6b84:	4644      	mov	r4, r8
    6b86:	b4f0      	push	{r4, r5, r6, r7}
    6b88:	b083      	sub	sp, #12
    6b8a:	1c0e      	adds	r6, r1, #0
    6b8c:	9200      	str	r2, [sp, #0]
    6b8e:	4699      	mov	r9, r3
    6b90:	ab0c      	add	r3, sp, #48	; 0x30
    6b92:	881c      	ldrh	r4, [r3, #0]
    6b94:	2c00      	cmp	r4, #0
    6b96:	d057      	beq.n	6c48 <Socket_ReadSocketData+0xcc>
    6b98:	0043      	lsls	r3, r0, #1
    6b9a:	181b      	adds	r3, r3, r0
    6b9c:	009b      	lsls	r3, r3, #2
    6b9e:	492e      	ldr	r1, [pc, #184]	; (6c58 <Socket_ReadSocketData+0xdc>)
    6ba0:	585b      	ldr	r3, [r3, r1]
    6ba2:	2b00      	cmp	r3, #0
    6ba4:	d050      	beq.n	6c48 <Socket_ReadSocketData+0xcc>
    6ba6:	0043      	lsls	r3, r0, #1
    6ba8:	181b      	adds	r3, r3, r0
    6baa:	009b      	lsls	r3, r3, #2
    6bac:	18cb      	adds	r3, r1, r3
    6bae:	889b      	ldrh	r3, [r3, #4]
    6bb0:	b29b      	uxth	r3, r3
    6bb2:	2b00      	cmp	r3, #0
    6bb4:	d048      	beq.n	6c48 <Socket_ReadSocketData+0xcc>
    6bb6:	0043      	lsls	r3, r0, #1
    6bb8:	181b      	adds	r3, r3, r0
    6bba:	009b      	lsls	r3, r3, #2
    6bbc:	18cb      	adds	r3, r1, r3
    6bbe:	799b      	ldrb	r3, [r3, #6]
    6bc0:	2b01      	cmp	r3, #1
    6bc2:	d141      	bne.n	6c48 <Socket_ReadSocketData+0xcc>
    6bc4:	80f4      	strh	r4, [r6, #6]
    6bc6:	0043      	lsls	r3, r0, #1
    6bc8:	181a      	adds	r2, r3, r0
    6bca:	0093      	lsls	r3, r2, #2
    6bcc:	4698      	mov	r8, r3
    6bce:	1c0b      	adds	r3, r1, #0
    6bd0:	4443      	add	r3, r8
    6bd2:	469a      	mov	sl, r3
    6bd4:	468b      	mov	fp, r1
    6bd6:	9001      	str	r0, [sp, #4]
    6bd8:	4653      	mov	r3, sl
    6bda:	889b      	ldrh	r3, [r3, #4]
    6bdc:	1ae3      	subs	r3, r4, r3
    6bde:	b21b      	sxth	r3, r3
    6be0:	2b00      	cmp	r3, #0
    6be2:	dd05      	ble.n	6bf0 <Socket_ReadSocketData+0x74>
    6be4:	4b1c      	ldr	r3, [pc, #112]	; (6c58 <Socket_ReadSocketData+0xdc>)
    6be6:	4443      	add	r3, r8
    6be8:	889d      	ldrh	r5, [r3, #4]
    6bea:	b2ad      	uxth	r5, r5
    6bec:	2300      	movs	r3, #0
    6bee:	e001      	b.n	6bf4 <Socket_ReadSocketData+0x78>
    6bf0:	1c25      	adds	r5, r4, #0
    6bf2:	2301      	movs	r3, #1
    6bf4:	465a      	mov	r2, fp
    6bf6:	4641      	mov	r1, r8
    6bf8:	5889      	ldr	r1, [r1, r2]
    6bfa:	4648      	mov	r0, r9
    6bfc:	1c2a      	adds	r2, r5, #0
    6bfe:	4f17      	ldr	r7, [pc, #92]	; (6c5c <Socket_ReadSocketData+0xe0>)
    6c00:	47b8      	blx	r7
    6c02:	2800      	cmp	r0, #0
    6c04:	d117      	bne.n	6c36 <Socket_ReadSocketData+0xba>
    6c06:	4b14      	ldr	r3, [pc, #80]	; (6c58 <Socket_ReadSocketData+0xdc>)
    6c08:	4642      	mov	r2, r8
    6c0a:	58d3      	ldr	r3, [r2, r3]
    6c0c:	6033      	str	r3, [r6, #0]
    6c0e:	80b5      	strh	r5, [r6, #4]
    6c10:	88f3      	ldrh	r3, [r6, #6]
    6c12:	1b5b      	subs	r3, r3, r5
    6c14:	80f3      	strh	r3, [r6, #6]
    6c16:	4b12      	ldr	r3, [pc, #72]	; (6c60 <Socket_ReadSocketData+0xe4>)
    6c18:	681b      	ldr	r3, [r3, #0]
    6c1a:	2b00      	cmp	r3, #0
    6c1c:	d005      	beq.n	6c2a <Socket_ReadSocketData+0xae>
    6c1e:	4b10      	ldr	r3, [pc, #64]	; (6c60 <Socket_ReadSocketData+0xe4>)
    6c20:	681b      	ldr	r3, [r3, #0]
    6c22:	9801      	ldr	r0, [sp, #4]
    6c24:	9900      	ldr	r1, [sp, #0]
    6c26:	1c32      	adds	r2, r6, #0
    6c28:	4798      	blx	r3
    6c2a:	1b64      	subs	r4, r4, r5
    6c2c:	b2a4      	uxth	r4, r4
    6c2e:	44a9      	add	r9, r5
    6c30:	2c00      	cmp	r4, #0
    6c32:	d1d1      	bne.n	6bd8 <Socket_ReadSocketData+0x5c>
    6c34:	e008      	b.n	6c48 <Socket_ReadSocketData+0xcc>
    6c36:	480b      	ldr	r0, [pc, #44]	; (6c64 <Socket_ReadSocketData+0xe8>)
    6c38:	4d0b      	ldr	r5, [pc, #44]	; (6c68 <Socket_ReadSocketData+0xec>)
    6c3a:	47a8      	blx	r5
    6c3c:	480b      	ldr	r0, [pc, #44]	; (6c6c <Socket_ReadSocketData+0xf0>)
    6c3e:	1c21      	adds	r1, r4, #0
    6c40:	47a8      	blx	r5
    6c42:	200d      	movs	r0, #13
    6c44:	4b0a      	ldr	r3, [pc, #40]	; (6c70 <Socket_ReadSocketData+0xf4>)
    6c46:	4798      	blx	r3
    6c48:	b003      	add	sp, #12
    6c4a:	bc3c      	pop	{r2, r3, r4, r5}
    6c4c:	4690      	mov	r8, r2
    6c4e:	4699      	mov	r9, r3
    6c50:	46a2      	mov	sl, r4
    6c52:	46ab      	mov	fp, r5
    6c54:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6c56:	46c0      	nop			; (mov r8, r8)
    6c58:	200009d8 	.word	0x200009d8
    6c5c:	0000521d 	.word	0x0000521d
    6c60:	20000a5c 	.word	0x20000a5c
    6c64:	00010f14 	.word	0x00010f14
    6c68:	0000c7a9 	.word	0x0000c7a9
    6c6c:	000119a8 	.word	0x000119a8
    6c70:	0000c7dd 	.word	0x0000c7dd

00006c74 <m2m_ip_cb>:
    6c74:	b5f0      	push	{r4, r5, r6, r7, lr}
    6c76:	465f      	mov	r7, fp
    6c78:	4656      	mov	r6, sl
    6c7a:	464d      	mov	r5, r9
    6c7c:	4644      	mov	r4, r8
    6c7e:	b4f0      	push	{r4, r5, r6, r7}
    6c80:	b09b      	sub	sp, #108	; 0x6c
    6c82:	1c0d      	adds	r5, r1, #0
    6c84:	1c14      	adds	r4, r2, #0
    6c86:	2841      	cmp	r0, #65	; 0x41
    6c88:	d11a      	bne.n	6cc0 <m2m_ip_cb+0x4c>
    6c8a:	1c10      	adds	r0, r2, #0
    6c8c:	a909      	add	r1, sp, #36	; 0x24
    6c8e:	2204      	movs	r2, #4
    6c90:	2300      	movs	r3, #0
    6c92:	4ca7      	ldr	r4, [pc, #668]	; (6f30 <m2m_ip_cb+0x2bc>)
    6c94:	47a0      	blx	r4
    6c96:	2800      	cmp	r0, #0
    6c98:	d000      	beq.n	6c9c <m2m_ip_cb+0x28>
    6c9a:	e141      	b.n	6f20 <m2m_ip_cb+0x2ac>
    6c9c:	ab09      	add	r3, sp, #36	; 0x24
    6c9e:	785a      	ldrb	r2, [r3, #1]
    6ca0:	ab05      	add	r3, sp, #20
    6ca2:	701a      	strb	r2, [r3, #0]
    6ca4:	4ba3      	ldr	r3, [pc, #652]	; (6f34 <m2m_ip_cb+0x2c0>)
    6ca6:	681b      	ldr	r3, [r3, #0]
    6ca8:	2b00      	cmp	r3, #0
    6caa:	d100      	bne.n	6cae <m2m_ip_cb+0x3a>
    6cac:	e138      	b.n	6f20 <m2m_ip_cb+0x2ac>
    6cae:	4ba1      	ldr	r3, [pc, #644]	; (6f34 <m2m_ip_cb+0x2c0>)
    6cb0:	681b      	ldr	r3, [r3, #0]
    6cb2:	aa09      	add	r2, sp, #36	; 0x24
    6cb4:	2000      	movs	r0, #0
    6cb6:	5610      	ldrsb	r0, [r2, r0]
    6cb8:	2101      	movs	r1, #1
    6cba:	aa05      	add	r2, sp, #20
    6cbc:	4798      	blx	r3
    6cbe:	e12f      	b.n	6f20 <m2m_ip_cb+0x2ac>
    6cc0:	2842      	cmp	r0, #66	; 0x42
    6cc2:	d11a      	bne.n	6cfa <m2m_ip_cb+0x86>
    6cc4:	1c10      	adds	r0, r2, #0
    6cc6:	a909      	add	r1, sp, #36	; 0x24
    6cc8:	2204      	movs	r2, #4
    6cca:	2300      	movs	r3, #0
    6ccc:	4c98      	ldr	r4, [pc, #608]	; (6f30 <m2m_ip_cb+0x2bc>)
    6cce:	47a0      	blx	r4
    6cd0:	2800      	cmp	r0, #0
    6cd2:	d000      	beq.n	6cd6 <m2m_ip_cb+0x62>
    6cd4:	e124      	b.n	6f20 <m2m_ip_cb+0x2ac>
    6cd6:	ab09      	add	r3, sp, #36	; 0x24
    6cd8:	785a      	ldrb	r2, [r3, #1]
    6cda:	ab05      	add	r3, sp, #20
    6cdc:	701a      	strb	r2, [r3, #0]
    6cde:	4b95      	ldr	r3, [pc, #596]	; (6f34 <m2m_ip_cb+0x2c0>)
    6ce0:	681b      	ldr	r3, [r3, #0]
    6ce2:	2b00      	cmp	r3, #0
    6ce4:	d100      	bne.n	6ce8 <m2m_ip_cb+0x74>
    6ce6:	e11b      	b.n	6f20 <m2m_ip_cb+0x2ac>
    6ce8:	4b92      	ldr	r3, [pc, #584]	; (6f34 <m2m_ip_cb+0x2c0>)
    6cea:	681b      	ldr	r3, [r3, #0]
    6cec:	aa09      	add	r2, sp, #36	; 0x24
    6cee:	2000      	movs	r0, #0
    6cf0:	5610      	ldrsb	r0, [r2, r0]
    6cf2:	2102      	movs	r1, #2
    6cf4:	aa05      	add	r2, sp, #20
    6cf6:	4798      	blx	r3
    6cf8:	e112      	b.n	6f20 <m2m_ip_cb+0x2ac>
    6cfa:	2843      	cmp	r0, #67	; 0x43
    6cfc:	d143      	bne.n	6d86 <m2m_ip_cb+0x112>
    6cfe:	1c10      	adds	r0, r2, #0
    6d00:	a905      	add	r1, sp, #20
    6d02:	220c      	movs	r2, #12
    6d04:	2300      	movs	r3, #0
    6d06:	4c8a      	ldr	r4, [pc, #552]	; (6f30 <m2m_ip_cb+0x2bc>)
    6d08:	47a0      	blx	r4
    6d0a:	2800      	cmp	r0, #0
    6d0c:	d000      	beq.n	6d10 <m2m_ip_cb+0x9c>
    6d0e:	e107      	b.n	6f20 <m2m_ip_cb+0x2ac>
    6d10:	ab05      	add	r3, sp, #20
    6d12:	7a59      	ldrb	r1, [r3, #9]
    6d14:	b24b      	sxtb	r3, r1
    6d16:	2b00      	cmp	r3, #0
    6d18:	db1e      	blt.n	6d58 <m2m_ip_cb+0xe4>
    6d1a:	005a      	lsls	r2, r3, #1
    6d1c:	18d2      	adds	r2, r2, r3
    6d1e:	0092      	lsls	r2, r2, #2
    6d20:	4885      	ldr	r0, [pc, #532]	; (6f38 <m2m_ip_cb+0x2c4>)
    6d22:	1882      	adds	r2, r0, r2
    6d24:	2000      	movs	r0, #0
    6d26:	71d0      	strb	r0, [r2, #7]
    6d28:	3001      	adds	r0, #1
    6d2a:	7190      	strb	r0, [r2, #6]
    6d2c:	4883      	ldr	r0, [pc, #524]	; (6f3c <m2m_ip_cb+0x2c8>)
    6d2e:	8802      	ldrh	r2, [r0, #0]
    6d30:	3201      	adds	r2, #1
    6d32:	b292      	uxth	r2, r2
    6d34:	8002      	strh	r2, [r0, #0]
    6d36:	8802      	ldrh	r2, [r0, #0]
    6d38:	b292      	uxth	r2, r2
    6d3a:	2a00      	cmp	r2, #0
    6d3c:	d103      	bne.n	6d46 <m2m_ip_cb+0xd2>
    6d3e:	8802      	ldrh	r2, [r0, #0]
    6d40:	3201      	adds	r2, #1
    6d42:	b292      	uxth	r2, r2
    6d44:	8002      	strh	r2, [r0, #0]
    6d46:	4a7d      	ldr	r2, [pc, #500]	; (6f3c <m2m_ip_cb+0x2c8>)
    6d48:	8812      	ldrh	r2, [r2, #0]
    6d4a:	b292      	uxth	r2, r2
    6d4c:	0058      	lsls	r0, r3, #1
    6d4e:	18c3      	adds	r3, r0, r3
    6d50:	009b      	lsls	r3, r3, #2
    6d52:	4879      	ldr	r0, [pc, #484]	; (6f38 <m2m_ip_cb+0x2c4>)
    6d54:	18c3      	adds	r3, r0, r3
    6d56:	815a      	strh	r2, [r3, #10]
    6d58:	ab09      	add	r3, sp, #36	; 0x24
    6d5a:	7019      	strb	r1, [r3, #0]
    6d5c:	2202      	movs	r2, #2
    6d5e:	809a      	strh	r2, [r3, #4]
    6d60:	aa05      	add	r2, sp, #20
    6d62:	8851      	ldrh	r1, [r2, #2]
    6d64:	80d9      	strh	r1, [r3, #6]
    6d66:	9a06      	ldr	r2, [sp, #24]
    6d68:	920b      	str	r2, [sp, #44]	; 0x2c
    6d6a:	4b72      	ldr	r3, [pc, #456]	; (6f34 <m2m_ip_cb+0x2c0>)
    6d6c:	681b      	ldr	r3, [r3, #0]
    6d6e:	2b00      	cmp	r3, #0
    6d70:	d100      	bne.n	6d74 <m2m_ip_cb+0x100>
    6d72:	e0d5      	b.n	6f20 <m2m_ip_cb+0x2ac>
    6d74:	4b6f      	ldr	r3, [pc, #444]	; (6f34 <m2m_ip_cb+0x2c0>)
    6d76:	681b      	ldr	r3, [r3, #0]
    6d78:	aa05      	add	r2, sp, #20
    6d7a:	2008      	movs	r0, #8
    6d7c:	5610      	ldrsb	r0, [r2, r0]
    6d7e:	2104      	movs	r1, #4
    6d80:	aa09      	add	r2, sp, #36	; 0x24
    6d82:	4798      	blx	r3
    6d84:	e0cc      	b.n	6f20 <m2m_ip_cb+0x2ac>
    6d86:	2844      	cmp	r0, #68	; 0x44
    6d88:	d001      	beq.n	6d8e <m2m_ip_cb+0x11a>
    6d8a:	284b      	cmp	r0, #75	; 0x4b
    6d8c:	d11a      	bne.n	6dc4 <m2m_ip_cb+0x150>
    6d8e:	1c20      	adds	r0, r4, #0
    6d90:	a909      	add	r1, sp, #36	; 0x24
    6d92:	2204      	movs	r2, #4
    6d94:	2300      	movs	r3, #0
    6d96:	4c66      	ldr	r4, [pc, #408]	; (6f30 <m2m_ip_cb+0x2bc>)
    6d98:	47a0      	blx	r4
    6d9a:	2800      	cmp	r0, #0
    6d9c:	d000      	beq.n	6da0 <m2m_ip_cb+0x12c>
    6d9e:	e0bf      	b.n	6f20 <m2m_ip_cb+0x2ac>
    6da0:	aa09      	add	r2, sp, #36	; 0x24
    6da2:	7810      	ldrb	r0, [r2, #0]
    6da4:	ab05      	add	r3, sp, #20
    6da6:	7018      	strb	r0, [r3, #0]
    6da8:	7852      	ldrb	r2, [r2, #1]
    6daa:	705a      	strb	r2, [r3, #1]
    6dac:	4b61      	ldr	r3, [pc, #388]	; (6f34 <m2m_ip_cb+0x2c0>)
    6dae:	681b      	ldr	r3, [r3, #0]
    6db0:	2b00      	cmp	r3, #0
    6db2:	d100      	bne.n	6db6 <m2m_ip_cb+0x142>
    6db4:	e0b4      	b.n	6f20 <m2m_ip_cb+0x2ac>
    6db6:	4b5f      	ldr	r3, [pc, #380]	; (6f34 <m2m_ip_cb+0x2c0>)
    6db8:	681b      	ldr	r3, [r3, #0]
    6dba:	b240      	sxtb	r0, r0
    6dbc:	2105      	movs	r1, #5
    6dbe:	aa05      	add	r2, sp, #20
    6dc0:	4798      	blx	r3
    6dc2:	e0ad      	b.n	6f20 <m2m_ip_cb+0x2ac>
    6dc4:	284a      	cmp	r0, #74	; 0x4a
    6dc6:	d113      	bne.n	6df0 <m2m_ip_cb+0x17c>
    6dc8:	1c10      	adds	r0, r2, #0
    6dca:	a909      	add	r1, sp, #36	; 0x24
    6dcc:	2244      	movs	r2, #68	; 0x44
    6dce:	2300      	movs	r3, #0
    6dd0:	4c57      	ldr	r4, [pc, #348]	; (6f30 <m2m_ip_cb+0x2bc>)
    6dd2:	47a0      	blx	r4
    6dd4:	2800      	cmp	r0, #0
    6dd6:	d000      	beq.n	6dda <m2m_ip_cb+0x166>
    6dd8:	e0a2      	b.n	6f20 <m2m_ip_cb+0x2ac>
    6dda:	9919      	ldr	r1, [sp, #100]	; 0x64
    6ddc:	4b58      	ldr	r3, [pc, #352]	; (6f40 <m2m_ip_cb+0x2cc>)
    6dde:	681b      	ldr	r3, [r3, #0]
    6de0:	2b00      	cmp	r3, #0
    6de2:	d100      	bne.n	6de6 <m2m_ip_cb+0x172>
    6de4:	e09c      	b.n	6f20 <m2m_ip_cb+0x2ac>
    6de6:	4b56      	ldr	r3, [pc, #344]	; (6f40 <m2m_ip_cb+0x2cc>)
    6de8:	681b      	ldr	r3, [r3, #0]
    6dea:	a809      	add	r0, sp, #36	; 0x24
    6dec:	4798      	blx	r3
    6dee:	e097      	b.n	6f20 <m2m_ip_cb+0x2ac>
    6df0:	2846      	cmp	r0, #70	; 0x46
    6df2:	d006      	beq.n	6e02 <m2m_ip_cb+0x18e>
    6df4:	2848      	cmp	r0, #72	; 0x48
    6df6:	d007      	beq.n	6e08 <m2m_ip_cb+0x194>
    6df8:	284d      	cmp	r0, #77	; 0x4d
    6dfa:	d163      	bne.n	6ec4 <m2m_ip_cb+0x250>
    6dfc:	2306      	movs	r3, #6
    6dfe:	4699      	mov	r9, r3
    6e00:	e004      	b.n	6e0c <m2m_ip_cb+0x198>
    6e02:	2306      	movs	r3, #6
    6e04:	4699      	mov	r9, r3
    6e06:	e001      	b.n	6e0c <m2m_ip_cb+0x198>
    6e08:	2309      	movs	r3, #9
    6e0a:	4699      	mov	r9, r3
    6e0c:	1c20      	adds	r0, r4, #0
    6e0e:	a905      	add	r1, sp, #20
    6e10:	2210      	movs	r2, #16
    6e12:	2300      	movs	r3, #0
    6e14:	4f46      	ldr	r7, [pc, #280]	; (6f30 <m2m_ip_cb+0x2bc>)
    6e16:	47b8      	blx	r7
    6e18:	2800      	cmp	r0, #0
    6e1a:	d000      	beq.n	6e1e <m2m_ip_cb+0x1aa>
    6e1c:	e080      	b.n	6f20 <m2m_ip_cb+0x2ac>
    6e1e:	a905      	add	r1, sp, #20
    6e20:	7b0b      	ldrb	r3, [r1, #12]
    6e22:	4698      	mov	r8, r3
    6e24:	89cf      	ldrh	r7, [r1, #14]
    6e26:	466a      	mov	r2, sp
    6e28:	73d3      	strb	r3, [r2, #15]
    6e2a:	466b      	mov	r3, sp
    6e2c:	220f      	movs	r2, #15
    6e2e:	569a      	ldrsb	r2, [r3, r2]
    6e30:	0050      	lsls	r0, r2, #1
    6e32:	1883      	adds	r3, r0, r2
    6e34:	009b      	lsls	r3, r3, #2
    6e36:	4e40      	ldr	r6, [pc, #256]	; (6f38 <m2m_ip_cb+0x2c4>)
    6e38:	46b4      	mov	ip, r6
    6e3a:	4463      	add	r3, ip
    6e3c:	2600      	movs	r6, #0
    6e3e:	721e      	strb	r6, [r3, #8]
    6e40:	890b      	ldrh	r3, [r1, #8]
    6e42:	469a      	mov	sl, r3
    6e44:	894b      	ldrh	r3, [r1, #10]
    6e46:	469c      	mov	ip, r3
    6e48:	ab09      	add	r3, sp, #36	; 0x24
    6e4a:	884e      	ldrh	r6, [r1, #2]
    6e4c:	815e      	strh	r6, [r3, #10]
    6e4e:	9906      	ldr	r1, [sp, #24]
    6e50:	910c      	str	r1, [sp, #48]	; 0x30
    6e52:	1882      	adds	r2, r0, r2
    6e54:	0092      	lsls	r2, r2, #2
    6e56:	4b38      	ldr	r3, [pc, #224]	; (6f38 <m2m_ip_cb+0x2c4>)
    6e58:	469b      	mov	fp, r3
    6e5a:	445a      	add	r2, fp
    6e5c:	3208      	adds	r2, #8
    6e5e:	8852      	ldrh	r2, [r2, #2]
    6e60:	b292      	uxth	r2, r2
    6e62:	42ba      	cmp	r2, r7
    6e64:	d125      	bne.n	6eb2 <m2m_ip_cb+0x23e>
    6e66:	4653      	mov	r3, sl
    6e68:	b21a      	sxth	r2, r3
    6e6a:	2a00      	cmp	r2, #0
    6e6c:	dd0d      	ble.n	6e8a <m2m_ip_cb+0x216>
    6e6e:	42aa      	cmp	r2, r5
    6e70:	da0b      	bge.n	6e8a <m2m_ip_cb+0x216>
    6e72:	466a      	mov	r2, sp
    6e74:	200f      	movs	r0, #15
    6e76:	5610      	ldrsb	r0, [r2, r0]
    6e78:	4464      	add	r4, ip
    6e7a:	4653      	mov	r3, sl
    6e7c:	9300      	str	r3, [sp, #0]
    6e7e:	a909      	add	r1, sp, #36	; 0x24
    6e80:	464a      	mov	r2, r9
    6e82:	1c23      	adds	r3, r4, #0
    6e84:	4c2f      	ldr	r4, [pc, #188]	; (6f44 <m2m_ip_cb+0x2d0>)
    6e86:	47a0      	blx	r4
    6e88:	e04a      	b.n	6f20 <m2m_ip_cb+0x2ac>
    6e8a:	aa09      	add	r2, sp, #36	; 0x24
    6e8c:	4653      	mov	r3, sl
    6e8e:	8093      	strh	r3, [r2, #4]
    6e90:	2300      	movs	r3, #0
    6e92:	9309      	str	r3, [sp, #36]	; 0x24
    6e94:	4b27      	ldr	r3, [pc, #156]	; (6f34 <m2m_ip_cb+0x2c0>)
    6e96:	681b      	ldr	r3, [r3, #0]
    6e98:	2b00      	cmp	r3, #0
    6e9a:	d041      	beq.n	6f20 <m2m_ip_cb+0x2ac>
    6e9c:	4b25      	ldr	r3, [pc, #148]	; (6f34 <m2m_ip_cb+0x2c0>)
    6e9e:	681b      	ldr	r3, [r3, #0]
    6ea0:	4642      	mov	r2, r8
    6ea2:	4669      	mov	r1, sp
    6ea4:	73ca      	strb	r2, [r1, #15]
    6ea6:	200f      	movs	r0, #15
    6ea8:	5608      	ldrsb	r0, [r1, r0]
    6eaa:	4649      	mov	r1, r9
    6eac:	aa09      	add	r2, sp, #36	; 0x24
    6eae:	4798      	blx	r3
    6eb0:	e036      	b.n	6f20 <m2m_ip_cb+0x2ac>
    6eb2:	2d10      	cmp	r5, #16
    6eb4:	d934      	bls.n	6f20 <m2m_ip_cb+0x2ac>
    6eb6:	2000      	movs	r0, #0
    6eb8:	2100      	movs	r1, #0
    6eba:	2200      	movs	r2, #0
    6ebc:	2301      	movs	r3, #1
    6ebe:	4c1c      	ldr	r4, [pc, #112]	; (6f30 <m2m_ip_cb+0x2bc>)
    6ec0:	47a0      	blx	r4
    6ec2:	e02d      	b.n	6f20 <m2m_ip_cb+0x2ac>
    6ec4:	2845      	cmp	r0, #69	; 0x45
    6ec6:	d005      	beq.n	6ed4 <m2m_ip_cb+0x260>
    6ec8:	2847      	cmp	r0, #71	; 0x47
    6eca:	d005      	beq.n	6ed8 <m2m_ip_cb+0x264>
    6ecc:	2507      	movs	r5, #7
    6ece:	284c      	cmp	r0, #76	; 0x4c
    6ed0:	d003      	beq.n	6eda <m2m_ip_cb+0x266>
    6ed2:	e025      	b.n	6f20 <m2m_ip_cb+0x2ac>
    6ed4:	2507      	movs	r5, #7
    6ed6:	e000      	b.n	6eda <m2m_ip_cb+0x266>
    6ed8:	2508      	movs	r5, #8
    6eda:	1c20      	adds	r0, r4, #0
    6edc:	a909      	add	r1, sp, #36	; 0x24
    6ede:	2208      	movs	r2, #8
    6ee0:	2300      	movs	r3, #0
    6ee2:	4c13      	ldr	r4, [pc, #76]	; (6f30 <m2m_ip_cb+0x2bc>)
    6ee4:	47a0      	blx	r4
    6ee6:	2800      	cmp	r0, #0
    6ee8:	d11a      	bne.n	6f20 <m2m_ip_cb+0x2ac>
    6eea:	ab09      	add	r3, sp, #36	; 0x24
    6eec:	7818      	ldrb	r0, [r3, #0]
    6eee:	889a      	ldrh	r2, [r3, #4]
    6ef0:	8859      	ldrh	r1, [r3, #2]
    6ef2:	ab05      	add	r3, sp, #20
    6ef4:	8019      	strh	r1, [r3, #0]
    6ef6:	b243      	sxtb	r3, r0
    6ef8:	0059      	lsls	r1, r3, #1
    6efa:	18cb      	adds	r3, r1, r3
    6efc:	009b      	lsls	r3, r3, #2
    6efe:	490e      	ldr	r1, [pc, #56]	; (6f38 <m2m_ip_cb+0x2c4>)
    6f00:	18cb      	adds	r3, r1, r3
    6f02:	3308      	adds	r3, #8
    6f04:	885b      	ldrh	r3, [r3, #2]
    6f06:	b29b      	uxth	r3, r3
    6f08:	4293      	cmp	r3, r2
    6f0a:	d109      	bne.n	6f20 <m2m_ip_cb+0x2ac>
    6f0c:	4b09      	ldr	r3, [pc, #36]	; (6f34 <m2m_ip_cb+0x2c0>)
    6f0e:	681b      	ldr	r3, [r3, #0]
    6f10:	2b00      	cmp	r3, #0
    6f12:	d005      	beq.n	6f20 <m2m_ip_cb+0x2ac>
    6f14:	4b07      	ldr	r3, [pc, #28]	; (6f34 <m2m_ip_cb+0x2c0>)
    6f16:	681b      	ldr	r3, [r3, #0]
    6f18:	b240      	sxtb	r0, r0
    6f1a:	1c29      	adds	r1, r5, #0
    6f1c:	aa05      	add	r2, sp, #20
    6f1e:	4798      	blx	r3
    6f20:	b01b      	add	sp, #108	; 0x6c
    6f22:	bc3c      	pop	{r2, r3, r4, r5}
    6f24:	4690      	mov	r8, r2
    6f26:	4699      	mov	r9, r3
    6f28:	46a2      	mov	sl, r4
    6f2a:	46ab      	mov	fp, r5
    6f2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6f2e:	46c0      	nop			; (mov r8, r8)
    6f30:	0000521d 	.word	0x0000521d
    6f34:	20000a5c 	.word	0x20000a5c
    6f38:	200009d8 	.word	0x200009d8
    6f3c:	2000069e 	.word	0x2000069e
    6f40:	20000a60 	.word	0x20000a60
    6f44:	00006b7d 	.word	0x00006b7d

00006f48 <socketInit>:
    6f48:	b508      	push	{r3, lr}
    6f4a:	4b0a      	ldr	r3, [pc, #40]	; (6f74 <socketInit+0x2c>)
    6f4c:	781b      	ldrb	r3, [r3, #0]
    6f4e:	2b00      	cmp	r3, #0
    6f50:	d10e      	bne.n	6f70 <socketInit+0x28>
    6f52:	4809      	ldr	r0, [pc, #36]	; (6f78 <socketInit+0x30>)
    6f54:	2100      	movs	r1, #0
    6f56:	2284      	movs	r2, #132	; 0x84
    6f58:	4b08      	ldr	r3, [pc, #32]	; (6f7c <socketInit+0x34>)
    6f5a:	4798      	blx	r3
    6f5c:	2002      	movs	r0, #2
    6f5e:	4908      	ldr	r1, [pc, #32]	; (6f80 <socketInit+0x38>)
    6f60:	4b08      	ldr	r3, [pc, #32]	; (6f84 <socketInit+0x3c>)
    6f62:	4798      	blx	r3
    6f64:	2201      	movs	r2, #1
    6f66:	4b03      	ldr	r3, [pc, #12]	; (6f74 <socketInit+0x2c>)
    6f68:	701a      	strb	r2, [r3, #0]
    6f6a:	2200      	movs	r2, #0
    6f6c:	4b06      	ldr	r3, [pc, #24]	; (6f88 <socketInit+0x40>)
    6f6e:	801a      	strh	r2, [r3, #0]
    6f70:	bd08      	pop	{r3, pc}
    6f72:	46c0      	nop			; (mov r8, r8)
    6f74:	2000069d 	.word	0x2000069d
    6f78:	200009d8 	.word	0x200009d8
    6f7c:	00004b35 	.word	0x00004b35
    6f80:	00006c75 	.word	0x00006c75
    6f84:	00005339 	.word	0x00005339
    6f88:	2000069e 	.word	0x2000069e

00006f8c <registerSocketCallback>:
    6f8c:	4b02      	ldr	r3, [pc, #8]	; (6f98 <registerSocketCallback+0xc>)
    6f8e:	6018      	str	r0, [r3, #0]
    6f90:	4b02      	ldr	r3, [pc, #8]	; (6f9c <registerSocketCallback+0x10>)
    6f92:	6019      	str	r1, [r3, #0]
    6f94:	4770      	bx	lr
    6f96:	46c0      	nop			; (mov r8, r8)
    6f98:	20000a5c 	.word	0x20000a5c
    6f9c:	20000a60 	.word	0x20000a60

00006fa0 <socket>:
    6fa0:	b530      	push	{r4, r5, lr}
    6fa2:	b087      	sub	sp, #28
    6fa4:	24ff      	movs	r4, #255	; 0xff
    6fa6:	2802      	cmp	r0, #2
    6fa8:	d153      	bne.n	7052 <socket+0xb2>
    6faa:	2901      	cmp	r1, #1
    6fac:	d045      	beq.n	703a <socket+0x9a>
    6fae:	3cf4      	subs	r4, #244	; 0xf4
    6fb0:	3005      	adds	r0, #5
    6fb2:	2902      	cmp	r1, #2
    6fb4:	d043      	beq.n	703e <socket+0x9e>
    6fb6:	34f4      	adds	r4, #244	; 0xf4
    6fb8:	e04b      	b.n	7052 <socket+0xb2>
    6fba:	1c01      	adds	r1, r0, #0
    6fbc:	0043      	lsls	r3, r0, #1
    6fbe:	181b      	adds	r3, r3, r0
    6fc0:	009b      	lsls	r3, r3, #2
    6fc2:	18eb      	adds	r3, r5, r3
    6fc4:	799b      	ldrb	r3, [r3, #6]
    6fc6:	2b00      	cmp	r3, #0
    6fc8:	d131      	bne.n	702e <socket+0x8e>
    6fca:	004b      	lsls	r3, r1, #1
    6fcc:	185b      	adds	r3, r3, r1
    6fce:	009b      	lsls	r3, r3, #2
    6fd0:	4c21      	ldr	r4, [pc, #132]	; (7058 <socket+0xb8>)
    6fd2:	18e3      	adds	r3, r4, r3
    6fd4:	2401      	movs	r4, #1
    6fd6:	719c      	strb	r4, [r3, #6]
    6fd8:	4c20      	ldr	r4, [pc, #128]	; (705c <socket+0xbc>)
    6fda:	8823      	ldrh	r3, [r4, #0]
    6fdc:	3301      	adds	r3, #1
    6fde:	b29b      	uxth	r3, r3
    6fe0:	8023      	strh	r3, [r4, #0]
    6fe2:	8823      	ldrh	r3, [r4, #0]
    6fe4:	b29b      	uxth	r3, r3
    6fe6:	2b00      	cmp	r3, #0
    6fe8:	d103      	bne.n	6ff2 <socket+0x52>
    6fea:	8823      	ldrh	r3, [r4, #0]
    6fec:	3301      	adds	r3, #1
    6fee:	b29b      	uxth	r3, r3
    6ff0:	8023      	strh	r3, [r4, #0]
    6ff2:	4b1a      	ldr	r3, [pc, #104]	; (705c <socket+0xbc>)
    6ff4:	881c      	ldrh	r4, [r3, #0]
    6ff6:	b2a4      	uxth	r4, r4
    6ff8:	004b      	lsls	r3, r1, #1
    6ffa:	185b      	adds	r3, r3, r1
    6ffc:	009b      	lsls	r3, r3, #2
    6ffe:	4d16      	ldr	r5, [pc, #88]	; (7058 <socket+0xb8>)
    7000:	18eb      	adds	r3, r5, r3
    7002:	815c      	strh	r4, [r3, #10]
    7004:	b2c4      	uxtb	r4, r0
    7006:	07d3      	lsls	r3, r2, #31
    7008:	d523      	bpl.n	7052 <socket+0xb2>
    700a:	aa05      	add	r2, sp, #20
    700c:	7014      	strb	r4, [r2, #0]
    700e:	004b      	lsls	r3, r1, #1
    7010:	1859      	adds	r1, r3, r1
    7012:	0089      	lsls	r1, r1, #2
    7014:	186b      	adds	r3, r5, r1
    7016:	2101      	movs	r1, #1
    7018:	71d9      	strb	r1, [r3, #7]
    701a:	2300      	movs	r3, #0
    701c:	9300      	str	r3, [sp, #0]
    701e:	9301      	str	r3, [sp, #4]
    7020:	9302      	str	r3, [sp, #8]
    7022:	2002      	movs	r0, #2
    7024:	314f      	adds	r1, #79	; 0x4f
    7026:	3304      	adds	r3, #4
    7028:	4d0d      	ldr	r5, [pc, #52]	; (7060 <socket+0xc0>)
    702a:	47a8      	blx	r5
    702c:	e011      	b.n	7052 <socket+0xb2>
    702e:	3001      	adds	r0, #1
    7030:	b2c0      	uxtb	r0, r0
    7032:	42a0      	cmp	r0, r4
    7034:	d3c1      	bcc.n	6fba <socket+0x1a>
    7036:	24ff      	movs	r4, #255	; 0xff
    7038:	e00b      	b.n	7052 <socket+0xb2>
    703a:	2407      	movs	r4, #7
    703c:	2000      	movs	r0, #0
    703e:	1c01      	adds	r1, r0, #0
    7040:	0043      	lsls	r3, r0, #1
    7042:	181b      	adds	r3, r3, r0
    7044:	009b      	lsls	r3, r3, #2
    7046:	4d04      	ldr	r5, [pc, #16]	; (7058 <socket+0xb8>)
    7048:	18eb      	adds	r3, r5, r3
    704a:	799b      	ldrb	r3, [r3, #6]
    704c:	2b00      	cmp	r3, #0
    704e:	d0bc      	beq.n	6fca <socket+0x2a>
    7050:	e7ed      	b.n	702e <socket+0x8e>
    7052:	b260      	sxtb	r0, r4
    7054:	b007      	add	sp, #28
    7056:	bd30      	pop	{r4, r5, pc}
    7058:	200009d8 	.word	0x200009d8
    705c:	2000069e 	.word	0x2000069e
    7060:	00004d15 	.word	0x00004d15

00007064 <bind>:
    7064:	b530      	push	{r4, r5, lr}
    7066:	b089      	sub	sp, #36	; 0x24
    7068:	1c04      	adds	r4, r0, #0
    706a:	2900      	cmp	r1, #0
    706c:	d026      	beq.n	70bc <bind+0x58>
    706e:	2800      	cmp	r0, #0
    7070:	db26      	blt.n	70c0 <bind+0x5c>
    7072:	0043      	lsls	r3, r0, #1
    7074:	181b      	adds	r3, r3, r0
    7076:	009b      	lsls	r3, r3, #2
    7078:	4815      	ldr	r0, [pc, #84]	; (70d0 <bind+0x6c>)
    707a:	18c3      	adds	r3, r0, r3
    707c:	799b      	ldrb	r3, [r3, #6]
    707e:	2b01      	cmp	r3, #1
    7080:	d120      	bne.n	70c4 <bind+0x60>
    7082:	2a00      	cmp	r2, #0
    7084:	d020      	beq.n	70c8 <bind+0x64>
    7086:	ad05      	add	r5, sp, #20
    7088:	722c      	strb	r4, [r5, #8]
    708a:	1c28      	adds	r0, r5, #0
    708c:	2208      	movs	r2, #8
    708e:	4b11      	ldr	r3, [pc, #68]	; (70d4 <bind+0x70>)
    7090:	4798      	blx	r3
    7092:	0063      	lsls	r3, r4, #1
    7094:	191c      	adds	r4, r3, r4
    7096:	00a4      	lsls	r4, r4, #2
    7098:	4b0d      	ldr	r3, [pc, #52]	; (70d0 <bind+0x6c>)
    709a:	191c      	adds	r4, r3, r4
    709c:	8963      	ldrh	r3, [r4, #10]
    709e:	816b      	strh	r3, [r5, #10]
    70a0:	2300      	movs	r3, #0
    70a2:	9300      	str	r3, [sp, #0]
    70a4:	9301      	str	r3, [sp, #4]
    70a6:	9302      	str	r3, [sp, #8]
    70a8:	2002      	movs	r0, #2
    70aa:	2141      	movs	r1, #65	; 0x41
    70ac:	1c2a      	adds	r2, r5, #0
    70ae:	330c      	adds	r3, #12
    70b0:	4c09      	ldr	r4, [pc, #36]	; (70d8 <bind+0x74>)
    70b2:	47a0      	blx	r4
    70b4:	2800      	cmp	r0, #0
    70b6:	d008      	beq.n	70ca <bind+0x66>
    70b8:	20f7      	movs	r0, #247	; 0xf7
    70ba:	e006      	b.n	70ca <bind+0x66>
    70bc:	20fa      	movs	r0, #250	; 0xfa
    70be:	e004      	b.n	70ca <bind+0x66>
    70c0:	20fa      	movs	r0, #250	; 0xfa
    70c2:	e002      	b.n	70ca <bind+0x66>
    70c4:	20fa      	movs	r0, #250	; 0xfa
    70c6:	e000      	b.n	70ca <bind+0x66>
    70c8:	20fa      	movs	r0, #250	; 0xfa
    70ca:	b240      	sxtb	r0, r0
    70cc:	b009      	add	sp, #36	; 0x24
    70ce:	bd30      	pop	{r4, r5, pc}
    70d0:	200009d8 	.word	0x200009d8
    70d4:	00004b21 	.word	0x00004b21
    70d8:	00004d15 	.word	0x00004d15

000070dc <listen>:
    70dc:	b510      	push	{r4, lr}
    70de:	b086      	sub	sp, #24
    70e0:	2800      	cmp	r0, #0
    70e2:	db1e      	blt.n	7122 <listen+0x46>
    70e4:	0043      	lsls	r3, r0, #1
    70e6:	181b      	adds	r3, r3, r0
    70e8:	009b      	lsls	r3, r3, #2
    70ea:	4a11      	ldr	r2, [pc, #68]	; (7130 <listen+0x54>)
    70ec:	18d3      	adds	r3, r2, r3
    70ee:	799b      	ldrb	r3, [r3, #6]
    70f0:	2b01      	cmp	r3, #1
    70f2:	d118      	bne.n	7126 <listen+0x4a>
    70f4:	aa05      	add	r2, sp, #20
    70f6:	7010      	strb	r0, [r2, #0]
    70f8:	7051      	strb	r1, [r2, #1]
    70fa:	0043      	lsls	r3, r0, #1
    70fc:	1818      	adds	r0, r3, r0
    70fe:	0080      	lsls	r0, r0, #2
    7100:	4b0b      	ldr	r3, [pc, #44]	; (7130 <listen+0x54>)
    7102:	1818      	adds	r0, r3, r0
    7104:	8943      	ldrh	r3, [r0, #10]
    7106:	8053      	strh	r3, [r2, #2]
    7108:	2300      	movs	r3, #0
    710a:	9300      	str	r3, [sp, #0]
    710c:	9301      	str	r3, [sp, #4]
    710e:	9302      	str	r3, [sp, #8]
    7110:	2002      	movs	r0, #2
    7112:	2142      	movs	r1, #66	; 0x42
    7114:	3304      	adds	r3, #4
    7116:	4c07      	ldr	r4, [pc, #28]	; (7134 <listen+0x58>)
    7118:	47a0      	blx	r4
    711a:	2800      	cmp	r0, #0
    711c:	d004      	beq.n	7128 <listen+0x4c>
    711e:	20f7      	movs	r0, #247	; 0xf7
    7120:	e002      	b.n	7128 <listen+0x4c>
    7122:	20fa      	movs	r0, #250	; 0xfa
    7124:	e000      	b.n	7128 <listen+0x4c>
    7126:	20fa      	movs	r0, #250	; 0xfa
    7128:	b240      	sxtb	r0, r0
    712a:	b006      	add	sp, #24
    712c:	bd10      	pop	{r4, pc}
    712e:	46c0      	nop			; (mov r8, r8)
    7130:	200009d8 	.word	0x200009d8
    7134:	00004d15 	.word	0x00004d15

00007138 <accept>:
    7138:	2800      	cmp	r0, #0
    713a:	db09      	blt.n	7150 <accept+0x18>
    713c:	0043      	lsls	r3, r0, #1
    713e:	1818      	adds	r0, r3, r0
    7140:	0080      	lsls	r0, r0, #2
    7142:	4b06      	ldr	r3, [pc, #24]	; (715c <accept+0x24>)
    7144:	1818      	adds	r0, r3, r0
    7146:	7983      	ldrb	r3, [r0, #6]
    7148:	2b01      	cmp	r3, #1
    714a:	d103      	bne.n	7154 <accept+0x1c>
    714c:	2000      	movs	r0, #0
    714e:	e002      	b.n	7156 <accept+0x1e>
    7150:	20fa      	movs	r0, #250	; 0xfa
    7152:	e000      	b.n	7156 <accept+0x1e>
    7154:	20fa      	movs	r0, #250	; 0xfa
    7156:	b240      	sxtb	r0, r0
    7158:	4770      	bx	lr
    715a:	46c0      	nop			; (mov r8, r8)
    715c:	200009d8 	.word	0x200009d8

00007160 <connect>:
    7160:	b570      	push	{r4, r5, r6, lr}
    7162:	b088      	sub	sp, #32
    7164:	1e04      	subs	r4, r0, #0
    7166:	db36      	blt.n	71d6 <connect+0x76>
    7168:	2900      	cmp	r1, #0
    716a:	d036      	beq.n	71da <connect+0x7a>
    716c:	0043      	lsls	r3, r0, #1
    716e:	181b      	adds	r3, r3, r0
    7170:	009b      	lsls	r3, r3, #2
    7172:	481e      	ldr	r0, [pc, #120]	; (71ec <connect+0x8c>)
    7174:	18c3      	adds	r3, r0, r3
    7176:	799b      	ldrb	r3, [r3, #6]
    7178:	2b01      	cmp	r3, #1
    717a:	d130      	bne.n	71de <connect+0x7e>
    717c:	2a00      	cmp	r2, #0
    717e:	d030      	beq.n	71e2 <connect+0x82>
    7180:	0063      	lsls	r3, r4, #1
    7182:	191b      	adds	r3, r3, r4
    7184:	009b      	lsls	r3, r3, #2
    7186:	18c3      	adds	r3, r0, r3
    7188:	79db      	ldrb	r3, [r3, #7]
    718a:	2644      	movs	r6, #68	; 0x44
    718c:	07db      	lsls	r3, r3, #31
    718e:	d507      	bpl.n	71a0 <connect+0x40>
    7190:	0063      	lsls	r3, r4, #1
    7192:	191b      	adds	r3, r3, r4
    7194:	009b      	lsls	r3, r3, #2
    7196:	18c3      	adds	r3, r0, r3
    7198:	79da      	ldrb	r2, [r3, #7]
    719a:	ab05      	add	r3, sp, #20
    719c:	725a      	strb	r2, [r3, #9]
    719e:	3607      	adds	r6, #7
    71a0:	ad05      	add	r5, sp, #20
    71a2:	722c      	strb	r4, [r5, #8]
    71a4:	1c28      	adds	r0, r5, #0
    71a6:	2208      	movs	r2, #8
    71a8:	4b11      	ldr	r3, [pc, #68]	; (71f0 <connect+0x90>)
    71aa:	4798      	blx	r3
    71ac:	0063      	lsls	r3, r4, #1
    71ae:	191c      	adds	r4, r3, r4
    71b0:	00a4      	lsls	r4, r4, #2
    71b2:	4b0e      	ldr	r3, [pc, #56]	; (71ec <connect+0x8c>)
    71b4:	191c      	adds	r4, r3, r4
    71b6:	8963      	ldrh	r3, [r4, #10]
    71b8:	816b      	strh	r3, [r5, #10]
    71ba:	2300      	movs	r3, #0
    71bc:	9300      	str	r3, [sp, #0]
    71be:	9301      	str	r3, [sp, #4]
    71c0:	9302      	str	r3, [sp, #8]
    71c2:	2002      	movs	r0, #2
    71c4:	1c31      	adds	r1, r6, #0
    71c6:	1c2a      	adds	r2, r5, #0
    71c8:	330c      	adds	r3, #12
    71ca:	4c0a      	ldr	r4, [pc, #40]	; (71f4 <connect+0x94>)
    71cc:	47a0      	blx	r4
    71ce:	2800      	cmp	r0, #0
    71d0:	d008      	beq.n	71e4 <connect+0x84>
    71d2:	20f7      	movs	r0, #247	; 0xf7
    71d4:	e006      	b.n	71e4 <connect+0x84>
    71d6:	20fa      	movs	r0, #250	; 0xfa
    71d8:	e004      	b.n	71e4 <connect+0x84>
    71da:	20fa      	movs	r0, #250	; 0xfa
    71dc:	e002      	b.n	71e4 <connect+0x84>
    71de:	20fa      	movs	r0, #250	; 0xfa
    71e0:	e000      	b.n	71e4 <connect+0x84>
    71e2:	20fa      	movs	r0, #250	; 0xfa
    71e4:	b240      	sxtb	r0, r0
    71e6:	b008      	add	sp, #32
    71e8:	bd70      	pop	{r4, r5, r6, pc}
    71ea:	46c0      	nop			; (mov r8, r8)
    71ec:	200009d8 	.word	0x200009d8
    71f0:	00004b21 	.word	0x00004b21
    71f4:	00004d15 	.word	0x00004d15

000071f8 <send>:
    71f8:	b530      	push	{r4, r5, lr}
    71fa:	b089      	sub	sp, #36	; 0x24
    71fc:	1c0d      	adds	r5, r1, #0
    71fe:	2800      	cmp	r0, #0
    7200:	db35      	blt.n	726e <send+0x76>
    7202:	2900      	cmp	r1, #0
    7204:	d035      	beq.n	7272 <send+0x7a>
    7206:	23af      	movs	r3, #175	; 0xaf
    7208:	00db      	lsls	r3, r3, #3
    720a:	429a      	cmp	r2, r3
    720c:	d833      	bhi.n	7276 <send+0x7e>
    720e:	0043      	lsls	r3, r0, #1
    7210:	181b      	adds	r3, r3, r0
    7212:	009b      	lsls	r3, r3, #2
    7214:	491b      	ldr	r1, [pc, #108]	; (7284 <send+0x8c>)
    7216:	18cb      	adds	r3, r1, r3
    7218:	799b      	ldrb	r3, [r3, #6]
    721a:	2b01      	cmp	r3, #1
    721c:	d12d      	bne.n	727a <send+0x82>
    721e:	ac04      	add	r4, sp, #16
    7220:	7020      	strb	r0, [r4, #0]
    7222:	8062      	strh	r2, [r4, #2]
    7224:	0043      	lsls	r3, r0, #1
    7226:	181b      	adds	r3, r3, r0
    7228:	009b      	lsls	r3, r3, #2
    722a:	18cb      	adds	r3, r1, r3
    722c:	3308      	adds	r3, #8
    722e:	885b      	ldrh	r3, [r3, #2]
    7230:	81a3      	strh	r3, [r4, #12]
    7232:	2450      	movs	r4, #80	; 0x50
    7234:	2806      	cmp	r0, #6
    7236:	dd00      	ble.n	723a <send+0x42>
    7238:	3c0c      	subs	r4, #12
    723a:	0043      	lsls	r3, r0, #1
    723c:	1818      	adds	r0, r3, r0
    723e:	0080      	lsls	r0, r0, #2
    7240:	4b10      	ldr	r3, [pc, #64]	; (7284 <send+0x8c>)
    7242:	1818      	adds	r0, r3, r0
    7244:	79c3      	ldrb	r3, [r0, #7]
    7246:	2145      	movs	r1, #69	; 0x45
    7248:	07db      	lsls	r3, r3, #31
    724a:	d501      	bpl.n	7250 <send+0x58>
    724c:	3107      	adds	r1, #7
    724e:	2455      	movs	r4, #85	; 0x55
    7250:	2380      	movs	r3, #128	; 0x80
    7252:	4319      	orrs	r1, r3
    7254:	9500      	str	r5, [sp, #0]
    7256:	9201      	str	r2, [sp, #4]
    7258:	9402      	str	r4, [sp, #8]
    725a:	2002      	movs	r0, #2
    725c:	aa04      	add	r2, sp, #16
    725e:	3b70      	subs	r3, #112	; 0x70
    7260:	4c09      	ldr	r4, [pc, #36]	; (7288 <send+0x90>)
    7262:	47a0      	blx	r4
    7264:	2300      	movs	r3, #0
    7266:	2800      	cmp	r0, #0
    7268:	d008      	beq.n	727c <send+0x84>
    726a:	4b08      	ldr	r3, [pc, #32]	; (728c <send+0x94>)
    726c:	e006      	b.n	727c <send+0x84>
    726e:	4b08      	ldr	r3, [pc, #32]	; (7290 <send+0x98>)
    7270:	e004      	b.n	727c <send+0x84>
    7272:	4b07      	ldr	r3, [pc, #28]	; (7290 <send+0x98>)
    7274:	e002      	b.n	727c <send+0x84>
    7276:	4b06      	ldr	r3, [pc, #24]	; (7290 <send+0x98>)
    7278:	e000      	b.n	727c <send+0x84>
    727a:	4b05      	ldr	r3, [pc, #20]	; (7290 <send+0x98>)
    727c:	b218      	sxth	r0, r3
    727e:	b009      	add	sp, #36	; 0x24
    7280:	bd30      	pop	{r4, r5, pc}
    7282:	46c0      	nop			; (mov r8, r8)
    7284:	200009d8 	.word	0x200009d8
    7288:	00004d15 	.word	0x00004d15
    728c:	0000fff2 	.word	0x0000fff2
    7290:	0000fffa 	.word	0x0000fffa

00007294 <recv>:
    7294:	b570      	push	{r4, r5, r6, lr}
    7296:	b086      	sub	sp, #24
    7298:	2800      	cmp	r0, #0
    729a:	db3a      	blt.n	7312 <recv+0x7e>
    729c:	2900      	cmp	r1, #0
    729e:	d03a      	beq.n	7316 <recv+0x82>
    72a0:	2a00      	cmp	r2, #0
    72a2:	d03a      	beq.n	731a <recv+0x86>
    72a4:	0044      	lsls	r4, r0, #1
    72a6:	1824      	adds	r4, r4, r0
    72a8:	00a4      	lsls	r4, r4, #2
    72aa:	4d1f      	ldr	r5, [pc, #124]	; (7328 <recv+0x94>)
    72ac:	192c      	adds	r4, r5, r4
    72ae:	79a4      	ldrb	r4, [r4, #6]
    72b0:	2c01      	cmp	r4, #1
    72b2:	d134      	bne.n	731e <recv+0x8a>
    72b4:	1c2e      	adds	r6, r5, #0
    72b6:	0044      	lsls	r4, r0, #1
    72b8:	1825      	adds	r5, r4, r0
    72ba:	00ad      	lsls	r5, r5, #2
    72bc:	51a9      	str	r1, [r5, r6]
    72be:	1971      	adds	r1, r6, r5
    72c0:	808a      	strh	r2, [r1, #4]
    72c2:	7a09      	ldrb	r1, [r1, #8]
    72c4:	2200      	movs	r2, #0
    72c6:	2900      	cmp	r1, #0
    72c8:	d12a      	bne.n	7320 <recv+0x8c>
    72ca:	1972      	adds	r2, r6, r5
    72cc:	2101      	movs	r1, #1
    72ce:	7211      	strb	r1, [r2, #8]
    72d0:	79d2      	ldrb	r2, [r2, #7]
    72d2:	3145      	adds	r1, #69	; 0x45
    72d4:	07d2      	lsls	r2, r2, #31
    72d6:	d500      	bpl.n	72da <recv+0x46>
    72d8:	3107      	adds	r1, #7
    72da:	2b00      	cmp	r3, #0
    72dc:	d102      	bne.n	72e4 <recv+0x50>
    72de:	3b01      	subs	r3, #1
    72e0:	9304      	str	r3, [sp, #16]
    72e2:	e000      	b.n	72e6 <recv+0x52>
    72e4:	9304      	str	r3, [sp, #16]
    72e6:	aa04      	add	r2, sp, #16
    72e8:	7110      	strb	r0, [r2, #4]
    72ea:	0043      	lsls	r3, r0, #1
    72ec:	1818      	adds	r0, r3, r0
    72ee:	0080      	lsls	r0, r0, #2
    72f0:	4b0d      	ldr	r3, [pc, #52]	; (7328 <recv+0x94>)
    72f2:	1818      	adds	r0, r3, r0
    72f4:	8943      	ldrh	r3, [r0, #10]
    72f6:	80d3      	strh	r3, [r2, #6]
    72f8:	2300      	movs	r3, #0
    72fa:	9300      	str	r3, [sp, #0]
    72fc:	9301      	str	r3, [sp, #4]
    72fe:	9302      	str	r3, [sp, #8]
    7300:	2002      	movs	r0, #2
    7302:	3308      	adds	r3, #8
    7304:	4c09      	ldr	r4, [pc, #36]	; (732c <recv+0x98>)
    7306:	47a0      	blx	r4
    7308:	2200      	movs	r2, #0
    730a:	2800      	cmp	r0, #0
    730c:	d008      	beq.n	7320 <recv+0x8c>
    730e:	4a08      	ldr	r2, [pc, #32]	; (7330 <recv+0x9c>)
    7310:	e006      	b.n	7320 <recv+0x8c>
    7312:	4a08      	ldr	r2, [pc, #32]	; (7334 <recv+0xa0>)
    7314:	e004      	b.n	7320 <recv+0x8c>
    7316:	4a07      	ldr	r2, [pc, #28]	; (7334 <recv+0xa0>)
    7318:	e002      	b.n	7320 <recv+0x8c>
    731a:	4a06      	ldr	r2, [pc, #24]	; (7334 <recv+0xa0>)
    731c:	e000      	b.n	7320 <recv+0x8c>
    731e:	4a05      	ldr	r2, [pc, #20]	; (7334 <recv+0xa0>)
    7320:	b210      	sxth	r0, r2
    7322:	b006      	add	sp, #24
    7324:	bd70      	pop	{r4, r5, r6, pc}
    7326:	46c0      	nop			; (mov r8, r8)
    7328:	200009d8 	.word	0x200009d8
    732c:	00004d15 	.word	0x00004d15
    7330:	0000fff2 	.word	0x0000fff2
    7334:	0000fffa 	.word	0x0000fffa

00007338 <close>:
    7338:	b530      	push	{r4, r5, lr}
    733a:	b087      	sub	sp, #28
    733c:	1e04      	subs	r4, r0, #0
    733e:	db2d      	blt.n	739c <close+0x64>
    7340:	0043      	lsls	r3, r0, #1
    7342:	181b      	adds	r3, r3, r0
    7344:	009b      	lsls	r3, r3, #2
    7346:	4a18      	ldr	r2, [pc, #96]	; (73a8 <close+0x70>)
    7348:	18d3      	adds	r3, r2, r3
    734a:	799b      	ldrb	r3, [r3, #6]
    734c:	2b01      	cmp	r3, #1
    734e:	d127      	bne.n	73a0 <close+0x68>
    7350:	a905      	add	r1, sp, #20
    7352:	7008      	strb	r0, [r1, #0]
    7354:	0043      	lsls	r3, r0, #1
    7356:	181b      	adds	r3, r3, r0
    7358:	009b      	lsls	r3, r3, #2
    735a:	18d3      	adds	r3, r2, r3
    735c:	8958      	ldrh	r0, [r3, #10]
    735e:	8048      	strh	r0, [r1, #2]
    7360:	2100      	movs	r1, #0
    7362:	7199      	strb	r1, [r3, #6]
    7364:	8159      	strh	r1, [r3, #10]
    7366:	79db      	ldrb	r3, [r3, #7]
    7368:	3149      	adds	r1, #73	; 0x49
    736a:	07db      	lsls	r3, r3, #31
    736c:	d500      	bpl.n	7370 <close+0x38>
    736e:	3105      	adds	r1, #5
    7370:	2300      	movs	r3, #0
    7372:	9300      	str	r3, [sp, #0]
    7374:	9301      	str	r3, [sp, #4]
    7376:	9302      	str	r3, [sp, #8]
    7378:	2002      	movs	r0, #2
    737a:	aa05      	add	r2, sp, #20
    737c:	3304      	adds	r3, #4
    737e:	4d0b      	ldr	r5, [pc, #44]	; (73ac <close+0x74>)
    7380:	47a8      	blx	r5
    7382:	1e05      	subs	r5, r0, #0
    7384:	d000      	beq.n	7388 <close+0x50>
    7386:	25f7      	movs	r5, #247	; 0xf7
    7388:	0060      	lsls	r0, r4, #1
    738a:	1904      	adds	r4, r0, r4
    738c:	00a4      	lsls	r4, r4, #2
    738e:	4806      	ldr	r0, [pc, #24]	; (73a8 <close+0x70>)
    7390:	1820      	adds	r0, r4, r0
    7392:	2100      	movs	r1, #0
    7394:	220c      	movs	r2, #12
    7396:	4b06      	ldr	r3, [pc, #24]	; (73b0 <close+0x78>)
    7398:	4798      	blx	r3
    739a:	e002      	b.n	73a2 <close+0x6a>
    739c:	25fa      	movs	r5, #250	; 0xfa
    739e:	e000      	b.n	73a2 <close+0x6a>
    73a0:	25fa      	movs	r5, #250	; 0xfa
    73a2:	b268      	sxtb	r0, r5
    73a4:	b007      	add	sp, #28
    73a6:	bd30      	pop	{r4, r5, pc}
    73a8:	200009d8 	.word	0x200009d8
    73ac:	00004d15 	.word	0x00004d15
    73b0:	00004b35 	.word	0x00004b35

000073b4 <nmi_inet_addr>:
    73b4:	b5f0      	push	{r4, r5, r6, r7, lr}
    73b6:	b083      	sub	sp, #12
    73b8:	2300      	movs	r3, #0
    73ba:	9301      	str	r3, [sp, #4]
    73bc:	2400      	movs	r4, #0
    73be:	1c43      	adds	r3, r0, #1
    73c0:	1d47      	adds	r7, r0, #5
    73c2:	2600      	movs	r6, #0
    73c4:	1c18      	adds	r0, r3, #0
    73c6:	1e5d      	subs	r5, r3, #1
    73c8:	782a      	ldrb	r2, [r5, #0]
    73ca:	42bb      	cmp	r3, r7
    73cc:	d019      	beq.n	7402 <nmi_inet_addr+0x4e>
    73ce:	2a2e      	cmp	r2, #46	; 0x2e
    73d0:	d01b      	beq.n	740a <nmi_inet_addr+0x56>
    73d2:	2a00      	cmp	r2, #0
    73d4:	d01c      	beq.n	7410 <nmi_inet_addr+0x5c>
    73d6:	1c11      	adds	r1, r2, #0
    73d8:	3930      	subs	r1, #48	; 0x30
    73da:	2909      	cmp	r1, #9
    73dc:	d813      	bhi.n	7406 <nmi_inet_addr+0x52>
    73de:	00b1      	lsls	r1, r6, #2
    73e0:	1871      	adds	r1, r6, r1
    73e2:	0049      	lsls	r1, r1, #1
    73e4:	3930      	subs	r1, #48	; 0x30
    73e6:	188a      	adds	r2, r1, r2
    73e8:	b2d6      	uxtb	r6, r2
    73ea:	3301      	adds	r3, #1
    73ec:	e7ea      	b.n	73c4 <nmi_inet_addr+0x10>
    73ee:	3401      	adds	r4, #1
    73f0:	2c04      	cmp	r4, #4
    73f2:	d1e4      	bne.n	73be <nmi_inet_addr+0xa>
    73f4:	a801      	add	r0, sp, #4
    73f6:	4669      	mov	r1, sp
    73f8:	2204      	movs	r2, #4
    73fa:	4b08      	ldr	r3, [pc, #32]	; (741c <nmi_inet_addr+0x68>)
    73fc:	4798      	blx	r3
    73fe:	9801      	ldr	r0, [sp, #4]
    7400:	e009      	b.n	7416 <nmi_inet_addr+0x62>
    7402:	2000      	movs	r0, #0
    7404:	e007      	b.n	7416 <nmi_inet_addr+0x62>
    7406:	2000      	movs	r0, #0
    7408:	e005      	b.n	7416 <nmi_inet_addr+0x62>
    740a:	466b      	mov	r3, sp
    740c:	54e6      	strb	r6, [r4, r3]
    740e:	e7ee      	b.n	73ee <nmi_inet_addr+0x3a>
    7410:	466b      	mov	r3, sp
    7412:	54e6      	strb	r6, [r4, r3]
    7414:	e7eb      	b.n	73ee <nmi_inet_addr+0x3a>
    7416:	b003      	add	sp, #12
    7418:	bdf0      	pop	{r4, r5, r6, r7, pc}
    741a:	46c0      	nop			; (mov r8, r8)
    741c:	00004b21 	.word	0x00004b21

00007420 <gethostbyname>:
    7420:	b510      	push	{r4, lr}
    7422:	b084      	sub	sp, #16
    7424:	1c04      	adds	r4, r0, #0
    7426:	4b0c      	ldr	r3, [pc, #48]	; (7458 <gethostbyname+0x38>)
    7428:	4798      	blx	r3
    742a:	b2c3      	uxtb	r3, r0
    742c:	2b40      	cmp	r3, #64	; 0x40
    742e:	d80f      	bhi.n	7450 <gethostbyname+0x30>
    7430:	23ff      	movs	r3, #255	; 0xff
    7432:	4018      	ands	r0, r3
    7434:	1c43      	adds	r3, r0, #1
    7436:	2200      	movs	r2, #0
    7438:	9200      	str	r2, [sp, #0]
    743a:	9201      	str	r2, [sp, #4]
    743c:	9202      	str	r2, [sp, #8]
    743e:	2002      	movs	r0, #2
    7440:	21ca      	movs	r1, #202	; 0xca
    7442:	1c22      	adds	r2, r4, #0
    7444:	4c05      	ldr	r4, [pc, #20]	; (745c <gethostbyname+0x3c>)
    7446:	47a0      	blx	r4
    7448:	2800      	cmp	r0, #0
    744a:	d002      	beq.n	7452 <gethostbyname+0x32>
    744c:	20f7      	movs	r0, #247	; 0xf7
    744e:	e000      	b.n	7452 <gethostbyname+0x32>
    7450:	20fa      	movs	r0, #250	; 0xfa
    7452:	b240      	sxtb	r0, r0
    7454:	b004      	add	sp, #16
    7456:	bd10      	pop	{r4, pc}
    7458:	00004b45 	.word	0x00004b45
    745c:	00004d15 	.word	0x00004d15

00007460 <cpu_irq_enter_critical>:
    7460:	4b0c      	ldr	r3, [pc, #48]	; (7494 <cpu_irq_enter_critical+0x34>)
    7462:	681b      	ldr	r3, [r3, #0]
    7464:	2b00      	cmp	r3, #0
    7466:	d110      	bne.n	748a <cpu_irq_enter_critical+0x2a>
    7468:	f3ef 8310 	mrs	r3, PRIMASK
    746c:	2b00      	cmp	r3, #0
    746e:	d109      	bne.n	7484 <cpu_irq_enter_critical+0x24>
    7470:	b672      	cpsid	i
    7472:	f3bf 8f5f 	dmb	sy
    7476:	2200      	movs	r2, #0
    7478:	4b07      	ldr	r3, [pc, #28]	; (7498 <cpu_irq_enter_critical+0x38>)
    747a:	701a      	strb	r2, [r3, #0]
    747c:	3201      	adds	r2, #1
    747e:	4b07      	ldr	r3, [pc, #28]	; (749c <cpu_irq_enter_critical+0x3c>)
    7480:	701a      	strb	r2, [r3, #0]
    7482:	e002      	b.n	748a <cpu_irq_enter_critical+0x2a>
    7484:	2200      	movs	r2, #0
    7486:	4b05      	ldr	r3, [pc, #20]	; (749c <cpu_irq_enter_critical+0x3c>)
    7488:	701a      	strb	r2, [r3, #0]
    748a:	4a02      	ldr	r2, [pc, #8]	; (7494 <cpu_irq_enter_critical+0x34>)
    748c:	6813      	ldr	r3, [r2, #0]
    748e:	3301      	adds	r3, #1
    7490:	6013      	str	r3, [r2, #0]
    7492:	4770      	bx	lr
    7494:	200006a0 	.word	0x200006a0
    7498:	2000005c 	.word	0x2000005c
    749c:	200006a4 	.word	0x200006a4

000074a0 <cpu_irq_leave_critical>:
    74a0:	4b08      	ldr	r3, [pc, #32]	; (74c4 <cpu_irq_leave_critical+0x24>)
    74a2:	681a      	ldr	r2, [r3, #0]
    74a4:	3a01      	subs	r2, #1
    74a6:	601a      	str	r2, [r3, #0]
    74a8:	681b      	ldr	r3, [r3, #0]
    74aa:	2b00      	cmp	r3, #0
    74ac:	d109      	bne.n	74c2 <cpu_irq_leave_critical+0x22>
    74ae:	4b06      	ldr	r3, [pc, #24]	; (74c8 <cpu_irq_leave_critical+0x28>)
    74b0:	781b      	ldrb	r3, [r3, #0]
    74b2:	2b00      	cmp	r3, #0
    74b4:	d005      	beq.n	74c2 <cpu_irq_leave_critical+0x22>
    74b6:	2201      	movs	r2, #1
    74b8:	4b04      	ldr	r3, [pc, #16]	; (74cc <cpu_irq_leave_critical+0x2c>)
    74ba:	701a      	strb	r2, [r3, #0]
    74bc:	f3bf 8f5f 	dmb	sy
    74c0:	b662      	cpsie	i
    74c2:	4770      	bx	lr
    74c4:	200006a0 	.word	0x200006a0
    74c8:	200006a4 	.word	0x200006a4
    74cc:	2000005c 	.word	0x2000005c

000074d0 <system_board_init>:
    74d0:	b5f0      	push	{r4, r5, r6, r7, lr}
    74d2:	b083      	sub	sp, #12
    74d4:	ac01      	add	r4, sp, #4
    74d6:	2501      	movs	r5, #1
    74d8:	7065      	strb	r5, [r4, #1]
    74da:	2700      	movs	r7, #0
    74dc:	70a7      	strb	r7, [r4, #2]
    74de:	7025      	strb	r5, [r4, #0]
    74e0:	203e      	movs	r0, #62	; 0x3e
    74e2:	1c21      	adds	r1, r4, #0
    74e4:	4e06      	ldr	r6, [pc, #24]	; (7500 <system_board_init+0x30>)
    74e6:	47b0      	blx	r6
    74e8:	2280      	movs	r2, #128	; 0x80
    74ea:	05d2      	lsls	r2, r2, #23
    74ec:	4b05      	ldr	r3, [pc, #20]	; (7504 <system_board_init+0x34>)
    74ee:	619a      	str	r2, [r3, #24]
    74f0:	7027      	strb	r7, [r4, #0]
    74f2:	7065      	strb	r5, [r4, #1]
    74f4:	200f      	movs	r0, #15
    74f6:	1c21      	adds	r1, r4, #0
    74f8:	47b0      	blx	r6
    74fa:	b003      	add	sp, #12
    74fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    74fe:	46c0      	nop			; (mov r8, r8)
    7500:	000076ed 	.word	0x000076ed
    7504:	41004480 	.word	0x41004480

00007508 <extint_register_callback>:
    7508:	2317      	movs	r3, #23
    750a:	2a00      	cmp	r2, #0
    750c:	d10d      	bne.n	752a <extint_register_callback+0x22>
    750e:	008b      	lsls	r3, r1, #2
    7510:	4a07      	ldr	r2, [pc, #28]	; (7530 <extint_register_callback+0x28>)
    7512:	589b      	ldr	r3, [r3, r2]
    7514:	2b00      	cmp	r3, #0
    7516:	d103      	bne.n	7520 <extint_register_callback+0x18>
    7518:	0089      	lsls	r1, r1, #2
    751a:	5088      	str	r0, [r1, r2]
    751c:	2300      	movs	r3, #0
    751e:	e004      	b.n	752a <extint_register_callback+0x22>
    7520:	4283      	cmp	r3, r0
    7522:	d001      	beq.n	7528 <extint_register_callback+0x20>
    7524:	231d      	movs	r3, #29
    7526:	e000      	b.n	752a <extint_register_callback+0x22>
    7528:	2300      	movs	r3, #0
    752a:	1c18      	adds	r0, r3, #0
    752c:	4770      	bx	lr
    752e:	46c0      	nop			; (mov r8, r8)
    7530:	20000a68 	.word	0x20000a68

00007534 <extint_chan_enable_callback>:
    7534:	2317      	movs	r3, #23
    7536:	2900      	cmp	r1, #0
    7538:	d107      	bne.n	754a <extint_chan_enable_callback+0x16>
    753a:	2200      	movs	r2, #0
    753c:	281f      	cmp	r0, #31
    753e:	d800      	bhi.n	7542 <extint_chan_enable_callback+0xe>
    7540:	4a03      	ldr	r2, [pc, #12]	; (7550 <extint_chan_enable_callback+0x1c>)
    7542:	2301      	movs	r3, #1
    7544:	4083      	lsls	r3, r0
    7546:	60d3      	str	r3, [r2, #12]
    7548:	2300      	movs	r3, #0
    754a:	1c18      	adds	r0, r3, #0
    754c:	4770      	bx	lr
    754e:	46c0      	nop			; (mov r8, r8)
    7550:	40001800 	.word	0x40001800

00007554 <extint_chan_disable_callback>:
    7554:	2317      	movs	r3, #23
    7556:	2900      	cmp	r1, #0
    7558:	d107      	bne.n	756a <extint_chan_disable_callback+0x16>
    755a:	2200      	movs	r2, #0
    755c:	281f      	cmp	r0, #31
    755e:	d800      	bhi.n	7562 <extint_chan_disable_callback+0xe>
    7560:	4a03      	ldr	r2, [pc, #12]	; (7570 <extint_chan_disable_callback+0x1c>)
    7562:	2301      	movs	r3, #1
    7564:	4083      	lsls	r3, r0
    7566:	6093      	str	r3, [r2, #8]
    7568:	2300      	movs	r3, #0
    756a:	1c18      	adds	r0, r3, #0
    756c:	4770      	bx	lr
    756e:	46c0      	nop			; (mov r8, r8)
    7570:	40001800 	.word	0x40001800

00007574 <EIC_Handler>:
    7574:	b570      	push	{r4, r5, r6, lr}
    7576:	2200      	movs	r2, #0
    7578:	4b15      	ldr	r3, [pc, #84]	; (75d0 <EIC_Handler+0x5c>)
    757a:	701a      	strb	r2, [r3, #0]
    757c:	2300      	movs	r3, #0
    757e:	251f      	movs	r5, #31
    7580:	4e14      	ldr	r6, [pc, #80]	; (75d4 <EIC_Handler+0x60>)
    7582:	4c13      	ldr	r4, [pc, #76]	; (75d0 <EIC_Handler+0x5c>)
    7584:	2b1f      	cmp	r3, #31
    7586:	d919      	bls.n	75bc <EIC_Handler+0x48>
    7588:	e00f      	b.n	75aa <EIC_Handler+0x36>
    758a:	2100      	movs	r1, #0
    758c:	e000      	b.n	7590 <EIC_Handler+0x1c>
    758e:	4912      	ldr	r1, [pc, #72]	; (75d8 <EIC_Handler+0x64>)
    7590:	610a      	str	r2, [r1, #16]
    7592:	009b      	lsls	r3, r3, #2
    7594:	599b      	ldr	r3, [r3, r6]
    7596:	2b00      	cmp	r3, #0
    7598:	d000      	beq.n	759c <EIC_Handler+0x28>
    759a:	4798      	blx	r3
    759c:	7823      	ldrb	r3, [r4, #0]
    759e:	3301      	adds	r3, #1
    75a0:	b2db      	uxtb	r3, r3
    75a2:	7023      	strb	r3, [r4, #0]
    75a4:	2b0f      	cmp	r3, #15
    75a6:	d9ed      	bls.n	7584 <EIC_Handler+0x10>
    75a8:	e011      	b.n	75ce <EIC_Handler+0x5a>
    75aa:	1c29      	adds	r1, r5, #0
    75ac:	4019      	ands	r1, r3
    75ae:	2201      	movs	r2, #1
    75b0:	408a      	lsls	r2, r1
    75b2:	2100      	movs	r1, #0
    75b4:	6909      	ldr	r1, [r1, #16]
    75b6:	4211      	tst	r1, r2
    75b8:	d1e7      	bne.n	758a <EIC_Handler+0x16>
    75ba:	e7ef      	b.n	759c <EIC_Handler+0x28>
    75bc:	1c29      	adds	r1, r5, #0
    75be:	4019      	ands	r1, r3
    75c0:	2201      	movs	r2, #1
    75c2:	408a      	lsls	r2, r1
    75c4:	4904      	ldr	r1, [pc, #16]	; (75d8 <EIC_Handler+0x64>)
    75c6:	6909      	ldr	r1, [r1, #16]
    75c8:	4211      	tst	r1, r2
    75ca:	d1e0      	bne.n	758e <EIC_Handler+0x1a>
    75cc:	e7e6      	b.n	759c <EIC_Handler+0x28>
    75ce:	bd70      	pop	{r4, r5, r6, pc}
    75d0:	20000a64 	.word	0x20000a64
    75d4:	20000a68 	.word	0x20000a68
    75d8:	40001800 	.word	0x40001800

000075dc <_extint_enable>:
    75dc:	4a04      	ldr	r2, [pc, #16]	; (75f0 <_extint_enable+0x14>)
    75de:	7811      	ldrb	r1, [r2, #0]
    75e0:	2302      	movs	r3, #2
    75e2:	430b      	orrs	r3, r1
    75e4:	7013      	strb	r3, [r2, #0]
    75e6:	7853      	ldrb	r3, [r2, #1]
    75e8:	b25b      	sxtb	r3, r3
    75ea:	2b00      	cmp	r3, #0
    75ec:	dbfb      	blt.n	75e6 <_extint_enable+0xa>
    75ee:	4770      	bx	lr
    75f0:	40001800 	.word	0x40001800

000075f4 <_system_extint_init>:
    75f4:	b500      	push	{lr}
    75f6:	b083      	sub	sp, #12
    75f8:	4a12      	ldr	r2, [pc, #72]	; (7644 <_system_extint_init+0x50>)
    75fa:	6991      	ldr	r1, [r2, #24]
    75fc:	2340      	movs	r3, #64	; 0x40
    75fe:	430b      	orrs	r3, r1
    7600:	6193      	str	r3, [r2, #24]
    7602:	a901      	add	r1, sp, #4
    7604:	2300      	movs	r3, #0
    7606:	700b      	strb	r3, [r1, #0]
    7608:	2005      	movs	r0, #5
    760a:	4b0f      	ldr	r3, [pc, #60]	; (7648 <_system_extint_init+0x54>)
    760c:	4798      	blx	r3
    760e:	2005      	movs	r0, #5
    7610:	4b0e      	ldr	r3, [pc, #56]	; (764c <_system_extint_init+0x58>)
    7612:	4798      	blx	r3
    7614:	4a0e      	ldr	r2, [pc, #56]	; (7650 <_system_extint_init+0x5c>)
    7616:	7811      	ldrb	r1, [r2, #0]
    7618:	2301      	movs	r3, #1
    761a:	430b      	orrs	r3, r1
    761c:	7013      	strb	r3, [r2, #0]
    761e:	7853      	ldrb	r3, [r2, #1]
    7620:	b25b      	sxtb	r3, r3
    7622:	2b00      	cmp	r3, #0
    7624:	dbfb      	blt.n	761e <_system_extint_init+0x2a>
    7626:	4b0b      	ldr	r3, [pc, #44]	; (7654 <_system_extint_init+0x60>)
    7628:	1c19      	adds	r1, r3, #0
    762a:	3140      	adds	r1, #64	; 0x40
    762c:	2200      	movs	r2, #0
    762e:	c304      	stmia	r3!, {r2}
    7630:	428b      	cmp	r3, r1
    7632:	d1fc      	bne.n	762e <_system_extint_init+0x3a>
    7634:	2210      	movs	r2, #16
    7636:	4b08      	ldr	r3, [pc, #32]	; (7658 <_system_extint_init+0x64>)
    7638:	601a      	str	r2, [r3, #0]
    763a:	4b08      	ldr	r3, [pc, #32]	; (765c <_system_extint_init+0x68>)
    763c:	4798      	blx	r3
    763e:	b003      	add	sp, #12
    7640:	bd00      	pop	{pc}
    7642:	46c0      	nop			; (mov r8, r8)
    7644:	40000400 	.word	0x40000400
    7648:	00008c45 	.word	0x00008c45
    764c:	00008bb9 	.word	0x00008bb9
    7650:	40001800 	.word	0x40001800
    7654:	20000a68 	.word	0x20000a68
    7658:	e000e100 	.word	0xe000e100
    765c:	000075dd 	.word	0x000075dd

00007660 <extint_chan_get_config_defaults>:
    7660:	2300      	movs	r3, #0
    7662:	6003      	str	r3, [r0, #0]
    7664:	6043      	str	r3, [r0, #4]
    7666:	2201      	movs	r2, #1
    7668:	7202      	strb	r2, [r0, #8]
    766a:	7242      	strb	r2, [r0, #9]
    766c:	7283      	strb	r3, [r0, #10]
    766e:	3302      	adds	r3, #2
    7670:	72c3      	strb	r3, [r0, #11]
    7672:	4770      	bx	lr

00007674 <extint_chan_set_config>:
    7674:	b5f0      	push	{r4, r5, r6, r7, lr}
    7676:	b083      	sub	sp, #12
    7678:	1c05      	adds	r5, r0, #0
    767a:	1c0c      	adds	r4, r1, #0
    767c:	a901      	add	r1, sp, #4
    767e:	2300      	movs	r3, #0
    7680:	704b      	strb	r3, [r1, #1]
    7682:	70cb      	strb	r3, [r1, #3]
    7684:	7923      	ldrb	r3, [r4, #4]
    7686:	700b      	strb	r3, [r1, #0]
    7688:	7a23      	ldrb	r3, [r4, #8]
    768a:	708b      	strb	r3, [r1, #2]
    768c:	7820      	ldrb	r0, [r4, #0]
    768e:	4b15      	ldr	r3, [pc, #84]	; (76e4 <extint_chan_set_config+0x70>)
    7690:	4798      	blx	r3
    7692:	2600      	movs	r6, #0
    7694:	2d1f      	cmp	r5, #31
    7696:	d800      	bhi.n	769a <extint_chan_set_config+0x26>
    7698:	4e13      	ldr	r6, [pc, #76]	; (76e8 <extint_chan_set_config+0x74>)
    769a:	2207      	movs	r2, #7
    769c:	402a      	ands	r2, r5
    769e:	0092      	lsls	r2, r2, #2
    76a0:	7ae0      	ldrb	r0, [r4, #11]
    76a2:	7aa3      	ldrb	r3, [r4, #10]
    76a4:	2b00      	cmp	r3, #0
    76a6:	d001      	beq.n	76ac <extint_chan_set_config+0x38>
    76a8:	2308      	movs	r3, #8
    76aa:	4318      	orrs	r0, r3
    76ac:	08eb      	lsrs	r3, r5, #3
    76ae:	009b      	lsls	r3, r3, #2
    76b0:	18f3      	adds	r3, r6, r3
    76b2:	6999      	ldr	r1, [r3, #24]
    76b4:	4090      	lsls	r0, r2
    76b6:	270f      	movs	r7, #15
    76b8:	4097      	lsls	r7, r2
    76ba:	43b9      	bics	r1, r7
    76bc:	1c0a      	adds	r2, r1, #0
    76be:	4302      	orrs	r2, r0
    76c0:	619a      	str	r2, [r3, #24]
    76c2:	7a63      	ldrb	r3, [r4, #9]
    76c4:	2b00      	cmp	r3, #0
    76c6:	d006      	beq.n	76d6 <extint_chan_set_config+0x62>
    76c8:	6973      	ldr	r3, [r6, #20]
    76ca:	2201      	movs	r2, #1
    76cc:	40aa      	lsls	r2, r5
    76ce:	1c15      	adds	r5, r2, #0
    76d0:	431d      	orrs	r5, r3
    76d2:	6175      	str	r5, [r6, #20]
    76d4:	e004      	b.n	76e0 <extint_chan_set_config+0x6c>
    76d6:	6973      	ldr	r3, [r6, #20]
    76d8:	2201      	movs	r2, #1
    76da:	40aa      	lsls	r2, r5
    76dc:	4393      	bics	r3, r2
    76de:	6173      	str	r3, [r6, #20]
    76e0:	b003      	add	sp, #12
    76e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    76e4:	00008d3d 	.word	0x00008d3d
    76e8:	40001800 	.word	0x40001800

000076ec <port_pin_set_config>:
    76ec:	b500      	push	{lr}
    76ee:	b083      	sub	sp, #12
    76f0:	ab01      	add	r3, sp, #4
    76f2:	2280      	movs	r2, #128	; 0x80
    76f4:	701a      	strb	r2, [r3, #0]
    76f6:	780a      	ldrb	r2, [r1, #0]
    76f8:	705a      	strb	r2, [r3, #1]
    76fa:	784a      	ldrb	r2, [r1, #1]
    76fc:	709a      	strb	r2, [r3, #2]
    76fe:	788a      	ldrb	r2, [r1, #2]
    7700:	70da      	strb	r2, [r3, #3]
    7702:	1c19      	adds	r1, r3, #0
    7704:	4b01      	ldr	r3, [pc, #4]	; (770c <port_pin_set_config+0x20>)
    7706:	4798      	blx	r3
    7708:	b003      	add	sp, #12
    770a:	bd00      	pop	{pc}
    770c:	00008d3d 	.word	0x00008d3d

00007710 <_sercom_get_sync_baud_val>:
    7710:	b510      	push	{r4, lr}
    7712:	0849      	lsrs	r1, r1, #1
    7714:	2440      	movs	r4, #64	; 0x40
    7716:	4281      	cmp	r1, r0
    7718:	d30c      	bcc.n	7734 <_sercom_get_sync_baud_val+0x24>
    771a:	2300      	movs	r3, #0
    771c:	1a09      	subs	r1, r1, r0
    771e:	3301      	adds	r3, #1
    7720:	b29b      	uxth	r3, r3
    7722:	4288      	cmp	r0, r1
    7724:	d9fa      	bls.n	771c <_sercom_get_sync_baud_val+0xc>
    7726:	3b01      	subs	r3, #1
    7728:	b29b      	uxth	r3, r3
    772a:	2440      	movs	r4, #64	; 0x40
    772c:	2bff      	cmp	r3, #255	; 0xff
    772e:	d801      	bhi.n	7734 <_sercom_get_sync_baud_val+0x24>
    7730:	8013      	strh	r3, [r2, #0]
    7732:	2400      	movs	r4, #0
    7734:	1c20      	adds	r0, r4, #0
    7736:	bd10      	pop	{r4, pc}

00007738 <_sercom_get_async_baud_val>:
    7738:	b5f0      	push	{r4, r5, r6, r7, lr}
    773a:	465f      	mov	r7, fp
    773c:	4656      	mov	r6, sl
    773e:	464d      	mov	r5, r9
    7740:	4644      	mov	r4, r8
    7742:	b4f0      	push	{r4, r5, r6, r7}
    7744:	b089      	sub	sp, #36	; 0x24
    7746:	1c1c      	adds	r4, r3, #0
    7748:	ab12      	add	r3, sp, #72	; 0x48
    774a:	781b      	ldrb	r3, [r3, #0]
    774c:	1c06      	adds	r6, r0, #0
    774e:	435e      	muls	r6, r3
    7750:	2540      	movs	r5, #64	; 0x40
    7752:	428e      	cmp	r6, r1
    7754:	d900      	bls.n	7758 <_sercom_get_async_baud_val+0x20>
    7756:	e0c7      	b.n	78e8 <_sercom_get_async_baud_val+0x1b0>
    7758:	1c25      	adds	r5, r4, #0
    775a:	9207      	str	r2, [sp, #28]
    775c:	1c0c      	adds	r4, r1, #0
    775e:	1c02      	adds	r2, r0, #0
    7760:	2d00      	cmp	r5, #0
    7762:	d151      	bne.n	7808 <_sercom_get_async_baud_val+0xd0>
    7764:	1c18      	adds	r0, r3, #0
    7766:	2100      	movs	r1, #0
    7768:	2300      	movs	r3, #0
    776a:	4d63      	ldr	r5, [pc, #396]	; (78f8 <_sercom_get_async_baud_val+0x1c0>)
    776c:	47a8      	blx	r5
    776e:	4683      	mov	fp, r0
    7770:	1c26      	adds	r6, r4, #0
    7772:	2700      	movs	r7, #0
    7774:	2300      	movs	r3, #0
    7776:	2400      	movs	r4, #0
    7778:	9302      	str	r3, [sp, #8]
    777a:	9403      	str	r4, [sp, #12]
    777c:	2200      	movs	r2, #0
    777e:	2300      	movs	r3, #0
    7780:	203f      	movs	r0, #63	; 0x3f
    7782:	2120      	movs	r1, #32
    7784:	468c      	mov	ip, r1
    7786:	391f      	subs	r1, #31
    7788:	9600      	str	r6, [sp, #0]
    778a:	9701      	str	r7, [sp, #4]
    778c:	2420      	movs	r4, #32
    778e:	4264      	negs	r4, r4
    7790:	1904      	adds	r4, r0, r4
    7792:	d403      	bmi.n	779c <_sercom_get_async_baud_val+0x64>
    7794:	1c0d      	adds	r5, r1, #0
    7796:	40a5      	lsls	r5, r4
    7798:	46a8      	mov	r8, r5
    779a:	e004      	b.n	77a6 <_sercom_get_async_baud_val+0x6e>
    779c:	4664      	mov	r4, ip
    779e:	1a24      	subs	r4, r4, r0
    77a0:	1c0d      	adds	r5, r1, #0
    77a2:	40e5      	lsrs	r5, r4
    77a4:	46a8      	mov	r8, r5
    77a6:	1c0c      	adds	r4, r1, #0
    77a8:	4084      	lsls	r4, r0
    77aa:	46a1      	mov	r9, r4
    77ac:	1c14      	adds	r4, r2, #0
    77ae:	1c1d      	adds	r5, r3, #0
    77b0:	18a4      	adds	r4, r4, r2
    77b2:	415d      	adcs	r5, r3
    77b4:	1c22      	adds	r2, r4, #0
    77b6:	1c2b      	adds	r3, r5, #0
    77b8:	465e      	mov	r6, fp
    77ba:	4647      	mov	r7, r8
    77bc:	423e      	tst	r6, r7
    77be:	d003      	beq.n	77c8 <_sercom_get_async_baud_val+0x90>
    77c0:	1c0e      	adds	r6, r1, #0
    77c2:	4326      	orrs	r6, r4
    77c4:	1c32      	adds	r2, r6, #0
    77c6:	1c2b      	adds	r3, r5, #0
    77c8:	9c01      	ldr	r4, [sp, #4]
    77ca:	429c      	cmp	r4, r3
    77cc:	d810      	bhi.n	77f0 <_sercom_get_async_baud_val+0xb8>
    77ce:	d102      	bne.n	77d6 <_sercom_get_async_baud_val+0x9e>
    77d0:	9c00      	ldr	r4, [sp, #0]
    77d2:	4294      	cmp	r4, r2
    77d4:	d80c      	bhi.n	77f0 <_sercom_get_async_baud_val+0xb8>
    77d6:	9c00      	ldr	r4, [sp, #0]
    77d8:	9d01      	ldr	r5, [sp, #4]
    77da:	1b12      	subs	r2, r2, r4
    77dc:	41ab      	sbcs	r3, r5
    77de:	464d      	mov	r5, r9
    77e0:	9e02      	ldr	r6, [sp, #8]
    77e2:	9f03      	ldr	r7, [sp, #12]
    77e4:	4335      	orrs	r5, r6
    77e6:	1c3c      	adds	r4, r7, #0
    77e8:	4646      	mov	r6, r8
    77ea:	4334      	orrs	r4, r6
    77ec:	9502      	str	r5, [sp, #8]
    77ee:	9403      	str	r4, [sp, #12]
    77f0:	3801      	subs	r0, #1
    77f2:	d2cb      	bcs.n	778c <_sercom_get_async_baud_val+0x54>
    77f4:	2200      	movs	r2, #0
    77f6:	2301      	movs	r3, #1
    77f8:	9802      	ldr	r0, [sp, #8]
    77fa:	9903      	ldr	r1, [sp, #12]
    77fc:	1a12      	subs	r2, r2, r0
    77fe:	418b      	sbcs	r3, r1
    7800:	0c11      	lsrs	r1, r2, #16
    7802:	041b      	lsls	r3, r3, #16
    7804:	4319      	orrs	r1, r3
    7806:	e06c      	b.n	78e2 <_sercom_get_async_baud_val+0x1aa>
    7808:	2100      	movs	r1, #0
    780a:	2d01      	cmp	r5, #1
    780c:	d169      	bne.n	78e2 <_sercom_get_async_baud_val+0x1aa>
    780e:	0f61      	lsrs	r1, r4, #29
    7810:	1c0f      	adds	r7, r1, #0
    7812:	00e1      	lsls	r1, r4, #3
    7814:	4688      	mov	r8, r1
    7816:	1c18      	adds	r0, r3, #0
    7818:	2100      	movs	r1, #0
    781a:	2300      	movs	r3, #0
    781c:	4c36      	ldr	r4, [pc, #216]	; (78f8 <_sercom_get_async_baud_val+0x1c0>)
    781e:	47a0      	blx	r4
    7820:	1c04      	adds	r4, r0, #0
    7822:	1c0d      	adds	r5, r1, #0
    7824:	2300      	movs	r3, #0
    7826:	469c      	mov	ip, r3
    7828:	3320      	adds	r3, #32
    782a:	469b      	mov	fp, r3
    782c:	2601      	movs	r6, #1
    782e:	4663      	mov	r3, ip
    7830:	9305      	str	r3, [sp, #20]
    7832:	46b9      	mov	r9, r7
    7834:	466b      	mov	r3, sp
    7836:	7d1b      	ldrb	r3, [r3, #20]
    7838:	9306      	str	r3, [sp, #24]
    783a:	2300      	movs	r3, #0
    783c:	469c      	mov	ip, r3
    783e:	2000      	movs	r0, #0
    7840:	2100      	movs	r1, #0
    7842:	223f      	movs	r2, #63	; 0x3f
    7844:	9400      	str	r4, [sp, #0]
    7846:	9501      	str	r5, [sp, #4]
    7848:	2320      	movs	r3, #32
    784a:	425b      	negs	r3, r3
    784c:	18d3      	adds	r3, r2, r3
    784e:	d403      	bmi.n	7858 <_sercom_get_async_baud_val+0x120>
    7850:	1c34      	adds	r4, r6, #0
    7852:	409c      	lsls	r4, r3
    7854:	1c23      	adds	r3, r4, #0
    7856:	e004      	b.n	7862 <_sercom_get_async_baud_val+0x12a>
    7858:	465b      	mov	r3, fp
    785a:	1a9b      	subs	r3, r3, r2
    785c:	1c34      	adds	r4, r6, #0
    785e:	40dc      	lsrs	r4, r3
    7860:	1c23      	adds	r3, r4, #0
    7862:	1c37      	adds	r7, r6, #0
    7864:	4097      	lsls	r7, r2
    7866:	1c04      	adds	r4, r0, #0
    7868:	1c0d      	adds	r5, r1, #0
    786a:	1824      	adds	r4, r4, r0
    786c:	414d      	adcs	r5, r1
    786e:	1c20      	adds	r0, r4, #0
    7870:	1c29      	adds	r1, r5, #0
    7872:	9002      	str	r0, [sp, #8]
    7874:	9103      	str	r1, [sp, #12]
    7876:	4644      	mov	r4, r8
    7878:	403c      	ands	r4, r7
    787a:	46a2      	mov	sl, r4
    787c:	464c      	mov	r4, r9
    787e:	4023      	ands	r3, r4
    7880:	4654      	mov	r4, sl
    7882:	4323      	orrs	r3, r4
    7884:	d005      	beq.n	7892 <_sercom_get_async_baud_val+0x15a>
    7886:	9b02      	ldr	r3, [sp, #8]
    7888:	9c03      	ldr	r4, [sp, #12]
    788a:	1c1d      	adds	r5, r3, #0
    788c:	4335      	orrs	r5, r6
    788e:	1c28      	adds	r0, r5, #0
    7890:	1c21      	adds	r1, r4, #0
    7892:	9b01      	ldr	r3, [sp, #4]
    7894:	428b      	cmp	r3, r1
    7896:	d80a      	bhi.n	78ae <_sercom_get_async_baud_val+0x176>
    7898:	d102      	bne.n	78a0 <_sercom_get_async_baud_val+0x168>
    789a:	9b00      	ldr	r3, [sp, #0]
    789c:	4283      	cmp	r3, r0
    789e:	d806      	bhi.n	78ae <_sercom_get_async_baud_val+0x176>
    78a0:	9b00      	ldr	r3, [sp, #0]
    78a2:	9c01      	ldr	r4, [sp, #4]
    78a4:	1ac0      	subs	r0, r0, r3
    78a6:	41a1      	sbcs	r1, r4
    78a8:	4663      	mov	r3, ip
    78aa:	433b      	orrs	r3, r7
    78ac:	469c      	mov	ip, r3
    78ae:	3a01      	subs	r2, #1
    78b0:	d2ca      	bcs.n	7848 <_sercom_get_async_baud_val+0x110>
    78b2:	9c00      	ldr	r4, [sp, #0]
    78b4:	9d01      	ldr	r5, [sp, #4]
    78b6:	4662      	mov	r2, ip
    78b8:	9905      	ldr	r1, [sp, #20]
    78ba:	1a53      	subs	r3, r2, r1
    78bc:	08db      	lsrs	r3, r3, #3
    78be:	4a0f      	ldr	r2, [pc, #60]	; (78fc <_sercom_get_async_baud_val+0x1c4>)
    78c0:	4293      	cmp	r3, r2
    78c2:	d908      	bls.n	78d6 <_sercom_get_async_baud_val+0x19e>
    78c4:	9a06      	ldr	r2, [sp, #24]
    78c6:	3201      	adds	r2, #1
    78c8:	b2d2      	uxtb	r2, r2
    78ca:	9206      	str	r2, [sp, #24]
    78cc:	1c0a      	adds	r2, r1, #0
    78ce:	3201      	adds	r2, #1
    78d0:	9205      	str	r2, [sp, #20]
    78d2:	2a08      	cmp	r2, #8
    78d4:	d1ae      	bne.n	7834 <_sercom_get_async_baud_val+0xfc>
    78d6:	2540      	movs	r5, #64	; 0x40
    78d8:	9a06      	ldr	r2, [sp, #24]
    78da:	2a08      	cmp	r2, #8
    78dc:	d004      	beq.n	78e8 <_sercom_get_async_baud_val+0x1b0>
    78de:	0351      	lsls	r1, r2, #13
    78e0:	4319      	orrs	r1, r3
    78e2:	9b07      	ldr	r3, [sp, #28]
    78e4:	8019      	strh	r1, [r3, #0]
    78e6:	2500      	movs	r5, #0
    78e8:	1c28      	adds	r0, r5, #0
    78ea:	b009      	add	sp, #36	; 0x24
    78ec:	bc3c      	pop	{r2, r3, r4, r5}
    78ee:	4690      	mov	r8, r2
    78f0:	4699      	mov	r9, r3
    78f2:	46a2      	mov	sl, r4
    78f4:	46ab      	mov	fp, r5
    78f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    78f8:	00009ff5 	.word	0x00009ff5
    78fc:	00001fff 	.word	0x00001fff

00007900 <sercom_set_gclk_generator>:
    7900:	b510      	push	{r4, lr}
    7902:	b082      	sub	sp, #8
    7904:	1c04      	adds	r4, r0, #0
    7906:	4b0e      	ldr	r3, [pc, #56]	; (7940 <sercom_set_gclk_generator+0x40>)
    7908:	781b      	ldrb	r3, [r3, #0]
    790a:	2b00      	cmp	r3, #0
    790c:	d001      	beq.n	7912 <sercom_set_gclk_generator+0x12>
    790e:	2900      	cmp	r1, #0
    7910:	d00d      	beq.n	792e <sercom_set_gclk_generator+0x2e>
    7912:	a901      	add	r1, sp, #4
    7914:	700c      	strb	r4, [r1, #0]
    7916:	2013      	movs	r0, #19
    7918:	4b0a      	ldr	r3, [pc, #40]	; (7944 <sercom_set_gclk_generator+0x44>)
    791a:	4798      	blx	r3
    791c:	2013      	movs	r0, #19
    791e:	4b0a      	ldr	r3, [pc, #40]	; (7948 <sercom_set_gclk_generator+0x48>)
    7920:	4798      	blx	r3
    7922:	4b07      	ldr	r3, [pc, #28]	; (7940 <sercom_set_gclk_generator+0x40>)
    7924:	705c      	strb	r4, [r3, #1]
    7926:	2201      	movs	r2, #1
    7928:	701a      	strb	r2, [r3, #0]
    792a:	2000      	movs	r0, #0
    792c:	e006      	b.n	793c <sercom_set_gclk_generator+0x3c>
    792e:	4b04      	ldr	r3, [pc, #16]	; (7940 <sercom_set_gclk_generator+0x40>)
    7930:	785b      	ldrb	r3, [r3, #1]
    7932:	4283      	cmp	r3, r0
    7934:	d001      	beq.n	793a <sercom_set_gclk_generator+0x3a>
    7936:	201d      	movs	r0, #29
    7938:	e000      	b.n	793c <sercom_set_gclk_generator+0x3c>
    793a:	2000      	movs	r0, #0
    793c:	b002      	add	sp, #8
    793e:	bd10      	pop	{r4, pc}
    7940:	200006a8 	.word	0x200006a8
    7944:	00008c45 	.word	0x00008c45
    7948:	00008bb9 	.word	0x00008bb9

0000794c <_sercom_get_default_pad>:
    794c:	4b44      	ldr	r3, [pc, #272]	; (7a60 <_sercom_get_default_pad+0x114>)
    794e:	4298      	cmp	r0, r3
    7950:	d033      	beq.n	79ba <_sercom_get_default_pad+0x6e>
    7952:	d806      	bhi.n	7962 <_sercom_get_default_pad+0x16>
    7954:	4b43      	ldr	r3, [pc, #268]	; (7a64 <_sercom_get_default_pad+0x118>)
    7956:	4298      	cmp	r0, r3
    7958:	d00d      	beq.n	7976 <_sercom_get_default_pad+0x2a>
    795a:	4b43      	ldr	r3, [pc, #268]	; (7a68 <_sercom_get_default_pad+0x11c>)
    795c:	4298      	cmp	r0, r3
    795e:	d01b      	beq.n	7998 <_sercom_get_default_pad+0x4c>
    7960:	e06f      	b.n	7a42 <_sercom_get_default_pad+0xf6>
    7962:	4b42      	ldr	r3, [pc, #264]	; (7a6c <_sercom_get_default_pad+0x120>)
    7964:	4298      	cmp	r0, r3
    7966:	d04a      	beq.n	79fe <_sercom_get_default_pad+0xb2>
    7968:	4b41      	ldr	r3, [pc, #260]	; (7a70 <_sercom_get_default_pad+0x124>)
    796a:	4298      	cmp	r0, r3
    796c:	d058      	beq.n	7a20 <_sercom_get_default_pad+0xd4>
    796e:	4b41      	ldr	r3, [pc, #260]	; (7a74 <_sercom_get_default_pad+0x128>)
    7970:	4298      	cmp	r0, r3
    7972:	d166      	bne.n	7a42 <_sercom_get_default_pad+0xf6>
    7974:	e032      	b.n	79dc <_sercom_get_default_pad+0x90>
    7976:	2901      	cmp	r1, #1
    7978:	d006      	beq.n	7988 <_sercom_get_default_pad+0x3c>
    797a:	2900      	cmp	r1, #0
    797c:	d063      	beq.n	7a46 <_sercom_get_default_pad+0xfa>
    797e:	2902      	cmp	r1, #2
    7980:	d006      	beq.n	7990 <_sercom_get_default_pad+0x44>
    7982:	2903      	cmp	r1, #3
    7984:	d006      	beq.n	7994 <_sercom_get_default_pad+0x48>
    7986:	e001      	b.n	798c <_sercom_get_default_pad+0x40>
    7988:	483b      	ldr	r0, [pc, #236]	; (7a78 <_sercom_get_default_pad+0x12c>)
    798a:	e067      	b.n	7a5c <_sercom_get_default_pad+0x110>
    798c:	2000      	movs	r0, #0
    798e:	e065      	b.n	7a5c <_sercom_get_default_pad+0x110>
    7990:	483a      	ldr	r0, [pc, #232]	; (7a7c <_sercom_get_default_pad+0x130>)
    7992:	e063      	b.n	7a5c <_sercom_get_default_pad+0x110>
    7994:	483a      	ldr	r0, [pc, #232]	; (7a80 <_sercom_get_default_pad+0x134>)
    7996:	e061      	b.n	7a5c <_sercom_get_default_pad+0x110>
    7998:	2901      	cmp	r1, #1
    799a:	d006      	beq.n	79aa <_sercom_get_default_pad+0x5e>
    799c:	2900      	cmp	r1, #0
    799e:	d054      	beq.n	7a4a <_sercom_get_default_pad+0xfe>
    79a0:	2902      	cmp	r1, #2
    79a2:	d006      	beq.n	79b2 <_sercom_get_default_pad+0x66>
    79a4:	2903      	cmp	r1, #3
    79a6:	d006      	beq.n	79b6 <_sercom_get_default_pad+0x6a>
    79a8:	e001      	b.n	79ae <_sercom_get_default_pad+0x62>
    79aa:	4836      	ldr	r0, [pc, #216]	; (7a84 <_sercom_get_default_pad+0x138>)
    79ac:	e056      	b.n	7a5c <_sercom_get_default_pad+0x110>
    79ae:	2000      	movs	r0, #0
    79b0:	e054      	b.n	7a5c <_sercom_get_default_pad+0x110>
    79b2:	4835      	ldr	r0, [pc, #212]	; (7a88 <_sercom_get_default_pad+0x13c>)
    79b4:	e052      	b.n	7a5c <_sercom_get_default_pad+0x110>
    79b6:	4835      	ldr	r0, [pc, #212]	; (7a8c <_sercom_get_default_pad+0x140>)
    79b8:	e050      	b.n	7a5c <_sercom_get_default_pad+0x110>
    79ba:	2901      	cmp	r1, #1
    79bc:	d006      	beq.n	79cc <_sercom_get_default_pad+0x80>
    79be:	2900      	cmp	r1, #0
    79c0:	d045      	beq.n	7a4e <_sercom_get_default_pad+0x102>
    79c2:	2902      	cmp	r1, #2
    79c4:	d006      	beq.n	79d4 <_sercom_get_default_pad+0x88>
    79c6:	2903      	cmp	r1, #3
    79c8:	d006      	beq.n	79d8 <_sercom_get_default_pad+0x8c>
    79ca:	e001      	b.n	79d0 <_sercom_get_default_pad+0x84>
    79cc:	4830      	ldr	r0, [pc, #192]	; (7a90 <_sercom_get_default_pad+0x144>)
    79ce:	e045      	b.n	7a5c <_sercom_get_default_pad+0x110>
    79d0:	2000      	movs	r0, #0
    79d2:	e043      	b.n	7a5c <_sercom_get_default_pad+0x110>
    79d4:	482f      	ldr	r0, [pc, #188]	; (7a94 <_sercom_get_default_pad+0x148>)
    79d6:	e041      	b.n	7a5c <_sercom_get_default_pad+0x110>
    79d8:	482f      	ldr	r0, [pc, #188]	; (7a98 <_sercom_get_default_pad+0x14c>)
    79da:	e03f      	b.n	7a5c <_sercom_get_default_pad+0x110>
    79dc:	2901      	cmp	r1, #1
    79de:	d006      	beq.n	79ee <_sercom_get_default_pad+0xa2>
    79e0:	2900      	cmp	r1, #0
    79e2:	d036      	beq.n	7a52 <_sercom_get_default_pad+0x106>
    79e4:	2902      	cmp	r1, #2
    79e6:	d006      	beq.n	79f6 <_sercom_get_default_pad+0xaa>
    79e8:	2903      	cmp	r1, #3
    79ea:	d006      	beq.n	79fa <_sercom_get_default_pad+0xae>
    79ec:	e001      	b.n	79f2 <_sercom_get_default_pad+0xa6>
    79ee:	482b      	ldr	r0, [pc, #172]	; (7a9c <_sercom_get_default_pad+0x150>)
    79f0:	e034      	b.n	7a5c <_sercom_get_default_pad+0x110>
    79f2:	2000      	movs	r0, #0
    79f4:	e032      	b.n	7a5c <_sercom_get_default_pad+0x110>
    79f6:	482a      	ldr	r0, [pc, #168]	; (7aa0 <_sercom_get_default_pad+0x154>)
    79f8:	e030      	b.n	7a5c <_sercom_get_default_pad+0x110>
    79fa:	482a      	ldr	r0, [pc, #168]	; (7aa4 <_sercom_get_default_pad+0x158>)
    79fc:	e02e      	b.n	7a5c <_sercom_get_default_pad+0x110>
    79fe:	2901      	cmp	r1, #1
    7a00:	d006      	beq.n	7a10 <_sercom_get_default_pad+0xc4>
    7a02:	2900      	cmp	r1, #0
    7a04:	d027      	beq.n	7a56 <_sercom_get_default_pad+0x10a>
    7a06:	2902      	cmp	r1, #2
    7a08:	d006      	beq.n	7a18 <_sercom_get_default_pad+0xcc>
    7a0a:	2903      	cmp	r1, #3
    7a0c:	d006      	beq.n	7a1c <_sercom_get_default_pad+0xd0>
    7a0e:	e001      	b.n	7a14 <_sercom_get_default_pad+0xc8>
    7a10:	4825      	ldr	r0, [pc, #148]	; (7aa8 <_sercom_get_default_pad+0x15c>)
    7a12:	e023      	b.n	7a5c <_sercom_get_default_pad+0x110>
    7a14:	2000      	movs	r0, #0
    7a16:	e021      	b.n	7a5c <_sercom_get_default_pad+0x110>
    7a18:	4824      	ldr	r0, [pc, #144]	; (7aac <_sercom_get_default_pad+0x160>)
    7a1a:	e01f      	b.n	7a5c <_sercom_get_default_pad+0x110>
    7a1c:	4824      	ldr	r0, [pc, #144]	; (7ab0 <_sercom_get_default_pad+0x164>)
    7a1e:	e01d      	b.n	7a5c <_sercom_get_default_pad+0x110>
    7a20:	2901      	cmp	r1, #1
    7a22:	d006      	beq.n	7a32 <_sercom_get_default_pad+0xe6>
    7a24:	2900      	cmp	r1, #0
    7a26:	d018      	beq.n	7a5a <_sercom_get_default_pad+0x10e>
    7a28:	2902      	cmp	r1, #2
    7a2a:	d006      	beq.n	7a3a <_sercom_get_default_pad+0xee>
    7a2c:	2903      	cmp	r1, #3
    7a2e:	d006      	beq.n	7a3e <_sercom_get_default_pad+0xf2>
    7a30:	e001      	b.n	7a36 <_sercom_get_default_pad+0xea>
    7a32:	4820      	ldr	r0, [pc, #128]	; (7ab4 <_sercom_get_default_pad+0x168>)
    7a34:	e012      	b.n	7a5c <_sercom_get_default_pad+0x110>
    7a36:	2000      	movs	r0, #0
    7a38:	e010      	b.n	7a5c <_sercom_get_default_pad+0x110>
    7a3a:	481f      	ldr	r0, [pc, #124]	; (7ab8 <_sercom_get_default_pad+0x16c>)
    7a3c:	e00e      	b.n	7a5c <_sercom_get_default_pad+0x110>
    7a3e:	481f      	ldr	r0, [pc, #124]	; (7abc <_sercom_get_default_pad+0x170>)
    7a40:	e00c      	b.n	7a5c <_sercom_get_default_pad+0x110>
    7a42:	2000      	movs	r0, #0
    7a44:	e00a      	b.n	7a5c <_sercom_get_default_pad+0x110>
    7a46:	481e      	ldr	r0, [pc, #120]	; (7ac0 <_sercom_get_default_pad+0x174>)
    7a48:	e008      	b.n	7a5c <_sercom_get_default_pad+0x110>
    7a4a:	2003      	movs	r0, #3
    7a4c:	e006      	b.n	7a5c <_sercom_get_default_pad+0x110>
    7a4e:	481d      	ldr	r0, [pc, #116]	; (7ac4 <_sercom_get_default_pad+0x178>)
    7a50:	e004      	b.n	7a5c <_sercom_get_default_pad+0x110>
    7a52:	481d      	ldr	r0, [pc, #116]	; (7ac8 <_sercom_get_default_pad+0x17c>)
    7a54:	e002      	b.n	7a5c <_sercom_get_default_pad+0x110>
    7a56:	481d      	ldr	r0, [pc, #116]	; (7acc <_sercom_get_default_pad+0x180>)
    7a58:	e000      	b.n	7a5c <_sercom_get_default_pad+0x110>
    7a5a:	481d      	ldr	r0, [pc, #116]	; (7ad0 <_sercom_get_default_pad+0x184>)
    7a5c:	4770      	bx	lr
    7a5e:	46c0      	nop			; (mov r8, r8)
    7a60:	42001000 	.word	0x42001000
    7a64:	42000800 	.word	0x42000800
    7a68:	42000c00 	.word	0x42000c00
    7a6c:	42001800 	.word	0x42001800
    7a70:	42001c00 	.word	0x42001c00
    7a74:	42001400 	.word	0x42001400
    7a78:	00050003 	.word	0x00050003
    7a7c:	00060003 	.word	0x00060003
    7a80:	00070003 	.word	0x00070003
    7a84:	00010003 	.word	0x00010003
    7a88:	001e0003 	.word	0x001e0003
    7a8c:	001f0003 	.word	0x001f0003
    7a90:	00090003 	.word	0x00090003
    7a94:	000a0003 	.word	0x000a0003
    7a98:	000b0003 	.word	0x000b0003
    7a9c:	00110003 	.word	0x00110003
    7aa0:	00120003 	.word	0x00120003
    7aa4:	00130003 	.word	0x00130003
    7aa8:	000d0003 	.word	0x000d0003
    7aac:	000e0003 	.word	0x000e0003
    7ab0:	000f0003 	.word	0x000f0003
    7ab4:	00170003 	.word	0x00170003
    7ab8:	00180003 	.word	0x00180003
    7abc:	00190003 	.word	0x00190003
    7ac0:	00040003 	.word	0x00040003
    7ac4:	00080003 	.word	0x00080003
    7ac8:	00100003 	.word	0x00100003
    7acc:	000c0003 	.word	0x000c0003
    7ad0:	00160003 	.word	0x00160003

00007ad4 <_sercom_get_sercom_inst_index>:
    7ad4:	b530      	push	{r4, r5, lr}
    7ad6:	b087      	sub	sp, #28
    7ad8:	4b0c      	ldr	r3, [pc, #48]	; (7b0c <_sercom_get_sercom_inst_index+0x38>)
    7ada:	466a      	mov	r2, sp
    7adc:	cb32      	ldmia	r3!, {r1, r4, r5}
    7ade:	c232      	stmia	r2!, {r1, r4, r5}
    7ae0:	cb32      	ldmia	r3!, {r1, r4, r5}
    7ae2:	c232      	stmia	r2!, {r1, r4, r5}
    7ae4:	9b00      	ldr	r3, [sp, #0]
    7ae6:	4283      	cmp	r3, r0
    7ae8:	d006      	beq.n	7af8 <_sercom_get_sercom_inst_index+0x24>
    7aea:	2301      	movs	r3, #1
    7aec:	009a      	lsls	r2, r3, #2
    7aee:	4669      	mov	r1, sp
    7af0:	5852      	ldr	r2, [r2, r1]
    7af2:	4282      	cmp	r2, r0
    7af4:	d103      	bne.n	7afe <_sercom_get_sercom_inst_index+0x2a>
    7af6:	e000      	b.n	7afa <_sercom_get_sercom_inst_index+0x26>
    7af8:	2300      	movs	r3, #0
    7afa:	b2d8      	uxtb	r0, r3
    7afc:	e003      	b.n	7b06 <_sercom_get_sercom_inst_index+0x32>
    7afe:	3301      	adds	r3, #1
    7b00:	2b06      	cmp	r3, #6
    7b02:	d1f3      	bne.n	7aec <_sercom_get_sercom_inst_index+0x18>
    7b04:	2000      	movs	r0, #0
    7b06:	b007      	add	sp, #28
    7b08:	bd30      	pop	{r4, r5, pc}
    7b0a:	46c0      	nop			; (mov r8, r8)
    7b0c:	00011a04 	.word	0x00011a04

00007b10 <_sercom_default_handler>:
    7b10:	4770      	bx	lr
    7b12:	46c0      	nop			; (mov r8, r8)

00007b14 <_sercom_set_handler>:
    7b14:	b5f0      	push	{r4, r5, r6, r7, lr}
    7b16:	4b0a      	ldr	r3, [pc, #40]	; (7b40 <_sercom_set_handler+0x2c>)
    7b18:	781b      	ldrb	r3, [r3, #0]
    7b1a:	2b00      	cmp	r3, #0
    7b1c:	d10c      	bne.n	7b38 <_sercom_set_handler+0x24>
    7b1e:	4f09      	ldr	r7, [pc, #36]	; (7b44 <_sercom_set_handler+0x30>)
    7b20:	4e09      	ldr	r6, [pc, #36]	; (7b48 <_sercom_set_handler+0x34>)
    7b22:	4d0a      	ldr	r5, [pc, #40]	; (7b4c <_sercom_set_handler+0x38>)
    7b24:	2400      	movs	r4, #0
    7b26:	51de      	str	r6, [r3, r7]
    7b28:	195a      	adds	r2, r3, r5
    7b2a:	6014      	str	r4, [r2, #0]
    7b2c:	3304      	adds	r3, #4
    7b2e:	2b18      	cmp	r3, #24
    7b30:	d1f9      	bne.n	7b26 <_sercom_set_handler+0x12>
    7b32:	2201      	movs	r2, #1
    7b34:	4b02      	ldr	r3, [pc, #8]	; (7b40 <_sercom_set_handler+0x2c>)
    7b36:	701a      	strb	r2, [r3, #0]
    7b38:	0080      	lsls	r0, r0, #2
    7b3a:	4b02      	ldr	r3, [pc, #8]	; (7b44 <_sercom_set_handler+0x30>)
    7b3c:	50c1      	str	r1, [r0, r3]
    7b3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7b40:	200006aa 	.word	0x200006aa
    7b44:	200006ac 	.word	0x200006ac
    7b48:	00007b11 	.word	0x00007b11
    7b4c:	20000aa8 	.word	0x20000aa8

00007b50 <_sercom_get_interrupt_vector>:
    7b50:	b510      	push	{r4, lr}
    7b52:	b082      	sub	sp, #8
    7b54:	1c04      	adds	r4, r0, #0
    7b56:	4668      	mov	r0, sp
    7b58:	4905      	ldr	r1, [pc, #20]	; (7b70 <_sercom_get_interrupt_vector+0x20>)
    7b5a:	2206      	movs	r2, #6
    7b5c:	4b05      	ldr	r3, [pc, #20]	; (7b74 <_sercom_get_interrupt_vector+0x24>)
    7b5e:	4798      	blx	r3
    7b60:	1c20      	adds	r0, r4, #0
    7b62:	4b05      	ldr	r3, [pc, #20]	; (7b78 <_sercom_get_interrupt_vector+0x28>)
    7b64:	4798      	blx	r3
    7b66:	466b      	mov	r3, sp
    7b68:	5618      	ldrsb	r0, [r3, r0]
    7b6a:	b002      	add	sp, #8
    7b6c:	bd10      	pop	{r4, pc}
    7b6e:	46c0      	nop			; (mov r8, r8)
    7b70:	00011a1c 	.word	0x00011a1c
    7b74:	0000c0a7 	.word	0x0000c0a7
    7b78:	00007ad5 	.word	0x00007ad5

00007b7c <SERCOM0_Handler>:
    7b7c:	b508      	push	{r3, lr}
    7b7e:	4b02      	ldr	r3, [pc, #8]	; (7b88 <SERCOM0_Handler+0xc>)
    7b80:	681b      	ldr	r3, [r3, #0]
    7b82:	2000      	movs	r0, #0
    7b84:	4798      	blx	r3
    7b86:	bd08      	pop	{r3, pc}
    7b88:	200006ac 	.word	0x200006ac

00007b8c <SERCOM1_Handler>:
    7b8c:	b508      	push	{r3, lr}
    7b8e:	4b02      	ldr	r3, [pc, #8]	; (7b98 <SERCOM1_Handler+0xc>)
    7b90:	685b      	ldr	r3, [r3, #4]
    7b92:	2001      	movs	r0, #1
    7b94:	4798      	blx	r3
    7b96:	bd08      	pop	{r3, pc}
    7b98:	200006ac 	.word	0x200006ac

00007b9c <SERCOM2_Handler>:
    7b9c:	b508      	push	{r3, lr}
    7b9e:	4b02      	ldr	r3, [pc, #8]	; (7ba8 <SERCOM2_Handler+0xc>)
    7ba0:	689b      	ldr	r3, [r3, #8]
    7ba2:	2002      	movs	r0, #2
    7ba4:	4798      	blx	r3
    7ba6:	bd08      	pop	{r3, pc}
    7ba8:	200006ac 	.word	0x200006ac

00007bac <SERCOM3_Handler>:
    7bac:	b508      	push	{r3, lr}
    7bae:	4b02      	ldr	r3, [pc, #8]	; (7bb8 <SERCOM3_Handler+0xc>)
    7bb0:	68db      	ldr	r3, [r3, #12]
    7bb2:	2003      	movs	r0, #3
    7bb4:	4798      	blx	r3
    7bb6:	bd08      	pop	{r3, pc}
    7bb8:	200006ac 	.word	0x200006ac

00007bbc <SERCOM4_Handler>:
    7bbc:	b508      	push	{r3, lr}
    7bbe:	4b02      	ldr	r3, [pc, #8]	; (7bc8 <SERCOM4_Handler+0xc>)
    7bc0:	691b      	ldr	r3, [r3, #16]
    7bc2:	2004      	movs	r0, #4
    7bc4:	4798      	blx	r3
    7bc6:	bd08      	pop	{r3, pc}
    7bc8:	200006ac 	.word	0x200006ac

00007bcc <SERCOM5_Handler>:
    7bcc:	b508      	push	{r3, lr}
    7bce:	4b02      	ldr	r3, [pc, #8]	; (7bd8 <SERCOM5_Handler+0xc>)
    7bd0:	695b      	ldr	r3, [r3, #20]
    7bd2:	2005      	movs	r0, #5
    7bd4:	4798      	blx	r3
    7bd6:	bd08      	pop	{r3, pc}
    7bd8:	200006ac 	.word	0x200006ac

00007bdc <spi_init>:
    7bdc:	b5f0      	push	{r4, r5, r6, r7, lr}
    7bde:	b08b      	sub	sp, #44	; 0x2c
    7be0:	6001      	str	r1, [r0, #0]
    7be2:	680c      	ldr	r4, [r1, #0]
    7be4:	231c      	movs	r3, #28
    7be6:	07a4      	lsls	r4, r4, #30
    7be8:	d500      	bpl.n	7bec <spi_init+0x10>
    7bea:	e0c4      	b.n	7d76 <spi_init+0x19a>
    7bec:	680c      	ldr	r4, [r1, #0]
    7bee:	3b17      	subs	r3, #23
    7bf0:	07e4      	lsls	r4, r4, #31
    7bf2:	d500      	bpl.n	7bf6 <spi_init+0x1a>
    7bf4:	e0bf      	b.n	7d76 <spi_init+0x19a>
    7bf6:	1c16      	adds	r6, r2, #0
    7bf8:	1c0c      	adds	r4, r1, #0
    7bfa:	1c05      	adds	r5, r0, #0
    7bfc:	1c08      	adds	r0, r1, #0
    7bfe:	4b5f      	ldr	r3, [pc, #380]	; (7d7c <spi_init+0x1a0>)
    7c00:	4798      	blx	r3
    7c02:	495f      	ldr	r1, [pc, #380]	; (7d80 <spi_init+0x1a4>)
    7c04:	6a0a      	ldr	r2, [r1, #32]
    7c06:	1c87      	adds	r7, r0, #2
    7c08:	2301      	movs	r3, #1
    7c0a:	40bb      	lsls	r3, r7
    7c0c:	4313      	orrs	r3, r2
    7c0e:	620b      	str	r3, [r1, #32]
    7c10:	a909      	add	r1, sp, #36	; 0x24
    7c12:	2724      	movs	r7, #36	; 0x24
    7c14:	5df3      	ldrb	r3, [r6, r7]
    7c16:	700b      	strb	r3, [r1, #0]
    7c18:	3014      	adds	r0, #20
    7c1a:	b2c3      	uxtb	r3, r0
    7c1c:	9301      	str	r3, [sp, #4]
    7c1e:	1c18      	adds	r0, r3, #0
    7c20:	4b58      	ldr	r3, [pc, #352]	; (7d84 <spi_init+0x1a8>)
    7c22:	4798      	blx	r3
    7c24:	9801      	ldr	r0, [sp, #4]
    7c26:	4b58      	ldr	r3, [pc, #352]	; (7d88 <spi_init+0x1ac>)
    7c28:	4798      	blx	r3
    7c2a:	5df0      	ldrb	r0, [r6, r7]
    7c2c:	2100      	movs	r1, #0
    7c2e:	4b57      	ldr	r3, [pc, #348]	; (7d8c <spi_init+0x1b0>)
    7c30:	4798      	blx	r3
    7c32:	7833      	ldrb	r3, [r6, #0]
    7c34:	2b01      	cmp	r3, #1
    7c36:	d000      	beq.n	7c3a <spi_init+0x5e>
    7c38:	e097      	b.n	7d6a <spi_init+0x18e>
    7c3a:	6822      	ldr	r2, [r4, #0]
    7c3c:	330b      	adds	r3, #11
    7c3e:	4313      	orrs	r3, r2
    7c40:	6023      	str	r3, [r4, #0]
    7c42:	e092      	b.n	7d6a <spi_init+0x18e>
    7c44:	c304      	stmia	r3!, {r2}
    7c46:	428b      	cmp	r3, r1
    7c48:	d1fc      	bne.n	7c44 <spi_init+0x68>
    7c4a:	2300      	movs	r3, #0
    7c4c:	62eb      	str	r3, [r5, #44]	; 0x2c
    7c4e:	62ab      	str	r3, [r5, #40]	; 0x28
    7c50:	2400      	movs	r4, #0
    7c52:	86ab      	strh	r3, [r5, #52]	; 0x34
    7c54:	862b      	strh	r3, [r5, #48]	; 0x30
    7c56:	3336      	adds	r3, #54	; 0x36
    7c58:	54ec      	strb	r4, [r5, r3]
    7c5a:	3301      	adds	r3, #1
    7c5c:	54ec      	strb	r4, [r5, r3]
    7c5e:	3301      	adds	r3, #1
    7c60:	54ec      	strb	r4, [r5, r3]
    7c62:	3b35      	subs	r3, #53	; 0x35
    7c64:	726b      	strb	r3, [r5, #9]
    7c66:	712c      	strb	r4, [r5, #4]
    7c68:	6828      	ldr	r0, [r5, #0]
    7c6a:	4b44      	ldr	r3, [pc, #272]	; (7d7c <spi_init+0x1a0>)
    7c6c:	4798      	blx	r3
    7c6e:	1c07      	adds	r7, r0, #0
    7c70:	4947      	ldr	r1, [pc, #284]	; (7d90 <spi_init+0x1b4>)
    7c72:	4b48      	ldr	r3, [pc, #288]	; (7d94 <spi_init+0x1b8>)
    7c74:	4798      	blx	r3
    7c76:	00bf      	lsls	r7, r7, #2
    7c78:	4b47      	ldr	r3, [pc, #284]	; (7d98 <spi_init+0x1bc>)
    7c7a:	50fd      	str	r5, [r7, r3]
    7c7c:	682f      	ldr	r7, [r5, #0]
    7c7e:	ab04      	add	r3, sp, #16
    7c80:	2280      	movs	r2, #128	; 0x80
    7c82:	701a      	strb	r2, [r3, #0]
    7c84:	705c      	strb	r4, [r3, #1]
    7c86:	3a7f      	subs	r2, #127	; 0x7f
    7c88:	709a      	strb	r2, [r3, #2]
    7c8a:	70dc      	strb	r4, [r3, #3]
    7c8c:	7833      	ldrb	r3, [r6, #0]
    7c8e:	2b00      	cmp	r3, #0
    7c90:	d102      	bne.n	7c98 <spi_init+0xbc>
    7c92:	2200      	movs	r2, #0
    7c94:	ab04      	add	r3, sp, #16
    7c96:	709a      	strb	r2, [r3, #2]
    7c98:	6ab3      	ldr	r3, [r6, #40]	; 0x28
    7c9a:	9305      	str	r3, [sp, #20]
    7c9c:	6af3      	ldr	r3, [r6, #44]	; 0x2c
    7c9e:	9306      	str	r3, [sp, #24]
    7ca0:	6b33      	ldr	r3, [r6, #48]	; 0x30
    7ca2:	9307      	str	r3, [sp, #28]
    7ca4:	6b73      	ldr	r3, [r6, #52]	; 0x34
    7ca6:	9308      	str	r3, [sp, #32]
    7ca8:	2400      	movs	r4, #0
    7caa:	b2e1      	uxtb	r1, r4
    7cac:	00a3      	lsls	r3, r4, #2
    7cae:	aa05      	add	r2, sp, #20
    7cb0:	5898      	ldr	r0, [r3, r2]
    7cb2:	2800      	cmp	r0, #0
    7cb4:	d102      	bne.n	7cbc <spi_init+0xe0>
    7cb6:	1c38      	adds	r0, r7, #0
    7cb8:	4b38      	ldr	r3, [pc, #224]	; (7d9c <spi_init+0x1c0>)
    7cba:	4798      	blx	r3
    7cbc:	1c43      	adds	r3, r0, #1
    7cbe:	d006      	beq.n	7cce <spi_init+0xf2>
    7cc0:	ab02      	add	r3, sp, #8
    7cc2:	7218      	strb	r0, [r3, #8]
    7cc4:	0c00      	lsrs	r0, r0, #16
    7cc6:	b2c0      	uxtb	r0, r0
    7cc8:	a904      	add	r1, sp, #16
    7cca:	4b35      	ldr	r3, [pc, #212]	; (7da0 <spi_init+0x1c4>)
    7ccc:	4798      	blx	r3
    7cce:	3401      	adds	r4, #1
    7cd0:	2c04      	cmp	r4, #4
    7cd2:	d1ea      	bne.n	7caa <spi_init+0xce>
    7cd4:	7833      	ldrb	r3, [r6, #0]
    7cd6:	716b      	strb	r3, [r5, #5]
    7cd8:	7c33      	ldrb	r3, [r6, #16]
    7cda:	71ab      	strb	r3, [r5, #6]
    7cdc:	7cb3      	ldrb	r3, [r6, #18]
    7cde:	71eb      	strb	r3, [r5, #7]
    7ce0:	7d33      	ldrb	r3, [r6, #20]
    7ce2:	722b      	strb	r3, [r5, #8]
    7ce4:	2200      	movs	r2, #0
    7ce6:	ab02      	add	r3, sp, #8
    7ce8:	80da      	strh	r2, [r3, #6]
    7cea:	7833      	ldrb	r3, [r6, #0]
    7cec:	2b01      	cmp	r3, #1
    7cee:	d113      	bne.n	7d18 <spi_init+0x13c>
    7cf0:	6828      	ldr	r0, [r5, #0]
    7cf2:	4b22      	ldr	r3, [pc, #136]	; (7d7c <spi_init+0x1a0>)
    7cf4:	4798      	blx	r3
    7cf6:	3014      	adds	r0, #20
    7cf8:	b2c0      	uxtb	r0, r0
    7cfa:	4b2a      	ldr	r3, [pc, #168]	; (7da4 <spi_init+0x1c8>)
    7cfc:	4798      	blx	r3
    7cfe:	1c01      	adds	r1, r0, #0
    7d00:	69b0      	ldr	r0, [r6, #24]
    7d02:	ab02      	add	r3, sp, #8
    7d04:	1d9a      	adds	r2, r3, #6
    7d06:	4b28      	ldr	r3, [pc, #160]	; (7da8 <spi_init+0x1cc>)
    7d08:	4798      	blx	r3
    7d0a:	2317      	movs	r3, #23
    7d0c:	2800      	cmp	r0, #0
    7d0e:	d132      	bne.n	7d76 <spi_init+0x19a>
    7d10:	ab02      	add	r3, sp, #8
    7d12:	3306      	adds	r3, #6
    7d14:	781b      	ldrb	r3, [r3, #0]
    7d16:	733b      	strb	r3, [r7, #12]
    7d18:	68b3      	ldr	r3, [r6, #8]
    7d1a:	6872      	ldr	r2, [r6, #4]
    7d1c:	4313      	orrs	r3, r2
    7d1e:	68f2      	ldr	r2, [r6, #12]
    7d20:	4313      	orrs	r3, r2
    7d22:	7c32      	ldrb	r2, [r6, #16]
    7d24:	7c71      	ldrb	r1, [r6, #17]
    7d26:	2900      	cmp	r1, #0
    7d28:	d103      	bne.n	7d32 <spi_init+0x156>
    7d2a:	4920      	ldr	r1, [pc, #128]	; (7dac <spi_init+0x1d0>)
    7d2c:	7889      	ldrb	r1, [r1, #2]
    7d2e:	0789      	lsls	r1, r1, #30
    7d30:	d501      	bpl.n	7d36 <spi_init+0x15a>
    7d32:	2180      	movs	r1, #128	; 0x80
    7d34:	430b      	orrs	r3, r1
    7d36:	7cb1      	ldrb	r1, [r6, #18]
    7d38:	2900      	cmp	r1, #0
    7d3a:	d002      	beq.n	7d42 <spi_init+0x166>
    7d3c:	2180      	movs	r1, #128	; 0x80
    7d3e:	0289      	lsls	r1, r1, #10
    7d40:	430a      	orrs	r2, r1
    7d42:	7cf1      	ldrb	r1, [r6, #19]
    7d44:	2900      	cmp	r1, #0
    7d46:	d002      	beq.n	7d4e <spi_init+0x172>
    7d48:	2180      	movs	r1, #128	; 0x80
    7d4a:	0089      	lsls	r1, r1, #2
    7d4c:	430a      	orrs	r2, r1
    7d4e:	7d31      	ldrb	r1, [r6, #20]
    7d50:	2900      	cmp	r1, #0
    7d52:	d002      	beq.n	7d5a <spi_init+0x17e>
    7d54:	2180      	movs	r1, #128	; 0x80
    7d56:	0189      	lsls	r1, r1, #6
    7d58:	430a      	orrs	r2, r1
    7d5a:	6839      	ldr	r1, [r7, #0]
    7d5c:	430b      	orrs	r3, r1
    7d5e:	603b      	str	r3, [r7, #0]
    7d60:	687b      	ldr	r3, [r7, #4]
    7d62:	431a      	orrs	r2, r3
    7d64:	607a      	str	r2, [r7, #4]
    7d66:	2300      	movs	r3, #0
    7d68:	e005      	b.n	7d76 <spi_init+0x19a>
    7d6a:	1c2b      	adds	r3, r5, #0
    7d6c:	330c      	adds	r3, #12
    7d6e:	1c29      	adds	r1, r5, #0
    7d70:	3128      	adds	r1, #40	; 0x28
    7d72:	2200      	movs	r2, #0
    7d74:	e766      	b.n	7c44 <spi_init+0x68>
    7d76:	1c18      	adds	r0, r3, #0
    7d78:	b00b      	add	sp, #44	; 0x2c
    7d7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7d7c:	00007ad5 	.word	0x00007ad5
    7d80:	40000400 	.word	0x40000400
    7d84:	00008c45 	.word	0x00008c45
    7d88:	00008bb9 	.word	0x00008bb9
    7d8c:	00007901 	.word	0x00007901
    7d90:	00007ea5 	.word	0x00007ea5
    7d94:	00007b15 	.word	0x00007b15
    7d98:	20000aa8 	.word	0x20000aa8
    7d9c:	0000794d 	.word	0x0000794d
    7da0:	00008d3d 	.word	0x00008d3d
    7da4:	00008c61 	.word	0x00008c61
    7da8:	00007711 	.word	0x00007711
    7dac:	41002000 	.word	0x41002000

00007db0 <spi_select_slave>:
    7db0:	b510      	push	{r4, lr}
    7db2:	7944      	ldrb	r4, [r0, #5]
    7db4:	2315      	movs	r3, #21
    7db6:	2c01      	cmp	r4, #1
    7db8:	d170      	bne.n	7e9c <spi_select_slave+0xec>
    7dba:	7a04      	ldrb	r4, [r0, #8]
    7dbc:	2300      	movs	r3, #0
    7dbe:	2c00      	cmp	r4, #0
    7dc0:	d16c      	bne.n	7e9c <spi_select_slave+0xec>
    7dc2:	2a00      	cmp	r2, #0
    7dc4:	d05a      	beq.n	7e7c <spi_select_slave+0xcc>
    7dc6:	784b      	ldrb	r3, [r1, #1]
    7dc8:	2b00      	cmp	r3, #0
    7dca:	d046      	beq.n	7e5a <spi_select_slave+0xaa>
    7dcc:	6803      	ldr	r3, [r0, #0]
    7dce:	7e1b      	ldrb	r3, [r3, #24]
    7dd0:	07db      	lsls	r3, r3, #31
    7dd2:	d410      	bmi.n	7df6 <spi_select_slave+0x46>
    7dd4:	780b      	ldrb	r3, [r1, #0]
    7dd6:	09d9      	lsrs	r1, r3, #7
    7dd8:	2200      	movs	r2, #0
    7dda:	2900      	cmp	r1, #0
    7ddc:	d104      	bne.n	7de8 <spi_select_slave+0x38>
    7dde:	095a      	lsrs	r2, r3, #5
    7de0:	01d2      	lsls	r2, r2, #7
    7de2:	492f      	ldr	r1, [pc, #188]	; (7ea0 <spi_select_slave+0xf0>)
    7de4:	468c      	mov	ip, r1
    7de6:	4462      	add	r2, ip
    7de8:	211f      	movs	r1, #31
    7dea:	400b      	ands	r3, r1
    7dec:	391e      	subs	r1, #30
    7dee:	4099      	lsls	r1, r3
    7df0:	6191      	str	r1, [r2, #24]
    7df2:	2305      	movs	r3, #5
    7df4:	e052      	b.n	7e9c <spi_select_slave+0xec>
    7df6:	780b      	ldrb	r3, [r1, #0]
    7df8:	09dc      	lsrs	r4, r3, #7
    7dfa:	2200      	movs	r2, #0
    7dfc:	2c00      	cmp	r4, #0
    7dfe:	d104      	bne.n	7e0a <spi_select_slave+0x5a>
    7e00:	095a      	lsrs	r2, r3, #5
    7e02:	01d2      	lsls	r2, r2, #7
    7e04:	4c26      	ldr	r4, [pc, #152]	; (7ea0 <spi_select_slave+0xf0>)
    7e06:	46a4      	mov	ip, r4
    7e08:	4462      	add	r2, ip
    7e0a:	241f      	movs	r4, #31
    7e0c:	4023      	ands	r3, r4
    7e0e:	3c1e      	subs	r4, #30
    7e10:	409c      	lsls	r4, r3
    7e12:	6154      	str	r4, [r2, #20]
    7e14:	788a      	ldrb	r2, [r1, #2]
    7e16:	6803      	ldr	r3, [r0, #0]
    7e18:	7e19      	ldrb	r1, [r3, #24]
    7e1a:	07c9      	lsls	r1, r1, #31
    7e1c:	d500      	bpl.n	7e20 <spi_select_slave+0x70>
    7e1e:	629a      	str	r2, [r3, #40]	; 0x28
    7e20:	79c2      	ldrb	r2, [r0, #7]
    7e22:	2300      	movs	r3, #0
    7e24:	2a00      	cmp	r2, #0
    7e26:	d139      	bne.n	7e9c <spi_select_slave+0xec>
    7e28:	6802      	ldr	r2, [r0, #0]
    7e2a:	2104      	movs	r1, #4
    7e2c:	7e13      	ldrb	r3, [r2, #24]
    7e2e:	420b      	tst	r3, r1
    7e30:	d0fc      	beq.n	7e2c <spi_select_slave+0x7c>
    7e32:	7e11      	ldrb	r1, [r2, #24]
    7e34:	2300      	movs	r3, #0
    7e36:	0749      	lsls	r1, r1, #29
    7e38:	d530      	bpl.n	7e9c <spi_select_slave+0xec>
    7e3a:	8b53      	ldrh	r3, [r2, #26]
    7e3c:	075b      	lsls	r3, r3, #29
    7e3e:	d503      	bpl.n	7e48 <spi_select_slave+0x98>
    7e40:	8b51      	ldrh	r1, [r2, #26]
    7e42:	2304      	movs	r3, #4
    7e44:	430b      	orrs	r3, r1
    7e46:	8353      	strh	r3, [r2, #26]
    7e48:	7983      	ldrb	r3, [r0, #6]
    7e4a:	2b01      	cmp	r3, #1
    7e4c:	d102      	bne.n	7e54 <spi_select_slave+0xa4>
    7e4e:	6a93      	ldr	r3, [r2, #40]	; 0x28
    7e50:	2300      	movs	r3, #0
    7e52:	e023      	b.n	7e9c <spi_select_slave+0xec>
    7e54:	6a93      	ldr	r3, [r2, #40]	; 0x28
    7e56:	2300      	movs	r3, #0
    7e58:	e020      	b.n	7e9c <spi_select_slave+0xec>
    7e5a:	780b      	ldrb	r3, [r1, #0]
    7e5c:	09d9      	lsrs	r1, r3, #7
    7e5e:	2200      	movs	r2, #0
    7e60:	2900      	cmp	r1, #0
    7e62:	d104      	bne.n	7e6e <spi_select_slave+0xbe>
    7e64:	095a      	lsrs	r2, r3, #5
    7e66:	01d2      	lsls	r2, r2, #7
    7e68:	490d      	ldr	r1, [pc, #52]	; (7ea0 <spi_select_slave+0xf0>)
    7e6a:	468c      	mov	ip, r1
    7e6c:	4462      	add	r2, ip
    7e6e:	211f      	movs	r1, #31
    7e70:	400b      	ands	r3, r1
    7e72:	391e      	subs	r1, #30
    7e74:	4099      	lsls	r1, r3
    7e76:	6151      	str	r1, [r2, #20]
    7e78:	2300      	movs	r3, #0
    7e7a:	e00f      	b.n	7e9c <spi_select_slave+0xec>
    7e7c:	780b      	ldrb	r3, [r1, #0]
    7e7e:	09d9      	lsrs	r1, r3, #7
    7e80:	2200      	movs	r2, #0
    7e82:	2900      	cmp	r1, #0
    7e84:	d104      	bne.n	7e90 <spi_select_slave+0xe0>
    7e86:	095a      	lsrs	r2, r3, #5
    7e88:	01d2      	lsls	r2, r2, #7
    7e8a:	4905      	ldr	r1, [pc, #20]	; (7ea0 <spi_select_slave+0xf0>)
    7e8c:	468c      	mov	ip, r1
    7e8e:	4462      	add	r2, ip
    7e90:	211f      	movs	r1, #31
    7e92:	400b      	ands	r3, r1
    7e94:	391e      	subs	r1, #30
    7e96:	4099      	lsls	r1, r3
    7e98:	6191      	str	r1, [r2, #24]
    7e9a:	2300      	movs	r3, #0
    7e9c:	1c18      	adds	r0, r3, #0
    7e9e:	bd10      	pop	{r4, pc}
    7ea0:	41004400 	.word	0x41004400

00007ea4 <_spi_interrupt_handler>:
    7ea4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    7ea6:	0080      	lsls	r0, r0, #2
    7ea8:	4b68      	ldr	r3, [pc, #416]	; (804c <_spi_interrupt_handler+0x1a8>)
    7eaa:	58c4      	ldr	r4, [r0, r3]
    7eac:	6826      	ldr	r6, [r4, #0]
    7eae:	2336      	movs	r3, #54	; 0x36
    7eb0:	5ce3      	ldrb	r3, [r4, r3]
    7eb2:	2237      	movs	r2, #55	; 0x37
    7eb4:	5ca7      	ldrb	r7, [r4, r2]
    7eb6:	401f      	ands	r7, r3
    7eb8:	7e33      	ldrb	r3, [r6, #24]
    7eba:	7db5      	ldrb	r5, [r6, #22]
    7ebc:	401d      	ands	r5, r3
    7ebe:	07eb      	lsls	r3, r5, #31
    7ec0:	d53d      	bpl.n	7f3e <_spi_interrupt_handler+0x9a>
    7ec2:	7963      	ldrb	r3, [r4, #5]
    7ec4:	2b01      	cmp	r3, #1
    7ec6:	d13a      	bne.n	7f3e <_spi_interrupt_handler+0x9a>
    7ec8:	7a63      	ldrb	r3, [r4, #9]
    7eca:	2b00      	cmp	r3, #0
    7ecc:	d10f      	bne.n	7eee <_spi_interrupt_handler+0x4a>
    7ece:	4b60      	ldr	r3, [pc, #384]	; (8050 <_spi_interrupt_handler+0x1ac>)
    7ed0:	881b      	ldrh	r3, [r3, #0]
    7ed2:	62b3      	str	r3, [r6, #40]	; 0x28
    7ed4:	8e63      	ldrh	r3, [r4, #50]	; 0x32
    7ed6:	3b01      	subs	r3, #1
    7ed8:	b29b      	uxth	r3, r3
    7eda:	8663      	strh	r3, [r4, #50]	; 0x32
    7edc:	8e63      	ldrh	r3, [r4, #50]	; 0x32
    7ede:	b29b      	uxth	r3, r3
    7ee0:	2b00      	cmp	r3, #0
    7ee2:	d101      	bne.n	7ee8 <_spi_interrupt_handler+0x44>
    7ee4:	3301      	adds	r3, #1
    7ee6:	7533      	strb	r3, [r6, #20]
    7ee8:	7963      	ldrb	r3, [r4, #5]
    7eea:	2b01      	cmp	r3, #1
    7eec:	d127      	bne.n	7f3e <_spi_interrupt_handler+0x9a>
    7eee:	7a63      	ldrb	r3, [r4, #9]
    7ef0:	2b00      	cmp	r3, #0
    7ef2:	d024      	beq.n	7f3e <_spi_interrupt_handler+0x9a>
    7ef4:	6820      	ldr	r0, [r4, #0]
    7ef6:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    7ef8:	780b      	ldrb	r3, [r1, #0]
    7efa:	b2da      	uxtb	r2, r3
    7efc:	1c4b      	adds	r3, r1, #1
    7efe:	62e3      	str	r3, [r4, #44]	; 0x2c
    7f00:	79a3      	ldrb	r3, [r4, #6]
    7f02:	2b01      	cmp	r3, #1
    7f04:	d001      	beq.n	7f0a <_spi_interrupt_handler+0x66>
    7f06:	b293      	uxth	r3, r2
    7f08:	e004      	b.n	7f14 <_spi_interrupt_handler+0x70>
    7f0a:	784b      	ldrb	r3, [r1, #1]
    7f0c:	021b      	lsls	r3, r3, #8
    7f0e:	4313      	orrs	r3, r2
    7f10:	3102      	adds	r1, #2
    7f12:	62e1      	str	r1, [r4, #44]	; 0x2c
    7f14:	05db      	lsls	r3, r3, #23
    7f16:	0ddb      	lsrs	r3, r3, #23
    7f18:	6283      	str	r3, [r0, #40]	; 0x28
    7f1a:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
    7f1c:	3b01      	subs	r3, #1
    7f1e:	b29b      	uxth	r3, r3
    7f20:	86a3      	strh	r3, [r4, #52]	; 0x34
    7f22:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
    7f24:	b29b      	uxth	r3, r3
    7f26:	2b00      	cmp	r3, #0
    7f28:	d109      	bne.n	7f3e <_spi_interrupt_handler+0x9a>
    7f2a:	3301      	adds	r3, #1
    7f2c:	7533      	strb	r3, [r6, #20]
    7f2e:	7a63      	ldrb	r3, [r4, #9]
    7f30:	2b01      	cmp	r3, #1
    7f32:	d104      	bne.n	7f3e <_spi_interrupt_handler+0x9a>
    7f34:	79e3      	ldrb	r3, [r4, #7]
    7f36:	2b00      	cmp	r3, #0
    7f38:	d101      	bne.n	7f3e <_spi_interrupt_handler+0x9a>
    7f3a:	3302      	adds	r3, #2
    7f3c:	75b3      	strb	r3, [r6, #22]
    7f3e:	076b      	lsls	r3, r5, #29
    7f40:	d561      	bpl.n	8006 <_spi_interrupt_handler+0x162>
    7f42:	8b73      	ldrh	r3, [r6, #26]
    7f44:	075b      	lsls	r3, r3, #29
    7f46:	d514      	bpl.n	7f72 <_spi_interrupt_handler+0xce>
    7f48:	7a63      	ldrb	r3, [r4, #9]
    7f4a:	2b01      	cmp	r3, #1
    7f4c:	d00b      	beq.n	7f66 <_spi_interrupt_handler+0xc2>
    7f4e:	221e      	movs	r2, #30
    7f50:	2338      	movs	r3, #56	; 0x38
    7f52:	54e2      	strb	r2, [r4, r3]
    7f54:	3b35      	subs	r3, #53	; 0x35
    7f56:	7263      	strb	r3, [r4, #9]
    7f58:	3302      	adds	r3, #2
    7f5a:	7533      	strb	r3, [r6, #20]
    7f5c:	073b      	lsls	r3, r7, #28
    7f5e:	d502      	bpl.n	7f66 <_spi_interrupt_handler+0xc2>
    7f60:	1c20      	adds	r0, r4, #0
    7f62:	69a3      	ldr	r3, [r4, #24]
    7f64:	4798      	blx	r3
    7f66:	6ab3      	ldr	r3, [r6, #40]	; 0x28
    7f68:	8b72      	ldrh	r2, [r6, #26]
    7f6a:	2304      	movs	r3, #4
    7f6c:	4313      	orrs	r3, r2
    7f6e:	8373      	strh	r3, [r6, #26]
    7f70:	e049      	b.n	8006 <_spi_interrupt_handler+0x162>
    7f72:	7a63      	ldrb	r3, [r4, #9]
    7f74:	2b01      	cmp	r3, #1
    7f76:	d116      	bne.n	7fa6 <_spi_interrupt_handler+0x102>
    7f78:	6823      	ldr	r3, [r4, #0]
    7f7a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    7f7c:	8e63      	ldrh	r3, [r4, #50]	; 0x32
    7f7e:	3b01      	subs	r3, #1
    7f80:	b29b      	uxth	r3, r3
    7f82:	8663      	strh	r3, [r4, #50]	; 0x32
    7f84:	8e63      	ldrh	r3, [r4, #50]	; 0x32
    7f86:	b29b      	uxth	r3, r3
    7f88:	2b00      	cmp	r3, #0
    7f8a:	d13c      	bne.n	8006 <_spi_interrupt_handler+0x162>
    7f8c:	3304      	adds	r3, #4
    7f8e:	7533      	strb	r3, [r6, #20]
    7f90:	2200      	movs	r2, #0
    7f92:	3334      	adds	r3, #52	; 0x34
    7f94:	54e2      	strb	r2, [r4, r3]
    7f96:	3b35      	subs	r3, #53	; 0x35
    7f98:	7263      	strb	r3, [r4, #9]
    7f9a:	07fb      	lsls	r3, r7, #31
    7f9c:	d533      	bpl.n	8006 <_spi_interrupt_handler+0x162>
    7f9e:	1c20      	adds	r0, r4, #0
    7fa0:	68e3      	ldr	r3, [r4, #12]
    7fa2:	4798      	blx	r3
    7fa4:	e02f      	b.n	8006 <_spi_interrupt_handler+0x162>
    7fa6:	6823      	ldr	r3, [r4, #0]
    7fa8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    7faa:	05db      	lsls	r3, r3, #23
    7fac:	0ddb      	lsrs	r3, r3, #23
    7fae:	b2da      	uxtb	r2, r3
    7fb0:	6aa1      	ldr	r1, [r4, #40]	; 0x28
    7fb2:	700a      	strb	r2, [r1, #0]
    7fb4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    7fb6:	1c51      	adds	r1, r2, #1
    7fb8:	62a1      	str	r1, [r4, #40]	; 0x28
    7fba:	79a1      	ldrb	r1, [r4, #6]
    7fbc:	2901      	cmp	r1, #1
    7fbe:	d104      	bne.n	7fca <_spi_interrupt_handler+0x126>
    7fc0:	0a1b      	lsrs	r3, r3, #8
    7fc2:	7053      	strb	r3, [r2, #1]
    7fc4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    7fc6:	3301      	adds	r3, #1
    7fc8:	62a3      	str	r3, [r4, #40]	; 0x28
    7fca:	8e23      	ldrh	r3, [r4, #48]	; 0x30
    7fcc:	3b01      	subs	r3, #1
    7fce:	b29b      	uxth	r3, r3
    7fd0:	8623      	strh	r3, [r4, #48]	; 0x30
    7fd2:	8e23      	ldrh	r3, [r4, #48]	; 0x30
    7fd4:	b29b      	uxth	r3, r3
    7fd6:	2b00      	cmp	r3, #0
    7fd8:	d115      	bne.n	8006 <_spi_interrupt_handler+0x162>
    7fda:	2200      	movs	r2, #0
    7fdc:	3338      	adds	r3, #56	; 0x38
    7fde:	54e2      	strb	r2, [r4, r3]
    7fe0:	3b34      	subs	r3, #52	; 0x34
    7fe2:	7533      	strb	r3, [r6, #20]
    7fe4:	7a63      	ldrb	r3, [r4, #9]
    7fe6:	2b02      	cmp	r3, #2
    7fe8:	d105      	bne.n	7ff6 <_spi_interrupt_handler+0x152>
    7fea:	077b      	lsls	r3, r7, #29
    7fec:	d50b      	bpl.n	8006 <_spi_interrupt_handler+0x162>
    7fee:	1c20      	adds	r0, r4, #0
    7ff0:	6963      	ldr	r3, [r4, #20]
    7ff2:	4798      	blx	r3
    7ff4:	e007      	b.n	8006 <_spi_interrupt_handler+0x162>
    7ff6:	7a63      	ldrb	r3, [r4, #9]
    7ff8:	2b00      	cmp	r3, #0
    7ffa:	d104      	bne.n	8006 <_spi_interrupt_handler+0x162>
    7ffc:	07bb      	lsls	r3, r7, #30
    7ffe:	d502      	bpl.n	8006 <_spi_interrupt_handler+0x162>
    8000:	1c20      	adds	r0, r4, #0
    8002:	6923      	ldr	r3, [r4, #16]
    8004:	4798      	blx	r3
    8006:	07ab      	lsls	r3, r5, #30
    8008:	d514      	bpl.n	8034 <_spi_interrupt_handler+0x190>
    800a:	7963      	ldrb	r3, [r4, #5]
    800c:	2b01      	cmp	r3, #1
    800e:	d111      	bne.n	8034 <_spi_interrupt_handler+0x190>
    8010:	7a63      	ldrb	r3, [r4, #9]
    8012:	2b01      	cmp	r3, #1
    8014:	d10e      	bne.n	8034 <_spi_interrupt_handler+0x190>
    8016:	79e3      	ldrb	r3, [r4, #7]
    8018:	2b00      	cmp	r3, #0
    801a:	d10b      	bne.n	8034 <_spi_interrupt_handler+0x190>
    801c:	3302      	adds	r3, #2
    801e:	7533      	strb	r3, [r6, #20]
    8020:	3301      	adds	r3, #1
    8022:	7263      	strb	r3, [r4, #9]
    8024:	2200      	movs	r2, #0
    8026:	3335      	adds	r3, #53	; 0x35
    8028:	54e2      	strb	r2, [r4, r3]
    802a:	07fb      	lsls	r3, r7, #31
    802c:	d502      	bpl.n	8034 <_spi_interrupt_handler+0x190>
    802e:	1c20      	adds	r0, r4, #0
    8030:	68e3      	ldr	r3, [r4, #12]
    8032:	4798      	blx	r3
    8034:	09ed      	lsrs	r5, r5, #7
    8036:	d007      	beq.n	8048 <_spi_interrupt_handler+0x1a4>
    8038:	2380      	movs	r3, #128	; 0x80
    803a:	7533      	strb	r3, [r6, #20]
    803c:	7633      	strb	r3, [r6, #24]
    803e:	067b      	lsls	r3, r7, #25
    8040:	d502      	bpl.n	8048 <_spi_interrupt_handler+0x1a4>
    8042:	6a63      	ldr	r3, [r4, #36]	; 0x24
    8044:	1c20      	adds	r0, r4, #0
    8046:	4798      	blx	r3
    8048:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    804a:	46c0      	nop			; (mov r8, r8)
    804c:	20000aa8 	.word	0x20000aa8
    8050:	20000ac0 	.word	0x20000ac0

00008054 <usart_init>:
    8054:	b5f0      	push	{r4, r5, r6, r7, lr}
    8056:	465f      	mov	r7, fp
    8058:	4656      	mov	r6, sl
    805a:	464d      	mov	r5, r9
    805c:	4644      	mov	r4, r8
    805e:	b4f0      	push	{r4, r5, r6, r7}
    8060:	b091      	sub	sp, #68	; 0x44
    8062:	1c05      	adds	r5, r0, #0
    8064:	1c0c      	adds	r4, r1, #0
    8066:	1c16      	adds	r6, r2, #0
    8068:	6029      	str	r1, [r5, #0]
    806a:	1c08      	adds	r0, r1, #0
    806c:	4bb9      	ldr	r3, [pc, #740]	; (8354 <usart_init+0x300>)
    806e:	4798      	blx	r3
    8070:	6822      	ldr	r2, [r4, #0]
    8072:	2305      	movs	r3, #5
    8074:	07d2      	lsls	r2, r2, #31
    8076:	d500      	bpl.n	807a <usart_init+0x26>
    8078:	e164      	b.n	8344 <usart_init+0x2f0>
    807a:	6822      	ldr	r2, [r4, #0]
    807c:	3317      	adds	r3, #23
    807e:	0792      	lsls	r2, r2, #30
    8080:	d500      	bpl.n	8084 <usart_init+0x30>
    8082:	e15f      	b.n	8344 <usart_init+0x2f0>
    8084:	49b4      	ldr	r1, [pc, #720]	; (8358 <usart_init+0x304>)
    8086:	6a0a      	ldr	r2, [r1, #32]
    8088:	1c87      	adds	r7, r0, #2
    808a:	3b1b      	subs	r3, #27
    808c:	40bb      	lsls	r3, r7
    808e:	4313      	orrs	r3, r2
    8090:	620b      	str	r3, [r1, #32]
    8092:	a90f      	add	r1, sp, #60	; 0x3c
    8094:	272d      	movs	r7, #45	; 0x2d
    8096:	5df3      	ldrb	r3, [r6, r7]
    8098:	700b      	strb	r3, [r1, #0]
    809a:	3014      	adds	r0, #20
    809c:	b2c3      	uxtb	r3, r0
    809e:	9303      	str	r3, [sp, #12]
    80a0:	1c18      	adds	r0, r3, #0
    80a2:	4bae      	ldr	r3, [pc, #696]	; (835c <usart_init+0x308>)
    80a4:	4798      	blx	r3
    80a6:	9803      	ldr	r0, [sp, #12]
    80a8:	4bad      	ldr	r3, [pc, #692]	; (8360 <usart_init+0x30c>)
    80aa:	4798      	blx	r3
    80ac:	5df0      	ldrb	r0, [r6, r7]
    80ae:	2100      	movs	r1, #0
    80b0:	4bac      	ldr	r3, [pc, #688]	; (8364 <usart_init+0x310>)
    80b2:	4798      	blx	r3
    80b4:	7af3      	ldrb	r3, [r6, #11]
    80b6:	716b      	strb	r3, [r5, #5]
    80b8:	2324      	movs	r3, #36	; 0x24
    80ba:	5cf3      	ldrb	r3, [r6, r3]
    80bc:	71ab      	strb	r3, [r5, #6]
    80be:	2325      	movs	r3, #37	; 0x25
    80c0:	5cf3      	ldrb	r3, [r6, r3]
    80c2:	71eb      	strb	r3, [r5, #7]
    80c4:	7ef3      	ldrb	r3, [r6, #27]
    80c6:	722b      	strb	r3, [r5, #8]
    80c8:	7f33      	ldrb	r3, [r6, #28]
    80ca:	726b      	strb	r3, [r5, #9]
    80cc:	682b      	ldr	r3, [r5, #0]
    80ce:	469a      	mov	sl, r3
    80d0:	1c18      	adds	r0, r3, #0
    80d2:	4ba0      	ldr	r3, [pc, #640]	; (8354 <usart_init+0x300>)
    80d4:	4798      	blx	r3
    80d6:	3014      	adds	r0, #20
    80d8:	2200      	movs	r2, #0
    80da:	230e      	movs	r3, #14
    80dc:	a906      	add	r1, sp, #24
    80de:	468c      	mov	ip, r1
    80e0:	4463      	add	r3, ip
    80e2:	801a      	strh	r2, [r3, #0]
    80e4:	8a33      	ldrh	r3, [r6, #16]
    80e6:	4699      	mov	r9, r3
    80e8:	2380      	movs	r3, #128	; 0x80
    80ea:	01db      	lsls	r3, r3, #7
    80ec:	4599      	cmp	r9, r3
    80ee:	d019      	beq.n	8124 <usart_init+0xd0>
    80f0:	d804      	bhi.n	80fc <usart_init+0xa8>
    80f2:	2380      	movs	r3, #128	; 0x80
    80f4:	019b      	lsls	r3, r3, #6
    80f6:	4599      	cmp	r9, r3
    80f8:	d00a      	beq.n	8110 <usart_init+0xbc>
    80fa:	e105      	b.n	8308 <usart_init+0x2b4>
    80fc:	23c0      	movs	r3, #192	; 0xc0
    80fe:	01db      	lsls	r3, r3, #7
    8100:	4599      	cmp	r9, r3
    8102:	d00a      	beq.n	811a <usart_init+0xc6>
    8104:	2380      	movs	r3, #128	; 0x80
    8106:	021b      	lsls	r3, r3, #8
    8108:	4599      	cmp	r9, r3
    810a:	d100      	bne.n	810e <usart_init+0xba>
    810c:	e101      	b.n	8312 <usart_init+0x2be>
    810e:	e0fb      	b.n	8308 <usart_init+0x2b4>
    8110:	2310      	movs	r3, #16
    8112:	9306      	str	r3, [sp, #24]
    8114:	3b0f      	subs	r3, #15
    8116:	9307      	str	r3, [sp, #28]
    8118:	e0ff      	b.n	831a <usart_init+0x2c6>
    811a:	2308      	movs	r3, #8
    811c:	9306      	str	r3, [sp, #24]
    811e:	3b07      	subs	r3, #7
    8120:	9307      	str	r3, [sp, #28]
    8122:	e0fa      	b.n	831a <usart_init+0x2c6>
    8124:	6833      	ldr	r3, [r6, #0]
    8126:	469b      	mov	fp, r3
    8128:	68f3      	ldr	r3, [r6, #12]
    812a:	9303      	str	r3, [sp, #12]
    812c:	6973      	ldr	r3, [r6, #20]
    812e:	9304      	str	r3, [sp, #16]
    8130:	7e33      	ldrb	r3, [r6, #24]
    8132:	4698      	mov	r8, r3
    8134:	2326      	movs	r3, #38	; 0x26
    8136:	5cf3      	ldrb	r3, [r6, r3]
    8138:	9305      	str	r3, [sp, #20]
    813a:	6873      	ldr	r3, [r6, #4]
    813c:	2b00      	cmp	r3, #0
    813e:	d015      	beq.n	816c <usart_init+0x118>
    8140:	2280      	movs	r2, #128	; 0x80
    8142:	0552      	lsls	r2, r2, #21
    8144:	4293      	cmp	r3, r2
    8146:	d136      	bne.n	81b6 <usart_init+0x162>
    8148:	2327      	movs	r3, #39	; 0x27
    814a:	5cf3      	ldrb	r3, [r6, r3]
    814c:	2b00      	cmp	r3, #0
    814e:	d136      	bne.n	81be <usart_init+0x16a>
    8150:	6a33      	ldr	r3, [r6, #32]
    8152:	1c1f      	adds	r7, r3, #0
    8154:	b2c0      	uxtb	r0, r0
    8156:	4b84      	ldr	r3, [pc, #528]	; (8368 <usart_init+0x314>)
    8158:	4798      	blx	r3
    815a:	1c01      	adds	r1, r0, #0
    815c:	1c38      	adds	r0, r7, #0
    815e:	220e      	movs	r2, #14
    8160:	ab06      	add	r3, sp, #24
    8162:	469c      	mov	ip, r3
    8164:	4462      	add	r2, ip
    8166:	4b81      	ldr	r3, [pc, #516]	; (836c <usart_init+0x318>)
    8168:	4798      	blx	r3
    816a:	e025      	b.n	81b8 <usart_init+0x164>
    816c:	2308      	movs	r3, #8
    816e:	9306      	str	r3, [sp, #24]
    8170:	2300      	movs	r3, #0
    8172:	9307      	str	r3, [sp, #28]
    8174:	2327      	movs	r3, #39	; 0x27
    8176:	5cf3      	ldrb	r3, [r6, r3]
    8178:	2b00      	cmp	r3, #0
    817a:	d00b      	beq.n	8194 <usart_init+0x140>
    817c:	9b06      	ldr	r3, [sp, #24]
    817e:	9300      	str	r3, [sp, #0]
    8180:	6a30      	ldr	r0, [r6, #32]
    8182:	6ab1      	ldr	r1, [r6, #40]	; 0x28
    8184:	220e      	movs	r2, #14
    8186:	ab06      	add	r3, sp, #24
    8188:	469c      	mov	ip, r3
    818a:	4462      	add	r2, ip
    818c:	9b07      	ldr	r3, [sp, #28]
    818e:	4f78      	ldr	r7, [pc, #480]	; (8370 <usart_init+0x31c>)
    8190:	47b8      	blx	r7
    8192:	e011      	b.n	81b8 <usart_init+0x164>
    8194:	6a33      	ldr	r3, [r6, #32]
    8196:	1c1f      	adds	r7, r3, #0
    8198:	b2c0      	uxtb	r0, r0
    819a:	4b73      	ldr	r3, [pc, #460]	; (8368 <usart_init+0x314>)
    819c:	4798      	blx	r3
    819e:	1c01      	adds	r1, r0, #0
    81a0:	9b06      	ldr	r3, [sp, #24]
    81a2:	9300      	str	r3, [sp, #0]
    81a4:	1c38      	adds	r0, r7, #0
    81a6:	220e      	movs	r2, #14
    81a8:	ab06      	add	r3, sp, #24
    81aa:	469c      	mov	ip, r3
    81ac:	4462      	add	r2, ip
    81ae:	9b07      	ldr	r3, [sp, #28]
    81b0:	4f6f      	ldr	r7, [pc, #444]	; (8370 <usart_init+0x31c>)
    81b2:	47b8      	blx	r7
    81b4:	e000      	b.n	81b8 <usart_init+0x164>
    81b6:	2000      	movs	r0, #0
    81b8:	1e03      	subs	r3, r0, #0
    81ba:	d000      	beq.n	81be <usart_init+0x16a>
    81bc:	e0c2      	b.n	8344 <usart_init+0x2f0>
    81be:	7e73      	ldrb	r3, [r6, #25]
    81c0:	2b00      	cmp	r3, #0
    81c2:	d002      	beq.n	81ca <usart_init+0x176>
    81c4:	7eb3      	ldrb	r3, [r6, #26]
    81c6:	4652      	mov	r2, sl
    81c8:	7393      	strb	r3, [r2, #14]
    81ca:	682a      	ldr	r2, [r5, #0]
    81cc:	9f05      	ldr	r7, [sp, #20]
    81ce:	69d3      	ldr	r3, [r2, #28]
    81d0:	2b00      	cmp	r3, #0
    81d2:	d1fc      	bne.n	81ce <usart_init+0x17a>
    81d4:	330e      	adds	r3, #14
    81d6:	aa06      	add	r2, sp, #24
    81d8:	4694      	mov	ip, r2
    81da:	4463      	add	r3, ip
    81dc:	881b      	ldrh	r3, [r3, #0]
    81de:	4652      	mov	r2, sl
    81e0:	8193      	strh	r3, [r2, #12]
    81e2:	9b03      	ldr	r3, [sp, #12]
    81e4:	465a      	mov	r2, fp
    81e6:	4313      	orrs	r3, r2
    81e8:	9a04      	ldr	r2, [sp, #16]
    81ea:	4313      	orrs	r3, r2
    81ec:	6872      	ldr	r2, [r6, #4]
    81ee:	4313      	orrs	r3, r2
    81f0:	464a      	mov	r2, r9
    81f2:	4313      	orrs	r3, r2
    81f4:	4642      	mov	r2, r8
    81f6:	0212      	lsls	r2, r2, #8
    81f8:	4313      	orrs	r3, r2
    81fa:	077f      	lsls	r7, r7, #29
    81fc:	431f      	orrs	r7, r3
    81fe:	2327      	movs	r3, #39	; 0x27
    8200:	5cf3      	ldrb	r3, [r6, r3]
    8202:	2b00      	cmp	r3, #0
    8204:	d101      	bne.n	820a <usart_init+0x1b6>
    8206:	3304      	adds	r3, #4
    8208:	431f      	orrs	r7, r3
    820a:	7e71      	ldrb	r1, [r6, #25]
    820c:	0289      	lsls	r1, r1, #10
    820e:	7f33      	ldrb	r3, [r6, #28]
    8210:	025b      	lsls	r3, r3, #9
    8212:	4319      	orrs	r1, r3
    8214:	7af3      	ldrb	r3, [r6, #11]
    8216:	7ab2      	ldrb	r2, [r6, #10]
    8218:	4313      	orrs	r3, r2
    821a:	4319      	orrs	r1, r3
    821c:	7f72      	ldrb	r2, [r6, #29]
    821e:	0212      	lsls	r2, r2, #8
    8220:	4311      	orrs	r1, r2
    8222:	2324      	movs	r3, #36	; 0x24
    8224:	5cf2      	ldrb	r2, [r6, r3]
    8226:	0452      	lsls	r2, r2, #17
    8228:	1c0b      	adds	r3, r1, #0
    822a:	4313      	orrs	r3, r2
    822c:	2225      	movs	r2, #37	; 0x25
    822e:	5cb1      	ldrb	r1, [r6, r2]
    8230:	0409      	lsls	r1, r1, #16
    8232:	4319      	orrs	r1, r3
    8234:	8933      	ldrh	r3, [r6, #8]
    8236:	2bff      	cmp	r3, #255	; 0xff
    8238:	d004      	beq.n	8244 <usart_init+0x1f0>
    823a:	2280      	movs	r2, #128	; 0x80
    823c:	0452      	lsls	r2, r2, #17
    823e:	4317      	orrs	r7, r2
    8240:	4319      	orrs	r1, r3
    8242:	e005      	b.n	8250 <usart_init+0x1fc>
    8244:	7ef3      	ldrb	r3, [r6, #27]
    8246:	2b00      	cmp	r3, #0
    8248:	d002      	beq.n	8250 <usart_init+0x1fc>
    824a:	2380      	movs	r3, #128	; 0x80
    824c:	04db      	lsls	r3, r3, #19
    824e:	431f      	orrs	r7, r3
    8250:	232c      	movs	r3, #44	; 0x2c
    8252:	5cf3      	ldrb	r3, [r6, r3]
    8254:	2b00      	cmp	r3, #0
    8256:	d103      	bne.n	8260 <usart_init+0x20c>
    8258:	4b46      	ldr	r3, [pc, #280]	; (8374 <usart_init+0x320>)
    825a:	789b      	ldrb	r3, [r3, #2]
    825c:	079b      	lsls	r3, r3, #30
    825e:	d501      	bpl.n	8264 <usart_init+0x210>
    8260:	2380      	movs	r3, #128	; 0x80
    8262:	431f      	orrs	r7, r3
    8264:	682a      	ldr	r2, [r5, #0]
    8266:	69d3      	ldr	r3, [r2, #28]
    8268:	2b00      	cmp	r3, #0
    826a:	d1fc      	bne.n	8266 <usart_init+0x212>
    826c:	4653      	mov	r3, sl
    826e:	6059      	str	r1, [r3, #4]
    8270:	682a      	ldr	r2, [r5, #0]
    8272:	69d3      	ldr	r3, [r2, #28]
    8274:	2b00      	cmp	r3, #0
    8276:	d1fc      	bne.n	8272 <usart_init+0x21e>
    8278:	4653      	mov	r3, sl
    827a:	601f      	str	r7, [r3, #0]
    827c:	ab0e      	add	r3, sp, #56	; 0x38
    827e:	2280      	movs	r2, #128	; 0x80
    8280:	701a      	strb	r2, [r3, #0]
    8282:	2200      	movs	r2, #0
    8284:	705a      	strb	r2, [r3, #1]
    8286:	70da      	strb	r2, [r3, #3]
    8288:	709a      	strb	r2, [r3, #2]
    828a:	6b33      	ldr	r3, [r6, #48]	; 0x30
    828c:	930a      	str	r3, [sp, #40]	; 0x28
    828e:	6b73      	ldr	r3, [r6, #52]	; 0x34
    8290:	930b      	str	r3, [sp, #44]	; 0x2c
    8292:	6bb3      	ldr	r3, [r6, #56]	; 0x38
    8294:	930c      	str	r3, [sp, #48]	; 0x30
    8296:	6bf3      	ldr	r3, [r6, #60]	; 0x3c
    8298:	9303      	str	r3, [sp, #12]
    829a:	930d      	str	r3, [sp, #52]	; 0x34
    829c:	2700      	movs	r7, #0
    829e:	ae0e      	add	r6, sp, #56	; 0x38
    82a0:	b2f9      	uxtb	r1, r7
    82a2:	00bb      	lsls	r3, r7, #2
    82a4:	aa0a      	add	r2, sp, #40	; 0x28
    82a6:	5898      	ldr	r0, [r3, r2]
    82a8:	2800      	cmp	r0, #0
    82aa:	d102      	bne.n	82b2 <usart_init+0x25e>
    82ac:	1c20      	adds	r0, r4, #0
    82ae:	4b32      	ldr	r3, [pc, #200]	; (8378 <usart_init+0x324>)
    82b0:	4798      	blx	r3
    82b2:	1c43      	adds	r3, r0, #1
    82b4:	d005      	beq.n	82c2 <usart_init+0x26e>
    82b6:	7030      	strb	r0, [r6, #0]
    82b8:	0c00      	lsrs	r0, r0, #16
    82ba:	b2c0      	uxtb	r0, r0
    82bc:	1c31      	adds	r1, r6, #0
    82be:	4b2f      	ldr	r3, [pc, #188]	; (837c <usart_init+0x328>)
    82c0:	4798      	blx	r3
    82c2:	3701      	adds	r7, #1
    82c4:	2f04      	cmp	r7, #4
    82c6:	d1eb      	bne.n	82a0 <usart_init+0x24c>
    82c8:	2300      	movs	r3, #0
    82ca:	60eb      	str	r3, [r5, #12]
    82cc:	612b      	str	r3, [r5, #16]
    82ce:	616b      	str	r3, [r5, #20]
    82d0:	61ab      	str	r3, [r5, #24]
    82d2:	61eb      	str	r3, [r5, #28]
    82d4:	622b      	str	r3, [r5, #32]
    82d6:	62ab      	str	r3, [r5, #40]	; 0x28
    82d8:	626b      	str	r3, [r5, #36]	; 0x24
    82da:	2200      	movs	r2, #0
    82dc:	85eb      	strh	r3, [r5, #46]	; 0x2e
    82de:	85ab      	strh	r3, [r5, #44]	; 0x2c
    82e0:	3330      	adds	r3, #48	; 0x30
    82e2:	54ea      	strb	r2, [r5, r3]
    82e4:	3301      	adds	r3, #1
    82e6:	54ea      	strb	r2, [r5, r3]
    82e8:	3301      	adds	r3, #1
    82ea:	54ea      	strb	r2, [r5, r3]
    82ec:	3301      	adds	r3, #1
    82ee:	54ea      	strb	r2, [r5, r3]
    82f0:	6828      	ldr	r0, [r5, #0]
    82f2:	4b18      	ldr	r3, [pc, #96]	; (8354 <usart_init+0x300>)
    82f4:	4798      	blx	r3
    82f6:	1c04      	adds	r4, r0, #0
    82f8:	4921      	ldr	r1, [pc, #132]	; (8380 <usart_init+0x32c>)
    82fa:	4b22      	ldr	r3, [pc, #136]	; (8384 <usart_init+0x330>)
    82fc:	4798      	blx	r3
    82fe:	00a4      	lsls	r4, r4, #2
    8300:	4b21      	ldr	r3, [pc, #132]	; (8388 <usart_init+0x334>)
    8302:	50e5      	str	r5, [r4, r3]
    8304:	2300      	movs	r3, #0
    8306:	e01d      	b.n	8344 <usart_init+0x2f0>
    8308:	2310      	movs	r3, #16
    830a:	9306      	str	r3, [sp, #24]
    830c:	2300      	movs	r3, #0
    830e:	9307      	str	r3, [sp, #28]
    8310:	e003      	b.n	831a <usart_init+0x2c6>
    8312:	2303      	movs	r3, #3
    8314:	9306      	str	r3, [sp, #24]
    8316:	2300      	movs	r3, #0
    8318:	9307      	str	r3, [sp, #28]
    831a:	6833      	ldr	r3, [r6, #0]
    831c:	469b      	mov	fp, r3
    831e:	68f3      	ldr	r3, [r6, #12]
    8320:	9303      	str	r3, [sp, #12]
    8322:	6973      	ldr	r3, [r6, #20]
    8324:	9304      	str	r3, [sp, #16]
    8326:	7e33      	ldrb	r3, [r6, #24]
    8328:	4698      	mov	r8, r3
    832a:	2326      	movs	r3, #38	; 0x26
    832c:	5cf3      	ldrb	r3, [r6, r3]
    832e:	9305      	str	r3, [sp, #20]
    8330:	6873      	ldr	r3, [r6, #4]
    8332:	2b00      	cmp	r3, #0
    8334:	d100      	bne.n	8338 <usart_init+0x2e4>
    8336:	e71d      	b.n	8174 <usart_init+0x120>
    8338:	2280      	movs	r2, #128	; 0x80
    833a:	0552      	lsls	r2, r2, #21
    833c:	4293      	cmp	r3, r2
    833e:	d100      	bne.n	8342 <usart_init+0x2ee>
    8340:	e702      	b.n	8148 <usart_init+0xf4>
    8342:	e73c      	b.n	81be <usart_init+0x16a>
    8344:	1c18      	adds	r0, r3, #0
    8346:	b011      	add	sp, #68	; 0x44
    8348:	bc3c      	pop	{r2, r3, r4, r5}
    834a:	4690      	mov	r8, r2
    834c:	4699      	mov	r9, r3
    834e:	46a2      	mov	sl, r4
    8350:	46ab      	mov	fp, r5
    8352:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8354:	00007ad5 	.word	0x00007ad5
    8358:	40000400 	.word	0x40000400
    835c:	00008c45 	.word	0x00008c45
    8360:	00008bb9 	.word	0x00008bb9
    8364:	00007901 	.word	0x00007901
    8368:	00008c61 	.word	0x00008c61
    836c:	00007711 	.word	0x00007711
    8370:	00007739 	.word	0x00007739
    8374:	41002000 	.word	0x41002000
    8378:	0000794d 	.word	0x0000794d
    837c:	00008d3d 	.word	0x00008d3d
    8380:	0000846d 	.word	0x0000846d
    8384:	00007b15 	.word	0x00007b15
    8388:	20000aa8 	.word	0x20000aa8

0000838c <usart_write_wait>:
    838c:	b510      	push	{r4, lr}
    838e:	6803      	ldr	r3, [r0, #0]
    8390:	79c4      	ldrb	r4, [r0, #7]
    8392:	221c      	movs	r2, #28
    8394:	2c00      	cmp	r4, #0
    8396:	d00d      	beq.n	83b4 <usart_write_wait+0x28>
    8398:	8dc0      	ldrh	r0, [r0, #46]	; 0x2e
    839a:	b280      	uxth	r0, r0
    839c:	3a17      	subs	r2, #23
    839e:	2800      	cmp	r0, #0
    83a0:	d108      	bne.n	83b4 <usart_write_wait+0x28>
    83a2:	69da      	ldr	r2, [r3, #28]
    83a4:	2a00      	cmp	r2, #0
    83a6:	d1fc      	bne.n	83a2 <usart_write_wait+0x16>
    83a8:	8519      	strh	r1, [r3, #40]	; 0x28
    83aa:	2102      	movs	r1, #2
    83ac:	7e1a      	ldrb	r2, [r3, #24]
    83ae:	420a      	tst	r2, r1
    83b0:	d0fc      	beq.n	83ac <usart_write_wait+0x20>
    83b2:	2200      	movs	r2, #0
    83b4:	1c10      	adds	r0, r2, #0
    83b6:	bd10      	pop	{r4, pc}

000083b8 <usart_write_buffer_wait>:
    83b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    83ba:	4657      	mov	r7, sl
    83bc:	464e      	mov	r6, r9
    83be:	b4c0      	push	{r6, r7}
    83c0:	2317      	movs	r3, #23
    83c2:	2a00      	cmp	r2, #0
    83c4:	d049      	beq.n	845a <usart_write_buffer_wait+0xa2>
    83c6:	79c4      	ldrb	r4, [r0, #7]
    83c8:	3305      	adds	r3, #5
    83ca:	2c00      	cmp	r4, #0
    83cc:	d045      	beq.n	845a <usart_write_buffer_wait+0xa2>
    83ce:	6804      	ldr	r4, [r0, #0]
    83d0:	69e3      	ldr	r3, [r4, #28]
    83d2:	2b00      	cmp	r3, #0
    83d4:	d1fc      	bne.n	83d0 <usart_write_buffer_wait+0x18>
    83d6:	468a      	mov	sl, r1
    83d8:	4681      	mov	r9, r0
    83da:	1c17      	adds	r7, r2, #0
    83dc:	2600      	movs	r6, #0
    83de:	2501      	movs	r5, #1
    83e0:	e01f      	b.n	8422 <usart_write_buffer_wait+0x6a>
    83e2:	7e22      	ldrb	r2, [r4, #24]
    83e4:	422a      	tst	r2, r5
    83e6:	d104      	bne.n	83f2 <usart_write_buffer_wait+0x3a>
    83e8:	2b01      	cmp	r3, #1
    83ea:	d028      	beq.n	843e <usart_write_buffer_wait+0x86>
    83ec:	3b01      	subs	r3, #1
    83ee:	2b00      	cmp	r3, #0
    83f0:	d1f7      	bne.n	83e2 <usart_write_buffer_wait+0x2a>
    83f2:	1c72      	adds	r2, r6, #1
    83f4:	b292      	uxth	r2, r2
    83f6:	4653      	mov	r3, sl
    83f8:	5d9b      	ldrb	r3, [r3, r6]
    83fa:	4649      	mov	r1, r9
    83fc:	7949      	ldrb	r1, [r1, #5]
    83fe:	2901      	cmp	r1, #1
    8400:	d002      	beq.n	8408 <usart_write_buffer_wait+0x50>
    8402:	b299      	uxth	r1, r3
    8404:	1c16      	adds	r6, r2, #0
    8406:	e005      	b.n	8414 <usart_write_buffer_wait+0x5c>
    8408:	1cb1      	adds	r1, r6, #2
    840a:	b28e      	uxth	r6, r1
    840c:	4651      	mov	r1, sl
    840e:	5c89      	ldrb	r1, [r1, r2]
    8410:	0209      	lsls	r1, r1, #8
    8412:	4319      	orrs	r1, r3
    8414:	4648      	mov	r0, r9
    8416:	4b13      	ldr	r3, [pc, #76]	; (8464 <usart_write_buffer_wait+0xac>)
    8418:	4798      	blx	r3
    841a:	1e7a      	subs	r2, r7, #1
    841c:	b297      	uxth	r7, r2
    841e:	2f00      	cmp	r7, #0
    8420:	d015      	beq.n	844e <usart_write_buffer_wait+0x96>
    8422:	7e23      	ldrb	r3, [r4, #24]
    8424:	422b      	tst	r3, r5
    8426:	d1e4      	bne.n	83f2 <usart_write_buffer_wait+0x3a>
    8428:	4b0f      	ldr	r3, [pc, #60]	; (8468 <usart_write_buffer_wait+0xb0>)
    842a:	e7da      	b.n	83e2 <usart_write_buffer_wait+0x2a>
    842c:	7e22      	ldrb	r2, [r4, #24]
    842e:	420a      	tst	r2, r1
    8430:	d107      	bne.n	8442 <usart_write_buffer_wait+0x8a>
    8432:	2b01      	cmp	r3, #1
    8434:	d007      	beq.n	8446 <usart_write_buffer_wait+0x8e>
    8436:	3b01      	subs	r3, #1
    8438:	2b00      	cmp	r3, #0
    843a:	d1f7      	bne.n	842c <usart_write_buffer_wait+0x74>
    843c:	e00d      	b.n	845a <usart_write_buffer_wait+0xa2>
    843e:	2312      	movs	r3, #18
    8440:	e00b      	b.n	845a <usart_write_buffer_wait+0xa2>
    8442:	2300      	movs	r3, #0
    8444:	e009      	b.n	845a <usart_write_buffer_wait+0xa2>
    8446:	2312      	movs	r3, #18
    8448:	e007      	b.n	845a <usart_write_buffer_wait+0xa2>
    844a:	2300      	movs	r3, #0
    844c:	e005      	b.n	845a <usart_write_buffer_wait+0xa2>
    844e:	7e23      	ldrb	r3, [r4, #24]
    8450:	079b      	lsls	r3, r3, #30
    8452:	d4fa      	bmi.n	844a <usart_write_buffer_wait+0x92>
    8454:	4b04      	ldr	r3, [pc, #16]	; (8468 <usart_write_buffer_wait+0xb0>)
    8456:	2102      	movs	r1, #2
    8458:	e7e8      	b.n	842c <usart_write_buffer_wait+0x74>
    845a:	1c18      	adds	r0, r3, #0
    845c:	bc0c      	pop	{r2, r3}
    845e:	4691      	mov	r9, r2
    8460:	469a      	mov	sl, r3
    8462:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    8464:	0000838d 	.word	0x0000838d
    8468:	0000ffff 	.word	0x0000ffff

0000846c <_usart_interrupt_handler>:
    846c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    846e:	0080      	lsls	r0, r0, #2
    8470:	4b65      	ldr	r3, [pc, #404]	; (8608 <_usart_interrupt_handler+0x19c>)
    8472:	58c5      	ldr	r5, [r0, r3]
    8474:	682c      	ldr	r4, [r5, #0]
    8476:	69e3      	ldr	r3, [r4, #28]
    8478:	2b00      	cmp	r3, #0
    847a:	d1fc      	bne.n	8476 <_usart_interrupt_handler+0xa>
    847c:	7e23      	ldrb	r3, [r4, #24]
    847e:	7da6      	ldrb	r6, [r4, #22]
    8480:	401e      	ands	r6, r3
    8482:	2331      	movs	r3, #49	; 0x31
    8484:	5ceb      	ldrb	r3, [r5, r3]
    8486:	2230      	movs	r2, #48	; 0x30
    8488:	5caf      	ldrb	r7, [r5, r2]
    848a:	401f      	ands	r7, r3
    848c:	07f3      	lsls	r3, r6, #31
    848e:	d522      	bpl.n	84d6 <_usart_interrupt_handler+0x6a>
    8490:	8deb      	ldrh	r3, [r5, #46]	; 0x2e
    8492:	b29b      	uxth	r3, r3
    8494:	2b00      	cmp	r3, #0
    8496:	d01c      	beq.n	84d2 <_usart_interrupt_handler+0x66>
    8498:	6aaa      	ldr	r2, [r5, #40]	; 0x28
    849a:	7813      	ldrb	r3, [r2, #0]
    849c:	b2db      	uxtb	r3, r3
    849e:	1c51      	adds	r1, r2, #1
    84a0:	62a9      	str	r1, [r5, #40]	; 0x28
    84a2:	7969      	ldrb	r1, [r5, #5]
    84a4:	2901      	cmp	r1, #1
    84a6:	d001      	beq.n	84ac <_usart_interrupt_handler+0x40>
    84a8:	b29b      	uxth	r3, r3
    84aa:	e004      	b.n	84b6 <_usart_interrupt_handler+0x4a>
    84ac:	7851      	ldrb	r1, [r2, #1]
    84ae:	0209      	lsls	r1, r1, #8
    84b0:	430b      	orrs	r3, r1
    84b2:	3202      	adds	r2, #2
    84b4:	62aa      	str	r2, [r5, #40]	; 0x28
    84b6:	05db      	lsls	r3, r3, #23
    84b8:	0ddb      	lsrs	r3, r3, #23
    84ba:	8523      	strh	r3, [r4, #40]	; 0x28
    84bc:	8deb      	ldrh	r3, [r5, #46]	; 0x2e
    84be:	3b01      	subs	r3, #1
    84c0:	b29b      	uxth	r3, r3
    84c2:	85eb      	strh	r3, [r5, #46]	; 0x2e
    84c4:	2b00      	cmp	r3, #0
    84c6:	d106      	bne.n	84d6 <_usart_interrupt_handler+0x6a>
    84c8:	3301      	adds	r3, #1
    84ca:	7523      	strb	r3, [r4, #20]
    84cc:	3301      	adds	r3, #1
    84ce:	75a3      	strb	r3, [r4, #22]
    84d0:	e001      	b.n	84d6 <_usart_interrupt_handler+0x6a>
    84d2:	2301      	movs	r3, #1
    84d4:	7523      	strb	r3, [r4, #20]
    84d6:	07b3      	lsls	r3, r6, #30
    84d8:	d509      	bpl.n	84ee <_usart_interrupt_handler+0x82>
    84da:	2302      	movs	r3, #2
    84dc:	7523      	strb	r3, [r4, #20]
    84de:	2200      	movs	r2, #0
    84e0:	3331      	adds	r3, #49	; 0x31
    84e2:	54ea      	strb	r2, [r5, r3]
    84e4:	07fb      	lsls	r3, r7, #31
    84e6:	d502      	bpl.n	84ee <_usart_interrupt_handler+0x82>
    84e8:	1c28      	adds	r0, r5, #0
    84ea:	68eb      	ldr	r3, [r5, #12]
    84ec:	4798      	blx	r3
    84ee:	0773      	lsls	r3, r6, #29
    84f0:	d56a      	bpl.n	85c8 <_usart_interrupt_handler+0x15c>
    84f2:	8dab      	ldrh	r3, [r5, #44]	; 0x2c
    84f4:	b29b      	uxth	r3, r3
    84f6:	2b00      	cmp	r3, #0
    84f8:	d064      	beq.n	85c4 <_usart_interrupt_handler+0x158>
    84fa:	8b63      	ldrh	r3, [r4, #26]
    84fc:	b2db      	uxtb	r3, r3
    84fe:	071a      	lsls	r2, r3, #28
    8500:	d402      	bmi.n	8508 <_usart_interrupt_handler+0x9c>
    8502:	223f      	movs	r2, #63	; 0x3f
    8504:	4013      	ands	r3, r2
    8506:	e001      	b.n	850c <_usart_interrupt_handler+0xa0>
    8508:	2237      	movs	r2, #55	; 0x37
    850a:	4013      	ands	r3, r2
    850c:	2b00      	cmp	r3, #0
    850e:	d037      	beq.n	8580 <_usart_interrupt_handler+0x114>
    8510:	079a      	lsls	r2, r3, #30
    8512:	d507      	bpl.n	8524 <_usart_interrupt_handler+0xb8>
    8514:	221a      	movs	r2, #26
    8516:	2332      	movs	r3, #50	; 0x32
    8518:	54ea      	strb	r2, [r5, r3]
    851a:	8b62      	ldrh	r2, [r4, #26]
    851c:	3b30      	subs	r3, #48	; 0x30
    851e:	4313      	orrs	r3, r2
    8520:	8363      	strh	r3, [r4, #26]
    8522:	e027      	b.n	8574 <_usart_interrupt_handler+0x108>
    8524:	075a      	lsls	r2, r3, #29
    8526:	d507      	bpl.n	8538 <_usart_interrupt_handler+0xcc>
    8528:	221e      	movs	r2, #30
    852a:	2332      	movs	r3, #50	; 0x32
    852c:	54ea      	strb	r2, [r5, r3]
    852e:	8b62      	ldrh	r2, [r4, #26]
    8530:	3b2e      	subs	r3, #46	; 0x2e
    8532:	4313      	orrs	r3, r2
    8534:	8363      	strh	r3, [r4, #26]
    8536:	e01d      	b.n	8574 <_usart_interrupt_handler+0x108>
    8538:	07da      	lsls	r2, r3, #31
    853a:	d507      	bpl.n	854c <_usart_interrupt_handler+0xe0>
    853c:	2213      	movs	r2, #19
    853e:	2332      	movs	r3, #50	; 0x32
    8540:	54ea      	strb	r2, [r5, r3]
    8542:	8b62      	ldrh	r2, [r4, #26]
    8544:	3b31      	subs	r3, #49	; 0x31
    8546:	4313      	orrs	r3, r2
    8548:	8363      	strh	r3, [r4, #26]
    854a:	e013      	b.n	8574 <_usart_interrupt_handler+0x108>
    854c:	06da      	lsls	r2, r3, #27
    854e:	d507      	bpl.n	8560 <_usart_interrupt_handler+0xf4>
    8550:	2242      	movs	r2, #66	; 0x42
    8552:	2332      	movs	r3, #50	; 0x32
    8554:	54ea      	strb	r2, [r5, r3]
    8556:	8b62      	ldrh	r2, [r4, #26]
    8558:	3b22      	subs	r3, #34	; 0x22
    855a:	4313      	orrs	r3, r2
    855c:	8363      	strh	r3, [r4, #26]
    855e:	e009      	b.n	8574 <_usart_interrupt_handler+0x108>
    8560:	2220      	movs	r2, #32
    8562:	421a      	tst	r2, r3
    8564:	d006      	beq.n	8574 <_usart_interrupt_handler+0x108>
    8566:	3221      	adds	r2, #33	; 0x21
    8568:	2332      	movs	r3, #50	; 0x32
    856a:	54ea      	strb	r2, [r5, r3]
    856c:	8b62      	ldrh	r2, [r4, #26]
    856e:	3b12      	subs	r3, #18
    8570:	4313      	orrs	r3, r2
    8572:	8363      	strh	r3, [r4, #26]
    8574:	077b      	lsls	r3, r7, #29
    8576:	d527      	bpl.n	85c8 <_usart_interrupt_handler+0x15c>
    8578:	1c28      	adds	r0, r5, #0
    857a:	696b      	ldr	r3, [r5, #20]
    857c:	4798      	blx	r3
    857e:	e023      	b.n	85c8 <_usart_interrupt_handler+0x15c>
    8580:	8d23      	ldrh	r3, [r4, #40]	; 0x28
    8582:	05db      	lsls	r3, r3, #23
    8584:	0ddb      	lsrs	r3, r3, #23
    8586:	b2da      	uxtb	r2, r3
    8588:	6a69      	ldr	r1, [r5, #36]	; 0x24
    858a:	700a      	strb	r2, [r1, #0]
    858c:	6a6a      	ldr	r2, [r5, #36]	; 0x24
    858e:	1c51      	adds	r1, r2, #1
    8590:	6269      	str	r1, [r5, #36]	; 0x24
    8592:	7969      	ldrb	r1, [r5, #5]
    8594:	2901      	cmp	r1, #1
    8596:	d104      	bne.n	85a2 <_usart_interrupt_handler+0x136>
    8598:	0a1b      	lsrs	r3, r3, #8
    859a:	7053      	strb	r3, [r2, #1]
    859c:	6a6b      	ldr	r3, [r5, #36]	; 0x24
    859e:	3301      	adds	r3, #1
    85a0:	626b      	str	r3, [r5, #36]	; 0x24
    85a2:	8dab      	ldrh	r3, [r5, #44]	; 0x2c
    85a4:	3b01      	subs	r3, #1
    85a6:	b29b      	uxth	r3, r3
    85a8:	85ab      	strh	r3, [r5, #44]	; 0x2c
    85aa:	2b00      	cmp	r3, #0
    85ac:	d10c      	bne.n	85c8 <_usart_interrupt_handler+0x15c>
    85ae:	3304      	adds	r3, #4
    85b0:	7523      	strb	r3, [r4, #20]
    85b2:	2200      	movs	r2, #0
    85b4:	332e      	adds	r3, #46	; 0x2e
    85b6:	54ea      	strb	r2, [r5, r3]
    85b8:	07bb      	lsls	r3, r7, #30
    85ba:	d505      	bpl.n	85c8 <_usart_interrupt_handler+0x15c>
    85bc:	1c28      	adds	r0, r5, #0
    85be:	692b      	ldr	r3, [r5, #16]
    85c0:	4798      	blx	r3
    85c2:	e001      	b.n	85c8 <_usart_interrupt_handler+0x15c>
    85c4:	2304      	movs	r3, #4
    85c6:	7523      	strb	r3, [r4, #20]
    85c8:	06f3      	lsls	r3, r6, #27
    85ca:	d507      	bpl.n	85dc <_usart_interrupt_handler+0x170>
    85cc:	2310      	movs	r3, #16
    85ce:	7523      	strb	r3, [r4, #20]
    85d0:	7623      	strb	r3, [r4, #24]
    85d2:	06fb      	lsls	r3, r7, #27
    85d4:	d502      	bpl.n	85dc <_usart_interrupt_handler+0x170>
    85d6:	1c28      	adds	r0, r5, #0
    85d8:	69eb      	ldr	r3, [r5, #28]
    85da:	4798      	blx	r3
    85dc:	06b3      	lsls	r3, r6, #26
    85de:	d507      	bpl.n	85f0 <_usart_interrupt_handler+0x184>
    85e0:	2320      	movs	r3, #32
    85e2:	7523      	strb	r3, [r4, #20]
    85e4:	7623      	strb	r3, [r4, #24]
    85e6:	073b      	lsls	r3, r7, #28
    85e8:	d502      	bpl.n	85f0 <_usart_interrupt_handler+0x184>
    85ea:	1c28      	adds	r0, r5, #0
    85ec:	69ab      	ldr	r3, [r5, #24]
    85ee:	4798      	blx	r3
    85f0:	0733      	lsls	r3, r6, #28
    85f2:	d507      	bpl.n	8604 <_usart_interrupt_handler+0x198>
    85f4:	2308      	movs	r3, #8
    85f6:	7523      	strb	r3, [r4, #20]
    85f8:	7623      	strb	r3, [r4, #24]
    85fa:	06bb      	lsls	r3, r7, #26
    85fc:	d502      	bpl.n	8604 <_usart_interrupt_handler+0x198>
    85fe:	6a2b      	ldr	r3, [r5, #32]
    8600:	1c28      	adds	r0, r5, #0
    8602:	4798      	blx	r3
    8604:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    8606:	46c0      	nop			; (mov r8, r8)
    8608:	20000aa8 	.word	0x20000aa8

0000860c <system_clock_source_get_hz>:
    860c:	b508      	push	{r3, lr}
    860e:	2808      	cmp	r0, #8
    8610:	d803      	bhi.n	861a <system_clock_source_get_hz+0xe>
    8612:	0080      	lsls	r0, r0, #2
    8614:	4b1b      	ldr	r3, [pc, #108]	; (8684 <system_clock_source_get_hz+0x78>)
    8616:	581b      	ldr	r3, [r3, r0]
    8618:	469f      	mov	pc, r3
    861a:	2000      	movs	r0, #0
    861c:	e031      	b.n	8682 <system_clock_source_get_hz+0x76>
    861e:	4b1a      	ldr	r3, [pc, #104]	; (8688 <system_clock_source_get_hz+0x7c>)
    8620:	6918      	ldr	r0, [r3, #16]
    8622:	e02e      	b.n	8682 <system_clock_source_get_hz+0x76>
    8624:	4b19      	ldr	r3, [pc, #100]	; (868c <system_clock_source_get_hz+0x80>)
    8626:	6a18      	ldr	r0, [r3, #32]
    8628:	0580      	lsls	r0, r0, #22
    862a:	0f80      	lsrs	r0, r0, #30
    862c:	4b18      	ldr	r3, [pc, #96]	; (8690 <system_clock_source_get_hz+0x84>)
    862e:	40c3      	lsrs	r3, r0
    8630:	1c18      	adds	r0, r3, #0
    8632:	e026      	b.n	8682 <system_clock_source_get_hz+0x76>
    8634:	4b14      	ldr	r3, [pc, #80]	; (8688 <system_clock_source_get_hz+0x7c>)
    8636:	6958      	ldr	r0, [r3, #20]
    8638:	e023      	b.n	8682 <system_clock_source_get_hz+0x76>
    863a:	4b13      	ldr	r3, [pc, #76]	; (8688 <system_clock_source_get_hz+0x7c>)
    863c:	681b      	ldr	r3, [r3, #0]
    863e:	2002      	movs	r0, #2
    8640:	4018      	ands	r0, r3
    8642:	d01e      	beq.n	8682 <system_clock_source_get_hz+0x76>
    8644:	4911      	ldr	r1, [pc, #68]	; (868c <system_clock_source_get_hz+0x80>)
    8646:	2210      	movs	r2, #16
    8648:	68cb      	ldr	r3, [r1, #12]
    864a:	421a      	tst	r2, r3
    864c:	d0fc      	beq.n	8648 <system_clock_source_get_hz+0x3c>
    864e:	4b0e      	ldr	r3, [pc, #56]	; (8688 <system_clock_source_get_hz+0x7c>)
    8650:	681b      	ldr	r3, [r3, #0]
    8652:	075b      	lsls	r3, r3, #29
    8654:	d514      	bpl.n	8680 <system_clock_source_get_hz+0x74>
    8656:	2000      	movs	r0, #0
    8658:	4b0e      	ldr	r3, [pc, #56]	; (8694 <system_clock_source_get_hz+0x88>)
    865a:	4798      	blx	r3
    865c:	4b0a      	ldr	r3, [pc, #40]	; (8688 <system_clock_source_get_hz+0x7c>)
    865e:	689b      	ldr	r3, [r3, #8]
    8660:	041b      	lsls	r3, r3, #16
    8662:	0c1b      	lsrs	r3, r3, #16
    8664:	4358      	muls	r0, r3
    8666:	e00c      	b.n	8682 <system_clock_source_get_hz+0x76>
    8668:	2350      	movs	r3, #80	; 0x50
    866a:	4a08      	ldr	r2, [pc, #32]	; (868c <system_clock_source_get_hz+0x80>)
    866c:	5cd3      	ldrb	r3, [r2, r3]
    866e:	2000      	movs	r0, #0
    8670:	075b      	lsls	r3, r3, #29
    8672:	d506      	bpl.n	8682 <system_clock_source_get_hz+0x76>
    8674:	4b04      	ldr	r3, [pc, #16]	; (8688 <system_clock_source_get_hz+0x7c>)
    8676:	68d8      	ldr	r0, [r3, #12]
    8678:	e003      	b.n	8682 <system_clock_source_get_hz+0x76>
    867a:	2080      	movs	r0, #128	; 0x80
    867c:	0200      	lsls	r0, r0, #8
    867e:	e000      	b.n	8682 <system_clock_source_get_hz+0x76>
    8680:	4805      	ldr	r0, [pc, #20]	; (8698 <system_clock_source_get_hz+0x8c>)
    8682:	bd08      	pop	{r3, pc}
    8684:	00011a24 	.word	0x00011a24
    8688:	200006c4 	.word	0x200006c4
    868c:	40000800 	.word	0x40000800
    8690:	007a1200 	.word	0x007a1200
    8694:	00008c61 	.word	0x00008c61
    8698:	02dc6c00 	.word	0x02dc6c00

0000869c <system_clock_source_osc8m_set_config>:
    869c:	b570      	push	{r4, r5, r6, lr}
    869e:	4c0c      	ldr	r4, [pc, #48]	; (86d0 <system_clock_source_osc8m_set_config+0x34>)
    86a0:	6a23      	ldr	r3, [r4, #32]
    86a2:	7801      	ldrb	r1, [r0, #0]
    86a4:	7885      	ldrb	r5, [r0, #2]
    86a6:	7842      	ldrb	r2, [r0, #1]
    86a8:	2001      	movs	r0, #1
    86aa:	4002      	ands	r2, r0
    86ac:	0192      	lsls	r2, r2, #6
    86ae:	2640      	movs	r6, #64	; 0x40
    86b0:	43b3      	bics	r3, r6
    86b2:	4313      	orrs	r3, r2
    86b4:	1c02      	adds	r2, r0, #0
    86b6:	402a      	ands	r2, r5
    86b8:	01d2      	lsls	r2, r2, #7
    86ba:	307f      	adds	r0, #127	; 0x7f
    86bc:	4383      	bics	r3, r0
    86be:	4313      	orrs	r3, r2
    86c0:	2203      	movs	r2, #3
    86c2:	400a      	ands	r2, r1
    86c4:	0212      	lsls	r2, r2, #8
    86c6:	4903      	ldr	r1, [pc, #12]	; (86d4 <system_clock_source_osc8m_set_config+0x38>)
    86c8:	400b      	ands	r3, r1
    86ca:	4313      	orrs	r3, r2
    86cc:	6223      	str	r3, [r4, #32]
    86ce:	bd70      	pop	{r4, r5, r6, pc}
    86d0:	40000800 	.word	0x40000800
    86d4:	fffffcff 	.word	0xfffffcff

000086d8 <system_clock_source_xosc32k_set_config>:
    86d8:	b5f0      	push	{r4, r5, r6, r7, lr}
    86da:	465f      	mov	r7, fp
    86dc:	4656      	mov	r6, sl
    86de:	464d      	mov	r5, r9
    86e0:	4644      	mov	r4, r8
    86e2:	b4f0      	push	{r4, r5, r6, r7}
    86e4:	b083      	sub	sp, #12
    86e6:	4e2e      	ldr	r6, [pc, #184]	; (87a0 <system_clock_source_xosc32k_set_config+0xc8>)
    86e8:	8ab3      	ldrh	r3, [r6, #20]
    86ea:	469c      	mov	ip, r3
    86ec:	7845      	ldrb	r5, [r0, #1]
    86ee:	7803      	ldrb	r3, [r0, #0]
    86f0:	425a      	negs	r2, r3
    86f2:	415a      	adcs	r2, r3
    86f4:	4691      	mov	r9, r2
    86f6:	7883      	ldrb	r3, [r0, #2]
    86f8:	469b      	mov	fp, r3
    86fa:	78c3      	ldrb	r3, [r0, #3]
    86fc:	7902      	ldrb	r2, [r0, #4]
    86fe:	4690      	mov	r8, r2
    8700:	7b47      	ldrb	r7, [r0, #13]
    8702:	7b02      	ldrb	r2, [r0, #12]
    8704:	9201      	str	r2, [sp, #4]
    8706:	7b84      	ldrb	r4, [r0, #14]
    8708:	6882      	ldr	r2, [r0, #8]
    870a:	4826      	ldr	r0, [pc, #152]	; (87a4 <system_clock_source_xosc32k_set_config+0xcc>)
    870c:	6142      	str	r2, [r0, #20]
    870e:	2001      	movs	r0, #1
    8710:	464a      	mov	r2, r9
    8712:	0092      	lsls	r2, r2, #2
    8714:	4691      	mov	r9, r2
    8716:	2204      	movs	r2, #4
    8718:	4692      	mov	sl, r2
    871a:	4662      	mov	r2, ip
    871c:	4651      	mov	r1, sl
    871e:	438a      	bics	r2, r1
    8720:	4694      	mov	ip, r2
    8722:	464a      	mov	r2, r9
    8724:	4661      	mov	r1, ip
    8726:	430a      	orrs	r2, r1
    8728:	4694      	mov	ip, r2
    872a:	4642      	mov	r2, r8
    872c:	4002      	ands	r2, r0
    872e:	00d2      	lsls	r2, r2, #3
    8730:	4690      	mov	r8, r2
    8732:	2208      	movs	r2, #8
    8734:	4691      	mov	r9, r2
    8736:	4662      	mov	r2, ip
    8738:	4649      	mov	r1, r9
    873a:	438a      	bics	r2, r1
    873c:	4694      	mov	ip, r2
    873e:	4642      	mov	r2, r8
    8740:	4661      	mov	r1, ip
    8742:	430a      	orrs	r2, r1
    8744:	4694      	mov	ip, r2
    8746:	4003      	ands	r3, r0
    8748:	011b      	lsls	r3, r3, #4
    874a:	2210      	movs	r2, #16
    874c:	4690      	mov	r8, r2
    874e:	4662      	mov	r2, ip
    8750:	4641      	mov	r1, r8
    8752:	438a      	bics	r2, r1
    8754:	4313      	orrs	r3, r2
    8756:	4659      	mov	r1, fp
    8758:	4001      	ands	r1, r0
    875a:	0149      	lsls	r1, r1, #5
    875c:	2220      	movs	r2, #32
    875e:	4393      	bics	r3, r2
    8760:	430b      	orrs	r3, r1
    8762:	9a01      	ldr	r2, [sp, #4]
    8764:	4002      	ands	r2, r0
    8766:	0192      	lsls	r2, r2, #6
    8768:	2140      	movs	r1, #64	; 0x40
    876a:	438b      	bics	r3, r1
    876c:	4313      	orrs	r3, r2
    876e:	4007      	ands	r7, r0
    8770:	01ff      	lsls	r7, r7, #7
    8772:	2280      	movs	r2, #128	; 0x80
    8774:	4393      	bics	r3, r2
    8776:	433b      	orrs	r3, r7
    8778:	3a79      	subs	r2, #121	; 0x79
    877a:	4015      	ands	r5, r2
    877c:	022d      	lsls	r5, r5, #8
    877e:	4f0a      	ldr	r7, [pc, #40]	; (87a8 <system_clock_source_xosc32k_set_config+0xd0>)
    8780:	403b      	ands	r3, r7
    8782:	432b      	orrs	r3, r5
    8784:	4004      	ands	r4, r0
    8786:	0320      	lsls	r0, r4, #12
    8788:	4c08      	ldr	r4, [pc, #32]	; (87ac <system_clock_source_xosc32k_set_config+0xd4>)
    878a:	401c      	ands	r4, r3
    878c:	4304      	orrs	r4, r0
    878e:	82b4      	strh	r4, [r6, #20]
    8790:	b003      	add	sp, #12
    8792:	bc3c      	pop	{r2, r3, r4, r5}
    8794:	4690      	mov	r8, r2
    8796:	4699      	mov	r9, r3
    8798:	46a2      	mov	sl, r4
    879a:	46ab      	mov	fp, r5
    879c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    879e:	46c0      	nop			; (mov r8, r8)
    87a0:	40000800 	.word	0x40000800
    87a4:	200006c4 	.word	0x200006c4
    87a8:	fffff8ff 	.word	0xfffff8ff
    87ac:	ffffefff 	.word	0xffffefff

000087b0 <system_clock_source_dfll_set_config>:
    87b0:	b510      	push	{r4, lr}
    87b2:	7a03      	ldrb	r3, [r0, #8]
    87b4:	069b      	lsls	r3, r3, #26
    87b6:	0c1a      	lsrs	r2, r3, #16
    87b8:	8943      	ldrh	r3, [r0, #10]
    87ba:	059b      	lsls	r3, r3, #22
    87bc:	0d9b      	lsrs	r3, r3, #22
    87be:	4313      	orrs	r3, r2
    87c0:	4c15      	ldr	r4, [pc, #84]	; (8818 <system_clock_source_dfll_set_config+0x68>)
    87c2:	6063      	str	r3, [r4, #4]
    87c4:	8881      	ldrh	r1, [r0, #4]
    87c6:	8843      	ldrh	r3, [r0, #2]
    87c8:	4319      	orrs	r1, r3
    87ca:	79c3      	ldrb	r3, [r0, #7]
    87cc:	7982      	ldrb	r2, [r0, #6]
    87ce:	4313      	orrs	r3, r2
    87d0:	430b      	orrs	r3, r1
    87d2:	7842      	ldrb	r2, [r0, #1]
    87d4:	01d2      	lsls	r2, r2, #7
    87d6:	4313      	orrs	r3, r2
    87d8:	6023      	str	r3, [r4, #0]
    87da:	7803      	ldrb	r3, [r0, #0]
    87dc:	2b04      	cmp	r3, #4
    87de:	d10f      	bne.n	8800 <system_clock_source_dfll_set_config+0x50>
    87e0:	7b03      	ldrb	r3, [r0, #12]
    87e2:	069b      	lsls	r3, r3, #26
    87e4:	8a02      	ldrh	r2, [r0, #16]
    87e6:	4313      	orrs	r3, r2
    87e8:	1c19      	adds	r1, r3, #0
    87ea:	89c3      	ldrh	r3, [r0, #14]
    87ec:	041b      	lsls	r3, r3, #16
    87ee:	4a0b      	ldr	r2, [pc, #44]	; (881c <system_clock_source_dfll_set_config+0x6c>)
    87f0:	4013      	ands	r3, r2
    87f2:	430b      	orrs	r3, r1
    87f4:	60a3      	str	r3, [r4, #8]
    87f6:	6821      	ldr	r1, [r4, #0]
    87f8:	2304      	movs	r3, #4
    87fa:	430b      	orrs	r3, r1
    87fc:	6023      	str	r3, [r4, #0]
    87fe:	e009      	b.n	8814 <system_clock_source_dfll_set_config+0x64>
    8800:	2b20      	cmp	r3, #32
    8802:	d107      	bne.n	8814 <system_clock_source_dfll_set_config+0x64>
    8804:	8a02      	ldrh	r2, [r0, #16]
    8806:	4b04      	ldr	r3, [pc, #16]	; (8818 <system_clock_source_dfll_set_config+0x68>)
    8808:	609a      	str	r2, [r3, #8]
    880a:	681a      	ldr	r2, [r3, #0]
    880c:	2184      	movs	r1, #132	; 0x84
    880e:	00c9      	lsls	r1, r1, #3
    8810:	430a      	orrs	r2, r1
    8812:	601a      	str	r2, [r3, #0]
    8814:	bd10      	pop	{r4, pc}
    8816:	46c0      	nop			; (mov r8, r8)
    8818:	200006c4 	.word	0x200006c4
    881c:	03ff0000 	.word	0x03ff0000

00008820 <system_clock_source_enable>:
    8820:	2808      	cmp	r0, #8
    8822:	d803      	bhi.n	882c <system_clock_source_enable+0xc>
    8824:	0080      	lsls	r0, r0, #2
    8826:	4b22      	ldr	r3, [pc, #136]	; (88b0 <system_clock_source_enable+0x90>)
    8828:	581b      	ldr	r3, [r3, r0]
    882a:	469f      	mov	pc, r3
    882c:	2017      	movs	r0, #23
    882e:	e03e      	b.n	88ae <system_clock_source_enable+0x8e>
    8830:	4a20      	ldr	r2, [pc, #128]	; (88b4 <system_clock_source_enable+0x94>)
    8832:	6a11      	ldr	r1, [r2, #32]
    8834:	2302      	movs	r3, #2
    8836:	430b      	orrs	r3, r1
    8838:	6213      	str	r3, [r2, #32]
    883a:	2000      	movs	r0, #0
    883c:	e037      	b.n	88ae <system_clock_source_enable+0x8e>
    883e:	4a1d      	ldr	r2, [pc, #116]	; (88b4 <system_clock_source_enable+0x94>)
    8840:	6991      	ldr	r1, [r2, #24]
    8842:	2302      	movs	r3, #2
    8844:	430b      	orrs	r3, r1
    8846:	6193      	str	r3, [r2, #24]
    8848:	2000      	movs	r0, #0
    884a:	e030      	b.n	88ae <system_clock_source_enable+0x8e>
    884c:	4a19      	ldr	r2, [pc, #100]	; (88b4 <system_clock_source_enable+0x94>)
    884e:	8a11      	ldrh	r1, [r2, #16]
    8850:	2302      	movs	r3, #2
    8852:	430b      	orrs	r3, r1
    8854:	8213      	strh	r3, [r2, #16]
    8856:	2000      	movs	r0, #0
    8858:	e029      	b.n	88ae <system_clock_source_enable+0x8e>
    885a:	4a16      	ldr	r2, [pc, #88]	; (88b4 <system_clock_source_enable+0x94>)
    885c:	8a91      	ldrh	r1, [r2, #20]
    885e:	2302      	movs	r3, #2
    8860:	430b      	orrs	r3, r1
    8862:	8293      	strh	r3, [r2, #20]
    8864:	2000      	movs	r0, #0
    8866:	e022      	b.n	88ae <system_clock_source_enable+0x8e>
    8868:	4b13      	ldr	r3, [pc, #76]	; (88b8 <system_clock_source_enable+0x98>)
    886a:	6819      	ldr	r1, [r3, #0]
    886c:	2202      	movs	r2, #2
    886e:	430a      	orrs	r2, r1
    8870:	601a      	str	r2, [r3, #0]
    8872:	681a      	ldr	r2, [r3, #0]
    8874:	4b11      	ldr	r3, [pc, #68]	; (88bc <system_clock_source_enable+0x9c>)
    8876:	4013      	ands	r3, r2
    8878:	4a0e      	ldr	r2, [pc, #56]	; (88b4 <system_clock_source_enable+0x94>)
    887a:	8493      	strh	r3, [r2, #36]	; 0x24
    887c:	1c11      	adds	r1, r2, #0
    887e:	2210      	movs	r2, #16
    8880:	68cb      	ldr	r3, [r1, #12]
    8882:	421a      	tst	r2, r3
    8884:	d0fc      	beq.n	8880 <system_clock_source_enable+0x60>
    8886:	4a0c      	ldr	r2, [pc, #48]	; (88b8 <system_clock_source_enable+0x98>)
    8888:	6891      	ldr	r1, [r2, #8]
    888a:	4b0a      	ldr	r3, [pc, #40]	; (88b4 <system_clock_source_enable+0x94>)
    888c:	62d9      	str	r1, [r3, #44]	; 0x2c
    888e:	6851      	ldr	r1, [r2, #4]
    8890:	6299      	str	r1, [r3, #40]	; 0x28
    8892:	6812      	ldr	r2, [r2, #0]
    8894:	b292      	uxth	r2, r2
    8896:	849a      	strh	r2, [r3, #36]	; 0x24
    8898:	2000      	movs	r0, #0
    889a:	e008      	b.n	88ae <system_clock_source_enable+0x8e>
    889c:	4905      	ldr	r1, [pc, #20]	; (88b4 <system_clock_source_enable+0x94>)
    889e:	2244      	movs	r2, #68	; 0x44
    88a0:	5c88      	ldrb	r0, [r1, r2]
    88a2:	2302      	movs	r3, #2
    88a4:	4303      	orrs	r3, r0
    88a6:	548b      	strb	r3, [r1, r2]
    88a8:	2000      	movs	r0, #0
    88aa:	e000      	b.n	88ae <system_clock_source_enable+0x8e>
    88ac:	2000      	movs	r0, #0
    88ae:	4770      	bx	lr
    88b0:	00011a48 	.word	0x00011a48
    88b4:	40000800 	.word	0x40000800
    88b8:	200006c4 	.word	0x200006c4
    88bc:	0000ff7f 	.word	0x0000ff7f

000088c0 <system_clock_init>:
    88c0:	b5f0      	push	{r4, r5, r6, r7, lr}
    88c2:	b08f      	sub	sp, #60	; 0x3c
    88c4:	22c2      	movs	r2, #194	; 0xc2
    88c6:	00d2      	lsls	r2, r2, #3
    88c8:	4b47      	ldr	r3, [pc, #284]	; (89e8 <system_clock_init+0x128>)
    88ca:	609a      	str	r2, [r3, #8]
    88cc:	4947      	ldr	r1, [pc, #284]	; (89ec <system_clock_init+0x12c>)
    88ce:	684b      	ldr	r3, [r1, #4]
    88d0:	221e      	movs	r2, #30
    88d2:	4393      	bics	r3, r2
    88d4:	3a1a      	subs	r2, #26
    88d6:	4313      	orrs	r3, r2
    88d8:	604b      	str	r3, [r1, #4]
    88da:	3a02      	subs	r2, #2
    88dc:	ab01      	add	r3, sp, #4
    88de:	701a      	strb	r2, [r3, #0]
    88e0:	2400      	movs	r4, #0
    88e2:	4d43      	ldr	r5, [pc, #268]	; (89f0 <system_clock_init+0x130>)
    88e4:	b2e0      	uxtb	r0, r4
    88e6:	a901      	add	r1, sp, #4
    88e8:	47a8      	blx	r5
    88ea:	3401      	adds	r4, #1
    88ec:	2c25      	cmp	r4, #37	; 0x25
    88ee:	d1f9      	bne.n	88e4 <system_clock_init+0x24>
    88f0:	a80a      	add	r0, sp, #40	; 0x28
    88f2:	2300      	movs	r3, #0
    88f4:	7003      	strb	r3, [r0, #0]
    88f6:	7083      	strb	r3, [r0, #2]
    88f8:	2280      	movs	r2, #128	; 0x80
    88fa:	0212      	lsls	r2, r2, #8
    88fc:	6082      	str	r2, [r0, #8]
    88fe:	70c3      	strb	r3, [r0, #3]
    8900:	2201      	movs	r2, #1
    8902:	7102      	strb	r2, [r0, #4]
    8904:	7303      	strb	r3, [r0, #12]
    8906:	7383      	strb	r3, [r0, #14]
    8908:	3202      	adds	r2, #2
    890a:	7042      	strb	r2, [r0, #1]
    890c:	7343      	strb	r3, [r0, #13]
    890e:	4b39      	ldr	r3, [pc, #228]	; (89f4 <system_clock_init+0x134>)
    8910:	4798      	blx	r3
    8912:	2005      	movs	r0, #5
    8914:	4b38      	ldr	r3, [pc, #224]	; (89f8 <system_clock_init+0x138>)
    8916:	4798      	blx	r3
    8918:	4933      	ldr	r1, [pc, #204]	; (89e8 <system_clock_init+0x128>)
    891a:	2202      	movs	r2, #2
    891c:	68cb      	ldr	r3, [r1, #12]
    891e:	421a      	tst	r2, r3
    8920:	d0fc      	beq.n	891c <system_clock_init+0x5c>
    8922:	4a31      	ldr	r2, [pc, #196]	; (89e8 <system_clock_init+0x128>)
    8924:	8a91      	ldrh	r1, [r2, #20]
    8926:	2380      	movs	r3, #128	; 0x80
    8928:	430b      	orrs	r3, r1
    892a:	8293      	strh	r3, [r2, #20]
    892c:	ab05      	add	r3, sp, #20
    892e:	2100      	movs	r1, #0
    8930:	2200      	movs	r2, #0
    8932:	8059      	strh	r1, [r3, #2]
    8934:	8099      	strh	r1, [r3, #4]
    8936:	719a      	strb	r2, [r3, #6]
    8938:	71da      	strb	r2, [r3, #7]
    893a:	313f      	adds	r1, #63	; 0x3f
    893c:	8159      	strh	r1, [r3, #10]
    893e:	393b      	subs	r1, #59	; 0x3b
    8940:	7019      	strb	r1, [r3, #0]
    8942:	705a      	strb	r2, [r3, #1]
    8944:	4b2d      	ldr	r3, [pc, #180]	; (89fc <system_clock_init+0x13c>)
    8946:	681b      	ldr	r3, [r3, #0]
    8948:	0e9b      	lsrs	r3, r3, #26
    894a:	2b3f      	cmp	r3, #63	; 0x3f
    894c:	d100      	bne.n	8950 <system_clock_init+0x90>
    894e:	3b20      	subs	r3, #32
    8950:	a805      	add	r0, sp, #20
    8952:	7203      	strb	r3, [r0, #8]
    8954:	4b2a      	ldr	r3, [pc, #168]	; (8a00 <system_clock_init+0x140>)
    8956:	8203      	strh	r3, [r0, #16]
    8958:	2307      	movs	r3, #7
    895a:	7303      	strb	r3, [r0, #12]
    895c:	3338      	adds	r3, #56	; 0x38
    895e:	81c3      	strh	r3, [r0, #14]
    8960:	4b28      	ldr	r3, [pc, #160]	; (8a04 <system_clock_init+0x144>)
    8962:	4798      	blx	r3
    8964:	a804      	add	r0, sp, #16
    8966:	2500      	movs	r5, #0
    8968:	7045      	strb	r5, [r0, #1]
    896a:	2601      	movs	r6, #1
    896c:	7086      	strb	r6, [r0, #2]
    896e:	7005      	strb	r5, [r0, #0]
    8970:	4b25      	ldr	r3, [pc, #148]	; (8a08 <system_clock_init+0x148>)
    8972:	4798      	blx	r3
    8974:	2006      	movs	r0, #6
    8976:	4f20      	ldr	r7, [pc, #128]	; (89f8 <system_clock_init+0x138>)
    8978:	47b8      	blx	r7
    897a:	4b24      	ldr	r3, [pc, #144]	; (8a0c <system_clock_init+0x14c>)
    897c:	4798      	blx	r3
    897e:	ac01      	add	r4, sp, #4
    8980:	9602      	str	r6, [sp, #8]
    8982:	7065      	strb	r5, [r4, #1]
    8984:	7225      	strb	r5, [r4, #8]
    8986:	7265      	strb	r5, [r4, #9]
    8988:	2305      	movs	r3, #5
    898a:	7023      	strb	r3, [r4, #0]
    898c:	2001      	movs	r0, #1
    898e:	1c21      	adds	r1, r4, #0
    8990:	4b1f      	ldr	r3, [pc, #124]	; (8a10 <system_clock_init+0x150>)
    8992:	4798      	blx	r3
    8994:	2001      	movs	r0, #1
    8996:	4b1f      	ldr	r3, [pc, #124]	; (8a14 <system_clock_init+0x154>)
    8998:	4798      	blx	r3
    899a:	7026      	strb	r6, [r4, #0]
    899c:	2000      	movs	r0, #0
    899e:	1c21      	adds	r1, r4, #0
    89a0:	4b13      	ldr	r3, [pc, #76]	; (89f0 <system_clock_init+0x130>)
    89a2:	4798      	blx	r3
    89a4:	2000      	movs	r0, #0
    89a6:	4b1c      	ldr	r3, [pc, #112]	; (8a18 <system_clock_init+0x158>)
    89a8:	4798      	blx	r3
    89aa:	2007      	movs	r0, #7
    89ac:	47b8      	blx	r7
    89ae:	490e      	ldr	r1, [pc, #56]	; (89e8 <system_clock_init+0x128>)
    89b0:	22d0      	movs	r2, #208	; 0xd0
    89b2:	68cb      	ldr	r3, [r1, #12]
    89b4:	4013      	ands	r3, r2
    89b6:	2bd0      	cmp	r3, #208	; 0xd0
    89b8:	d1fb      	bne.n	89b2 <system_clock_init+0xf2>
    89ba:	4a18      	ldr	r2, [pc, #96]	; (8a1c <system_clock_init+0x15c>)
    89bc:	2300      	movs	r3, #0
    89be:	7213      	strb	r3, [r2, #8]
    89c0:	7253      	strb	r3, [r2, #9]
    89c2:	7293      	strb	r3, [r2, #10]
    89c4:	72d3      	strb	r3, [r2, #11]
    89c6:	a901      	add	r1, sp, #4
    89c8:	2201      	movs	r2, #1
    89ca:	604a      	str	r2, [r1, #4]
    89cc:	704b      	strb	r3, [r1, #1]
    89ce:	720b      	strb	r3, [r1, #8]
    89d0:	724b      	strb	r3, [r1, #9]
    89d2:	3307      	adds	r3, #7
    89d4:	700b      	strb	r3, [r1, #0]
    89d6:	2000      	movs	r0, #0
    89d8:	4b0d      	ldr	r3, [pc, #52]	; (8a10 <system_clock_init+0x150>)
    89da:	4798      	blx	r3
    89dc:	2000      	movs	r0, #0
    89de:	4b0d      	ldr	r3, [pc, #52]	; (8a14 <system_clock_init+0x154>)
    89e0:	4798      	blx	r3
    89e2:	b00f      	add	sp, #60	; 0x3c
    89e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    89e6:	46c0      	nop			; (mov r8, r8)
    89e8:	40000800 	.word	0x40000800
    89ec:	41004000 	.word	0x41004000
    89f0:	00008c45 	.word	0x00008c45
    89f4:	000086d9 	.word	0x000086d9
    89f8:	00008821 	.word	0x00008821
    89fc:	00806024 	.word	0x00806024
    8a00:	000005b9 	.word	0x000005b9
    8a04:	000087b1 	.word	0x000087b1
    8a08:	0000869d 	.word	0x0000869d
    8a0c:	00008a21 	.word	0x00008a21
    8a10:	00008a45 	.word	0x00008a45
    8a14:	00008ae9 	.word	0x00008ae9
    8a18:	00008bb9 	.word	0x00008bb9
    8a1c:	40000400 	.word	0x40000400

00008a20 <system_gclk_init>:
    8a20:	4a06      	ldr	r2, [pc, #24]	; (8a3c <system_gclk_init+0x1c>)
    8a22:	6991      	ldr	r1, [r2, #24]
    8a24:	2308      	movs	r3, #8
    8a26:	430b      	orrs	r3, r1
    8a28:	6193      	str	r3, [r2, #24]
    8a2a:	2201      	movs	r2, #1
    8a2c:	4b04      	ldr	r3, [pc, #16]	; (8a40 <system_gclk_init+0x20>)
    8a2e:	701a      	strb	r2, [r3, #0]
    8a30:	1c19      	adds	r1, r3, #0
    8a32:	780b      	ldrb	r3, [r1, #0]
    8a34:	4213      	tst	r3, r2
    8a36:	d1fc      	bne.n	8a32 <system_gclk_init+0x12>
    8a38:	4770      	bx	lr
    8a3a:	46c0      	nop			; (mov r8, r8)
    8a3c:	40000400 	.word	0x40000400
    8a40:	40000c00 	.word	0x40000c00

00008a44 <system_gclk_gen_set_config>:
    8a44:	b570      	push	{r4, r5, r6, lr}
    8a46:	1c04      	adds	r4, r0, #0
    8a48:	780d      	ldrb	r5, [r1, #0]
    8a4a:	022d      	lsls	r5, r5, #8
    8a4c:	4305      	orrs	r5, r0
    8a4e:	784b      	ldrb	r3, [r1, #1]
    8a50:	2b00      	cmp	r3, #0
    8a52:	d002      	beq.n	8a5a <system_gclk_gen_set_config+0x16>
    8a54:	2380      	movs	r3, #128	; 0x80
    8a56:	02db      	lsls	r3, r3, #11
    8a58:	431d      	orrs	r5, r3
    8a5a:	7a4b      	ldrb	r3, [r1, #9]
    8a5c:	2b00      	cmp	r3, #0
    8a5e:	d002      	beq.n	8a66 <system_gclk_gen_set_config+0x22>
    8a60:	2380      	movs	r3, #128	; 0x80
    8a62:	031b      	lsls	r3, r3, #12
    8a64:	431d      	orrs	r5, r3
    8a66:	684e      	ldr	r6, [r1, #4]
    8a68:	2e01      	cmp	r6, #1
    8a6a:	d918      	bls.n	8a9e <system_gclk_gen_set_config+0x5a>
    8a6c:	1e73      	subs	r3, r6, #1
    8a6e:	421e      	tst	r6, r3
    8a70:	d110      	bne.n	8a94 <system_gclk_gen_set_config+0x50>
    8a72:	2e02      	cmp	r6, #2
    8a74:	d906      	bls.n	8a84 <system_gclk_gen_set_config+0x40>
    8a76:	2302      	movs	r3, #2
    8a78:	2200      	movs	r2, #0
    8a7a:	3201      	adds	r2, #1
    8a7c:	005b      	lsls	r3, r3, #1
    8a7e:	429e      	cmp	r6, r3
    8a80:	d8fb      	bhi.n	8a7a <system_gclk_gen_set_config+0x36>
    8a82:	e000      	b.n	8a86 <system_gclk_gen_set_config+0x42>
    8a84:	2200      	movs	r2, #0
    8a86:	0212      	lsls	r2, r2, #8
    8a88:	4310      	orrs	r0, r2
    8a8a:	1c04      	adds	r4, r0, #0
    8a8c:	2380      	movs	r3, #128	; 0x80
    8a8e:	035b      	lsls	r3, r3, #13
    8a90:	431d      	orrs	r5, r3
    8a92:	e004      	b.n	8a9e <system_gclk_gen_set_config+0x5a>
    8a94:	0234      	lsls	r4, r6, #8
    8a96:	4304      	orrs	r4, r0
    8a98:	2380      	movs	r3, #128	; 0x80
    8a9a:	029b      	lsls	r3, r3, #10
    8a9c:	431d      	orrs	r5, r3
    8a9e:	7a0b      	ldrb	r3, [r1, #8]
    8aa0:	2b00      	cmp	r3, #0
    8aa2:	d002      	beq.n	8aaa <system_gclk_gen_set_config+0x66>
    8aa4:	2380      	movs	r3, #128	; 0x80
    8aa6:	039b      	lsls	r3, r3, #14
    8aa8:	431d      	orrs	r5, r3
    8aaa:	4a0c      	ldr	r2, [pc, #48]	; (8adc <system_gclk_gen_set_config+0x98>)
    8aac:	7853      	ldrb	r3, [r2, #1]
    8aae:	b25b      	sxtb	r3, r3
    8ab0:	2b00      	cmp	r3, #0
    8ab2:	dbfb      	blt.n	8aac <system_gclk_gen_set_config+0x68>
    8ab4:	4b0a      	ldr	r3, [pc, #40]	; (8ae0 <system_gclk_gen_set_config+0x9c>)
    8ab6:	4798      	blx	r3
    8ab8:	4b08      	ldr	r3, [pc, #32]	; (8adc <system_gclk_gen_set_config+0x98>)
    8aba:	609c      	str	r4, [r3, #8]
    8abc:	1c1a      	adds	r2, r3, #0
    8abe:	7853      	ldrb	r3, [r2, #1]
    8ac0:	b25b      	sxtb	r3, r3
    8ac2:	2b00      	cmp	r3, #0
    8ac4:	dbfb      	blt.n	8abe <system_gclk_gen_set_config+0x7a>
    8ac6:	4a05      	ldr	r2, [pc, #20]	; (8adc <system_gclk_gen_set_config+0x98>)
    8ac8:	6851      	ldr	r1, [r2, #4]
    8aca:	2380      	movs	r3, #128	; 0x80
    8acc:	025b      	lsls	r3, r3, #9
    8ace:	400b      	ands	r3, r1
    8ad0:	431d      	orrs	r5, r3
    8ad2:	6055      	str	r5, [r2, #4]
    8ad4:	4b03      	ldr	r3, [pc, #12]	; (8ae4 <system_gclk_gen_set_config+0xa0>)
    8ad6:	4798      	blx	r3
    8ad8:	bd70      	pop	{r4, r5, r6, pc}
    8ada:	46c0      	nop			; (mov r8, r8)
    8adc:	40000c00 	.word	0x40000c00
    8ae0:	00007461 	.word	0x00007461
    8ae4:	000074a1 	.word	0x000074a1

00008ae8 <system_gclk_gen_enable>:
    8ae8:	b510      	push	{r4, lr}
    8aea:	1c04      	adds	r4, r0, #0
    8aec:	4a0b      	ldr	r2, [pc, #44]	; (8b1c <system_gclk_gen_enable+0x34>)
    8aee:	7853      	ldrb	r3, [r2, #1]
    8af0:	b25b      	sxtb	r3, r3
    8af2:	2b00      	cmp	r3, #0
    8af4:	dbfb      	blt.n	8aee <system_gclk_gen_enable+0x6>
    8af6:	4b0a      	ldr	r3, [pc, #40]	; (8b20 <system_gclk_gen_enable+0x38>)
    8af8:	4798      	blx	r3
    8afa:	4b0a      	ldr	r3, [pc, #40]	; (8b24 <system_gclk_gen_enable+0x3c>)
    8afc:	701c      	strb	r4, [r3, #0]
    8afe:	4a07      	ldr	r2, [pc, #28]	; (8b1c <system_gclk_gen_enable+0x34>)
    8b00:	7853      	ldrb	r3, [r2, #1]
    8b02:	b25b      	sxtb	r3, r3
    8b04:	2b00      	cmp	r3, #0
    8b06:	dbfb      	blt.n	8b00 <system_gclk_gen_enable+0x18>
    8b08:	4a04      	ldr	r2, [pc, #16]	; (8b1c <system_gclk_gen_enable+0x34>)
    8b0a:	6853      	ldr	r3, [r2, #4]
    8b0c:	2180      	movs	r1, #128	; 0x80
    8b0e:	0249      	lsls	r1, r1, #9
    8b10:	430b      	orrs	r3, r1
    8b12:	6053      	str	r3, [r2, #4]
    8b14:	4b04      	ldr	r3, [pc, #16]	; (8b28 <system_gclk_gen_enable+0x40>)
    8b16:	4798      	blx	r3
    8b18:	bd10      	pop	{r4, pc}
    8b1a:	46c0      	nop			; (mov r8, r8)
    8b1c:	40000c00 	.word	0x40000c00
    8b20:	00007461 	.word	0x00007461
    8b24:	40000c04 	.word	0x40000c04
    8b28:	000074a1 	.word	0x000074a1

00008b2c <system_gclk_gen_get_hz>:
    8b2c:	b570      	push	{r4, r5, r6, lr}
    8b2e:	1c04      	adds	r4, r0, #0
    8b30:	4a1a      	ldr	r2, [pc, #104]	; (8b9c <system_gclk_gen_get_hz+0x70>)
    8b32:	7853      	ldrb	r3, [r2, #1]
    8b34:	b25b      	sxtb	r3, r3
    8b36:	2b00      	cmp	r3, #0
    8b38:	dbfb      	blt.n	8b32 <system_gclk_gen_get_hz+0x6>
    8b3a:	4b19      	ldr	r3, [pc, #100]	; (8ba0 <system_gclk_gen_get_hz+0x74>)
    8b3c:	4798      	blx	r3
    8b3e:	4b19      	ldr	r3, [pc, #100]	; (8ba4 <system_gclk_gen_get_hz+0x78>)
    8b40:	701c      	strb	r4, [r3, #0]
    8b42:	4a16      	ldr	r2, [pc, #88]	; (8b9c <system_gclk_gen_get_hz+0x70>)
    8b44:	7853      	ldrb	r3, [r2, #1]
    8b46:	b25b      	sxtb	r3, r3
    8b48:	2b00      	cmp	r3, #0
    8b4a:	dbfb      	blt.n	8b44 <system_gclk_gen_get_hz+0x18>
    8b4c:	4e13      	ldr	r6, [pc, #76]	; (8b9c <system_gclk_gen_get_hz+0x70>)
    8b4e:	6870      	ldr	r0, [r6, #4]
    8b50:	04c0      	lsls	r0, r0, #19
    8b52:	0ec0      	lsrs	r0, r0, #27
    8b54:	4b14      	ldr	r3, [pc, #80]	; (8ba8 <system_gclk_gen_get_hz+0x7c>)
    8b56:	4798      	blx	r3
    8b58:	1c05      	adds	r5, r0, #0
    8b5a:	4b12      	ldr	r3, [pc, #72]	; (8ba4 <system_gclk_gen_get_hz+0x78>)
    8b5c:	701c      	strb	r4, [r3, #0]
    8b5e:	6876      	ldr	r6, [r6, #4]
    8b60:	02f6      	lsls	r6, r6, #11
    8b62:	0ff6      	lsrs	r6, r6, #31
    8b64:	4b11      	ldr	r3, [pc, #68]	; (8bac <system_gclk_gen_get_hz+0x80>)
    8b66:	701c      	strb	r4, [r3, #0]
    8b68:	4a0c      	ldr	r2, [pc, #48]	; (8b9c <system_gclk_gen_get_hz+0x70>)
    8b6a:	7853      	ldrb	r3, [r2, #1]
    8b6c:	b25b      	sxtb	r3, r3
    8b6e:	2b00      	cmp	r3, #0
    8b70:	dbfb      	blt.n	8b6a <system_gclk_gen_get_hz+0x3e>
    8b72:	4b0a      	ldr	r3, [pc, #40]	; (8b9c <system_gclk_gen_get_hz+0x70>)
    8b74:	689c      	ldr	r4, [r3, #8]
    8b76:	0a24      	lsrs	r4, r4, #8
    8b78:	b2a4      	uxth	r4, r4
    8b7a:	4b0d      	ldr	r3, [pc, #52]	; (8bb0 <system_gclk_gen_get_hz+0x84>)
    8b7c:	4798      	blx	r3
    8b7e:	2e00      	cmp	r6, #0
    8b80:	d107      	bne.n	8b92 <system_gclk_gen_get_hz+0x66>
    8b82:	2c01      	cmp	r4, #1
    8b84:	d907      	bls.n	8b96 <system_gclk_gen_get_hz+0x6a>
    8b86:	1c28      	adds	r0, r5, #0
    8b88:	1c21      	adds	r1, r4, #0
    8b8a:	4b0a      	ldr	r3, [pc, #40]	; (8bb4 <system_gclk_gen_get_hz+0x88>)
    8b8c:	4798      	blx	r3
    8b8e:	1c05      	adds	r5, r0, #0
    8b90:	e001      	b.n	8b96 <system_gclk_gen_get_hz+0x6a>
    8b92:	3401      	adds	r4, #1
    8b94:	40e5      	lsrs	r5, r4
    8b96:	1c28      	adds	r0, r5, #0
    8b98:	bd70      	pop	{r4, r5, r6, pc}
    8b9a:	46c0      	nop			; (mov r8, r8)
    8b9c:	40000c00 	.word	0x40000c00
    8ba0:	00007461 	.word	0x00007461
    8ba4:	40000c04 	.word	0x40000c04
    8ba8:	0000860d 	.word	0x0000860d
    8bac:	40000c08 	.word	0x40000c08
    8bb0:	000074a1 	.word	0x000074a1
    8bb4:	00009c75 	.word	0x00009c75

00008bb8 <system_gclk_chan_enable>:
    8bb8:	b510      	push	{r4, lr}
    8bba:	1c04      	adds	r4, r0, #0
    8bbc:	4b06      	ldr	r3, [pc, #24]	; (8bd8 <system_gclk_chan_enable+0x20>)
    8bbe:	4798      	blx	r3
    8bc0:	4b06      	ldr	r3, [pc, #24]	; (8bdc <system_gclk_chan_enable+0x24>)
    8bc2:	701c      	strb	r4, [r3, #0]
    8bc4:	4a06      	ldr	r2, [pc, #24]	; (8be0 <system_gclk_chan_enable+0x28>)
    8bc6:	8851      	ldrh	r1, [r2, #2]
    8bc8:	2380      	movs	r3, #128	; 0x80
    8bca:	01db      	lsls	r3, r3, #7
    8bcc:	430b      	orrs	r3, r1
    8bce:	8053      	strh	r3, [r2, #2]
    8bd0:	4b04      	ldr	r3, [pc, #16]	; (8be4 <system_gclk_chan_enable+0x2c>)
    8bd2:	4798      	blx	r3
    8bd4:	bd10      	pop	{r4, pc}
    8bd6:	46c0      	nop			; (mov r8, r8)
    8bd8:	00007461 	.word	0x00007461
    8bdc:	40000c02 	.word	0x40000c02
    8be0:	40000c00 	.word	0x40000c00
    8be4:	000074a1 	.word	0x000074a1

00008be8 <system_gclk_chan_disable>:
    8be8:	b510      	push	{r4, lr}
    8bea:	1c04      	adds	r4, r0, #0
    8bec:	4b0f      	ldr	r3, [pc, #60]	; (8c2c <system_gclk_chan_disable+0x44>)
    8bee:	4798      	blx	r3
    8bf0:	4b0f      	ldr	r3, [pc, #60]	; (8c30 <system_gclk_chan_disable+0x48>)
    8bf2:	701c      	strb	r4, [r3, #0]
    8bf4:	4b0f      	ldr	r3, [pc, #60]	; (8c34 <system_gclk_chan_disable+0x4c>)
    8bf6:	885a      	ldrh	r2, [r3, #2]
    8bf8:	0512      	lsls	r2, r2, #20
    8bfa:	0f10      	lsrs	r0, r2, #28
    8bfc:	8859      	ldrh	r1, [r3, #2]
    8bfe:	4a0e      	ldr	r2, [pc, #56]	; (8c38 <system_gclk_chan_disable+0x50>)
    8c00:	400a      	ands	r2, r1
    8c02:	805a      	strh	r2, [r3, #2]
    8c04:	8859      	ldrh	r1, [r3, #2]
    8c06:	4a0d      	ldr	r2, [pc, #52]	; (8c3c <system_gclk_chan_disable+0x54>)
    8c08:	400a      	ands	r2, r1
    8c0a:	805a      	strh	r2, [r3, #2]
    8c0c:	1c19      	adds	r1, r3, #0
    8c0e:	2280      	movs	r2, #128	; 0x80
    8c10:	01d2      	lsls	r2, r2, #7
    8c12:	884b      	ldrh	r3, [r1, #2]
    8c14:	4213      	tst	r3, r2
    8c16:	d1fc      	bne.n	8c12 <system_gclk_chan_disable+0x2a>
    8c18:	4906      	ldr	r1, [pc, #24]	; (8c34 <system_gclk_chan_disable+0x4c>)
    8c1a:	0202      	lsls	r2, r0, #8
    8c1c:	8848      	ldrh	r0, [r1, #2]
    8c1e:	4b06      	ldr	r3, [pc, #24]	; (8c38 <system_gclk_chan_disable+0x50>)
    8c20:	4003      	ands	r3, r0
    8c22:	4313      	orrs	r3, r2
    8c24:	804b      	strh	r3, [r1, #2]
    8c26:	4b06      	ldr	r3, [pc, #24]	; (8c40 <system_gclk_chan_disable+0x58>)
    8c28:	4798      	blx	r3
    8c2a:	bd10      	pop	{r4, pc}
    8c2c:	00007461 	.word	0x00007461
    8c30:	40000c02 	.word	0x40000c02
    8c34:	40000c00 	.word	0x40000c00
    8c38:	fffff0ff 	.word	0xfffff0ff
    8c3c:	ffffbfff 	.word	0xffffbfff
    8c40:	000074a1 	.word	0x000074a1

00008c44 <system_gclk_chan_set_config>:
    8c44:	b510      	push	{r4, lr}
    8c46:	780c      	ldrb	r4, [r1, #0]
    8c48:	0224      	lsls	r4, r4, #8
    8c4a:	4304      	orrs	r4, r0
    8c4c:	4b02      	ldr	r3, [pc, #8]	; (8c58 <system_gclk_chan_set_config+0x14>)
    8c4e:	4798      	blx	r3
    8c50:	b2a4      	uxth	r4, r4
    8c52:	4b02      	ldr	r3, [pc, #8]	; (8c5c <system_gclk_chan_set_config+0x18>)
    8c54:	805c      	strh	r4, [r3, #2]
    8c56:	bd10      	pop	{r4, pc}
    8c58:	00008be9 	.word	0x00008be9
    8c5c:	40000c00 	.word	0x40000c00

00008c60 <system_gclk_chan_get_hz>:
    8c60:	b510      	push	{r4, lr}
    8c62:	1c04      	adds	r4, r0, #0
    8c64:	4b06      	ldr	r3, [pc, #24]	; (8c80 <system_gclk_chan_get_hz+0x20>)
    8c66:	4798      	blx	r3
    8c68:	4b06      	ldr	r3, [pc, #24]	; (8c84 <system_gclk_chan_get_hz+0x24>)
    8c6a:	701c      	strb	r4, [r3, #0]
    8c6c:	4b06      	ldr	r3, [pc, #24]	; (8c88 <system_gclk_chan_get_hz+0x28>)
    8c6e:	885c      	ldrh	r4, [r3, #2]
    8c70:	0524      	lsls	r4, r4, #20
    8c72:	0f24      	lsrs	r4, r4, #28
    8c74:	4b05      	ldr	r3, [pc, #20]	; (8c8c <system_gclk_chan_get_hz+0x2c>)
    8c76:	4798      	blx	r3
    8c78:	1c20      	adds	r0, r4, #0
    8c7a:	4b05      	ldr	r3, [pc, #20]	; (8c90 <system_gclk_chan_get_hz+0x30>)
    8c7c:	4798      	blx	r3
    8c7e:	bd10      	pop	{r4, pc}
    8c80:	00007461 	.word	0x00007461
    8c84:	40000c02 	.word	0x40000c02
    8c88:	40000c00 	.word	0x40000c00
    8c8c:	000074a1 	.word	0x000074a1
    8c90:	00008b2d 	.word	0x00008b2d

00008c94 <_system_pinmux_config>:
    8c94:	b530      	push	{r4, r5, lr}
    8c96:	78d3      	ldrb	r3, [r2, #3]
    8c98:	2b00      	cmp	r3, #0
    8c9a:	d11e      	bne.n	8cda <_system_pinmux_config+0x46>
    8c9c:	7814      	ldrb	r4, [r2, #0]
    8c9e:	2c80      	cmp	r4, #128	; 0x80
    8ca0:	d004      	beq.n	8cac <_system_pinmux_config+0x18>
    8ca2:	0624      	lsls	r4, r4, #24
    8ca4:	2380      	movs	r3, #128	; 0x80
    8ca6:	025b      	lsls	r3, r3, #9
    8ca8:	431c      	orrs	r4, r3
    8caa:	e000      	b.n	8cae <_system_pinmux_config+0x1a>
    8cac:	2400      	movs	r4, #0
    8cae:	7853      	ldrb	r3, [r2, #1]
    8cb0:	2502      	movs	r5, #2
    8cb2:	43ab      	bics	r3, r5
    8cb4:	d10a      	bne.n	8ccc <_system_pinmux_config+0x38>
    8cb6:	7893      	ldrb	r3, [r2, #2]
    8cb8:	2b00      	cmp	r3, #0
    8cba:	d103      	bne.n	8cc4 <_system_pinmux_config+0x30>
    8cbc:	2380      	movs	r3, #128	; 0x80
    8cbe:	029b      	lsls	r3, r3, #10
    8cc0:	431c      	orrs	r4, r3
    8cc2:	e002      	b.n	8cca <_system_pinmux_config+0x36>
    8cc4:	23c0      	movs	r3, #192	; 0xc0
    8cc6:	02db      	lsls	r3, r3, #11
    8cc8:	431c      	orrs	r4, r3
    8cca:	6041      	str	r1, [r0, #4]
    8ccc:	7853      	ldrb	r3, [r2, #1]
    8cce:	3b01      	subs	r3, #1
    8cd0:	2b01      	cmp	r3, #1
    8cd2:	d812      	bhi.n	8cfa <_system_pinmux_config+0x66>
    8cd4:	4b18      	ldr	r3, [pc, #96]	; (8d38 <_system_pinmux_config+0xa4>)
    8cd6:	401c      	ands	r4, r3
    8cd8:	e00f      	b.n	8cfa <_system_pinmux_config+0x66>
    8cda:	6041      	str	r1, [r0, #4]
    8cdc:	040b      	lsls	r3, r1, #16
    8cde:	0c1b      	lsrs	r3, r3, #16
    8ce0:	24a0      	movs	r4, #160	; 0xa0
    8ce2:	05e4      	lsls	r4, r4, #23
    8ce4:	4323      	orrs	r3, r4
    8ce6:	6283      	str	r3, [r0, #40]	; 0x28
    8ce8:	0c0b      	lsrs	r3, r1, #16
    8cea:	24d0      	movs	r4, #208	; 0xd0
    8cec:	0624      	lsls	r4, r4, #24
    8cee:	4323      	orrs	r3, r4
    8cf0:	6283      	str	r3, [r0, #40]	; 0x28
    8cf2:	78d3      	ldrb	r3, [r2, #3]
    8cf4:	2b00      	cmp	r3, #0
    8cf6:	d018      	beq.n	8d2a <_system_pinmux_config+0x96>
    8cf8:	e01c      	b.n	8d34 <_system_pinmux_config+0xa0>
    8cfa:	040b      	lsls	r3, r1, #16
    8cfc:	0c1b      	lsrs	r3, r3, #16
    8cfe:	25a0      	movs	r5, #160	; 0xa0
    8d00:	05ed      	lsls	r5, r5, #23
    8d02:	432b      	orrs	r3, r5
    8d04:	4323      	orrs	r3, r4
    8d06:	6283      	str	r3, [r0, #40]	; 0x28
    8d08:	0c0b      	lsrs	r3, r1, #16
    8d0a:	25d0      	movs	r5, #208	; 0xd0
    8d0c:	062d      	lsls	r5, r5, #24
    8d0e:	432b      	orrs	r3, r5
    8d10:	4323      	orrs	r3, r4
    8d12:	6283      	str	r3, [r0, #40]	; 0x28
    8d14:	78d3      	ldrb	r3, [r2, #3]
    8d16:	2b00      	cmp	r3, #0
    8d18:	d10c      	bne.n	8d34 <_system_pinmux_config+0xa0>
    8d1a:	0363      	lsls	r3, r4, #13
    8d1c:	d505      	bpl.n	8d2a <_system_pinmux_config+0x96>
    8d1e:	7893      	ldrb	r3, [r2, #2]
    8d20:	2b01      	cmp	r3, #1
    8d22:	d101      	bne.n	8d28 <_system_pinmux_config+0x94>
    8d24:	6181      	str	r1, [r0, #24]
    8d26:	e000      	b.n	8d2a <_system_pinmux_config+0x96>
    8d28:	6141      	str	r1, [r0, #20]
    8d2a:	7853      	ldrb	r3, [r2, #1]
    8d2c:	3b01      	subs	r3, #1
    8d2e:	2b01      	cmp	r3, #1
    8d30:	d800      	bhi.n	8d34 <_system_pinmux_config+0xa0>
    8d32:	6081      	str	r1, [r0, #8]
    8d34:	bd30      	pop	{r4, r5, pc}
    8d36:	46c0      	nop			; (mov r8, r8)
    8d38:	fffbffff 	.word	0xfffbffff

00008d3c <system_pinmux_pin_set_config>:
    8d3c:	b508      	push	{r3, lr}
    8d3e:	1c03      	adds	r3, r0, #0
    8d40:	1c0a      	adds	r2, r1, #0
    8d42:	09c1      	lsrs	r1, r0, #7
    8d44:	2000      	movs	r0, #0
    8d46:	2900      	cmp	r1, #0
    8d48:	d104      	bne.n	8d54 <system_pinmux_pin_set_config+0x18>
    8d4a:	0958      	lsrs	r0, r3, #5
    8d4c:	01c0      	lsls	r0, r0, #7
    8d4e:	4905      	ldr	r1, [pc, #20]	; (8d64 <system_pinmux_pin_set_config+0x28>)
    8d50:	468c      	mov	ip, r1
    8d52:	4460      	add	r0, ip
    8d54:	211f      	movs	r1, #31
    8d56:	400b      	ands	r3, r1
    8d58:	391e      	subs	r1, #30
    8d5a:	4099      	lsls	r1, r3
    8d5c:	4b02      	ldr	r3, [pc, #8]	; (8d68 <system_pinmux_pin_set_config+0x2c>)
    8d5e:	4798      	blx	r3
    8d60:	bd08      	pop	{r3, pc}
    8d62:	46c0      	nop			; (mov r8, r8)
    8d64:	41004400 	.word	0x41004400
    8d68:	00008c95 	.word	0x00008c95

00008d6c <_system_dummy_init>:
    8d6c:	4770      	bx	lr
    8d6e:	46c0      	nop			; (mov r8, r8)

00008d70 <system_init>:
    8d70:	b508      	push	{r3, lr}
    8d72:	4b05      	ldr	r3, [pc, #20]	; (8d88 <system_init+0x18>)
    8d74:	4798      	blx	r3
    8d76:	4b05      	ldr	r3, [pc, #20]	; (8d8c <system_init+0x1c>)
    8d78:	4798      	blx	r3
    8d7a:	4b05      	ldr	r3, [pc, #20]	; (8d90 <system_init+0x20>)
    8d7c:	4798      	blx	r3
    8d7e:	4b05      	ldr	r3, [pc, #20]	; (8d94 <system_init+0x24>)
    8d80:	4798      	blx	r3
    8d82:	4b05      	ldr	r3, [pc, #20]	; (8d98 <system_init+0x28>)
    8d84:	4798      	blx	r3
    8d86:	bd08      	pop	{r3, pc}
    8d88:	000088c1 	.word	0x000088c1
    8d8c:	000074d1 	.word	0x000074d1
    8d90:	00008d6d 	.word	0x00008d6d
    8d94:	000075f5 	.word	0x000075f5
    8d98:	00008d6d 	.word	0x00008d6d

00008d9c <Dummy_Handler>:
    8d9c:	e7fe      	b.n	8d9c <Dummy_Handler>
    8d9e:	46c0      	nop			; (mov r8, r8)

00008da0 <Reset_Handler>:
    8da0:	b570      	push	{r4, r5, r6, lr}
    8da2:	4b2e      	ldr	r3, [pc, #184]	; (8e5c <Reset_Handler+0xbc>)
    8da4:	4a2e      	ldr	r2, [pc, #184]	; (8e60 <Reset_Handler+0xc0>)
    8da6:	429a      	cmp	r2, r3
    8da8:	d003      	beq.n	8db2 <Reset_Handler+0x12>
    8daa:	4b2e      	ldr	r3, [pc, #184]	; (8e64 <Reset_Handler+0xc4>)
    8dac:	4a2b      	ldr	r2, [pc, #172]	; (8e5c <Reset_Handler+0xbc>)
    8dae:	429a      	cmp	r2, r3
    8db0:	d304      	bcc.n	8dbc <Reset_Handler+0x1c>
    8db2:	4b2d      	ldr	r3, [pc, #180]	; (8e68 <Reset_Handler+0xc8>)
    8db4:	4a2d      	ldr	r2, [pc, #180]	; (8e6c <Reset_Handler+0xcc>)
    8db6:	429a      	cmp	r2, r3
    8db8:	d310      	bcc.n	8ddc <Reset_Handler+0x3c>
    8dba:	e01e      	b.n	8dfa <Reset_Handler+0x5a>
    8dbc:	4a2c      	ldr	r2, [pc, #176]	; (8e70 <Reset_Handler+0xd0>)
    8dbe:	4b29      	ldr	r3, [pc, #164]	; (8e64 <Reset_Handler+0xc4>)
    8dc0:	3303      	adds	r3, #3
    8dc2:	1a9b      	subs	r3, r3, r2
    8dc4:	089b      	lsrs	r3, r3, #2
    8dc6:	3301      	adds	r3, #1
    8dc8:	009b      	lsls	r3, r3, #2
    8dca:	2200      	movs	r2, #0
    8dcc:	4823      	ldr	r0, [pc, #140]	; (8e5c <Reset_Handler+0xbc>)
    8dce:	4924      	ldr	r1, [pc, #144]	; (8e60 <Reset_Handler+0xc0>)
    8dd0:	588c      	ldr	r4, [r1, r2]
    8dd2:	5084      	str	r4, [r0, r2]
    8dd4:	3204      	adds	r2, #4
    8dd6:	429a      	cmp	r2, r3
    8dd8:	d1fa      	bne.n	8dd0 <Reset_Handler+0x30>
    8dda:	e7ea      	b.n	8db2 <Reset_Handler+0x12>
    8ddc:	4a25      	ldr	r2, [pc, #148]	; (8e74 <Reset_Handler+0xd4>)
    8dde:	4b22      	ldr	r3, [pc, #136]	; (8e68 <Reset_Handler+0xc8>)
    8de0:	3303      	adds	r3, #3
    8de2:	1a9b      	subs	r3, r3, r2
    8de4:	089b      	lsrs	r3, r3, #2
    8de6:	3301      	adds	r3, #1
    8de8:	009b      	lsls	r3, r3, #2
    8dea:	2200      	movs	r2, #0
    8dec:	481f      	ldr	r0, [pc, #124]	; (8e6c <Reset_Handler+0xcc>)
    8dee:	2100      	movs	r1, #0
    8df0:	1814      	adds	r4, r2, r0
    8df2:	6021      	str	r1, [r4, #0]
    8df4:	3204      	adds	r2, #4
    8df6:	429a      	cmp	r2, r3
    8df8:	d1fa      	bne.n	8df0 <Reset_Handler+0x50>
    8dfa:	4a1f      	ldr	r2, [pc, #124]	; (8e78 <Reset_Handler+0xd8>)
    8dfc:	21ff      	movs	r1, #255	; 0xff
    8dfe:	4b1f      	ldr	r3, [pc, #124]	; (8e7c <Reset_Handler+0xdc>)
    8e00:	438b      	bics	r3, r1
    8e02:	6093      	str	r3, [r2, #8]
    8e04:	39fd      	subs	r1, #253	; 0xfd
    8e06:	2390      	movs	r3, #144	; 0x90
    8e08:	005b      	lsls	r3, r3, #1
    8e0a:	4a1d      	ldr	r2, [pc, #116]	; (8e80 <Reset_Handler+0xe0>)
    8e0c:	50d1      	str	r1, [r2, r3]
    8e0e:	481d      	ldr	r0, [pc, #116]	; (8e84 <Reset_Handler+0xe4>)
    8e10:	78c3      	ldrb	r3, [r0, #3]
    8e12:	2403      	movs	r4, #3
    8e14:	43a3      	bics	r3, r4
    8e16:	2202      	movs	r2, #2
    8e18:	4313      	orrs	r3, r2
    8e1a:	70c3      	strb	r3, [r0, #3]
    8e1c:	78c3      	ldrb	r3, [r0, #3]
    8e1e:	260c      	movs	r6, #12
    8e20:	43b3      	bics	r3, r6
    8e22:	2108      	movs	r1, #8
    8e24:	430b      	orrs	r3, r1
    8e26:	70c3      	strb	r3, [r0, #3]
    8e28:	4b17      	ldr	r3, [pc, #92]	; (8e88 <Reset_Handler+0xe8>)
    8e2a:	7b98      	ldrb	r0, [r3, #14]
    8e2c:	2530      	movs	r5, #48	; 0x30
    8e2e:	43a8      	bics	r0, r5
    8e30:	1c05      	adds	r5, r0, #0
    8e32:	2020      	movs	r0, #32
    8e34:	4328      	orrs	r0, r5
    8e36:	7398      	strb	r0, [r3, #14]
    8e38:	7b98      	ldrb	r0, [r3, #14]
    8e3a:	43b0      	bics	r0, r6
    8e3c:	4301      	orrs	r1, r0
    8e3e:	7399      	strb	r1, [r3, #14]
    8e40:	7b99      	ldrb	r1, [r3, #14]
    8e42:	43a1      	bics	r1, r4
    8e44:	430a      	orrs	r2, r1
    8e46:	739a      	strb	r2, [r3, #14]
    8e48:	4a10      	ldr	r2, [pc, #64]	; (8e8c <Reset_Handler+0xec>)
    8e4a:	6851      	ldr	r1, [r2, #4]
    8e4c:	2380      	movs	r3, #128	; 0x80
    8e4e:	430b      	orrs	r3, r1
    8e50:	6053      	str	r3, [r2, #4]
    8e52:	4b0f      	ldr	r3, [pc, #60]	; (8e90 <Reset_Handler+0xf0>)
    8e54:	4798      	blx	r3
    8e56:	4b0f      	ldr	r3, [pc, #60]	; (8e94 <Reset_Handler+0xf4>)
    8e58:	4798      	blx	r3
    8e5a:	e7fe      	b.n	8e5a <Reset_Handler+0xba>
    8e5c:	20000000 	.word	0x20000000
    8e60:	00012804 	.word	0x00012804
    8e64:	200000c8 	.word	0x200000c8
    8e68:	20000b30 	.word	0x20000b30
    8e6c:	200000c8 	.word	0x200000c8
    8e70:	20000004 	.word	0x20000004
    8e74:	200000cc 	.word	0x200000cc
    8e78:	e000ed00 	.word	0xe000ed00
    8e7c:	00000000 	.word	0x00000000
    8e80:	41007000 	.word	0x41007000
    8e84:	41005000 	.word	0x41005000
    8e88:	41004800 	.word	0x41004800
    8e8c:	41004000 	.word	0x41004000
    8e90:	0000c01d 	.word	0x0000c01d
    8e94:	00009261 	.word	0x00009261

00008e98 <_read>:
    8e98:	b5f0      	push	{r4, r5, r6, r7, lr}
    8e9a:	4647      	mov	r7, r8
    8e9c:	b480      	push	{r7}
    8e9e:	1c0c      	adds	r4, r1, #0
    8ea0:	4690      	mov	r8, r2
    8ea2:	2800      	cmp	r0, #0
    8ea4:	d110      	bne.n	8ec8 <_read+0x30>
    8ea6:	2a00      	cmp	r2, #0
    8ea8:	dd0a      	ble.n	8ec0 <_read+0x28>
    8eaa:	188f      	adds	r7, r1, r2
    8eac:	4e09      	ldr	r6, [pc, #36]	; (8ed4 <_read+0x3c>)
    8eae:	4d0a      	ldr	r5, [pc, #40]	; (8ed8 <_read+0x40>)
    8eb0:	6830      	ldr	r0, [r6, #0]
    8eb2:	1c21      	adds	r1, r4, #0
    8eb4:	682b      	ldr	r3, [r5, #0]
    8eb6:	4798      	blx	r3
    8eb8:	3401      	adds	r4, #1
    8eba:	42bc      	cmp	r4, r7
    8ebc:	d1f8      	bne.n	8eb0 <_read+0x18>
    8ebe:	e001      	b.n	8ec4 <_read+0x2c>
    8ec0:	2300      	movs	r3, #0
    8ec2:	4698      	mov	r8, r3
    8ec4:	4640      	mov	r0, r8
    8ec6:	e001      	b.n	8ecc <_read+0x34>
    8ec8:	2001      	movs	r0, #1
    8eca:	4240      	negs	r0, r0
    8ecc:	bc04      	pop	{r2}
    8ece:	4690      	mov	r8, r2
    8ed0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8ed2:	46c0      	nop			; (mov r8, r8)
    8ed4:	20000acc 	.word	0x20000acc
    8ed8:	20000ac4 	.word	0x20000ac4

00008edc <_write>:
    8edc:	b5f0      	push	{r4, r5, r6, r7, lr}
    8ede:	4647      	mov	r7, r8
    8ee0:	b480      	push	{r7}
    8ee2:	3801      	subs	r0, #1
    8ee4:	2802      	cmp	r0, #2
    8ee6:	d815      	bhi.n	8f14 <_write+0x38>
    8ee8:	2a00      	cmp	r2, #0
    8eea:	d010      	beq.n	8f0e <_write+0x32>
    8eec:	1c15      	adds	r5, r2, #0
    8eee:	1c0e      	adds	r6, r1, #0
    8ef0:	2400      	movs	r4, #0
    8ef2:	4b0c      	ldr	r3, [pc, #48]	; (8f24 <_write+0x48>)
    8ef4:	4698      	mov	r8, r3
    8ef6:	4f0c      	ldr	r7, [pc, #48]	; (8f28 <_write+0x4c>)
    8ef8:	4643      	mov	r3, r8
    8efa:	6818      	ldr	r0, [r3, #0]
    8efc:	5d31      	ldrb	r1, [r6, r4]
    8efe:	683b      	ldr	r3, [r7, #0]
    8f00:	4798      	blx	r3
    8f02:	2800      	cmp	r0, #0
    8f04:	db09      	blt.n	8f1a <_write+0x3e>
    8f06:	3401      	adds	r4, #1
    8f08:	42a5      	cmp	r5, r4
    8f0a:	d1f5      	bne.n	8ef8 <_write+0x1c>
    8f0c:	e000      	b.n	8f10 <_write+0x34>
    8f0e:	2400      	movs	r4, #0
    8f10:	1c20      	adds	r0, r4, #0
    8f12:	e004      	b.n	8f1e <_write+0x42>
    8f14:	2001      	movs	r0, #1
    8f16:	4240      	negs	r0, r0
    8f18:	e001      	b.n	8f1e <_write+0x42>
    8f1a:	2001      	movs	r0, #1
    8f1c:	4240      	negs	r0, r0
    8f1e:	bc04      	pop	{r2}
    8f20:	4690      	mov	r8, r2
    8f22:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8f24:	20000acc 	.word	0x20000acc
    8f28:	20000ac8 	.word	0x20000ac8

00008f2c <_sbrk>:
    8f2c:	1c03      	adds	r3, r0, #0
    8f2e:	4a06      	ldr	r2, [pc, #24]	; (8f48 <_sbrk+0x1c>)
    8f30:	6812      	ldr	r2, [r2, #0]
    8f32:	2a00      	cmp	r2, #0
    8f34:	d102      	bne.n	8f3c <_sbrk+0x10>
    8f36:	4905      	ldr	r1, [pc, #20]	; (8f4c <_sbrk+0x20>)
    8f38:	4a03      	ldr	r2, [pc, #12]	; (8f48 <_sbrk+0x1c>)
    8f3a:	6011      	str	r1, [r2, #0]
    8f3c:	4a02      	ldr	r2, [pc, #8]	; (8f48 <_sbrk+0x1c>)
    8f3e:	6810      	ldr	r0, [r2, #0]
    8f40:	18c3      	adds	r3, r0, r3
    8f42:	6013      	str	r3, [r2, #0]
    8f44:	4770      	bx	lr
    8f46:	46c0      	nop			; (mov r8, r8)
    8f48:	200006dc 	.word	0x200006dc
    8f4c:	20002b30 	.word	0x20002b30

00008f50 <_close>:
    8f50:	2001      	movs	r0, #1
    8f52:	4240      	negs	r0, r0
    8f54:	4770      	bx	lr
    8f56:	46c0      	nop			; (mov r8, r8)

00008f58 <_fstat>:
    8f58:	2380      	movs	r3, #128	; 0x80
    8f5a:	019b      	lsls	r3, r3, #6
    8f5c:	604b      	str	r3, [r1, #4]
    8f5e:	2000      	movs	r0, #0
    8f60:	4770      	bx	lr
    8f62:	46c0      	nop			; (mov r8, r8)

00008f64 <_isatty>:
    8f64:	2001      	movs	r0, #1
    8f66:	4770      	bx	lr

00008f68 <_lseek>:
    8f68:	2000      	movs	r0, #0
    8f6a:	4770      	bx	lr

00008f6c <configure_i2c_master>:

/* used to init I2C software module. */
struct i2c_master_module i2c_master_instance;

void configure_i2c_master(void)
{
    8f6c:	b530      	push	{r4, r5, lr}
    8f6e:	b08d      	sub	sp, #52	; 0x34
static inline void i2c_master_get_config_defaults(
		struct i2c_master_config *const config)
{
	/*Sanity check argument. */
	Assert(config);
	config->baud_rate        = I2C_MASTER_BAUD_RATE_100KHZ;
    8f70:	2364      	movs	r3, #100	; 0x64
    8f72:	9300      	str	r3, [sp, #0]
#ifdef FEATURE_I2C_FAST_MODE_PLUS_AND_HIGH_SPEED
	config->baud_rate_high_speed = I2C_MASTER_BAUD_RATE_3400KHZ;
    8f74:	4b21      	ldr	r3, [pc, #132]	; (8ffc <configure_i2c_master+0x90>)
    8f76:	9301      	str	r3, [sp, #4]
	config->transfer_speed       = I2C_MASTER_SPEED_STANDARD_AND_FAST;
    8f78:	2300      	movs	r3, #0
    8f7a:	9302      	str	r3, [sp, #8]
#endif
	config->generator_source = GCLK_GENERATOR_0;
    8f7c:	466a      	mov	r2, sp
    8f7e:	7313      	strb	r3, [r2, #12]
	config->run_in_standby   = false;
    8f80:	7613      	strb	r3, [r2, #24]
	config->start_hold_time  = I2C_MASTER_START_HOLD_TIME_300NS_600NS;
    8f82:	2280      	movs	r2, #128	; 0x80
    8f84:	0392      	lsls	r2, r2, #14
    8f86:	9204      	str	r2, [sp, #16]
	config->buffer_timeout   = 65535;
	config->unknown_bus_state_timeout = 65535;
    8f88:	2201      	movs	r2, #1
    8f8a:	4252      	negs	r2, r2
    8f8c:	4669      	mov	r1, sp
    8f8e:	828a      	strh	r2, [r1, #20]
	config->pinmux_pad0      = PINMUX_DEFAULT;
    8f90:	9307      	str	r3, [sp, #28]
	config->pinmux_pad1      = PINMUX_DEFAULT;
    8f92:	9308      	str	r3, [sp, #32]
	config->scl_low_timeout  = false;
    8f94:	3225      	adds	r2, #37	; 0x25
    8f96:	548b      	strb	r3, [r1, r2]
	config->inactive_timeout = I2C_MASTER_INACTIVE_TIMEOUT_DISABLED;
    8f98:	930a      	str	r3, [sp, #40]	; 0x28
#ifdef FEATURE_I2C_SCL_STRETCH_MODE
	config->scl_stretch_only_after_ack_bit = false;
    8f9a:	3208      	adds	r2, #8
    8f9c:	548b      	strb	r3, [r1, r2]
#endif
#ifdef FEATURE_I2C_SCL_EXTEND_TIMEOUT
	config->slave_scl_low_extend_timeout   = false;
    8f9e:	3201      	adds	r2, #1
    8fa0:	548b      	strb	r3, [r1, r2]
	config->master_scl_low_extend_timeout  = false;
    8fa2:	3201      	adds	r2, #1
    8fa4:	548b      	strb	r3, [r1, r2]
    /* initialize config structure and software module */
    struct i2c_master_config config_i2c_master;
    i2c_master_get_config_defaults(&config_i2c_master);

    /* change buffer timeout to something longer */
    config_i2c_master.buffer_timeout = 10000;
    8fa6:	4b16      	ldr	r3, [pc, #88]	; (9000 <configure_i2c_master+0x94>)
    8fa8:	466a      	mov	r2, sp
    8faa:	82cb      	strh	r3, [r1, #22]

    /* initialize and enable device with config. */
    i2c_master_init(&i2c_master_instance, SERCOM2, &config_i2c_master);
    8fac:	4c15      	ldr	r4, [pc, #84]	; (9004 <configure_i2c_master+0x98>)
    8fae:	1c20      	adds	r0, r4, #0
    8fb0:	4915      	ldr	r1, [pc, #84]	; (9008 <configure_i2c_master+0x9c>)
    8fb2:	4b16      	ldr	r3, [pc, #88]	; (900c <configure_i2c_master+0xa0>)
    8fb4:	4798      	blx	r3
{
	/* Sanity check of arguments. */
	Assert(module);
	Assert(module->hw);

	SercomI2cm *const i2c_module = &(module->hw->I2CM);
    8fb6:	6824      	ldr	r4, [r4, #0]
	SercomI2cm *const i2c_hw = &(module->hw->I2CM);

#if defined(FEATURE_SERCOM_SYNCBUSY_SCHEME_VERSION_1)
	return (i2c_hw->STATUS.reg & SERCOM_I2CM_STATUS_SYNCBUSY);
#elif defined(FEATURE_SERCOM_SYNCBUSY_SCHEME_VERSION_2)
	return (i2c_hw->SYNCBUSY.reg & SERCOM_I2CM_SYNCBUSY_MASK);
    8fb8:	2207      	movs	r2, #7
    8fba:	69e3      	ldr	r3, [r4, #28]
		const struct i2c_master_module *const module)
{
	/* Sanity check. */
	Assert(module);

	while (i2c_master_is_syncing(module)) {
    8fbc:	421a      	tst	r2, r3
    8fbe:	d1fc      	bne.n	8fba <configure_i2c_master+0x4e>

	/* Wait for module to sync. */
	_i2c_master_wait_for_sync(module);

	/* Enable module. */
	i2c_module->CTRLA.reg |= SERCOM_I2CM_CTRLA_ENABLE;
    8fc0:	6822      	ldr	r2, [r4, #0]
    8fc2:	2302      	movs	r3, #2
    8fc4:	4313      	orrs	r3, r2
    8fc6:	6023      	str	r3, [r4, #0]

#if I2C_MASTER_CALLBACK_MODE == true
	/* Enable module interrupts */
	system_interrupt_enable(_sercom_get_interrupt_vector(module->hw));
    8fc8:	4d0e      	ldr	r5, [pc, #56]	; (9004 <configure_i2c_master+0x98>)
    8fca:	6828      	ldr	r0, [r5, #0]
    8fcc:	4b10      	ldr	r3, [pc, #64]	; (9010 <configure_i2c_master+0xa4>)
    8fce:	4798      	blx	r3
 * \param[in] vector Interrupt vector to enable
 */
static inline void system_interrupt_enable(
		const enum system_interrupt_vector vector)
{
	NVIC->ISER[0] = (uint32_t)(1 << ((uint32_t)vector & 0x0000001f));
    8fd0:	231f      	movs	r3, #31
    8fd2:	4018      	ands	r0, r3
    8fd4:	3b1e      	subs	r3, #30
    8fd6:	4083      	lsls	r3, r0
    8fd8:	1c18      	adds	r0, r3, #0
    8fda:	4b0e      	ldr	r3, [pc, #56]	; (9014 <configure_i2c_master+0xa8>)
    8fdc:	6018      	str	r0, [r3, #0]
#endif
	/* Start timeout if bus state is unknown. */
	while (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(1))) {
		timeout_counter++;
		if(timeout_counter >= (module->unknown_bus_state_timeout)) {
    8fde:	88e8      	ldrh	r0, [r5, #6]
	Assert(module->hw);

	SercomI2cm *const i2c_module = &(module->hw->I2CM);

	/* Timeout counter used to force bus state. */
	uint32_t timeout_counter = 0;
    8fe0:	2300      	movs	r3, #0
#if I2C_MASTER_CALLBACK_MODE == true
	/* Enable module interrupts */
	system_interrupt_enable(_sercom_get_interrupt_vector(module->hw));
#endif
	/* Start timeout if bus state is unknown. */
	while (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(1))) {
    8fe2:	2110      	movs	r1, #16
    8fe4:	e005      	b.n	8ff2 <configure_i2c_master+0x86>
		timeout_counter++;
    8fe6:	3301      	adds	r3, #1
		if(timeout_counter >= (module->unknown_bus_state_timeout)) {
    8fe8:	4283      	cmp	r3, r0
    8fea:	d302      	bcc.n	8ff2 <configure_i2c_master+0x86>
			/* Timeout, force bus state to idle. */
			i2c_module->STATUS.reg = SERCOM_I2CM_STATUS_BUSSTATE(1);
    8fec:	2310      	movs	r3, #16
    8fee:	8363      	strh	r3, [r4, #26]
    8ff0:	e002      	b.n	8ff8 <configure_i2c_master+0x8c>
#if I2C_MASTER_CALLBACK_MODE == true
	/* Enable module interrupts */
	system_interrupt_enable(_sercom_get_interrupt_vector(module->hw));
#endif
	/* Start timeout if bus state is unknown. */
	while (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(1))) {
    8ff2:	8b62      	ldrh	r2, [r4, #26]
    8ff4:	420a      	tst	r2, r1
    8ff6:	d0f6      	beq.n	8fe6 <configure_i2c_master+0x7a>
    i2c_master_enable(&i2c_master_instance);
}
    8ff8:	b00d      	add	sp, #52	; 0x34
    8ffa:	bd30      	pop	{r4, r5, pc}
    8ffc:	00000d48 	.word	0x00000d48
    9000:	00002710 	.word	0x00002710
    9004:	20000b04 	.word	0x20000b04
    9008:	42001000 	.word	0x42001000
    900c:	000038bd 	.word	0x000038bd
    9010:	00007b51 	.word	0x00007b51
    9014:	e000e100 	.word	0xe000e100

00009018 <configure_usart>:

void configure_usart(void)
{
    9018:	b570      	push	{r4, r5, r6, lr}
    901a:	b090      	sub	sp, #64	; 0x40
{
	/* Sanity check arguments */
	Assert(config);

	/* Set default config in the config struct */
	config->data_order       = USART_DATAORDER_LSB;
    901c:	2380      	movs	r3, #128	; 0x80
    901e:	05db      	lsls	r3, r3, #23
    9020:	9300      	str	r3, [sp, #0]
	config->transfer_mode    = USART_TRANSFER_ASYNCHRONOUSLY;
    9022:	2300      	movs	r3, #0
    9024:	9301      	str	r3, [sp, #4]
	config->parity           = USART_PARITY_NONE;
    9026:	22ff      	movs	r2, #255	; 0xff
    9028:	4669      	mov	r1, sp
    902a:	810a      	strh	r2, [r1, #8]
	config->stopbits         = USART_STOPBITS_1;
    902c:	2200      	movs	r2, #0
    902e:	728b      	strb	r3, [r1, #10]
	config->character_size   = USART_CHARACTER_SIZE_8BIT;
    9030:	72cb      	strb	r3, [r1, #11]
	config->baudrate         = 9600;
    9032:	2196      	movs	r1, #150	; 0x96
    9034:	0189      	lsls	r1, r1, #6
    9036:	9108      	str	r1, [sp, #32]
	config->receiver_enable  = true;
    9038:	2101      	movs	r1, #1
    903a:	2024      	movs	r0, #36	; 0x24
    903c:	466c      	mov	r4, sp
    903e:	5421      	strb	r1, [r4, r0]
	config->transmitter_enable = true;
    9040:	3001      	adds	r0, #1
    9042:	5421      	strb	r1, [r4, r0]
	config->clock_polarity_inverted = false;
    9044:	3125      	adds	r1, #37	; 0x25
    9046:	5463      	strb	r3, [r4, r1]
	config->use_external_clock = false;
    9048:	3101      	adds	r1, #1
    904a:	5463      	strb	r3, [r4, r1]
	config->ext_clock_freq   = 0;
    904c:	930a      	str	r3, [sp, #40]	; 0x28
	config->mux_setting      = USART_RX_1_TX_2_XCK_3;
	config->run_in_standby   = false;
    904e:	3105      	adds	r1, #5
    9050:	5463      	strb	r3, [r4, r1]
	config->generator_source = GCLK_GENERATOR_0;
    9052:	3101      	adds	r1, #1
    9054:	5463      	strb	r3, [r4, r1]
	config->pinmux_pad0      = PINMUX_DEFAULT;
	config->pinmux_pad1      = PINMUX_DEFAULT;
	config->pinmux_pad2      = PINMUX_DEFAULT;
	config->pinmux_pad3      = PINMUX_DEFAULT;
#ifdef FEATURE_USART_OVER_SAMPLE
	config->sample_adjustment     = USART_SAMPLE_ADJUSTMENT_7_8_9;
    9056:	9305      	str	r3, [sp, #20]
	config->sample_rate           = USART_SAMPLE_RATE_16X_ARITHMETIC;
    9058:	8223      	strh	r3, [r4, #16]
#endif
#ifdef FEATURE_USART_LIN_SLAVE
	config->lin_slave_enable      = false;
    905a:	76e3      	strb	r3, [r4, #27]
	config->lin_header_delay = LIN_MASTER_HEADER_DELAY_0;
	config->lin_break_length = LIN_MASTER_BREAK_LENGTH_13_BIT;
#endif

#ifdef FEATURE_USART_IMMEDIATE_BUFFER_OVERFLOW_NOTIFICATION
	config->immediate_buffer_overflow_notification      = false;
    905c:	7622      	strb	r2, [r4, #24]
#endif
#ifdef FEATURE_USART_START_FRAME_DECTION
	config->start_frame_detection_enable                = false;
    905e:	7722      	strb	r2, [r4, #28]
#endif
#ifdef FEATURE_USART_IRDA
	config->encoding_format_enable                      = false;
    9060:	7662      	strb	r2, [r4, #25]
	config->receive_pulse_length                        = 19;
    9062:	2313      	movs	r3, #19
    9064:	76a3      	strb	r3, [r4, #26]
#endif
#ifdef FEATURE_USART_COLLISION_DECTION
	config->collision_detection_enable                  = false;
    9066:	7762      	strb	r2, [r4, #29]
    struct usart_config config_usart;
    usart_get_config_defaults(&config_usart);

    config_usart.baudrate = 9600;
    config_usart.mux_setting = EDBG_CDC_SERCOM_MUX_SETTING;
    9068:	2380      	movs	r3, #128	; 0x80
    906a:	035b      	lsls	r3, r3, #13
    906c:	9303      	str	r3, [sp, #12]
    config_usart.pinmux_pad0 = EDBG_CDC_SERCOM_PINMUX_PAD0;
    906e:	4b13      	ldr	r3, [pc, #76]	; (90bc <configure_usart+0xa4>)
    9070:	930c      	str	r3, [sp, #48]	; 0x30
    config_usart.pinmux_pad1 = EDBG_CDC_SERCOM_PINMUX_PAD1;
    9072:	4b13      	ldr	r3, [pc, #76]	; (90c0 <configure_usart+0xa8>)
    9074:	930d      	str	r3, [sp, #52]	; 0x34
    config_usart.pinmux_pad2 = EDBG_CDC_SERCOM_PINMUX_PAD2;
    9076:	2301      	movs	r3, #1
    9078:	425b      	negs	r3, r3
    907a:	930e      	str	r3, [sp, #56]	; 0x38
    config_usart.pinmux_pad3 = EDBG_CDC_SERCOM_PINMUX_PAD3;
    907c:	930f      	str	r3, [sp, #60]	; 0x3c

    while (usart_init(&usart_instance, EDBG_CDC_MODULE, &config_usart)
    907e:	4e11      	ldr	r6, [pc, #68]	; (90c4 <configure_usart+0xac>)
    9080:	4d11      	ldr	r5, [pc, #68]	; (90c8 <configure_usart+0xb0>)
    9082:	4c12      	ldr	r4, [pc, #72]	; (90cc <configure_usart+0xb4>)
    9084:	1c30      	adds	r0, r6, #0
    9086:	1c29      	adds	r1, r5, #0
    9088:	466a      	mov	r2, sp
    908a:	47a0      	blx	r4
    908c:	2800      	cmp	r0, #0
    908e:	d1f9      	bne.n	9084 <configure_usart+0x6c>
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	/* Get a pointer to the hardware module instance */
	SercomUsart *const usart_hw = &(module->hw->USART);
    9090:	4d0c      	ldr	r5, [pc, #48]	; (90c4 <configure_usart+0xac>)
    9092:	682c      	ldr	r4, [r5, #0]

#if USART_CALLBACK_MODE == true
	/* Enable Global interrupt for module */
	system_interrupt_enable(_sercom_get_interrupt_vector(module->hw));
    9094:	1c20      	adds	r0, r4, #0
    9096:	4b0e      	ldr	r3, [pc, #56]	; (90d0 <configure_usart+0xb8>)
    9098:	4798      	blx	r3
    909a:	231f      	movs	r3, #31
    909c:	4018      	ands	r0, r3
    909e:	3b1e      	subs	r3, #30
    90a0:	4083      	lsls	r3, r0
    90a2:	1c18      	adds	r0, r3, #0
    90a4:	4b0b      	ldr	r3, [pc, #44]	; (90d4 <configure_usart+0xbc>)
    90a6:	6018      	str	r0, [r3, #0]
{
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	SercomUsart *const usart_hw = &(module->hw->USART);
    90a8:	682a      	ldr	r2, [r5, #0]

#ifdef FEATURE_USART_SYNC_SCHEME_V2
	return (usart_hw->SYNCBUSY.reg);
    90aa:	69d3      	ldr	r3, [r2, #28]
		const struct usart_module *const module)
{
	/* Sanity check. */
	Assert(module);

	while (usart_is_syncing(module)) {
    90ac:	2b00      	cmp	r3, #0
    90ae:	d1fc      	bne.n	90aa <configure_usart+0x92>

	/* Wait until synchronization is complete */
	_usart_wait_for_sync(module);

	/* Enable USART module */
	usart_hw->CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
    90b0:	6822      	ldr	r2, [r4, #0]
    90b2:	3302      	adds	r3, #2
    90b4:	4313      	orrs	r3, r2
    90b6:	6023      	str	r3, [r4, #0]
            != STATUS_OK){
    }

    usart_enable(&usart_instance);
}
    90b8:	b010      	add	sp, #64	; 0x40
    90ba:	bd70      	pop	{r4, r5, r6, pc}
    90bc:	00160002 	.word	0x00160002
    90c0:	00170002 	.word	0x00170002
    90c4:	20000ad0 	.word	0x20000ad0
    90c8:	42001400 	.word	0x42001400
    90cc:	00008055 	.word	0x00008055
    90d0:	00007b51 	.word	0x00007b51
    90d4:	e000e100 	.word	0xe000e100

000090d8 <usart_i2c_init>:

void usart_i2c_init()
{
    90d8:	b508      	push	{r3, lr}
    delay_init();
    90da:	4b03      	ldr	r3, [pc, #12]	; (90e8 <usart_i2c_init+0x10>)
    90dc:	4798      	blx	r3
    configure_usart();
    90de:	4b03      	ldr	r3, [pc, #12]	; (90ec <usart_i2c_init+0x14>)
    90e0:	4798      	blx	r3
    configure_i2c_master();
    90e2:	4b03      	ldr	r3, [pc, #12]	; (90f0 <usart_i2c_init+0x18>)
    90e4:	4798      	blx	r3
}
    90e6:	bd08      	pop	{r3, pc}
    90e8:	00004709 	.word	0x00004709
    90ec:	00009019 	.word	0x00009019
    90f0:	00008f6d 	.word	0x00008f6d

000090f4 <print_to_terminal>:

void print_to_terminal(const char* format, ...)
{
    90f4:	b40f      	push	{r0, r1, r2, r3}
    90f6:	b510      	push	{r4, lr}
    90f8:	b09a      	sub	sp, #104	; 0x68
    90fa:	ab1c      	add	r3, sp, #112	; 0x70
    90fc:	cb04      	ldmia	r3!, {r2}
    va_list a_list;
    char serial_message[100];
    uint8_t length = 0;

    va_start(a_list, format);
    90fe:	9319      	str	r3, [sp, #100]	; 0x64
    vsnprintf(serial_message, sizeof(serial_message), format, a_list);
    9100:	4668      	mov	r0, sp
    9102:	2164      	movs	r1, #100	; 0x64
    9104:	4c09      	ldr	r4, [pc, #36]	; (912c <print_to_terminal+0x38>)
    9106:	47a0      	blx	r4

void print_to_terminal(const char* format, ...)
{
    va_list a_list;
    char serial_message[100];
    uint8_t length = 0;
    9108:	2300      	movs	r3, #0

    va_start(a_list, format);
    vsnprintf(serial_message, sizeof(serial_message), format, a_list);
    va_end(a_list);
    while (serial_message[length++]);
    910a:	1c5a      	adds	r2, r3, #1
    910c:	b2d2      	uxtb	r2, r2
    910e:	4669      	mov	r1, sp
    9110:	5cc9      	ldrb	r1, [r1, r3]
    9112:	1c13      	adds	r3, r2, #0
    9114:	2900      	cmp	r1, #0
    9116:	d1f8      	bne.n	910a <print_to_terminal+0x16>
    usart_write_buffer_wait(&usart_instance, (uint8_t*) serial_message, length);
    9118:	b292      	uxth	r2, r2
    911a:	4805      	ldr	r0, [pc, #20]	; (9130 <print_to_terminal+0x3c>)
    911c:	4669      	mov	r1, sp
    911e:	4b05      	ldr	r3, [pc, #20]	; (9134 <print_to_terminal+0x40>)
    9120:	4798      	blx	r3
}
    9122:	b01a      	add	sp, #104	; 0x68
    9124:	bc10      	pop	{r4}
    9126:	bc08      	pop	{r3}
    9128:	b004      	add	sp, #16
    912a:	4718      	bx	r3
    912c:	0000d00d 	.word	0x0000d00d
    9130:	20000ad0 	.word	0x20000ad0
    9134:	000083b9 	.word	0x000083b9

00009138 <decode>:
	(x >= 'a' && x <= 'f')	||
	(x >= 'A' && x <= 'F');
}

int decode(const char *s, char *dec)
{
    9138:	b5f0      	push	{r4, r5, r6, r7, lr}
    913a:	464f      	mov	r7, r9
    913c:	4646      	mov	r6, r8
    913e:	b4c0      	push	{r6, r7}
    9140:	b083      	sub	sp, #12
    9142:	1c04      	adds	r4, r0, #0
    9144:	1c0f      	adds	r7, r1, #0
	char *o;
	const char *end = s + strlen(s);
    9146:	4b25      	ldr	r3, [pc, #148]	; (91dc <decode+0xa4>)
    9148:	4798      	blx	r3
    914a:	1826      	adds	r6, r4, r0
	int c;
	
	for (o = dec; s <= end; o++) {
    914c:	42b4      	cmp	r4, r6
    914e:	d834      	bhi.n	91ba <decode+0x82>
    9150:	1c3d      	adds	r5, r7, #0
		c = *s++;
		if (c == '+') c = ' ';
		else if (c == '%' && (	!ishex(*s++)	||
		!ishex(*s++)	||
		!sscanf(s - 2, "%2x", &c)))
    9152:	4b23      	ldr	r3, [pc, #140]	; (91e0 <decode+0xa8>)
    9154:	4698      	mov	r8, r3
	char *o;
	const char *end = s + strlen(s);
	int c;
	
	for (o = dec; s <= end; o++) {
		c = *s++;
    9156:	1c62      	adds	r2, r4, #1
    9158:	7823      	ldrb	r3, [r4, #0]
    915a:	9301      	str	r3, [sp, #4]
		if (c == '+') c = ' ';
    915c:	2b2b      	cmp	r3, #43	; 0x2b
    915e:	d103      	bne.n	9168 <decode+0x30>
    9160:	3b0b      	subs	r3, #11
    9162:	9301      	str	r3, [sp, #4]
	char *o;
	const char *end = s + strlen(s);
	int c;
	
	for (o = dec; s <= end; o++) {
		c = *s++;
    9164:	1c14      	adds	r4, r2, #0
    9166:	e020      	b.n	91aa <decode+0x72>
		if (c == '+') c = ' ';
		else if (c == '%' && (	!ishex(*s++)	||
    9168:	2b25      	cmp	r3, #37	; 0x25
    916a:	d11d      	bne.n	91a8 <decode+0x70>
    916c:	7863      	ldrb	r3, [r4, #1]
    usart_write_buffer_wait(&usart_instance, (uint8_t*) serial_message, length);
}

inline int ishex(int x)
{
	return	(x >= '0' && x <= '9')	||
    916e:	1c1a      	adds	r2, r3, #0
    9170:	3a30      	subs	r2, #48	; 0x30
	(x >= 'a' && x <= 'f')	||
    9172:	2a09      	cmp	r2, #9
    9174:	d904      	bls.n	9180 <decode+0x48>
	int c;
	
	for (o = dec; s <= end; o++) {
		c = *s++;
		if (c == '+') c = ' ';
		else if (c == '%' && (	!ishex(*s++)	||
    9176:	2220      	movs	r2, #32
    9178:	4393      	bics	r3, r2
    917a:	3b41      	subs	r3, #65	; 0x41
    917c:	2b05      	cmp	r3, #5
    917e:	d81f      	bhi.n	91c0 <decode+0x88>
		!ishex(*s++)	||
    9180:	1ce3      	adds	r3, r4, #3
    9182:	4699      	mov	r9, r3
    9184:	78a3      	ldrb	r3, [r4, #2]
    usart_write_buffer_wait(&usart_instance, (uint8_t*) serial_message, length);
}

inline int ishex(int x)
{
	return	(x >= '0' && x <= '9')	||
    9186:	1c1a      	adds	r2, r3, #0
    9188:	3a30      	subs	r2, #48	; 0x30
	(x >= 'a' && x <= 'f')	||
    918a:	2a09      	cmp	r2, #9
    918c:	d904      	bls.n	9198 <decode+0x60>
	int c;
	
	for (o = dec; s <= end; o++) {
		c = *s++;
		if (c == '+') c = ' ';
		else if (c == '%' && (	!ishex(*s++)	||
    918e:	2220      	movs	r2, #32
    9190:	4393      	bics	r3, r2
    9192:	3b41      	subs	r3, #65	; 0x41
    9194:	2b05      	cmp	r3, #5
    9196:	d816      	bhi.n	91c6 <decode+0x8e>
		!ishex(*s++)	||
		!sscanf(s - 2, "%2x", &c)))
    9198:	1c60      	adds	r0, r4, #1
    919a:	4912      	ldr	r1, [pc, #72]	; (91e4 <decode+0xac>)
    919c:	aa01      	add	r2, sp, #4
    919e:	47c0      	blx	r8
	
	for (o = dec; s <= end; o++) {
		c = *s++;
		if (c == '+') c = ' ';
		else if (c == '%' && (	!ishex(*s++)	||
		!ishex(*s++)	||
    91a0:	2800      	cmp	r0, #0
    91a2:	d013      	beq.n	91cc <decode+0x94>
    91a4:	464c      	mov	r4, r9
    91a6:	e000      	b.n	91aa <decode+0x72>
	char *o;
	const char *end = s + strlen(s);
	int c;
	
	for (o = dec; s <= end; o++) {
		c = *s++;
    91a8:	1c14      	adds	r4, r2, #0
		else if (c == '%' && (	!ishex(*s++)	||
		!ishex(*s++)	||
		!sscanf(s - 2, "%2x", &c)))
		return -1;
		
		if (dec) *o = c;
    91aa:	2f00      	cmp	r7, #0
    91ac:	d001      	beq.n	91b2 <decode+0x7a>
    91ae:	9b01      	ldr	r3, [sp, #4]
    91b0:	702b      	strb	r3, [r5, #0]
{
	char *o;
	const char *end = s + strlen(s);
	int c;
	
	for (o = dec; s <= end; o++) {
    91b2:	3501      	adds	r5, #1
    91b4:	42b4      	cmp	r4, r6
    91b6:	d9ce      	bls.n	9156 <decode+0x1e>
    91b8:	e000      	b.n	91bc <decode+0x84>
    91ba:	1c3d      	adds	r5, r7, #0
		return -1;
		
		if (dec) *o = c;
	}
	
	return o - dec;
    91bc:	1be8      	subs	r0, r5, r7
    91be:	e007      	b.n	91d0 <decode+0x98>
		c = *s++;
		if (c == '+') c = ' ';
		else if (c == '%' && (	!ishex(*s++)	||
		!ishex(*s++)	||
		!sscanf(s - 2, "%2x", &c)))
		return -1;
    91c0:	2001      	movs	r0, #1
    91c2:	4240      	negs	r0, r0
    91c4:	e004      	b.n	91d0 <decode+0x98>
    91c6:	2001      	movs	r0, #1
    91c8:	4240      	negs	r0, r0
    91ca:	e001      	b.n	91d0 <decode+0x98>
    91cc:	2001      	movs	r0, #1
    91ce:	4240      	negs	r0, r0
		
		if (dec) *o = c;
	}
	
	return o - dec;
    91d0:	b003      	add	sp, #12
    91d2:	bc0c      	pop	{r2, r3}
    91d4:	4690      	mov	r8, r2
    91d6:	4699      	mov	r9, r3
    91d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    91da:	46c0      	nop			; (mov r8, r8)
    91dc:	0000cde5 	.word	0x0000cde5
    91e0:	0000c945 	.word	0x0000c945
    91e4:	00011a6c 	.word	0x00011a6c

000091e8 <requestCallback>:
	
/* Parse instance */
ParseClient parseClient = NULL;

static void requestCallback(ParseClient client, int error, int httpStatus, const char *httpResponseBody)
{
    91e8:	b530      	push	{r4, r5, lr}
    91ea:	b083      	sub	sp, #12
    91ec:	1c05      	adds	r5, r0, #0
    91ee:	1c14      	adds	r4, r2, #0
	if (0 != error) {
    91f0:	2900      	cmp	r1, #0
    91f2:	d003      	beq.n	91fc <requestCallback+0x14>
		print_to_terminal("requestCallback / error code %d / Error !!!!!\r\n", error);
    91f4:	4806      	ldr	r0, [pc, #24]	; (9210 <requestCallback+0x28>)
    91f6:	4b07      	ldr	r3, [pc, #28]	; (9214 <requestCallback+0x2c>)
    91f8:	4798      	blx	r3
		return;
    91fa:	e006      	b.n	920a <requestCallback+0x22>
	}

	print_to_terminal("requestCallback : 0x%x, %d, %d, %s\r\n\r\n", client, error, httpStatus, httpResponseBody);
    91fc:	9300      	str	r3, [sp, #0]
    91fe:	4806      	ldr	r0, [pc, #24]	; (9218 <requestCallback+0x30>)
    9200:	1c29      	adds	r1, r5, #0
    9202:	2200      	movs	r2, #0
    9204:	1c23      	adds	r3, r4, #0
    9206:	4c03      	ldr	r4, [pc, #12]	; (9214 <requestCallback+0x2c>)
    9208:	47a0      	blx	r4
}
    920a:	b003      	add	sp, #12
    920c:	bd30      	pop	{r4, r5, pc}
    920e:	46c0      	nop			; (mov r8, r8)
    9210:	00011a8c 	.word	0x00011a8c
    9214:	000090f5 	.word	0x000090f5
    9218:	00011abc 	.word	0x00011abc

0000921c <configure_nvm>:
#define _CONF_NVM_H_


/** Configure Non-Volatile Memory */
void configure_nvm(void)
{
    921c:	b500      	push	{lr}
    921e:	b083      	sub	sp, #12
{
	/* Sanity check the parameters */
	Assert(config);

	/* Write the default configuration for the NVM configuration */
	config->sleep_power_mode  = NVM_SLEEP_POWER_MODE_WAKEONACCESS;
    9220:	2300      	movs	r3, #0
    9222:	466a      	mov	r2, sp
    9224:	7013      	strb	r3, [r2, #0]
	config->manual_page_write = true;
	config->wait_states       = NVMCTRL->CTRLB.bit.RWS;
    9226:	4a0a      	ldr	r2, [pc, #40]	; (9250 <configure_nvm+0x34>)
    9228:	6852      	ldr	r2, [r2, #4]
	config->disable_cache     = false;
    922a:	466a      	mov	r2, sp
    922c:	70d3      	strb	r3, [r2, #3]
#if (SAMC20) || (SAMC21)
	config->disable_rww_cache = false;
#endif
	config->cache_readmode    = NVM_CACHE_READMODE_NO_MISS_PENALTY;
    922e:	7113      	strb	r3, [r2, #4]

	/* Get the default configuration */
	nvm_get_config_defaults(&config);

	/* Set wait state to 1 */
	config.wait_states = 1;
    9230:	2201      	movs	r2, #1
    9232:	4669      	mov	r1, sp
    9234:	708a      	strb	r2, [r1, #2]

	/* Enable automatic page write mode */
	config.manual_page_write = false;
    9236:	704b      	strb	r3, [r1, #1]

	/* Set the NVM configuration */
	status = nvm_set_config(&config);
    9238:	4668      	mov	r0, sp
    923a:	4b06      	ldr	r3, [pc, #24]	; (9254 <configure_nvm+0x38>)
    923c:	4798      	blx	r3

	if (status != STATUS_OK) {
    923e:	2800      	cmp	r0, #0
    9240:	d003      	beq.n	924a <configure_nvm+0x2e>
		printf("NVM init error\r\n");
    9242:	4805      	ldr	r0, [pc, #20]	; (9258 <configure_nvm+0x3c>)
    9244:	4b05      	ldr	r3, [pc, #20]	; (925c <configure_nvm+0x40>)
    9246:	4798      	blx	r3
		while(1) {};
    9248:	e7fe      	b.n	9248 <configure_nvm+0x2c>
	}
}
    924a:	b003      	add	sp, #12
    924c:	bd00      	pop	{pc}
    924e:	46c0      	nop			; (mov r8, r8)
    9250:	41004000 	.word	0x41004000
    9254:	00003475 	.word	0x00003475
    9258:	00011ae4 	.word	0x00011ae4
    925c:	0000c8c9 	.word	0x0000c8c9

00009260 <main>:
 * Application entry point.
 *
 * \return program return value.
 */
int main(void)
{	
    9260:	b5f0      	push	{r4, r5, r6, r7, lr}
    9262:	465f      	mov	r7, fp
    9264:	4646      	mov	r6, r8
    9266:	b4c0      	push	{r6, r7}
    9268:	b0df      	sub	sp, #380	; 0x17c
	//char pw[] = "tigerwang";

	//char ssid[] = "Civic_Hall_Annex";
	//char pw[] = "156lafayette";

	char ssid[] = "Civic Hall";
    926a:	aa5b      	add	r2, sp, #364	; 0x16c
    926c:	4b93      	ldr	r3, [pc, #588]	; (94bc <main+0x25c>)
    926e:	cb03      	ldmia	r3!, {r0, r1}
    9270:	c203      	stmia	r2!, {r0, r1}
    9272:	1c11      	adds	r1, r2, #0
    9274:	881a      	ldrh	r2, [r3, #0]
    9276:	800a      	strh	r2, [r1, #0]
    9278:	789b      	ldrb	r3, [r3, #2]
    927a:	708b      	strb	r3, [r1, #2]
	char pw[] = "156lafayette";
    927c:	aa57      	add	r2, sp, #348	; 0x15c
    927e:	4b90      	ldr	r3, [pc, #576]	; (94c0 <main+0x260>)
    9280:	cb13      	ldmia	r3!, {r0, r1, r4}
    9282:	c213      	stmia	r2!, {r0, r1, r4}
    9284:	781b      	ldrb	r3, [r3, #0]
    9286:	7013      	strb	r3, [r2, #0]
	
	/* 0 - no security, 1 - WEP, 2 - WPA */
	int secType = M2M_WIFI_SEC_OPEN;
	//if pw is not empty change to secure mode!
	if(strlen(pw)){
		print_to_terminal("WPA is used\n");
    9288:	488e      	ldr	r0, [pc, #568]	; (94c4 <main+0x264>)
    928a:	4c8f      	ldr	r4, [pc, #572]	; (94c8 <main+0x268>)
    928c:	47a0      	blx	r4
		secType = M2M_WIFI_SEC_WPA_PSK;
	}
	
	
	/* Initialize the board. */
	system_init();
    928e:	4b8f      	ldr	r3, [pc, #572]	; (94cc <main+0x26c>)
    9290:	4798      	blx	r3
	/* initialize temperature sensor */
	//at30tse_init();
	//int temp_reading = at30tse_read_temperature() * 100;
	
	// initializes USART and I2C communication 
    usart_i2c_init();
    9292:	4b8f      	ldr	r3, [pc, #572]	; (94d0 <main+0x270>)
    9294:	4798      	blx	r3
	
	print_to_terminal(STRING_HEADER);
    9296:	488f      	ldr	r0, [pc, #572]	; (94d4 <main+0x274>)
    9298:	47a0      	blx	r4
	enum status_code voc_read_status;



    /* test if sensor is connected */
	shtc1_connected = shtc1_probe(&i2c_master_instance);
    929a:	488f      	ldr	r0, [pc, #572]	; (94d8 <main+0x278>)
    929c:	4b8f      	ldr	r3, [pc, #572]	; (94dc <main+0x27c>)
    929e:	4798      	blx	r3
	printf(" shtc1 sensor is %s\r\n\n",
    92a0:	2800      	cmp	r0, #0
    92a2:	d101      	bne.n	92a8 <main+0x48>
    92a4:	498e      	ldr	r1, [pc, #568]	; (94e0 <main+0x280>)
    92a6:	e000      	b.n	92aa <main+0x4a>
    92a8:	498e      	ldr	r1, [pc, #568]	; (94e4 <main+0x284>)
    92aa:	488f      	ldr	r0, [pc, #572]	; (94e8 <main+0x288>)
    92ac:	4b86      	ldr	r3, [pc, #536]	; (94c8 <main+0x268>)
    92ae:	4798      	blx	r3
	shtc1_connected ? "present" : "not present");

	/* Configure Non-Volatile Memory */
	configure_nvm();
    92b0:	4b8e      	ldr	r3, [pc, #568]	; (94ec <main+0x28c>)
    92b2:	4798      	blx	r3

	/* InItialize WiFI Connection via WINC1500 */
	if (LOCAL_PARSE_SUCCESS != initWifiModule()) {
    92b4:	4b8e      	ldr	r3, [pc, #568]	; (94f0 <main+0x290>)
    92b6:	4798      	blx	r3
    92b8:	2800      	cmp	r0, #0
    92ba:	d003      	beq.n	92c4 <main+0x64>
		print_to_terminal("main / initWifiModule Error !!!!!\r\n");
    92bc:	488d      	ldr	r0, [pc, #564]	; (94f4 <main+0x294>)
    92be:	4b82      	ldr	r3, [pc, #520]	; (94c8 <main+0x268>)
    92c0:	4798      	blx	r3
		return -1;
    92c2:	e0f3      	b.n	94ac <main+0x24c>
	}

	/* Load or Provision WiFi Settings */
	int debug_2 = loadSettingsOrProvisionBoard(ssid, pw, secType);
    92c4:	a85b      	add	r0, sp, #364	; 0x16c
    92c6:	a957      	add	r1, sp, #348	; 0x15c
    92c8:	2202      	movs	r2, #2
    92ca:	4b8b      	ldr	r3, [pc, #556]	; (94f8 <main+0x298>)
    92cc:	4798      	blx	r3
    92ce:	1c01      	adds	r1, r0, #0
	print_to_terminal("debug_2: loadSettingsOrProvisionBoard return value = %d\r\n\n", debug_2);
    92d0:	488a      	ldr	r0, [pc, #552]	; (94fc <main+0x29c>)
    92d2:	4b7d      	ldr	r3, [pc, #500]	; (94c8 <main+0x268>)
    92d4:	4798      	blx	r3
	
	/* Connect to WiFi Station */
	while (1) {
		if (M2M_WIFI_MODE_STA == localParseEventLoop(NULL)) {
    92d6:	4c8a      	ldr	r4, [pc, #552]	; (9500 <main+0x2a0>)
    92d8:	2000      	movs	r0, #0
    92da:	47a0      	blx	r4
    92dc:	2806      	cmp	r0, #6
    92de:	d1fb      	bne.n	92d8 <main+0x78>
			print_to_terminal("main / WiFi connection is done\r\n");
    92e0:	4888      	ldr	r0, [pc, #544]	; (9504 <main+0x2a4>)
    92e2:	4b79      	ldr	r3, [pc, #484]	; (94c8 <main+0x268>)
    92e4:	4798      	blx	r3
		}
	}
	
	/* obtain MAC address */
	uint8 pu8MacAddr[6]; 
	if (M2M_SUCCESS != m2m_wifi_get_mac_address(pu8MacAddr)) {
    92e6:	a851      	add	r0, sp, #324	; 0x144
    92e8:	4b87      	ldr	r3, [pc, #540]	; (9508 <main+0x2a8>)
    92ea:	4798      	blx	r3
    92ec:	2400      	movs	r4, #0
    92ee:	2800      	cmp	r0, #0
    92f0:	d003      	beq.n	92fa <main+0x9a>
		print_to_terminal("Unable to read MAC address!\r\n");
    92f2:	4886      	ldr	r0, [pc, #536]	; (950c <main+0x2ac>)
    92f4:	4b74      	ldr	r3, [pc, #464]	; (94c8 <main+0x268>)
    92f6:	4798      	blx	r3
		return -1;
    92f8:	e0d8      	b.n	94ac <main+0x24c>
	}	
	for(int i=0; i<6; i++)
	{
		print_to_terminal("mac address [%d] = 0x%x\n", i, pu8MacAddr[i]);	
    92fa:	4f85      	ldr	r7, [pc, #532]	; (9510 <main+0x2b0>)
    92fc:	4d72      	ldr	r5, [pc, #456]	; (94c8 <main+0x268>)
    92fe:	ab51      	add	r3, sp, #324	; 0x144
    9300:	5ce2      	ldrb	r2, [r4, r3]
    9302:	1c38      	adds	r0, r7, #0
    9304:	1c21      	adds	r1, r4, #0
    9306:	47a8      	blx	r5
	uint8 pu8MacAddr[6]; 
	if (M2M_SUCCESS != m2m_wifi_get_mac_address(pu8MacAddr)) {
		print_to_terminal("Unable to read MAC address!\r\n");
		return -1;
	}	
	for(int i=0; i<6; i++)
    9308:	3401      	adds	r4, #1
    930a:	2c06      	cmp	r4, #6
    930c:	d1f7      	bne.n	92fe <main+0x9e>
	{
		print_to_terminal("mac address [%d] = 0x%x\n", i, pu8MacAddr[i]);	
	}	
	char macAddr[16] = "";
    930e:	2300      	movs	r3, #0
    9310:	934d      	str	r3, [sp, #308]	; 0x134
    9312:	934e      	str	r3, [sp, #312]	; 0x138
    9314:	934f      	str	r3, [sp, #316]	; 0x13c
    9316:	9350      	str	r3, [sp, #320]	; 0x140
	sprintf(macAddr, "0x%02x%02x%02x%02x%02x%02x\0", pu8MacAddr[0], pu8MacAddr[1], pu8MacAddr[2], pu8MacAddr[3], pu8MacAddr[4], pu8MacAddr[5]);
    9318:	a951      	add	r1, sp, #324	; 0x144
    931a:	780a      	ldrb	r2, [r1, #0]
    931c:	784b      	ldrb	r3, [r1, #1]
    931e:	7888      	ldrb	r0, [r1, #2]
    9320:	9000      	str	r0, [sp, #0]
    9322:	78c8      	ldrb	r0, [r1, #3]
    9324:	9001      	str	r0, [sp, #4]
    9326:	7908      	ldrb	r0, [r1, #4]
    9328:	9002      	str	r0, [sp, #8]
    932a:	7949      	ldrb	r1, [r1, #5]
    932c:	9103      	str	r1, [sp, #12]
    932e:	a84d      	add	r0, sp, #308	; 0x134
    9330:	4978      	ldr	r1, [pc, #480]	; (9514 <main+0x2b4>)
    9332:	4c79      	ldr	r4, [pc, #484]	; (9518 <main+0x2b8>)
    9334:	47a0      	blx	r4
	print_to_terminal("mac address = %s\n", macAddr);
    9336:	4879      	ldr	r0, [pc, #484]	; (951c <main+0x2bc>)
    9338:	a94d      	add	r1, sp, #308	; 0x134
    933a:	4c63      	ldr	r4, [pc, #396]	; (94c8 <main+0x268>)
    933c:	47a0      	blx	r4
	
	parseClient = parseInitialize("6ImqHzoPTWbZPTx8ePUMJxpywRqSqc6leMOZp8MJ", "kjQ27Hqm2H97fBXbUmYbGCbnedeH3WZtX2GvU2Cj");	
    933e:	4878      	ldr	r0, [pc, #480]	; (9520 <main+0x2c0>)
    9340:	4978      	ldr	r1, [pc, #480]	; (9524 <main+0x2c4>)
    9342:	4b79      	ldr	r3, [pc, #484]	; (9528 <main+0x2c8>)
    9344:	4798      	blx	r3
    9346:	4b79      	ldr	r3, [pc, #484]	; (952c <main+0x2cc>)
    9348:	6018      	str	r0, [r3, #0]
	
	delay_s(3);
    934a:	4879      	ldr	r0, [pc, #484]	; (9530 <main+0x2d0>)
    934c:	4b79      	ldr	r3, [pc, #484]	; (9534 <main+0x2d4>)
    934e:	4798      	blx	r3
	print_to_terminal("delayed 3 sec\n");
    9350:	4879      	ldr	r0, [pc, #484]	; (9538 <main+0x2d8>)
    9352:	47a0      	blx	r4
 *
 * \return program return value.
 */
int main(void)
{	
	int bart_cc = 0;
    9354:	2300      	movs	r3, #0
			temp_f = temp / 1000.0f;
			rh_f = rh / 1000.0f;
			
			k_f = (log10(rh_f) - 2) / 0.4343 + (17.62 * temp_f) / (243.12 + temp_f);
			dew_f = 243.12 * k_f / (17.62 - k_f);
			dew = dew_f * 1000;
    9356:	1c1f      	adds	r7, r3, #0
	print_to_terminal("delayed 3 sec\n");
		
	while(1)
	{
		/************** Get VOC and CO2 equivalent reading *************************/
		voc_read_status = ams_sensor_read(&i2c_master_instance, &voc, &co2);
    9358:	485f      	ldr	r0, [pc, #380]	; (94d8 <main+0x278>)
    935a:	a953      	add	r1, sp, #332	; 0x14c
    935c:	aa54      	add	r2, sp, #336	; 0x150
    935e:	4b77      	ldr	r3, [pc, #476]	; (953c <main+0x2dc>)
    9360:	4798      	blx	r3
		//print_to_terminal("voc_read_status = 0x%x\n", voc_read_status);
		
		if (voc_read_status == STATUS_OK)
    9362:	2800      	cmp	r0, #0
    9364:	d107      	bne.n	9376 <main+0x116>
		{
			print_to_terminal("voc = %d ppb\t", voc);
    9366:	4876      	ldr	r0, [pc, #472]	; (9540 <main+0x2e0>)
    9368:	9953      	ldr	r1, [sp, #332]	; 0x14c
    936a:	4c57      	ldr	r4, [pc, #348]	; (94c8 <main+0x268>)
    936c:	47a0      	blx	r4
			print_to_terminal("co2 = %d ppm\n", co2);
    936e:	4875      	ldr	r0, [pc, #468]	; (9544 <main+0x2e4>)
    9370:	9954      	ldr	r1, [sp, #336]	; 0x150
    9372:	47a0      	blx	r4
    9374:	e002      	b.n	937c <main+0x11c>
		}
		else
		{
			print_to_terminal("AMS Measurement failed. Extension-Board disconnected?\n");
    9376:	4874      	ldr	r0, [pc, #464]	; (9548 <main+0x2e8>)
    9378:	4b53      	ldr	r3, [pc, #332]	; (94c8 <main+0x268>)
    937a:	4798      	blx	r3
		}
		
		/**************** Get temp + humidity CLOCK STRETCHING *********************/
		shtc1_read_status = shtc1_read_hpm_sync(&i2c_master_instance, &temp, &rh);
    937c:	4856      	ldr	r0, [pc, #344]	; (94d8 <main+0x278>)
    937e:	a956      	add	r1, sp, #344	; 0x158
    9380:	aa55      	add	r2, sp, #340	; 0x154
    9382:	4b72      	ldr	r3, [pc, #456]	; (954c <main+0x2ec>)
    9384:	4798      	blx	r3
		//print_to_terminal("shtc1_read_status = 0x%x\n", shtc1_read_status);
		
		if (shtc1_read_status == STATUS_OK)
    9386:	2800      	cmp	r0, #0
    9388:	d159      	bne.n	943e <main+0x1de>
		{
			print_to_terminal("temp = %d\t", temp);
    938a:	4871      	ldr	r0, [pc, #452]	; (9550 <main+0x2f0>)
    938c:	9956      	ldr	r1, [sp, #344]	; 0x158
    938e:	4b4e      	ldr	r3, [pc, #312]	; (94c8 <main+0x268>)
    9390:	4698      	mov	r8, r3
    9392:	4798      	blx	r3
			print_to_terminal("rh = %d\t", rh);
    9394:	486f      	ldr	r0, [pc, #444]	; (9554 <main+0x2f4>)
    9396:	9955      	ldr	r1, [sp, #340]	; 0x154
    9398:	47c0      	blx	r8
			
			temp_f = temp / 1000.0f;
    939a:	4e6f      	ldr	r6, [pc, #444]	; (9558 <main+0x2f8>)
    939c:	9856      	ldr	r0, [sp, #344]	; 0x158
    939e:	47b0      	blx	r6
    93a0:	4d6e      	ldr	r5, [pc, #440]	; (955c <main+0x2fc>)
    93a2:	496f      	ldr	r1, [pc, #444]	; (9560 <main+0x300>)
    93a4:	47a8      	blx	r5
    93a6:	4c6f      	ldr	r4, [pc, #444]	; (9564 <main+0x304>)
    93a8:	47a0      	blx	r4
    93aa:	9004      	str	r0, [sp, #16]
    93ac:	9105      	str	r1, [sp, #20]
			rh_f = rh / 1000.0f;
    93ae:	9855      	ldr	r0, [sp, #340]	; 0x154
    93b0:	47b0      	blx	r6
    93b2:	496b      	ldr	r1, [pc, #428]	; (9560 <main+0x300>)
    93b4:	47a8      	blx	r5
    93b6:	47a0      	blx	r4
    93b8:	9006      	str	r0, [sp, #24]
    93ba:	9107      	str	r1, [sp, #28]
			
			k_f = (log10(rh_f) - 2) / 0.4343 + (17.62 * temp_f) / (243.12 + temp_f);
    93bc:	4b6a      	ldr	r3, [pc, #424]	; (9568 <main+0x308>)
    93be:	4798      	blx	r3
    93c0:	4b6a      	ldr	r3, [pc, #424]	; (956c <main+0x30c>)
    93c2:	469b      	mov	fp, r3
    93c4:	2200      	movs	r2, #0
    93c6:	2380      	movs	r3, #128	; 0x80
    93c8:	05db      	lsls	r3, r3, #23
    93ca:	47d8      	blx	fp
    93cc:	4d68      	ldr	r5, [pc, #416]	; (9570 <main+0x310>)
    93ce:	4a69      	ldr	r2, [pc, #420]	; (9574 <main+0x314>)
    93d0:	4b69      	ldr	r3, [pc, #420]	; (9578 <main+0x318>)
    93d2:	47a8      	blx	r5
    93d4:	9008      	str	r0, [sp, #32]
    93d6:	9109      	str	r1, [sp, #36]	; 0x24
    93d8:	4c68      	ldr	r4, [pc, #416]	; (957c <main+0x31c>)
    93da:	9804      	ldr	r0, [sp, #16]
    93dc:	9905      	ldr	r1, [sp, #20]
    93de:	4a68      	ldr	r2, [pc, #416]	; (9580 <main+0x320>)
    93e0:	4b68      	ldr	r3, [pc, #416]	; (9584 <main+0x324>)
    93e2:	47a0      	blx	r4
    93e4:	900a      	str	r0, [sp, #40]	; 0x28
    93e6:	910b      	str	r1, [sp, #44]	; 0x2c
    93e8:	4e67      	ldr	r6, [pc, #412]	; (9588 <main+0x328>)
    93ea:	9804      	ldr	r0, [sp, #16]
    93ec:	9905      	ldr	r1, [sp, #20]
    93ee:	4a67      	ldr	r2, [pc, #412]	; (958c <main+0x32c>)
    93f0:	4b67      	ldr	r3, [pc, #412]	; (9590 <main+0x330>)
    93f2:	47b0      	blx	r6
    93f4:	1c02      	adds	r2, r0, #0
    93f6:	1c0b      	adds	r3, r1, #0
    93f8:	980a      	ldr	r0, [sp, #40]	; 0x28
    93fa:	990b      	ldr	r1, [sp, #44]	; 0x2c
    93fc:	47a8      	blx	r5
    93fe:	1c02      	adds	r2, r0, #0
    9400:	1c0b      	adds	r3, r1, #0
    9402:	9808      	ldr	r0, [sp, #32]
    9404:	9909      	ldr	r1, [sp, #36]	; 0x24
    9406:	47b0      	blx	r6
			dew_f = 243.12 * k_f / (17.62 - k_f);
    9408:	9008      	str	r0, [sp, #32]
    940a:	9109      	str	r1, [sp, #36]	; 0x24
    940c:	4a5f      	ldr	r2, [pc, #380]	; (958c <main+0x32c>)
    940e:	4b60      	ldr	r3, [pc, #384]	; (9590 <main+0x330>)
    9410:	47a0      	blx	r4
    9412:	900a      	str	r0, [sp, #40]	; 0x28
    9414:	910b      	str	r1, [sp, #44]	; 0x2c
    9416:	485a      	ldr	r0, [pc, #360]	; (9580 <main+0x320>)
    9418:	495a      	ldr	r1, [pc, #360]	; (9584 <main+0x324>)
    941a:	9a08      	ldr	r2, [sp, #32]
    941c:	9b09      	ldr	r3, [sp, #36]	; 0x24
    941e:	47d8      	blx	fp
    9420:	1c02      	adds	r2, r0, #0
    9422:	1c0b      	adds	r3, r1, #0
    9424:	980a      	ldr	r0, [sp, #40]	; 0x28
    9426:	990b      	ldr	r1, [sp, #44]	; 0x2c
    9428:	47a8      	blx	r5
			dew = dew_f * 1000;
    942a:	2200      	movs	r2, #0
    942c:	4b59      	ldr	r3, [pc, #356]	; (9594 <main+0x334>)
    942e:	47a0      	blx	r4
    9430:	4b59      	ldr	r3, [pc, #356]	; (9598 <main+0x338>)
    9432:	4798      	blx	r3
    9434:	1c06      	adds	r6, r0, #0
			print_to_terminal("dew = %d\n\n", dew);
    9436:	4859      	ldr	r0, [pc, #356]	; (959c <main+0x33c>)
    9438:	1c31      	adds	r1, r6, #0
    943a:	47c0      	blx	r8
    943c:	e002      	b.n	9444 <main+0x1e4>
		}
		else
		{
			print_to_terminal("SHTC1 Measurement failed. Extension-Board disconnected?\n");
    943e:	4858      	ldr	r0, [pc, #352]	; (95a0 <main+0x340>)
    9440:	4b21      	ldr	r3, [pc, #132]	; (94c8 <main+0x268>)
    9442:	4798      	blx	r3
		/**********************get the dust sensor reading**********************************/

		/* POST to REST API Server */
		// create air quality POST command body
		
		temp = temp_f; rh = rh_f;
    9444:	4c54      	ldr	r4, [pc, #336]	; (9598 <main+0x338>)
    9446:	9804      	ldr	r0, [sp, #16]
    9448:	9905      	ldr	r1, [sp, #20]
    944a:	47a0      	blx	r4
    944c:	1c05      	adds	r5, r0, #0
    944e:	9056      	str	r0, [sp, #344]	; 0x158
    9450:	9806      	ldr	r0, [sp, #24]
    9452:	9907      	ldr	r1, [sp, #28]
    9454:	47a0      	blx	r4
    9456:	1c04      	adds	r4, r0, #0
    9458:	9055      	str	r0, [sp, #340]	; 0x154
		
		char httpRequestBody[256] = "";
    945a:	2300      	movs	r3, #0
    945c:	930d      	str	r3, [sp, #52]	; 0x34
    945e:	a80e      	add	r0, sp, #56	; 0x38
    9460:	2100      	movs	r1, #0
    9462:	22fc      	movs	r2, #252	; 0xfc
    9464:	4b4f      	ldr	r3, [pc, #316]	; (95a4 <main+0x344>)
    9466:	4798      	blx	r3
		sprintf(httpRequestBody, "{\"temperature\": %d,\"humidity\": %d,\"dewpoint\": %d, \"co2\": %d, \"voc\": %d, \"device\": \"%s\"}", temp, rh, dew, co2, voc, macAddr);
    9468:	9600      	str	r6, [sp, #0]
    946a:	9b54      	ldr	r3, [sp, #336]	; 0x150
    946c:	9301      	str	r3, [sp, #4]
    946e:	9b53      	ldr	r3, [sp, #332]	; 0x14c
    9470:	9302      	str	r3, [sp, #8]
    9472:	ab4d      	add	r3, sp, #308	; 0x134
    9474:	9303      	str	r3, [sp, #12]
    9476:	a80d      	add	r0, sp, #52	; 0x34
    9478:	494b      	ldr	r1, [pc, #300]	; (95a8 <main+0x348>)
    947a:	1c2a      	adds	r2, r5, #0
    947c:	1c23      	adds	r3, r4, #0
    947e:	4c26      	ldr	r4, [pc, #152]	; (9518 <main+0x2b8>)
    9480:	47a0      	blx	r4
		print_to_terminal("*** POST COMMAND *** \n%s", httpRequestBody);
    9482:	484a      	ldr	r0, [pc, #296]	; (95ac <main+0x34c>)
    9484:	a90d      	add	r1, sp, #52	; 0x34
    9486:	4c10      	ldr	r4, [pc, #64]	; (94c8 <main+0x268>)
    9488:	47a0      	blx	r4
		
		// send temp POST command to REST API server
		parseSendRequest(parseClient, "POST", "/1/test1data", httpRequestBody, requestCallback);
    948a:	4b28      	ldr	r3, [pc, #160]	; (952c <main+0x2cc>)
    948c:	6818      	ldr	r0, [r3, #0]
    948e:	4b48      	ldr	r3, [pc, #288]	; (95b0 <main+0x350>)
    9490:	9300      	str	r3, [sp, #0]
    9492:	4948      	ldr	r1, [pc, #288]	; (95b4 <main+0x354>)
    9494:	4a48      	ldr	r2, [pc, #288]	; (95b8 <main+0x358>)
    9496:	ab0d      	add	r3, sp, #52	; 0x34
    9498:	4d48      	ldr	r5, [pc, #288]	; (95bc <main+0x35c>)
    949a:	47a8      	blx	r5
		
		// add delay
		print_to_terminal("RUN COUNTER => %d\n", ++bart_cc);
    949c:	3701      	adds	r7, #1
    949e:	4848      	ldr	r0, [pc, #288]	; (95c0 <main+0x360>)
    94a0:	1c39      	adds	r1, r7, #0
    94a2:	47a0      	blx	r4
		delay_s(9);
    94a4:	4847      	ldr	r0, [pc, #284]	; (95c4 <main+0x364>)
    94a6:	4b23      	ldr	r3, [pc, #140]	; (9534 <main+0x2d4>)
    94a8:	4798      	blx	r3
	}
    94aa:	e755      	b.n	9358 <main+0xf8>

	return 0;
}
    94ac:	2001      	movs	r0, #1
    94ae:	4240      	negs	r0, r0
    94b0:	b05f      	add	sp, #380	; 0x17c
    94b2:	bc0c      	pop	{r2, r3}
    94b4:	4690      	mov	r8, r2
    94b6:	469b      	mov	fp, r3
    94b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    94ba:	46c0      	nop			; (mov r8, r8)
    94bc:	00011e64 	.word	0x00011e64
    94c0:	00011e70 	.word	0x00011e70
    94c4:	00011b4c 	.word	0x00011b4c
    94c8:	000090f5 	.word	0x000090f5
    94cc:	00008d71 	.word	0x00008d71
    94d0:	000090d9 	.word	0x000090d9
    94d4:	00011b5c 	.word	0x00011b5c
    94d8:	20000b04 	.word	0x20000b04
    94dc:	0000383d 	.word	0x0000383d
    94e0:	00011b40 	.word	0x00011b40
    94e4:	00011b44 	.word	0x00011b44
    94e8:	00011bc0 	.word	0x00011bc0
    94ec:	0000921d 	.word	0x0000921d
    94f0:	00003101 	.word	0x00003101
    94f4:	00011bd8 	.word	0x00011bd8
    94f8:	00003151 	.word	0x00003151
    94fc:	00011bfc 	.word	0x00011bfc
    9500:	00003225 	.word	0x00003225
    9504:	00011c38 	.word	0x00011c38
    9508:	00005a4d 	.word	0x00005a4d
    950c:	00011c5c 	.word	0x00011c5c
    9510:	00011c7c 	.word	0x00011c7c
    9514:	00011a70 	.word	0x00011a70
    9518:	0000c901 	.word	0x0000c901
    951c:	00011c98 	.word	0x00011c98
    9520:	00011cac 	.word	0x00011cac
    9524:	00011cd8 	.word	0x00011cd8
    9528:	00002f31 	.word	0x00002f31
    952c:	200006e0 	.word	0x200006e0
    9530:	00000bb8 	.word	0x00000bb8
    9534:	00004745 	.word	0x00004745
    9538:	00011d04 	.word	0x00011d04
    953c:	00003361 	.word	0x00003361
    9540:	00011d14 	.word	0x00011d14
    9544:	00011d24 	.word	0x00011d24
    9548:	00011d34 	.word	0x00011d34
    954c:	00003825 	.word	0x00003825
    9550:	00011d6c 	.word	0x00011d6c
    9554:	00011d78 	.word	0x00011d78
    9558:	0000a2b9 	.word	0x0000a2b9
    955c:	0000a049 	.word	0x0000a049
    9560:	447a0000 	.word	0x447a0000
    9564:	0000bf21 	.word	0x0000bf21
    9568:	000095c9 	.word	0x000095c9
    956c:	0000b749 	.word	0x0000b749
    9570:	0000a999 	.word	0x0000a999
    9574:	3a29c77a 	.word	0x3a29c77a
    9578:	3fdbcb92 	.word	0x3fdbcb92
    957c:	0000b215 	.word	0x0000b215
    9580:	51eb851f 	.word	0x51eb851f
    9584:	40319eb8 	.word	0x40319eb8
    9588:	0000a349 	.word	0x0000a349
    958c:	0a3d70a4 	.word	0x0a3d70a4
    9590:	406e63d7 	.word	0x406e63d7
    9594:	408f4000 	.word	0x408f4000
    9598:	0000be3d 	.word	0x0000be3d
    959c:	00011d84 	.word	0x00011d84
    95a0:	00011d90 	.word	0x00011d90
    95a4:	0000c0e1 	.word	0x0000c0e1
    95a8:	00011dcc 	.word	0x00011dcc
    95ac:	00011e24 	.word	0x00011e24
    95b0:	000091e9 	.word	0x000091e9
    95b4:	0000ef10 	.word	0x0000ef10
    95b8:	00011e40 	.word	0x00011e40
    95bc:	000030b9 	.word	0x000030b9
    95c0:	00011e50 	.word	0x00011e50
    95c4:	00002328 	.word	0x00002328

000095c8 <log10>:
    95c8:	b5f0      	push	{r4, r5, r6, r7, lr}
    95ca:	4647      	mov	r7, r8
    95cc:	b480      	push	{r7}
    95ce:	b08c      	sub	sp, #48	; 0x30
    95d0:	1c04      	adds	r4, r0, #0
    95d2:	1c0d      	adds	r5, r1, #0
    95d4:	f000 f87e 	bl	96d4 <__ieee754_log10>
    95d8:	4b39      	ldr	r3, [pc, #228]	; (96c0 <log10+0xf8>)
    95da:	1c06      	adds	r6, r0, #0
    95dc:	4698      	mov	r8, r3
    95de:	781b      	ldrb	r3, [r3, #0]
    95e0:	1c0f      	adds	r7, r1, #0
    95e2:	b25b      	sxtb	r3, r3
    95e4:	3301      	adds	r3, #1
    95e6:	d00d      	beq.n	9604 <log10+0x3c>
    95e8:	1c20      	adds	r0, r4, #0
    95ea:	1c29      	adds	r1, r5, #0
    95ec:	f000 f906 	bl	97fc <__fpclassifyd>
    95f0:	2800      	cmp	r0, #0
    95f2:	d007      	beq.n	9604 <log10+0x3c>
    95f4:	1c20      	adds	r0, r4, #0
    95f6:	1c29      	adds	r1, r5, #0
    95f8:	2200      	movs	r2, #0
    95fa:	2300      	movs	r3, #0
    95fc:	f000 fcdc 	bl	9fb8 <__aeabi_dcmple>
    9600:	2800      	cmp	r0, #0
    9602:	d105      	bne.n	9610 <log10+0x48>
    9604:	1c30      	adds	r0, r6, #0
    9606:	1c39      	adds	r1, r7, #0
    9608:	b00c      	add	sp, #48	; 0x30
    960a:	bc04      	pop	{r2}
    960c:	4690      	mov	r8, r2
    960e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    9610:	4b2c      	ldr	r3, [pc, #176]	; (96c4 <log10+0xfc>)
    9612:	9404      	str	r4, [sp, #16]
    9614:	9505      	str	r5, [sp, #20]
    9616:	9303      	str	r3, [sp, #12]
    9618:	2300      	movs	r3, #0
    961a:	930a      	str	r3, [sp, #40]	; 0x28
    961c:	4643      	mov	r3, r8
    961e:	781e      	ldrb	r6, [r3, #0]
    9620:	9406      	str	r4, [sp, #24]
    9622:	9507      	str	r5, [sp, #28]
    9624:	2e00      	cmp	r6, #0
    9626:	d114      	bne.n	9652 <log10+0x8a>
    9628:	22e0      	movs	r2, #224	; 0xe0
    962a:	4b27      	ldr	r3, [pc, #156]	; (96c8 <log10+0x100>)
    962c:	0612      	lsls	r2, r2, #24
    962e:	9208      	str	r2, [sp, #32]
    9630:	9309      	str	r3, [sp, #36]	; 0x24
    9632:	1c20      	adds	r0, r4, #0
    9634:	1c29      	adds	r1, r5, #0
    9636:	2200      	movs	r2, #0
    9638:	2300      	movs	r3, #0
    963a:	f000 fcad 	bl	9f98 <__aeabi_dcmpeq>
    963e:	2800      	cmp	r0, #0
    9640:	d135      	bne.n	96ae <log10+0xe6>
    9642:	2301      	movs	r3, #1
    9644:	9302      	str	r3, [sp, #8]
    9646:	a802      	add	r0, sp, #8
    9648:	f000 f906 	bl	9858 <matherr>
    964c:	2800      	cmp	r0, #0
    964e:	d114      	bne.n	967a <log10+0xb2>
    9650:	e00f      	b.n	9672 <log10+0xaa>
    9652:	2200      	movs	r2, #0
    9654:	4b1d      	ldr	r3, [pc, #116]	; (96cc <log10+0x104>)
    9656:	1c20      	adds	r0, r4, #0
    9658:	9208      	str	r2, [sp, #32]
    965a:	9309      	str	r3, [sp, #36]	; 0x24
    965c:	1c29      	adds	r1, r5, #0
    965e:	2200      	movs	r2, #0
    9660:	2300      	movs	r3, #0
    9662:	f000 fc99 	bl	9f98 <__aeabi_dcmpeq>
    9666:	2800      	cmp	r0, #0
    9668:	d113      	bne.n	9692 <log10+0xca>
    966a:	2301      	movs	r3, #1
    966c:	9302      	str	r3, [sp, #8]
    966e:	2e02      	cmp	r6, #2
    9670:	d1e9      	bne.n	9646 <log10+0x7e>
    9672:	f002 fccd 	bl	c010 <__errno>
    9676:	2321      	movs	r3, #33	; 0x21
    9678:	6003      	str	r3, [r0, #0]
    967a:	4815      	ldr	r0, [pc, #84]	; (96d0 <log10+0x108>)
    967c:	f000 f8ee 	bl	985c <nan>
    9680:	9008      	str	r0, [sp, #32]
    9682:	9109      	str	r1, [sp, #36]	; 0x24
    9684:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    9686:	9301      	str	r3, [sp, #4]
    9688:	2b00      	cmp	r3, #0
    968a:	d113      	bne.n	96b4 <log10+0xec>
    968c:	9e08      	ldr	r6, [sp, #32]
    968e:	9f09      	ldr	r7, [sp, #36]	; 0x24
    9690:	e7b8      	b.n	9604 <log10+0x3c>
    9692:	2302      	movs	r3, #2
    9694:	9302      	str	r3, [sp, #8]
    9696:	2e02      	cmp	r6, #2
    9698:	d004      	beq.n	96a4 <log10+0xdc>
    969a:	a802      	add	r0, sp, #8
    969c:	f000 f8dc 	bl	9858 <matherr>
    96a0:	2800      	cmp	r0, #0
    96a2:	d1ef      	bne.n	9684 <log10+0xbc>
    96a4:	f002 fcb4 	bl	c010 <__errno>
    96a8:	2322      	movs	r3, #34	; 0x22
    96aa:	6003      	str	r3, [r0, #0]
    96ac:	e7ea      	b.n	9684 <log10+0xbc>
    96ae:	2302      	movs	r3, #2
    96b0:	9302      	str	r3, [sp, #8]
    96b2:	e7f2      	b.n	969a <log10+0xd2>
    96b4:	f002 fcac 	bl	c010 <__errno>
    96b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    96ba:	9301      	str	r3, [sp, #4]
    96bc:	6003      	str	r3, [r0, #0]
    96be:	e7e5      	b.n	968c <log10+0xc4>
    96c0:	2000005d 	.word	0x2000005d
    96c4:	00011e80 	.word	0x00011e80
    96c8:	c7efffff 	.word	0xc7efffff
    96cc:	fff00000 	.word	0xfff00000
    96d0:	00011d80 	.word	0x00011d80

000096d4 <__ieee754_log10>:
    96d4:	b5f0      	push	{r4, r5, r6, r7, lr}
    96d6:	464f      	mov	r7, r9
    96d8:	4646      	mov	r6, r8
    96da:	b4c0      	push	{r6, r7}
    96dc:	4a3b      	ldr	r2, [pc, #236]	; (97cc <__ieee754_log10+0xf8>)
    96de:	b083      	sub	sp, #12
    96e0:	1c04      	adds	r4, r0, #0
    96e2:	1c0d      	adds	r5, r1, #0
    96e4:	1e0b      	subs	r3, r1, #0
    96e6:	4293      	cmp	r3, r2
    96e8:	dc1c      	bgt.n	9724 <__ieee754_log10+0x50>
    96ea:	004a      	lsls	r2, r1, #1
    96ec:	0852      	lsrs	r2, r2, #1
    96ee:	4302      	orrs	r2, r0
    96f0:	d05b      	beq.n	97aa <__ieee754_log10+0xd6>
    96f2:	2d00      	cmp	r5, #0
    96f4:	db60      	blt.n	97b8 <__ieee754_log10+0xe4>
    96f6:	2200      	movs	r2, #0
    96f8:	4b35      	ldr	r3, [pc, #212]	; (97d0 <__ieee754_log10+0xfc>)
    96fa:	f001 fd8b 	bl	b214 <__aeabi_dmul>
    96fe:	2236      	movs	r2, #54	; 0x36
    9700:	1c0d      	adds	r5, r1, #0
    9702:	1c0b      	adds	r3, r1, #0
    9704:	4933      	ldr	r1, [pc, #204]	; (97d4 <__ieee754_log10+0x100>)
    9706:	1c04      	adds	r4, r0, #0
    9708:	4252      	negs	r2, r2
    970a:	428b      	cmp	r3, r1
    970c:	dd0e      	ble.n	972c <__ieee754_log10+0x58>
    970e:	1c20      	adds	r0, r4, #0
    9710:	1c29      	adds	r1, r5, #0
    9712:	1c22      	adds	r2, r4, #0
    9714:	1c2b      	adds	r3, r5, #0
    9716:	f000 fe17 	bl	a348 <__aeabi_dadd>
    971a:	b003      	add	sp, #12
    971c:	bc0c      	pop	{r2, r3}
    971e:	4690      	mov	r8, r2
    9720:	4699      	mov	r9, r3
    9722:	bdf0      	pop	{r4, r5, r6, r7, pc}
    9724:	492b      	ldr	r1, [pc, #172]	; (97d4 <__ieee754_log10+0x100>)
    9726:	2200      	movs	r2, #0
    9728:	428b      	cmp	r3, r1
    972a:	dcf0      	bgt.n	970e <__ieee754_log10+0x3a>
    972c:	492a      	ldr	r1, [pc, #168]	; (97d8 <__ieee754_log10+0x104>)
    972e:	1518      	asrs	r0, r3, #20
    9730:	468c      	mov	ip, r1
    9732:	4460      	add	r0, ip
    9734:	1882      	adds	r2, r0, r2
    9736:	0fd1      	lsrs	r1, r2, #31
    9738:	4689      	mov	r9, r1
    973a:	031b      	lsls	r3, r3, #12
    973c:	444a      	add	r2, r9
    973e:	0b1b      	lsrs	r3, r3, #12
    9740:	1c10      	adds	r0, r2, #0
    9742:	4698      	mov	r8, r3
    9744:	f002 fbb0 	bl	bea8 <__aeabi_i2d>
    9748:	464a      	mov	r2, r9
    974a:	4b24      	ldr	r3, [pc, #144]	; (97dc <__ieee754_log10+0x108>)
    974c:	1c06      	adds	r6, r0, #0
    974e:	1a9b      	subs	r3, r3, r2
    9750:	4642      	mov	r2, r8
    9752:	051b      	lsls	r3, r3, #20
    9754:	431a      	orrs	r2, r3
    9756:	1c0f      	adds	r7, r1, #0
    9758:	1c20      	adds	r0, r4, #0
    975a:	1c11      	adds	r1, r2, #0
    975c:	f000 f884 	bl	9868 <__ieee754_log>
    9760:	4a1f      	ldr	r2, [pc, #124]	; (97e0 <__ieee754_log10+0x10c>)
    9762:	1c04      	adds	r4, r0, #0
    9764:	1c0d      	adds	r5, r1, #0
    9766:	1c30      	adds	r0, r6, #0
    9768:	1c39      	adds	r1, r7, #0
    976a:	4b1e      	ldr	r3, [pc, #120]	; (97e4 <__ieee754_log10+0x110>)
    976c:	f001 fd52 	bl	b214 <__aeabi_dmul>
    9770:	4a1d      	ldr	r2, [pc, #116]	; (97e8 <__ieee754_log10+0x114>)
    9772:	9000      	str	r0, [sp, #0]
    9774:	9101      	str	r1, [sp, #4]
    9776:	4b1d      	ldr	r3, [pc, #116]	; (97ec <__ieee754_log10+0x118>)
    9778:	1c30      	adds	r0, r6, #0
    977a:	1c39      	adds	r1, r7, #0
    977c:	f001 fd4a 	bl	b214 <__aeabi_dmul>
    9780:	4a1b      	ldr	r2, [pc, #108]	; (97f0 <__ieee754_log10+0x11c>)
    9782:	1c06      	adds	r6, r0, #0
    9784:	1c0f      	adds	r7, r1, #0
    9786:	1c20      	adds	r0, r4, #0
    9788:	1c29      	adds	r1, r5, #0
    978a:	4b1a      	ldr	r3, [pc, #104]	; (97f4 <__ieee754_log10+0x120>)
    978c:	f001 fd42 	bl	b214 <__aeabi_dmul>
    9790:	1c02      	adds	r2, r0, #0
    9792:	1c0b      	adds	r3, r1, #0
    9794:	1c30      	adds	r0, r6, #0
    9796:	1c39      	adds	r1, r7, #0
    9798:	f000 fdd6 	bl	a348 <__aeabi_dadd>
    979c:	1c02      	adds	r2, r0, #0
    979e:	1c0b      	adds	r3, r1, #0
    97a0:	9800      	ldr	r0, [sp, #0]
    97a2:	9901      	ldr	r1, [sp, #4]
    97a4:	f000 fdd0 	bl	a348 <__aeabi_dadd>
    97a8:	e7b7      	b.n	971a <__ieee754_log10+0x46>
    97aa:	2200      	movs	r2, #0
    97ac:	2300      	movs	r3, #0
    97ae:	2000      	movs	r0, #0
    97b0:	4911      	ldr	r1, [pc, #68]	; (97f8 <__ieee754_log10+0x124>)
    97b2:	f001 f8f1 	bl	a998 <__aeabi_ddiv>
    97b6:	e7b0      	b.n	971a <__ieee754_log10+0x46>
    97b8:	1c22      	adds	r2, r4, #0
    97ba:	1c2b      	adds	r3, r5, #0
    97bc:	f001 ffc4 	bl	b748 <__aeabi_dsub>
    97c0:	2200      	movs	r2, #0
    97c2:	2300      	movs	r3, #0
    97c4:	f001 f8e8 	bl	a998 <__aeabi_ddiv>
    97c8:	e7a7      	b.n	971a <__ieee754_log10+0x46>
    97ca:	46c0      	nop			; (mov r8, r8)
    97cc:	000fffff 	.word	0x000fffff
    97d0:	43500000 	.word	0x43500000
    97d4:	7fefffff 	.word	0x7fefffff
    97d8:	fffffc01 	.word	0xfffffc01
    97dc:	000003ff 	.word	0x000003ff
    97e0:	509f6000 	.word	0x509f6000
    97e4:	3fd34413 	.word	0x3fd34413
    97e8:	11f12b36 	.word	0x11f12b36
    97ec:	3d59fef3 	.word	0x3d59fef3
    97f0:	1526e50e 	.word	0x1526e50e
    97f4:	3fdbcb7b 	.word	0x3fdbcb7b
    97f8:	c3500000 	.word	0xc3500000

000097fc <__fpclassifyd>:
    97fc:	1c0a      	adds	r2, r1, #0
    97fe:	1c03      	adds	r3, r0, #0
    9800:	4302      	orrs	r2, r0
    9802:	b530      	push	{r4, r5, lr}
    9804:	2002      	movs	r0, #2
    9806:	2a00      	cmp	r2, #0
    9808:	d100      	bne.n	980c <__fpclassifyd+0x10>
    980a:	bd30      	pop	{r4, r5, pc}
    980c:	2280      	movs	r2, #128	; 0x80
    980e:	0612      	lsls	r2, r2, #24
    9810:	4291      	cmp	r1, r2
    9812:	d016      	beq.n	9842 <__fpclassifyd+0x46>
    9814:	4a0c      	ldr	r2, [pc, #48]	; (9848 <__fpclassifyd+0x4c>)
    9816:	2004      	movs	r0, #4
    9818:	188c      	adds	r4, r1, r2
    981a:	4a0c      	ldr	r2, [pc, #48]	; (984c <__fpclassifyd+0x50>)
    981c:	4294      	cmp	r4, r2
    981e:	d9f4      	bls.n	980a <__fpclassifyd+0xe>
    9820:	4c0b      	ldr	r4, [pc, #44]	; (9850 <__fpclassifyd+0x54>)
    9822:	190c      	adds	r4, r1, r4
    9824:	4294      	cmp	r4, r2
    9826:	d9f0      	bls.n	980a <__fpclassifyd+0xe>
    9828:	4a0a      	ldr	r2, [pc, #40]	; (9854 <__fpclassifyd+0x58>)
    982a:	0049      	lsls	r1, r1, #1
    982c:	0849      	lsrs	r1, r1, #1
    982e:	2003      	movs	r0, #3
    9830:	4291      	cmp	r1, r2
    9832:	d9ea      	bls.n	980a <__fpclassifyd+0xe>
    9834:	4a06      	ldr	r2, [pc, #24]	; (9850 <__fpclassifyd+0x54>)
    9836:	2000      	movs	r0, #0
    9838:	4291      	cmp	r1, r2
    983a:	d1e6      	bne.n	980a <__fpclassifyd+0xe>
    983c:	4258      	negs	r0, r3
    983e:	4158      	adcs	r0, r3
    9840:	e7e3      	b.n	980a <__fpclassifyd+0xe>
    9842:	2b00      	cmp	r3, #0
    9844:	d0e1      	beq.n	980a <__fpclassifyd+0xe>
    9846:	e7ef      	b.n	9828 <__fpclassifyd+0x2c>
    9848:	fff00000 	.word	0xfff00000
    984c:	7fdfffff 	.word	0x7fdfffff
    9850:	7ff00000 	.word	0x7ff00000
    9854:	000fffff 	.word	0x000fffff

00009858 <matherr>:
    9858:	2000      	movs	r0, #0
    985a:	4770      	bx	lr

0000985c <nan>:
    985c:	2000      	movs	r0, #0
    985e:	4901      	ldr	r1, [pc, #4]	; (9864 <nan+0x8>)
    9860:	4770      	bx	lr
    9862:	46c0      	nop			; (mov r8, r8)
    9864:	7ff80000 	.word	0x7ff80000

00009868 <__ieee754_log>:
    9868:	b5f0      	push	{r4, r5, r6, r7, lr}
    986a:	4645      	mov	r5, r8
    986c:	4657      	mov	r7, sl
    986e:	464e      	mov	r6, r9
    9870:	b4e0      	push	{r5, r6, r7}
    9872:	4adc      	ldr	r2, [pc, #880]	; (9be4 <__ieee754_log+0x37c>)
    9874:	b088      	sub	sp, #32
    9876:	1c04      	adds	r4, r0, #0
    9878:	1c0d      	adds	r5, r1, #0
    987a:	1e0b      	subs	r3, r1, #0
    987c:	4293      	cmp	r3, r2
    987e:	dc58      	bgt.n	9932 <__ieee754_log+0xca>
    9880:	004a      	lsls	r2, r1, #1
    9882:	0852      	lsrs	r2, r2, #1
    9884:	4302      	orrs	r2, r0
    9886:	d100      	bne.n	988a <__ieee754_log+0x22>
    9888:	e0f0      	b.n	9a6c <__ieee754_log+0x204>
    988a:	2d00      	cmp	r5, #0
    988c:	da00      	bge.n	9890 <__ieee754_log+0x28>
    988e:	e17a      	b.n	9b86 <__ieee754_log+0x31e>
    9890:	2200      	movs	r2, #0
    9892:	4bd5      	ldr	r3, [pc, #852]	; (9be8 <__ieee754_log+0x380>)
    9894:	f001 fcbe 	bl	b214 <__aeabi_dmul>
    9898:	2636      	movs	r6, #54	; 0x36
    989a:	4ad4      	ldr	r2, [pc, #848]	; (9bec <__ieee754_log+0x384>)
    989c:	1c04      	adds	r4, r0, #0
    989e:	1c0d      	adds	r5, r1, #0
    98a0:	1c0b      	adds	r3, r1, #0
    98a2:	4276      	negs	r6, r6
    98a4:	4293      	cmp	r3, r2
    98a6:	dc48      	bgt.n	993a <__ieee754_log+0xd2>
    98a8:	151a      	asrs	r2, r3, #20
    98aa:	031b      	lsls	r3, r3, #12
    98ac:	0b1b      	lsrs	r3, r3, #12
    98ae:	4698      	mov	r8, r3
    98b0:	49cf      	ldr	r1, [pc, #828]	; (9bf0 <__ieee754_log+0x388>)
    98b2:	2380      	movs	r3, #128	; 0x80
    98b4:	468c      	mov	ip, r1
    98b6:	1c20      	adds	r0, r4, #0
    98b8:	4644      	mov	r4, r8
    98ba:	4462      	add	r2, ip
    98bc:	1996      	adds	r6, r2, r6
    98be:	4acd      	ldr	r2, [pc, #820]	; (9bf4 <__ieee754_log+0x38c>)
    98c0:	035b      	lsls	r3, r3, #13
    98c2:	4442      	add	r2, r8
    98c4:	4013      	ands	r3, r2
    98c6:	4acc      	ldr	r2, [pc, #816]	; (9bf8 <__ieee754_log+0x390>)
    98c8:	405a      	eors	r2, r3
    98ca:	4314      	orrs	r4, r2
    98cc:	151b      	asrs	r3, r3, #20
    98ce:	4699      	mov	r9, r3
    98d0:	2200      	movs	r2, #0
    98d2:	4bc9      	ldr	r3, [pc, #804]	; (9bf8 <__ieee754_log+0x390>)
    98d4:	1c21      	adds	r1, r4, #0
    98d6:	f001 ff37 	bl	b748 <__aeabi_dsub>
    98da:	4643      	mov	r3, r8
    98dc:	3302      	adds	r3, #2
    98de:	031b      	lsls	r3, r3, #12
    98e0:	44b1      	add	r9, r6
    98e2:	1c0f      	adds	r7, r1, #0
    98e4:	1c06      	adds	r6, r0, #0
    98e6:	0b1b      	lsrs	r3, r3, #12
    98e8:	2200      	movs	r2, #0
    98ea:	2b02      	cmp	r3, #2
    98ec:	dc31      	bgt.n	9952 <__ieee754_log+0xea>
    98ee:	2300      	movs	r3, #0
    98f0:	f000 fb52 	bl	9f98 <__aeabi_dcmpeq>
    98f4:	2800      	cmp	r0, #0
    98f6:	d100      	bne.n	98fa <__ieee754_log+0x92>
    98f8:	e0bf      	b.n	9a7a <__ieee754_log+0x212>
    98fa:	464b      	mov	r3, r9
    98fc:	2b00      	cmp	r3, #0
    98fe:	d100      	bne.n	9902 <__ieee754_log+0x9a>
    9900:	e14a      	b.n	9b98 <__ieee754_log+0x330>
    9902:	4648      	mov	r0, r9
    9904:	f002 fad0 	bl	bea8 <__aeabi_i2d>
    9908:	4abc      	ldr	r2, [pc, #752]	; (9bfc <__ieee754_log+0x394>)
    990a:	4bbd      	ldr	r3, [pc, #756]	; (9c00 <__ieee754_log+0x398>)
    990c:	1c04      	adds	r4, r0, #0
    990e:	1c0d      	adds	r5, r1, #0
    9910:	f001 fc80 	bl	b214 <__aeabi_dmul>
    9914:	4abb      	ldr	r2, [pc, #748]	; (9c04 <__ieee754_log+0x39c>)
    9916:	1c06      	adds	r6, r0, #0
    9918:	1c0f      	adds	r7, r1, #0
    991a:	1c20      	adds	r0, r4, #0
    991c:	1c29      	adds	r1, r5, #0
    991e:	4bba      	ldr	r3, [pc, #744]	; (9c08 <__ieee754_log+0x3a0>)
    9920:	f001 fc78 	bl	b214 <__aeabi_dmul>
    9924:	1c02      	adds	r2, r0, #0
    9926:	1c0b      	adds	r3, r1, #0
    9928:	1c30      	adds	r0, r6, #0
    992a:	1c39      	adds	r1, r7, #0
    992c:	f000 fd0c 	bl	a348 <__aeabi_dadd>
    9930:	e009      	b.n	9946 <__ieee754_log+0xde>
    9932:	4aae      	ldr	r2, [pc, #696]	; (9bec <__ieee754_log+0x384>)
    9934:	2600      	movs	r6, #0
    9936:	4293      	cmp	r3, r2
    9938:	ddb6      	ble.n	98a8 <__ieee754_log+0x40>
    993a:	1c20      	adds	r0, r4, #0
    993c:	1c29      	adds	r1, r5, #0
    993e:	1c22      	adds	r2, r4, #0
    9940:	1c2b      	adds	r3, r5, #0
    9942:	f000 fd01 	bl	a348 <__aeabi_dadd>
    9946:	b008      	add	sp, #32
    9948:	bc1c      	pop	{r2, r3, r4}
    994a:	4690      	mov	r8, r2
    994c:	4699      	mov	r9, r3
    994e:	46a2      	mov	sl, r4
    9950:	bdf0      	pop	{r4, r5, r6, r7, pc}
    9952:	2380      	movs	r3, #128	; 0x80
    9954:	05db      	lsls	r3, r3, #23
    9956:	f000 fcf7 	bl	a348 <__aeabi_dadd>
    995a:	1c02      	adds	r2, r0, #0
    995c:	1c0b      	adds	r3, r1, #0
    995e:	1c30      	adds	r0, r6, #0
    9960:	1c39      	adds	r1, r7, #0
    9962:	f001 f819 	bl	a998 <__aeabi_ddiv>
    9966:	1c04      	adds	r4, r0, #0
    9968:	1c0d      	adds	r5, r1, #0
    996a:	4648      	mov	r0, r9
    996c:	9404      	str	r4, [sp, #16]
    996e:	9505      	str	r5, [sp, #20]
    9970:	f002 fa9a 	bl	bea8 <__aeabi_i2d>
    9974:	1c22      	adds	r2, r4, #0
    9976:	9002      	str	r0, [sp, #8]
    9978:	9103      	str	r1, [sp, #12]
    997a:	1c2b      	adds	r3, r5, #0
    997c:	1c20      	adds	r0, r4, #0
    997e:	1c29      	adds	r1, r5, #0
    9980:	f001 fc48 	bl	b214 <__aeabi_dmul>
    9984:	1c03      	adds	r3, r0, #0
    9986:	1c0c      	adds	r4, r1, #0
    9988:	4aa0      	ldr	r2, [pc, #640]	; (9c0c <__ieee754_log+0x3a4>)
    998a:	9300      	str	r3, [sp, #0]
    998c:	9401      	str	r4, [sp, #4]
    998e:	4442      	add	r2, r8
    9990:	4692      	mov	sl, r2
    9992:	1c1a      	adds	r2, r3, #0
    9994:	1c23      	adds	r3, r4, #0
    9996:	f001 fc3d 	bl	b214 <__aeabi_dmul>
    999a:	1c04      	adds	r4, r0, #0
    999c:	1c0d      	adds	r5, r1, #0
    999e:	4a9c      	ldr	r2, [pc, #624]	; (9c10 <__ieee754_log+0x3a8>)
    99a0:	4b9c      	ldr	r3, [pc, #624]	; (9c14 <__ieee754_log+0x3ac>)
    99a2:	f001 fc37 	bl	b214 <__aeabi_dmul>
    99a6:	4a9c      	ldr	r2, [pc, #624]	; (9c18 <__ieee754_log+0x3b0>)
    99a8:	4b9c      	ldr	r3, [pc, #624]	; (9c1c <__ieee754_log+0x3b4>)
    99aa:	f000 fccd 	bl	a348 <__aeabi_dadd>
    99ae:	1c22      	adds	r2, r4, #0
    99b0:	1c2b      	adds	r3, r5, #0
    99b2:	f001 fc2f 	bl	b214 <__aeabi_dmul>
    99b6:	4a9a      	ldr	r2, [pc, #616]	; (9c20 <__ieee754_log+0x3b8>)
    99b8:	4b9a      	ldr	r3, [pc, #616]	; (9c24 <__ieee754_log+0x3bc>)
    99ba:	f000 fcc5 	bl	a348 <__aeabi_dadd>
    99be:	1c22      	adds	r2, r4, #0
    99c0:	1c2b      	adds	r3, r5, #0
    99c2:	f001 fc27 	bl	b214 <__aeabi_dmul>
    99c6:	4a98      	ldr	r2, [pc, #608]	; (9c28 <__ieee754_log+0x3c0>)
    99c8:	4b98      	ldr	r3, [pc, #608]	; (9c2c <__ieee754_log+0x3c4>)
    99ca:	f000 fcbd 	bl	a348 <__aeabi_dadd>
    99ce:	9a00      	ldr	r2, [sp, #0]
    99d0:	9b01      	ldr	r3, [sp, #4]
    99d2:	f001 fc1f 	bl	b214 <__aeabi_dmul>
    99d6:	4a96      	ldr	r2, [pc, #600]	; (9c30 <__ieee754_log+0x3c8>)
    99d8:	9000      	str	r0, [sp, #0]
    99da:	9101      	str	r1, [sp, #4]
    99dc:	4b95      	ldr	r3, [pc, #596]	; (9c34 <__ieee754_log+0x3cc>)
    99de:	1c20      	adds	r0, r4, #0
    99e0:	1c29      	adds	r1, r5, #0
    99e2:	f001 fc17 	bl	b214 <__aeabi_dmul>
    99e6:	4a94      	ldr	r2, [pc, #592]	; (9c38 <__ieee754_log+0x3d0>)
    99e8:	4b94      	ldr	r3, [pc, #592]	; (9c3c <__ieee754_log+0x3d4>)
    99ea:	f000 fcad 	bl	a348 <__aeabi_dadd>
    99ee:	1c22      	adds	r2, r4, #0
    99f0:	1c2b      	adds	r3, r5, #0
    99f2:	f001 fc0f 	bl	b214 <__aeabi_dmul>
    99f6:	4a92      	ldr	r2, [pc, #584]	; (9c40 <__ieee754_log+0x3d8>)
    99f8:	4b92      	ldr	r3, [pc, #584]	; (9c44 <__ieee754_log+0x3dc>)
    99fa:	f000 fca5 	bl	a348 <__aeabi_dadd>
    99fe:	1c22      	adds	r2, r4, #0
    9a00:	1c2b      	adds	r3, r5, #0
    9a02:	f001 fc07 	bl	b214 <__aeabi_dmul>
    9a06:	1c02      	adds	r2, r0, #0
    9a08:	1c0b      	adds	r3, r1, #0
    9a0a:	9800      	ldr	r0, [sp, #0]
    9a0c:	9901      	ldr	r1, [sp, #4]
    9a0e:	f000 fc9b 	bl	a348 <__aeabi_dadd>
    9a12:	4642      	mov	r2, r8
    9a14:	4b8c      	ldr	r3, [pc, #560]	; (9c48 <__ieee754_log+0x3e0>)
    9a16:	1c04      	adds	r4, r0, #0
    9a18:	1a9b      	subs	r3, r3, r2
    9a1a:	4652      	mov	r2, sl
    9a1c:	1c0d      	adds	r5, r1, #0
    9a1e:	4313      	orrs	r3, r2
    9a20:	2b00      	cmp	r3, #0
    9a22:	dd50      	ble.n	9ac6 <__ieee754_log+0x25e>
    9a24:	2200      	movs	r2, #0
    9a26:	4b89      	ldr	r3, [pc, #548]	; (9c4c <__ieee754_log+0x3e4>)
    9a28:	1c30      	adds	r0, r6, #0
    9a2a:	1c39      	adds	r1, r7, #0
    9a2c:	f001 fbf2 	bl	b214 <__aeabi_dmul>
    9a30:	1c3b      	adds	r3, r7, #0
    9a32:	1c32      	adds	r2, r6, #0
    9a34:	f001 fbee 	bl	b214 <__aeabi_dmul>
    9a38:	464b      	mov	r3, r9
    9a3a:	9000      	str	r0, [sp, #0]
    9a3c:	9101      	str	r1, [sp, #4]
    9a3e:	2b00      	cmp	r3, #0
    9a40:	d170      	bne.n	9b24 <__ieee754_log+0x2bc>
    9a42:	1c22      	adds	r2, r4, #0
    9a44:	1c2b      	adds	r3, r5, #0
    9a46:	f000 fc7f 	bl	a348 <__aeabi_dadd>
    9a4a:	9a04      	ldr	r2, [sp, #16]
    9a4c:	9b05      	ldr	r3, [sp, #20]
    9a4e:	f001 fbe1 	bl	b214 <__aeabi_dmul>
    9a52:	1c02      	adds	r2, r0, #0
    9a54:	1c0b      	adds	r3, r1, #0
    9a56:	9800      	ldr	r0, [sp, #0]
    9a58:	9901      	ldr	r1, [sp, #4]
    9a5a:	f001 fe75 	bl	b748 <__aeabi_dsub>
    9a5e:	1c02      	adds	r2, r0, #0
    9a60:	1c0b      	adds	r3, r1, #0
    9a62:	1c30      	adds	r0, r6, #0
    9a64:	1c39      	adds	r1, r7, #0
    9a66:	f001 fe6f 	bl	b748 <__aeabi_dsub>
    9a6a:	e76c      	b.n	9946 <__ieee754_log+0xde>
    9a6c:	2200      	movs	r2, #0
    9a6e:	2300      	movs	r3, #0
    9a70:	2000      	movs	r0, #0
    9a72:	4977      	ldr	r1, [pc, #476]	; (9c50 <__ieee754_log+0x3e8>)
    9a74:	f000 ff90 	bl	a998 <__aeabi_ddiv>
    9a78:	e765      	b.n	9946 <__ieee754_log+0xde>
    9a7a:	1c32      	adds	r2, r6, #0
    9a7c:	1c3b      	adds	r3, r7, #0
    9a7e:	1c30      	adds	r0, r6, #0
    9a80:	1c39      	adds	r1, r7, #0
    9a82:	f001 fbc7 	bl	b214 <__aeabi_dmul>
    9a86:	4a73      	ldr	r2, [pc, #460]	; (9c54 <__ieee754_log+0x3ec>)
    9a88:	1c04      	adds	r4, r0, #0
    9a8a:	1c0d      	adds	r5, r1, #0
    9a8c:	4b72      	ldr	r3, [pc, #456]	; (9c58 <__ieee754_log+0x3f0>)
    9a8e:	1c30      	adds	r0, r6, #0
    9a90:	1c39      	adds	r1, r7, #0
    9a92:	f001 fbbf 	bl	b214 <__aeabi_dmul>
    9a96:	1c02      	adds	r2, r0, #0
    9a98:	1c0b      	adds	r3, r1, #0
    9a9a:	2000      	movs	r0, #0
    9a9c:	496b      	ldr	r1, [pc, #428]	; (9c4c <__ieee754_log+0x3e4>)
    9a9e:	f001 fe53 	bl	b748 <__aeabi_dsub>
    9aa2:	1c0b      	adds	r3, r1, #0
    9aa4:	1c02      	adds	r2, r0, #0
    9aa6:	1c29      	adds	r1, r5, #0
    9aa8:	1c20      	adds	r0, r4, #0
    9aaa:	f001 fbb3 	bl	b214 <__aeabi_dmul>
    9aae:	464b      	mov	r3, r9
    9ab0:	1c04      	adds	r4, r0, #0
    9ab2:	1c0d      	adds	r5, r1, #0
    9ab4:	2b00      	cmp	r3, #0
    9ab6:	d172      	bne.n	9b9e <__ieee754_log+0x336>
    9ab8:	1c30      	adds	r0, r6, #0
    9aba:	1c39      	adds	r1, r7, #0
    9abc:	1c22      	adds	r2, r4, #0
    9abe:	1c2b      	adds	r3, r5, #0
    9ac0:	f001 fe42 	bl	b748 <__aeabi_dsub>
    9ac4:	e73f      	b.n	9946 <__ieee754_log+0xde>
    9ac6:	464b      	mov	r3, r9
    9ac8:	2b00      	cmp	r3, #0
    9aca:	d100      	bne.n	9ace <__ieee754_log+0x266>
    9acc:	e0c6      	b.n	9c5c <__ieee754_log+0x3f4>
    9ace:	9802      	ldr	r0, [sp, #8]
    9ad0:	9903      	ldr	r1, [sp, #12]
    9ad2:	4a4a      	ldr	r2, [pc, #296]	; (9bfc <__ieee754_log+0x394>)
    9ad4:	4b4a      	ldr	r3, [pc, #296]	; (9c00 <__ieee754_log+0x398>)
    9ad6:	f001 fb9d 	bl	b214 <__aeabi_dmul>
    9ada:	1c22      	adds	r2, r4, #0
    9adc:	9000      	str	r0, [sp, #0]
    9ade:	9101      	str	r1, [sp, #4]
    9ae0:	1c2b      	adds	r3, r5, #0
    9ae2:	1c30      	adds	r0, r6, #0
    9ae4:	1c39      	adds	r1, r7, #0
    9ae6:	f001 fe2f 	bl	b748 <__aeabi_dsub>
    9aea:	9a04      	ldr	r2, [sp, #16]
    9aec:	9b05      	ldr	r3, [sp, #20]
    9aee:	f001 fb91 	bl	b214 <__aeabi_dmul>
    9af2:	4a44      	ldr	r2, [pc, #272]	; (9c04 <__ieee754_log+0x39c>)
    9af4:	1c04      	adds	r4, r0, #0
    9af6:	1c0d      	adds	r5, r1, #0
    9af8:	9802      	ldr	r0, [sp, #8]
    9afa:	9903      	ldr	r1, [sp, #12]
    9afc:	4b42      	ldr	r3, [pc, #264]	; (9c08 <__ieee754_log+0x3a0>)
    9afe:	f001 fb89 	bl	b214 <__aeabi_dmul>
    9b02:	1c02      	adds	r2, r0, #0
    9b04:	1c0b      	adds	r3, r1, #0
    9b06:	1c20      	adds	r0, r4, #0
    9b08:	1c29      	adds	r1, r5, #0
    9b0a:	f001 fe1d 	bl	b748 <__aeabi_dsub>
    9b0e:	1c32      	adds	r2, r6, #0
    9b10:	1c3b      	adds	r3, r7, #0
    9b12:	f001 fe19 	bl	b748 <__aeabi_dsub>
    9b16:	1c02      	adds	r2, r0, #0
    9b18:	1c0b      	adds	r3, r1, #0
    9b1a:	9800      	ldr	r0, [sp, #0]
    9b1c:	9901      	ldr	r1, [sp, #4]
    9b1e:	f001 fe13 	bl	b748 <__aeabi_dsub>
    9b22:	e710      	b.n	9946 <__ieee754_log+0xde>
    9b24:	9802      	ldr	r0, [sp, #8]
    9b26:	9903      	ldr	r1, [sp, #12]
    9b28:	4a34      	ldr	r2, [pc, #208]	; (9bfc <__ieee754_log+0x394>)
    9b2a:	4b35      	ldr	r3, [pc, #212]	; (9c00 <__ieee754_log+0x398>)
    9b2c:	f001 fb72 	bl	b214 <__aeabi_dmul>
    9b30:	1c22      	adds	r2, r4, #0
    9b32:	9006      	str	r0, [sp, #24]
    9b34:	9107      	str	r1, [sp, #28]
    9b36:	9800      	ldr	r0, [sp, #0]
    9b38:	9901      	ldr	r1, [sp, #4]
    9b3a:	1c2b      	adds	r3, r5, #0
    9b3c:	f000 fc04 	bl	a348 <__aeabi_dadd>
    9b40:	9a04      	ldr	r2, [sp, #16]
    9b42:	9b05      	ldr	r3, [sp, #20]
    9b44:	f001 fb66 	bl	b214 <__aeabi_dmul>
    9b48:	4a2e      	ldr	r2, [pc, #184]	; (9c04 <__ieee754_log+0x39c>)
    9b4a:	1c04      	adds	r4, r0, #0
    9b4c:	1c0d      	adds	r5, r1, #0
    9b4e:	9802      	ldr	r0, [sp, #8]
    9b50:	9903      	ldr	r1, [sp, #12]
    9b52:	4b2d      	ldr	r3, [pc, #180]	; (9c08 <__ieee754_log+0x3a0>)
    9b54:	f001 fb5e 	bl	b214 <__aeabi_dmul>
    9b58:	1c02      	adds	r2, r0, #0
    9b5a:	1c0b      	adds	r3, r1, #0
    9b5c:	1c20      	adds	r0, r4, #0
    9b5e:	1c29      	adds	r1, r5, #0
    9b60:	f000 fbf2 	bl	a348 <__aeabi_dadd>
    9b64:	1c02      	adds	r2, r0, #0
    9b66:	1c0b      	adds	r3, r1, #0
    9b68:	9800      	ldr	r0, [sp, #0]
    9b6a:	9901      	ldr	r1, [sp, #4]
    9b6c:	f001 fdec 	bl	b748 <__aeabi_dsub>
    9b70:	1c32      	adds	r2, r6, #0
    9b72:	1c3b      	adds	r3, r7, #0
    9b74:	f001 fde8 	bl	b748 <__aeabi_dsub>
    9b78:	1c02      	adds	r2, r0, #0
    9b7a:	1c0b      	adds	r3, r1, #0
    9b7c:	9806      	ldr	r0, [sp, #24]
    9b7e:	9907      	ldr	r1, [sp, #28]
    9b80:	f001 fde2 	bl	b748 <__aeabi_dsub>
    9b84:	e6df      	b.n	9946 <__ieee754_log+0xde>
    9b86:	1c22      	adds	r2, r4, #0
    9b88:	1c2b      	adds	r3, r5, #0
    9b8a:	f001 fddd 	bl	b748 <__aeabi_dsub>
    9b8e:	2200      	movs	r2, #0
    9b90:	2300      	movs	r3, #0
    9b92:	f000 ff01 	bl	a998 <__aeabi_ddiv>
    9b96:	e6d6      	b.n	9946 <__ieee754_log+0xde>
    9b98:	2000      	movs	r0, #0
    9b9a:	2100      	movs	r1, #0
    9b9c:	e6d3      	b.n	9946 <__ieee754_log+0xde>
    9b9e:	4648      	mov	r0, r9
    9ba0:	f002 f982 	bl	bea8 <__aeabi_i2d>
    9ba4:	4a15      	ldr	r2, [pc, #84]	; (9bfc <__ieee754_log+0x394>)
    9ba6:	4b16      	ldr	r3, [pc, #88]	; (9c00 <__ieee754_log+0x398>)
    9ba8:	9000      	str	r0, [sp, #0]
    9baa:	9101      	str	r1, [sp, #4]
    9bac:	f001 fb32 	bl	b214 <__aeabi_dmul>
    9bb0:	4a14      	ldr	r2, [pc, #80]	; (9c04 <__ieee754_log+0x39c>)
    9bb2:	9002      	str	r0, [sp, #8]
    9bb4:	9103      	str	r1, [sp, #12]
    9bb6:	9800      	ldr	r0, [sp, #0]
    9bb8:	9901      	ldr	r1, [sp, #4]
    9bba:	4b13      	ldr	r3, [pc, #76]	; (9c08 <__ieee754_log+0x3a0>)
    9bbc:	f001 fb2a 	bl	b214 <__aeabi_dmul>
    9bc0:	1c02      	adds	r2, r0, #0
    9bc2:	1c0b      	adds	r3, r1, #0
    9bc4:	1c20      	adds	r0, r4, #0
    9bc6:	1c29      	adds	r1, r5, #0
    9bc8:	f001 fdbe 	bl	b748 <__aeabi_dsub>
    9bcc:	1c32      	adds	r2, r6, #0
    9bce:	1c3b      	adds	r3, r7, #0
    9bd0:	f001 fdba 	bl	b748 <__aeabi_dsub>
    9bd4:	1c02      	adds	r2, r0, #0
    9bd6:	1c0b      	adds	r3, r1, #0
    9bd8:	9802      	ldr	r0, [sp, #8]
    9bda:	9903      	ldr	r1, [sp, #12]
    9bdc:	f001 fdb4 	bl	b748 <__aeabi_dsub>
    9be0:	e6b1      	b.n	9946 <__ieee754_log+0xde>
    9be2:	46c0      	nop			; (mov r8, r8)
    9be4:	000fffff 	.word	0x000fffff
    9be8:	43500000 	.word	0x43500000
    9bec:	7fefffff 	.word	0x7fefffff
    9bf0:	fffffc01 	.word	0xfffffc01
    9bf4:	00095f64 	.word	0x00095f64
    9bf8:	3ff00000 	.word	0x3ff00000
    9bfc:	fee00000 	.word	0xfee00000
    9c00:	3fe62e42 	.word	0x3fe62e42
    9c04:	35793c76 	.word	0x35793c76
    9c08:	3dea39ef 	.word	0x3dea39ef
    9c0c:	fff9eb86 	.word	0xfff9eb86
    9c10:	df3e5244 	.word	0xdf3e5244
    9c14:	3fc2f112 	.word	0x3fc2f112
    9c18:	96cb03de 	.word	0x96cb03de
    9c1c:	3fc74664 	.word	0x3fc74664
    9c20:	94229359 	.word	0x94229359
    9c24:	3fd24924 	.word	0x3fd24924
    9c28:	55555593 	.word	0x55555593
    9c2c:	3fe55555 	.word	0x3fe55555
    9c30:	d078c69f 	.word	0xd078c69f
    9c34:	3fc39a09 	.word	0x3fc39a09
    9c38:	1d8e78af 	.word	0x1d8e78af
    9c3c:	3fcc71c5 	.word	0x3fcc71c5
    9c40:	9997fa04 	.word	0x9997fa04
    9c44:	3fd99999 	.word	0x3fd99999
    9c48:	0006b851 	.word	0x0006b851
    9c4c:	3fe00000 	.word	0x3fe00000
    9c50:	c3500000 	.word	0xc3500000
    9c54:	55555555 	.word	0x55555555
    9c58:	3fd55555 	.word	0x3fd55555
    9c5c:	1c22      	adds	r2, r4, #0
    9c5e:	1c2b      	adds	r3, r5, #0
    9c60:	1c30      	adds	r0, r6, #0
    9c62:	1c39      	adds	r1, r7, #0
    9c64:	f001 fd70 	bl	b748 <__aeabi_dsub>
    9c68:	9a04      	ldr	r2, [sp, #16]
    9c6a:	9b05      	ldr	r3, [sp, #20]
    9c6c:	f001 fad2 	bl	b214 <__aeabi_dmul>
    9c70:	e6f5      	b.n	9a5e <__ieee754_log+0x1f6>
    9c72:	46c0      	nop			; (mov r8, r8)

00009c74 <__aeabi_uidiv>:
    9c74:	2200      	movs	r2, #0
    9c76:	0843      	lsrs	r3, r0, #1
    9c78:	428b      	cmp	r3, r1
    9c7a:	d374      	bcc.n	9d66 <__aeabi_uidiv+0xf2>
    9c7c:	0903      	lsrs	r3, r0, #4
    9c7e:	428b      	cmp	r3, r1
    9c80:	d35f      	bcc.n	9d42 <__aeabi_uidiv+0xce>
    9c82:	0a03      	lsrs	r3, r0, #8
    9c84:	428b      	cmp	r3, r1
    9c86:	d344      	bcc.n	9d12 <__aeabi_uidiv+0x9e>
    9c88:	0b03      	lsrs	r3, r0, #12
    9c8a:	428b      	cmp	r3, r1
    9c8c:	d328      	bcc.n	9ce0 <__aeabi_uidiv+0x6c>
    9c8e:	0c03      	lsrs	r3, r0, #16
    9c90:	428b      	cmp	r3, r1
    9c92:	d30d      	bcc.n	9cb0 <__aeabi_uidiv+0x3c>
    9c94:	22ff      	movs	r2, #255	; 0xff
    9c96:	0209      	lsls	r1, r1, #8
    9c98:	ba12      	rev	r2, r2
    9c9a:	0c03      	lsrs	r3, r0, #16
    9c9c:	428b      	cmp	r3, r1
    9c9e:	d302      	bcc.n	9ca6 <__aeabi_uidiv+0x32>
    9ca0:	1212      	asrs	r2, r2, #8
    9ca2:	0209      	lsls	r1, r1, #8
    9ca4:	d065      	beq.n	9d72 <__aeabi_uidiv+0xfe>
    9ca6:	0b03      	lsrs	r3, r0, #12
    9ca8:	428b      	cmp	r3, r1
    9caa:	d319      	bcc.n	9ce0 <__aeabi_uidiv+0x6c>
    9cac:	e000      	b.n	9cb0 <__aeabi_uidiv+0x3c>
    9cae:	0a09      	lsrs	r1, r1, #8
    9cb0:	0bc3      	lsrs	r3, r0, #15
    9cb2:	428b      	cmp	r3, r1
    9cb4:	d301      	bcc.n	9cba <__aeabi_uidiv+0x46>
    9cb6:	03cb      	lsls	r3, r1, #15
    9cb8:	1ac0      	subs	r0, r0, r3
    9cba:	4152      	adcs	r2, r2
    9cbc:	0b83      	lsrs	r3, r0, #14
    9cbe:	428b      	cmp	r3, r1
    9cc0:	d301      	bcc.n	9cc6 <__aeabi_uidiv+0x52>
    9cc2:	038b      	lsls	r3, r1, #14
    9cc4:	1ac0      	subs	r0, r0, r3
    9cc6:	4152      	adcs	r2, r2
    9cc8:	0b43      	lsrs	r3, r0, #13
    9cca:	428b      	cmp	r3, r1
    9ccc:	d301      	bcc.n	9cd2 <__aeabi_uidiv+0x5e>
    9cce:	034b      	lsls	r3, r1, #13
    9cd0:	1ac0      	subs	r0, r0, r3
    9cd2:	4152      	adcs	r2, r2
    9cd4:	0b03      	lsrs	r3, r0, #12
    9cd6:	428b      	cmp	r3, r1
    9cd8:	d301      	bcc.n	9cde <__aeabi_uidiv+0x6a>
    9cda:	030b      	lsls	r3, r1, #12
    9cdc:	1ac0      	subs	r0, r0, r3
    9cde:	4152      	adcs	r2, r2
    9ce0:	0ac3      	lsrs	r3, r0, #11
    9ce2:	428b      	cmp	r3, r1
    9ce4:	d301      	bcc.n	9cea <__aeabi_uidiv+0x76>
    9ce6:	02cb      	lsls	r3, r1, #11
    9ce8:	1ac0      	subs	r0, r0, r3
    9cea:	4152      	adcs	r2, r2
    9cec:	0a83      	lsrs	r3, r0, #10
    9cee:	428b      	cmp	r3, r1
    9cf0:	d301      	bcc.n	9cf6 <__aeabi_uidiv+0x82>
    9cf2:	028b      	lsls	r3, r1, #10
    9cf4:	1ac0      	subs	r0, r0, r3
    9cf6:	4152      	adcs	r2, r2
    9cf8:	0a43      	lsrs	r3, r0, #9
    9cfa:	428b      	cmp	r3, r1
    9cfc:	d301      	bcc.n	9d02 <__aeabi_uidiv+0x8e>
    9cfe:	024b      	lsls	r3, r1, #9
    9d00:	1ac0      	subs	r0, r0, r3
    9d02:	4152      	adcs	r2, r2
    9d04:	0a03      	lsrs	r3, r0, #8
    9d06:	428b      	cmp	r3, r1
    9d08:	d301      	bcc.n	9d0e <__aeabi_uidiv+0x9a>
    9d0a:	020b      	lsls	r3, r1, #8
    9d0c:	1ac0      	subs	r0, r0, r3
    9d0e:	4152      	adcs	r2, r2
    9d10:	d2cd      	bcs.n	9cae <__aeabi_uidiv+0x3a>
    9d12:	09c3      	lsrs	r3, r0, #7
    9d14:	428b      	cmp	r3, r1
    9d16:	d301      	bcc.n	9d1c <__aeabi_uidiv+0xa8>
    9d18:	01cb      	lsls	r3, r1, #7
    9d1a:	1ac0      	subs	r0, r0, r3
    9d1c:	4152      	adcs	r2, r2
    9d1e:	0983      	lsrs	r3, r0, #6
    9d20:	428b      	cmp	r3, r1
    9d22:	d301      	bcc.n	9d28 <__aeabi_uidiv+0xb4>
    9d24:	018b      	lsls	r3, r1, #6
    9d26:	1ac0      	subs	r0, r0, r3
    9d28:	4152      	adcs	r2, r2
    9d2a:	0943      	lsrs	r3, r0, #5
    9d2c:	428b      	cmp	r3, r1
    9d2e:	d301      	bcc.n	9d34 <__aeabi_uidiv+0xc0>
    9d30:	014b      	lsls	r3, r1, #5
    9d32:	1ac0      	subs	r0, r0, r3
    9d34:	4152      	adcs	r2, r2
    9d36:	0903      	lsrs	r3, r0, #4
    9d38:	428b      	cmp	r3, r1
    9d3a:	d301      	bcc.n	9d40 <__aeabi_uidiv+0xcc>
    9d3c:	010b      	lsls	r3, r1, #4
    9d3e:	1ac0      	subs	r0, r0, r3
    9d40:	4152      	adcs	r2, r2
    9d42:	08c3      	lsrs	r3, r0, #3
    9d44:	428b      	cmp	r3, r1
    9d46:	d301      	bcc.n	9d4c <__aeabi_uidiv+0xd8>
    9d48:	00cb      	lsls	r3, r1, #3
    9d4a:	1ac0      	subs	r0, r0, r3
    9d4c:	4152      	adcs	r2, r2
    9d4e:	0883      	lsrs	r3, r0, #2
    9d50:	428b      	cmp	r3, r1
    9d52:	d301      	bcc.n	9d58 <__aeabi_uidiv+0xe4>
    9d54:	008b      	lsls	r3, r1, #2
    9d56:	1ac0      	subs	r0, r0, r3
    9d58:	4152      	adcs	r2, r2
    9d5a:	0843      	lsrs	r3, r0, #1
    9d5c:	428b      	cmp	r3, r1
    9d5e:	d301      	bcc.n	9d64 <__aeabi_uidiv+0xf0>
    9d60:	004b      	lsls	r3, r1, #1
    9d62:	1ac0      	subs	r0, r0, r3
    9d64:	4152      	adcs	r2, r2
    9d66:	1a41      	subs	r1, r0, r1
    9d68:	d200      	bcs.n	9d6c <__aeabi_uidiv+0xf8>
    9d6a:	4601      	mov	r1, r0
    9d6c:	4152      	adcs	r2, r2
    9d6e:	4610      	mov	r0, r2
    9d70:	4770      	bx	lr
    9d72:	e7ff      	b.n	9d74 <__aeabi_uidiv+0x100>
    9d74:	b501      	push	{r0, lr}
    9d76:	2000      	movs	r0, #0
    9d78:	f000 f8fc 	bl	9f74 <__aeabi_idiv0>
    9d7c:	bd02      	pop	{r1, pc}
    9d7e:	46c0      	nop			; (mov r8, r8)

00009d80 <__aeabi_uidivmod>:
    9d80:	2900      	cmp	r1, #0
    9d82:	d0f7      	beq.n	9d74 <__aeabi_uidiv+0x100>
    9d84:	b503      	push	{r0, r1, lr}
    9d86:	f7ff ff75 	bl	9c74 <__aeabi_uidiv>
    9d8a:	bc0e      	pop	{r1, r2, r3}
    9d8c:	4342      	muls	r2, r0
    9d8e:	1a89      	subs	r1, r1, r2
    9d90:	4718      	bx	r3
    9d92:	46c0      	nop			; (mov r8, r8)

00009d94 <__aeabi_idiv>:
    9d94:	4603      	mov	r3, r0
    9d96:	430b      	orrs	r3, r1
    9d98:	d47f      	bmi.n	9e9a <__aeabi_idiv+0x106>
    9d9a:	2200      	movs	r2, #0
    9d9c:	0843      	lsrs	r3, r0, #1
    9d9e:	428b      	cmp	r3, r1
    9da0:	d374      	bcc.n	9e8c <__aeabi_idiv+0xf8>
    9da2:	0903      	lsrs	r3, r0, #4
    9da4:	428b      	cmp	r3, r1
    9da6:	d35f      	bcc.n	9e68 <__aeabi_idiv+0xd4>
    9da8:	0a03      	lsrs	r3, r0, #8
    9daa:	428b      	cmp	r3, r1
    9dac:	d344      	bcc.n	9e38 <__aeabi_idiv+0xa4>
    9dae:	0b03      	lsrs	r3, r0, #12
    9db0:	428b      	cmp	r3, r1
    9db2:	d328      	bcc.n	9e06 <__aeabi_idiv+0x72>
    9db4:	0c03      	lsrs	r3, r0, #16
    9db6:	428b      	cmp	r3, r1
    9db8:	d30d      	bcc.n	9dd6 <__aeabi_idiv+0x42>
    9dba:	22ff      	movs	r2, #255	; 0xff
    9dbc:	0209      	lsls	r1, r1, #8
    9dbe:	ba12      	rev	r2, r2
    9dc0:	0c03      	lsrs	r3, r0, #16
    9dc2:	428b      	cmp	r3, r1
    9dc4:	d302      	bcc.n	9dcc <__aeabi_idiv+0x38>
    9dc6:	1212      	asrs	r2, r2, #8
    9dc8:	0209      	lsls	r1, r1, #8
    9dca:	d065      	beq.n	9e98 <__aeabi_idiv+0x104>
    9dcc:	0b03      	lsrs	r3, r0, #12
    9dce:	428b      	cmp	r3, r1
    9dd0:	d319      	bcc.n	9e06 <__aeabi_idiv+0x72>
    9dd2:	e000      	b.n	9dd6 <__aeabi_idiv+0x42>
    9dd4:	0a09      	lsrs	r1, r1, #8
    9dd6:	0bc3      	lsrs	r3, r0, #15
    9dd8:	428b      	cmp	r3, r1
    9dda:	d301      	bcc.n	9de0 <__aeabi_idiv+0x4c>
    9ddc:	03cb      	lsls	r3, r1, #15
    9dde:	1ac0      	subs	r0, r0, r3
    9de0:	4152      	adcs	r2, r2
    9de2:	0b83      	lsrs	r3, r0, #14
    9de4:	428b      	cmp	r3, r1
    9de6:	d301      	bcc.n	9dec <__aeabi_idiv+0x58>
    9de8:	038b      	lsls	r3, r1, #14
    9dea:	1ac0      	subs	r0, r0, r3
    9dec:	4152      	adcs	r2, r2
    9dee:	0b43      	lsrs	r3, r0, #13
    9df0:	428b      	cmp	r3, r1
    9df2:	d301      	bcc.n	9df8 <__aeabi_idiv+0x64>
    9df4:	034b      	lsls	r3, r1, #13
    9df6:	1ac0      	subs	r0, r0, r3
    9df8:	4152      	adcs	r2, r2
    9dfa:	0b03      	lsrs	r3, r0, #12
    9dfc:	428b      	cmp	r3, r1
    9dfe:	d301      	bcc.n	9e04 <__aeabi_idiv+0x70>
    9e00:	030b      	lsls	r3, r1, #12
    9e02:	1ac0      	subs	r0, r0, r3
    9e04:	4152      	adcs	r2, r2
    9e06:	0ac3      	lsrs	r3, r0, #11
    9e08:	428b      	cmp	r3, r1
    9e0a:	d301      	bcc.n	9e10 <__aeabi_idiv+0x7c>
    9e0c:	02cb      	lsls	r3, r1, #11
    9e0e:	1ac0      	subs	r0, r0, r3
    9e10:	4152      	adcs	r2, r2
    9e12:	0a83      	lsrs	r3, r0, #10
    9e14:	428b      	cmp	r3, r1
    9e16:	d301      	bcc.n	9e1c <__aeabi_idiv+0x88>
    9e18:	028b      	lsls	r3, r1, #10
    9e1a:	1ac0      	subs	r0, r0, r3
    9e1c:	4152      	adcs	r2, r2
    9e1e:	0a43      	lsrs	r3, r0, #9
    9e20:	428b      	cmp	r3, r1
    9e22:	d301      	bcc.n	9e28 <__aeabi_idiv+0x94>
    9e24:	024b      	lsls	r3, r1, #9
    9e26:	1ac0      	subs	r0, r0, r3
    9e28:	4152      	adcs	r2, r2
    9e2a:	0a03      	lsrs	r3, r0, #8
    9e2c:	428b      	cmp	r3, r1
    9e2e:	d301      	bcc.n	9e34 <__aeabi_idiv+0xa0>
    9e30:	020b      	lsls	r3, r1, #8
    9e32:	1ac0      	subs	r0, r0, r3
    9e34:	4152      	adcs	r2, r2
    9e36:	d2cd      	bcs.n	9dd4 <__aeabi_idiv+0x40>
    9e38:	09c3      	lsrs	r3, r0, #7
    9e3a:	428b      	cmp	r3, r1
    9e3c:	d301      	bcc.n	9e42 <__aeabi_idiv+0xae>
    9e3e:	01cb      	lsls	r3, r1, #7
    9e40:	1ac0      	subs	r0, r0, r3
    9e42:	4152      	adcs	r2, r2
    9e44:	0983      	lsrs	r3, r0, #6
    9e46:	428b      	cmp	r3, r1
    9e48:	d301      	bcc.n	9e4e <__aeabi_idiv+0xba>
    9e4a:	018b      	lsls	r3, r1, #6
    9e4c:	1ac0      	subs	r0, r0, r3
    9e4e:	4152      	adcs	r2, r2
    9e50:	0943      	lsrs	r3, r0, #5
    9e52:	428b      	cmp	r3, r1
    9e54:	d301      	bcc.n	9e5a <__aeabi_idiv+0xc6>
    9e56:	014b      	lsls	r3, r1, #5
    9e58:	1ac0      	subs	r0, r0, r3
    9e5a:	4152      	adcs	r2, r2
    9e5c:	0903      	lsrs	r3, r0, #4
    9e5e:	428b      	cmp	r3, r1
    9e60:	d301      	bcc.n	9e66 <__aeabi_idiv+0xd2>
    9e62:	010b      	lsls	r3, r1, #4
    9e64:	1ac0      	subs	r0, r0, r3
    9e66:	4152      	adcs	r2, r2
    9e68:	08c3      	lsrs	r3, r0, #3
    9e6a:	428b      	cmp	r3, r1
    9e6c:	d301      	bcc.n	9e72 <__aeabi_idiv+0xde>
    9e6e:	00cb      	lsls	r3, r1, #3
    9e70:	1ac0      	subs	r0, r0, r3
    9e72:	4152      	adcs	r2, r2
    9e74:	0883      	lsrs	r3, r0, #2
    9e76:	428b      	cmp	r3, r1
    9e78:	d301      	bcc.n	9e7e <__aeabi_idiv+0xea>
    9e7a:	008b      	lsls	r3, r1, #2
    9e7c:	1ac0      	subs	r0, r0, r3
    9e7e:	4152      	adcs	r2, r2
    9e80:	0843      	lsrs	r3, r0, #1
    9e82:	428b      	cmp	r3, r1
    9e84:	d301      	bcc.n	9e8a <__aeabi_idiv+0xf6>
    9e86:	004b      	lsls	r3, r1, #1
    9e88:	1ac0      	subs	r0, r0, r3
    9e8a:	4152      	adcs	r2, r2
    9e8c:	1a41      	subs	r1, r0, r1
    9e8e:	d200      	bcs.n	9e92 <__aeabi_idiv+0xfe>
    9e90:	4601      	mov	r1, r0
    9e92:	4152      	adcs	r2, r2
    9e94:	4610      	mov	r0, r2
    9e96:	4770      	bx	lr
    9e98:	e05d      	b.n	9f56 <__aeabi_idiv+0x1c2>
    9e9a:	0fca      	lsrs	r2, r1, #31
    9e9c:	d000      	beq.n	9ea0 <__aeabi_idiv+0x10c>
    9e9e:	4249      	negs	r1, r1
    9ea0:	1003      	asrs	r3, r0, #32
    9ea2:	d300      	bcc.n	9ea6 <__aeabi_idiv+0x112>
    9ea4:	4240      	negs	r0, r0
    9ea6:	4053      	eors	r3, r2
    9ea8:	2200      	movs	r2, #0
    9eaa:	469c      	mov	ip, r3
    9eac:	0903      	lsrs	r3, r0, #4
    9eae:	428b      	cmp	r3, r1
    9eb0:	d32d      	bcc.n	9f0e <__aeabi_idiv+0x17a>
    9eb2:	0a03      	lsrs	r3, r0, #8
    9eb4:	428b      	cmp	r3, r1
    9eb6:	d312      	bcc.n	9ede <__aeabi_idiv+0x14a>
    9eb8:	22fc      	movs	r2, #252	; 0xfc
    9eba:	0189      	lsls	r1, r1, #6
    9ebc:	ba12      	rev	r2, r2
    9ebe:	0a03      	lsrs	r3, r0, #8
    9ec0:	428b      	cmp	r3, r1
    9ec2:	d30c      	bcc.n	9ede <__aeabi_idiv+0x14a>
    9ec4:	0189      	lsls	r1, r1, #6
    9ec6:	1192      	asrs	r2, r2, #6
    9ec8:	428b      	cmp	r3, r1
    9eca:	d308      	bcc.n	9ede <__aeabi_idiv+0x14a>
    9ecc:	0189      	lsls	r1, r1, #6
    9ece:	1192      	asrs	r2, r2, #6
    9ed0:	428b      	cmp	r3, r1
    9ed2:	d304      	bcc.n	9ede <__aeabi_idiv+0x14a>
    9ed4:	0189      	lsls	r1, r1, #6
    9ed6:	d03a      	beq.n	9f4e <__aeabi_idiv+0x1ba>
    9ed8:	1192      	asrs	r2, r2, #6
    9eda:	e000      	b.n	9ede <__aeabi_idiv+0x14a>
    9edc:	0989      	lsrs	r1, r1, #6
    9ede:	09c3      	lsrs	r3, r0, #7
    9ee0:	428b      	cmp	r3, r1
    9ee2:	d301      	bcc.n	9ee8 <__aeabi_idiv+0x154>
    9ee4:	01cb      	lsls	r3, r1, #7
    9ee6:	1ac0      	subs	r0, r0, r3
    9ee8:	4152      	adcs	r2, r2
    9eea:	0983      	lsrs	r3, r0, #6
    9eec:	428b      	cmp	r3, r1
    9eee:	d301      	bcc.n	9ef4 <__aeabi_idiv+0x160>
    9ef0:	018b      	lsls	r3, r1, #6
    9ef2:	1ac0      	subs	r0, r0, r3
    9ef4:	4152      	adcs	r2, r2
    9ef6:	0943      	lsrs	r3, r0, #5
    9ef8:	428b      	cmp	r3, r1
    9efa:	d301      	bcc.n	9f00 <__aeabi_idiv+0x16c>
    9efc:	014b      	lsls	r3, r1, #5
    9efe:	1ac0      	subs	r0, r0, r3
    9f00:	4152      	adcs	r2, r2
    9f02:	0903      	lsrs	r3, r0, #4
    9f04:	428b      	cmp	r3, r1
    9f06:	d301      	bcc.n	9f0c <__aeabi_idiv+0x178>
    9f08:	010b      	lsls	r3, r1, #4
    9f0a:	1ac0      	subs	r0, r0, r3
    9f0c:	4152      	adcs	r2, r2
    9f0e:	08c3      	lsrs	r3, r0, #3
    9f10:	428b      	cmp	r3, r1
    9f12:	d301      	bcc.n	9f18 <__aeabi_idiv+0x184>
    9f14:	00cb      	lsls	r3, r1, #3
    9f16:	1ac0      	subs	r0, r0, r3
    9f18:	4152      	adcs	r2, r2
    9f1a:	0883      	lsrs	r3, r0, #2
    9f1c:	428b      	cmp	r3, r1
    9f1e:	d301      	bcc.n	9f24 <__aeabi_idiv+0x190>
    9f20:	008b      	lsls	r3, r1, #2
    9f22:	1ac0      	subs	r0, r0, r3
    9f24:	4152      	adcs	r2, r2
    9f26:	d2d9      	bcs.n	9edc <__aeabi_idiv+0x148>
    9f28:	0843      	lsrs	r3, r0, #1
    9f2a:	428b      	cmp	r3, r1
    9f2c:	d301      	bcc.n	9f32 <__aeabi_idiv+0x19e>
    9f2e:	004b      	lsls	r3, r1, #1
    9f30:	1ac0      	subs	r0, r0, r3
    9f32:	4152      	adcs	r2, r2
    9f34:	1a41      	subs	r1, r0, r1
    9f36:	d200      	bcs.n	9f3a <__aeabi_idiv+0x1a6>
    9f38:	4601      	mov	r1, r0
    9f3a:	4663      	mov	r3, ip
    9f3c:	4152      	adcs	r2, r2
    9f3e:	105b      	asrs	r3, r3, #1
    9f40:	4610      	mov	r0, r2
    9f42:	d301      	bcc.n	9f48 <__aeabi_idiv+0x1b4>
    9f44:	4240      	negs	r0, r0
    9f46:	2b00      	cmp	r3, #0
    9f48:	d500      	bpl.n	9f4c <__aeabi_idiv+0x1b8>
    9f4a:	4249      	negs	r1, r1
    9f4c:	4770      	bx	lr
    9f4e:	4663      	mov	r3, ip
    9f50:	105b      	asrs	r3, r3, #1
    9f52:	d300      	bcc.n	9f56 <__aeabi_idiv+0x1c2>
    9f54:	4240      	negs	r0, r0
    9f56:	b501      	push	{r0, lr}
    9f58:	2000      	movs	r0, #0
    9f5a:	f000 f80b 	bl	9f74 <__aeabi_idiv0>
    9f5e:	bd02      	pop	{r1, pc}

00009f60 <__aeabi_idivmod>:
    9f60:	2900      	cmp	r1, #0
    9f62:	d0f8      	beq.n	9f56 <__aeabi_idiv+0x1c2>
    9f64:	b503      	push	{r0, r1, lr}
    9f66:	f7ff ff15 	bl	9d94 <__aeabi_idiv>
    9f6a:	bc0e      	pop	{r1, r2, r3}
    9f6c:	4342      	muls	r2, r0
    9f6e:	1a89      	subs	r1, r1, r2
    9f70:	4718      	bx	r3
    9f72:	46c0      	nop			; (mov r8, r8)

00009f74 <__aeabi_idiv0>:
    9f74:	4770      	bx	lr
    9f76:	46c0      	nop			; (mov r8, r8)

00009f78 <__aeabi_cdrcmple>:
    9f78:	4684      	mov	ip, r0
    9f7a:	1c10      	adds	r0, r2, #0
    9f7c:	4662      	mov	r2, ip
    9f7e:	468c      	mov	ip, r1
    9f80:	1c19      	adds	r1, r3, #0
    9f82:	4663      	mov	r3, ip
    9f84:	e000      	b.n	9f88 <__aeabi_cdcmpeq>
    9f86:	46c0      	nop			; (mov r8, r8)

00009f88 <__aeabi_cdcmpeq>:
    9f88:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    9f8a:	f001 f8dd 	bl	b148 <__ledf2>
    9f8e:	2800      	cmp	r0, #0
    9f90:	d401      	bmi.n	9f96 <__aeabi_cdcmpeq+0xe>
    9f92:	2100      	movs	r1, #0
    9f94:	42c8      	cmn	r0, r1
    9f96:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00009f98 <__aeabi_dcmpeq>:
    9f98:	b510      	push	{r4, lr}
    9f9a:	f001 f821 	bl	afe0 <__eqdf2>
    9f9e:	4240      	negs	r0, r0
    9fa0:	3001      	adds	r0, #1
    9fa2:	bd10      	pop	{r4, pc}

00009fa4 <__aeabi_dcmplt>:
    9fa4:	b510      	push	{r4, lr}
    9fa6:	f001 f8cf 	bl	b148 <__ledf2>
    9faa:	2800      	cmp	r0, #0
    9fac:	db01      	blt.n	9fb2 <__aeabi_dcmplt+0xe>
    9fae:	2000      	movs	r0, #0
    9fb0:	bd10      	pop	{r4, pc}
    9fb2:	2001      	movs	r0, #1
    9fb4:	bd10      	pop	{r4, pc}
    9fb6:	46c0      	nop			; (mov r8, r8)

00009fb8 <__aeabi_dcmple>:
    9fb8:	b510      	push	{r4, lr}
    9fba:	f001 f8c5 	bl	b148 <__ledf2>
    9fbe:	2800      	cmp	r0, #0
    9fc0:	dd01      	ble.n	9fc6 <__aeabi_dcmple+0xe>
    9fc2:	2000      	movs	r0, #0
    9fc4:	bd10      	pop	{r4, pc}
    9fc6:	2001      	movs	r0, #1
    9fc8:	bd10      	pop	{r4, pc}
    9fca:	46c0      	nop			; (mov r8, r8)

00009fcc <__aeabi_dcmpgt>:
    9fcc:	b510      	push	{r4, lr}
    9fce:	f001 f84b 	bl	b068 <__gedf2>
    9fd2:	2800      	cmp	r0, #0
    9fd4:	dc01      	bgt.n	9fda <__aeabi_dcmpgt+0xe>
    9fd6:	2000      	movs	r0, #0
    9fd8:	bd10      	pop	{r4, pc}
    9fda:	2001      	movs	r0, #1
    9fdc:	bd10      	pop	{r4, pc}
    9fde:	46c0      	nop			; (mov r8, r8)

00009fe0 <__aeabi_dcmpge>:
    9fe0:	b510      	push	{r4, lr}
    9fe2:	f001 f841 	bl	b068 <__gedf2>
    9fe6:	2800      	cmp	r0, #0
    9fe8:	da01      	bge.n	9fee <__aeabi_dcmpge+0xe>
    9fea:	2000      	movs	r0, #0
    9fec:	bd10      	pop	{r4, pc}
    9fee:	2001      	movs	r0, #1
    9ff0:	bd10      	pop	{r4, pc}
    9ff2:	46c0      	nop			; (mov r8, r8)

00009ff4 <__aeabi_lmul>:
    9ff4:	b5f0      	push	{r4, r5, r6, r7, lr}
    9ff6:	464f      	mov	r7, r9
    9ff8:	4646      	mov	r6, r8
    9ffa:	0405      	lsls	r5, r0, #16
    9ffc:	0c2d      	lsrs	r5, r5, #16
    9ffe:	1c2c      	adds	r4, r5, #0
    a000:	b4c0      	push	{r6, r7}
    a002:	0417      	lsls	r7, r2, #16
    a004:	0c16      	lsrs	r6, r2, #16
    a006:	0c3f      	lsrs	r7, r7, #16
    a008:	4699      	mov	r9, r3
    a00a:	0c03      	lsrs	r3, r0, #16
    a00c:	437c      	muls	r4, r7
    a00e:	4375      	muls	r5, r6
    a010:	435f      	muls	r7, r3
    a012:	4373      	muls	r3, r6
    a014:	197d      	adds	r5, r7, r5
    a016:	0c26      	lsrs	r6, r4, #16
    a018:	19ad      	adds	r5, r5, r6
    a01a:	469c      	mov	ip, r3
    a01c:	42af      	cmp	r7, r5
    a01e:	d903      	bls.n	a028 <__aeabi_lmul+0x34>
    a020:	2380      	movs	r3, #128	; 0x80
    a022:	025b      	lsls	r3, r3, #9
    a024:	4698      	mov	r8, r3
    a026:	44c4      	add	ip, r8
    a028:	464b      	mov	r3, r9
    a02a:	4351      	muls	r1, r2
    a02c:	4343      	muls	r3, r0
    a02e:	0424      	lsls	r4, r4, #16
    a030:	0c2e      	lsrs	r6, r5, #16
    a032:	0c24      	lsrs	r4, r4, #16
    a034:	042d      	lsls	r5, r5, #16
    a036:	4466      	add	r6, ip
    a038:	192c      	adds	r4, r5, r4
    a03a:	1859      	adds	r1, r3, r1
    a03c:	1989      	adds	r1, r1, r6
    a03e:	1c20      	adds	r0, r4, #0
    a040:	bc0c      	pop	{r2, r3}
    a042:	4690      	mov	r8, r2
    a044:	4699      	mov	r9, r3
    a046:	bdf0      	pop	{r4, r5, r6, r7, pc}

0000a048 <__aeabi_fdiv>:
    a048:	b5f0      	push	{r4, r5, r6, r7, lr}
    a04a:	4656      	mov	r6, sl
    a04c:	464d      	mov	r5, r9
    a04e:	465f      	mov	r7, fp
    a050:	4644      	mov	r4, r8
    a052:	b4f0      	push	{r4, r5, r6, r7}
    a054:	0243      	lsls	r3, r0, #9
    a056:	0045      	lsls	r5, r0, #1
    a058:	0fc7      	lsrs	r7, r0, #31
    a05a:	b083      	sub	sp, #12
    a05c:	468a      	mov	sl, r1
    a05e:	0a5c      	lsrs	r4, r3, #9
    a060:	0e2e      	lsrs	r6, r5, #24
    a062:	46b9      	mov	r9, r7
    a064:	d041      	beq.n	a0ea <__aeabi_fdiv+0xa2>
    a066:	2eff      	cmp	r6, #255	; 0xff
    a068:	d026      	beq.n	a0b8 <__aeabi_fdiv+0x70>
    a06a:	2380      	movs	r3, #128	; 0x80
    a06c:	041b      	lsls	r3, r3, #16
    a06e:	4323      	orrs	r3, r4
    a070:	00dc      	lsls	r4, r3, #3
    a072:	2300      	movs	r3, #0
    a074:	4698      	mov	r8, r3
    a076:	469b      	mov	fp, r3
    a078:	3e7f      	subs	r6, #127	; 0x7f
    a07a:	4653      	mov	r3, sl
    a07c:	025b      	lsls	r3, r3, #9
    a07e:	0a5d      	lsrs	r5, r3, #9
    a080:	4653      	mov	r3, sl
    a082:	005a      	lsls	r2, r3, #1
    a084:	0fdb      	lsrs	r3, r3, #31
    a086:	0e12      	lsrs	r2, r2, #24
    a088:	469a      	mov	sl, r3
    a08a:	d039      	beq.n	a100 <__aeabi_fdiv+0xb8>
    a08c:	2aff      	cmp	r2, #255	; 0xff
    a08e:	d033      	beq.n	a0f8 <__aeabi_fdiv+0xb0>
    a090:	2380      	movs	r3, #128	; 0x80
    a092:	041b      	lsls	r3, r3, #16
    a094:	432b      	orrs	r3, r5
    a096:	00dd      	lsls	r5, r3, #3
    a098:	2300      	movs	r3, #0
    a09a:	3a7f      	subs	r2, #127	; 0x7f
    a09c:	4651      	mov	r1, sl
    a09e:	1ab2      	subs	r2, r6, r2
    a0a0:	4646      	mov	r6, r8
    a0a2:	4079      	eors	r1, r7
    a0a4:	1c08      	adds	r0, r1, #0
    a0a6:	9201      	str	r2, [sp, #4]
    a0a8:	431e      	orrs	r6, r3
    a0aa:	2e0f      	cmp	r6, #15
    a0ac:	d900      	bls.n	a0b0 <__aeabi_fdiv+0x68>
    a0ae:	e076      	b.n	a19e <__aeabi_fdiv+0x156>
    a0b0:	4a7e      	ldr	r2, [pc, #504]	; (a2ac <__aeabi_fdiv+0x264>)
    a0b2:	00b6      	lsls	r6, r6, #2
    a0b4:	5996      	ldr	r6, [r2, r6]
    a0b6:	46b7      	mov	pc, r6
    a0b8:	2c00      	cmp	r4, #0
    a0ba:	d130      	bne.n	a11e <__aeabi_fdiv+0xd6>
    a0bc:	2308      	movs	r3, #8
    a0be:	4698      	mov	r8, r3
    a0c0:	3b06      	subs	r3, #6
    a0c2:	469b      	mov	fp, r3
    a0c4:	e7d9      	b.n	a07a <__aeabi_fdiv+0x32>
    a0c6:	2380      	movs	r3, #128	; 0x80
    a0c8:	2100      	movs	r1, #0
    a0ca:	03db      	lsls	r3, r3, #15
    a0cc:	24ff      	movs	r4, #255	; 0xff
    a0ce:	025b      	lsls	r3, r3, #9
    a0d0:	05e4      	lsls	r4, r4, #23
    a0d2:	0a5b      	lsrs	r3, r3, #9
    a0d4:	07c9      	lsls	r1, r1, #31
    a0d6:	4323      	orrs	r3, r4
    a0d8:	430b      	orrs	r3, r1
    a0da:	1c18      	adds	r0, r3, #0
    a0dc:	b003      	add	sp, #12
    a0de:	bc3c      	pop	{r2, r3, r4, r5}
    a0e0:	4690      	mov	r8, r2
    a0e2:	4699      	mov	r9, r3
    a0e4:	46a2      	mov	sl, r4
    a0e6:	46ab      	mov	fp, r5
    a0e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    a0ea:	2c00      	cmp	r4, #0
    a0ec:	d128      	bne.n	a140 <__aeabi_fdiv+0xf8>
    a0ee:	2304      	movs	r3, #4
    a0f0:	4698      	mov	r8, r3
    a0f2:	3b03      	subs	r3, #3
    a0f4:	469b      	mov	fp, r3
    a0f6:	e7c0      	b.n	a07a <__aeabi_fdiv+0x32>
    a0f8:	2d00      	cmp	r5, #0
    a0fa:	d11f      	bne.n	a13c <__aeabi_fdiv+0xf4>
    a0fc:	2302      	movs	r3, #2
    a0fe:	e002      	b.n	a106 <__aeabi_fdiv+0xbe>
    a100:	2d00      	cmp	r5, #0
    a102:	d111      	bne.n	a128 <__aeabi_fdiv+0xe0>
    a104:	2301      	movs	r3, #1
    a106:	1ab2      	subs	r2, r6, r2
    a108:	4650      	mov	r0, sl
    a10a:	4646      	mov	r6, r8
    a10c:	4078      	eors	r0, r7
    a10e:	9201      	str	r2, [sp, #4]
    a110:	431e      	orrs	r6, r3
    a112:	2e0f      	cmp	r6, #15
    a114:	d827      	bhi.n	a166 <__aeabi_fdiv+0x11e>
    a116:	4966      	ldr	r1, [pc, #408]	; (a2b0 <__aeabi_fdiv+0x268>)
    a118:	00b6      	lsls	r6, r6, #2
    a11a:	5989      	ldr	r1, [r1, r6]
    a11c:	468f      	mov	pc, r1
    a11e:	230c      	movs	r3, #12
    a120:	4698      	mov	r8, r3
    a122:	3b09      	subs	r3, #9
    a124:	469b      	mov	fp, r3
    a126:	e7a8      	b.n	a07a <__aeabi_fdiv+0x32>
    a128:	1c28      	adds	r0, r5, #0
    a12a:	f001 ff4d 	bl	bfc8 <__clzsi2>
    a12e:	2276      	movs	r2, #118	; 0x76
    a130:	1f43      	subs	r3, r0, #5
    a132:	4252      	negs	r2, r2
    a134:	409d      	lsls	r5, r3
    a136:	1a12      	subs	r2, r2, r0
    a138:	2300      	movs	r3, #0
    a13a:	e7af      	b.n	a09c <__aeabi_fdiv+0x54>
    a13c:	2303      	movs	r3, #3
    a13e:	e7ad      	b.n	a09c <__aeabi_fdiv+0x54>
    a140:	1c20      	adds	r0, r4, #0
    a142:	f001 ff41 	bl	bfc8 <__clzsi2>
    a146:	1f43      	subs	r3, r0, #5
    a148:	409c      	lsls	r4, r3
    a14a:	2376      	movs	r3, #118	; 0x76
    a14c:	425b      	negs	r3, r3
    a14e:	1a1e      	subs	r6, r3, r0
    a150:	2300      	movs	r3, #0
    a152:	4698      	mov	r8, r3
    a154:	469b      	mov	fp, r3
    a156:	e790      	b.n	a07a <__aeabi_fdiv+0x32>
    a158:	2500      	movs	r5, #0
    a15a:	46d1      	mov	r9, sl
    a15c:	469b      	mov	fp, r3
    a15e:	465b      	mov	r3, fp
    a160:	4648      	mov	r0, r9
    a162:	2b02      	cmp	r3, #2
    a164:	d16f      	bne.n	a246 <__aeabi_fdiv+0x1fe>
    a166:	2101      	movs	r1, #1
    a168:	24ff      	movs	r4, #255	; 0xff
    a16a:	4001      	ands	r1, r0
    a16c:	2300      	movs	r3, #0
    a16e:	e7ae      	b.n	a0ce <__aeabi_fdiv+0x86>
    a170:	237e      	movs	r3, #126	; 0x7e
    a172:	9a01      	ldr	r2, [sp, #4]
    a174:	425b      	negs	r3, r3
    a176:	1a9b      	subs	r3, r3, r2
    a178:	2b1b      	cmp	r3, #27
    a17a:	dd6d      	ble.n	a258 <__aeabi_fdiv+0x210>
    a17c:	2101      	movs	r1, #1
    a17e:	464b      	mov	r3, r9
    a180:	4019      	ands	r1, r3
    a182:	2400      	movs	r4, #0
    a184:	2300      	movs	r3, #0
    a186:	e7a2      	b.n	a0ce <__aeabi_fdiv+0x86>
    a188:	2380      	movs	r3, #128	; 0x80
    a18a:	03db      	lsls	r3, r3, #15
    a18c:	421c      	tst	r4, r3
    a18e:	d149      	bne.n	a224 <__aeabi_fdiv+0x1dc>
    a190:	2380      	movs	r3, #128	; 0x80
    a192:	03db      	lsls	r3, r3, #15
    a194:	4323      	orrs	r3, r4
    a196:	025b      	lsls	r3, r3, #9
    a198:	0a5b      	lsrs	r3, r3, #9
    a19a:	1c39      	adds	r1, r7, #0
    a19c:	e796      	b.n	a0cc <__aeabi_fdiv+0x84>
    a19e:	0163      	lsls	r3, r4, #5
    a1a0:	016d      	lsls	r5, r5, #5
    a1a2:	42ab      	cmp	r3, r5
    a1a4:	d337      	bcc.n	a216 <__aeabi_fdiv+0x1ce>
    a1a6:	4689      	mov	r9, r1
    a1a8:	201a      	movs	r0, #26
    a1aa:	2101      	movs	r1, #1
    a1ac:	1b5b      	subs	r3, r3, r5
    a1ae:	2401      	movs	r4, #1
    a1b0:	1c1e      	adds	r6, r3, #0
    a1b2:	0049      	lsls	r1, r1, #1
    a1b4:	005b      	lsls	r3, r3, #1
    a1b6:	2e00      	cmp	r6, #0
    a1b8:	db01      	blt.n	a1be <__aeabi_fdiv+0x176>
    a1ba:	42ab      	cmp	r3, r5
    a1bc:	d301      	bcc.n	a1c2 <__aeabi_fdiv+0x17a>
    a1be:	1b5b      	subs	r3, r3, r5
    a1c0:	4321      	orrs	r1, r4
    a1c2:	3801      	subs	r0, #1
    a1c4:	2800      	cmp	r0, #0
    a1c6:	d1f3      	bne.n	a1b0 <__aeabi_fdiv+0x168>
    a1c8:	1e58      	subs	r0, r3, #1
    a1ca:	4183      	sbcs	r3, r0
    a1cc:	430b      	orrs	r3, r1
    a1ce:	1c1d      	adds	r5, r3, #0
    a1d0:	9c01      	ldr	r4, [sp, #4]
    a1d2:	347f      	adds	r4, #127	; 0x7f
    a1d4:	2c00      	cmp	r4, #0
    a1d6:	ddcb      	ble.n	a170 <__aeabi_fdiv+0x128>
    a1d8:	076b      	lsls	r3, r5, #29
    a1da:	d004      	beq.n	a1e6 <__aeabi_fdiv+0x19e>
    a1dc:	230f      	movs	r3, #15
    a1de:	402b      	ands	r3, r5
    a1e0:	2b04      	cmp	r3, #4
    a1e2:	d000      	beq.n	a1e6 <__aeabi_fdiv+0x19e>
    a1e4:	3504      	adds	r5, #4
    a1e6:	012b      	lsls	r3, r5, #4
    a1e8:	d504      	bpl.n	a1f4 <__aeabi_fdiv+0x1ac>
    a1ea:	9a01      	ldr	r2, [sp, #4]
    a1ec:	4b31      	ldr	r3, [pc, #196]	; (a2b4 <__aeabi_fdiv+0x26c>)
    a1ee:	3280      	adds	r2, #128	; 0x80
    a1f0:	1c14      	adds	r4, r2, #0
    a1f2:	401d      	ands	r5, r3
    a1f4:	2cfe      	cmp	r4, #254	; 0xfe
    a1f6:	dd07      	ble.n	a208 <__aeabi_fdiv+0x1c0>
    a1f8:	464b      	mov	r3, r9
    a1fa:	2101      	movs	r1, #1
    a1fc:	24ff      	movs	r4, #255	; 0xff
    a1fe:	4019      	ands	r1, r3
    a200:	2300      	movs	r3, #0
    a202:	e764      	b.n	a0ce <__aeabi_fdiv+0x86>
    a204:	1c25      	adds	r5, r4, #0
    a206:	e7aa      	b.n	a15e <__aeabi_fdiv+0x116>
    a208:	2101      	movs	r1, #1
    a20a:	464a      	mov	r2, r9
    a20c:	01ab      	lsls	r3, r5, #6
    a20e:	0a5b      	lsrs	r3, r3, #9
    a210:	b2e4      	uxtb	r4, r4
    a212:	4011      	ands	r1, r2
    a214:	e75b      	b.n	a0ce <__aeabi_fdiv+0x86>
    a216:	9a01      	ldr	r2, [sp, #4]
    a218:	4689      	mov	r9, r1
    a21a:	3a01      	subs	r2, #1
    a21c:	9201      	str	r2, [sp, #4]
    a21e:	201b      	movs	r0, #27
    a220:	2100      	movs	r1, #0
    a222:	e7c4      	b.n	a1ae <__aeabi_fdiv+0x166>
    a224:	421d      	tst	r5, r3
    a226:	d007      	beq.n	a238 <__aeabi_fdiv+0x1f0>
    a228:	4323      	orrs	r3, r4
    a22a:	025b      	lsls	r3, r3, #9
    a22c:	0a5b      	lsrs	r3, r3, #9
    a22e:	1c39      	adds	r1, r7, #0
    a230:	e74c      	b.n	a0cc <__aeabi_fdiv+0x84>
    a232:	2500      	movs	r5, #0
    a234:	0263      	lsls	r3, r4, #9
    a236:	d5ab      	bpl.n	a190 <__aeabi_fdiv+0x148>
    a238:	2380      	movs	r3, #128	; 0x80
    a23a:	03db      	lsls	r3, r3, #15
    a23c:	432b      	orrs	r3, r5
    a23e:	025b      	lsls	r3, r3, #9
    a240:	0a5b      	lsrs	r3, r3, #9
    a242:	4651      	mov	r1, sl
    a244:	e742      	b.n	a0cc <__aeabi_fdiv+0x84>
    a246:	2b03      	cmp	r3, #3
    a248:	d025      	beq.n	a296 <__aeabi_fdiv+0x24e>
    a24a:	2b01      	cmp	r3, #1
    a24c:	d1c0      	bne.n	a1d0 <__aeabi_fdiv+0x188>
    a24e:	2101      	movs	r1, #1
    a250:	2400      	movs	r4, #0
    a252:	4001      	ands	r1, r0
    a254:	2300      	movs	r3, #0
    a256:	e73a      	b.n	a0ce <__aeabi_fdiv+0x86>
    a258:	1c29      	adds	r1, r5, #0
    a25a:	40d9      	lsrs	r1, r3
    a25c:	1c2b      	adds	r3, r5, #0
    a25e:	9a01      	ldr	r2, [sp, #4]
    a260:	329e      	adds	r2, #158	; 0x9e
    a262:	4093      	lsls	r3, r2
    a264:	1e5d      	subs	r5, r3, #1
    a266:	41ab      	sbcs	r3, r5
    a268:	430b      	orrs	r3, r1
    a26a:	075a      	lsls	r2, r3, #29
    a26c:	d004      	beq.n	a278 <__aeabi_fdiv+0x230>
    a26e:	220f      	movs	r2, #15
    a270:	401a      	ands	r2, r3
    a272:	2a04      	cmp	r2, #4
    a274:	d000      	beq.n	a278 <__aeabi_fdiv+0x230>
    a276:	3304      	adds	r3, #4
    a278:	015a      	lsls	r2, r3, #5
    a27a:	d505      	bpl.n	a288 <__aeabi_fdiv+0x240>
    a27c:	464b      	mov	r3, r9
    a27e:	2101      	movs	r1, #1
    a280:	2401      	movs	r4, #1
    a282:	4019      	ands	r1, r3
    a284:	2300      	movs	r3, #0
    a286:	e722      	b.n	a0ce <__aeabi_fdiv+0x86>
    a288:	2101      	movs	r1, #1
    a28a:	464a      	mov	r2, r9
    a28c:	019b      	lsls	r3, r3, #6
    a28e:	0a5b      	lsrs	r3, r3, #9
    a290:	4011      	ands	r1, r2
    a292:	2400      	movs	r4, #0
    a294:	e71b      	b.n	a0ce <__aeabi_fdiv+0x86>
    a296:	2380      	movs	r3, #128	; 0x80
    a298:	2101      	movs	r1, #1
    a29a:	464a      	mov	r2, r9
    a29c:	03db      	lsls	r3, r3, #15
    a29e:	432b      	orrs	r3, r5
    a2a0:	025b      	lsls	r3, r3, #9
    a2a2:	400a      	ands	r2, r1
    a2a4:	0a5b      	lsrs	r3, r3, #9
    a2a6:	1c11      	adds	r1, r2, #0
    a2a8:	e710      	b.n	a0cc <__aeabi_fdiv+0x84>
    a2aa:	46c0      	nop			; (mov r8, r8)
    a2ac:	00011e88 	.word	0x00011e88
    a2b0:	00011ec8 	.word	0x00011ec8
    a2b4:	f7ffffff 	.word	0xf7ffffff

0000a2b8 <__aeabi_i2f>:
    a2b8:	b570      	push	{r4, r5, r6, lr}
    a2ba:	1e04      	subs	r4, r0, #0
    a2bc:	d039      	beq.n	a332 <__aeabi_i2f+0x7a>
    a2be:	0fc5      	lsrs	r5, r0, #31
    a2c0:	d000      	beq.n	a2c4 <__aeabi_i2f+0xc>
    a2c2:	4244      	negs	r4, r0
    a2c4:	1c20      	adds	r0, r4, #0
    a2c6:	f001 fe7f 	bl	bfc8 <__clzsi2>
    a2ca:	239e      	movs	r3, #158	; 0x9e
    a2cc:	1c26      	adds	r6, r4, #0
    a2ce:	1a1b      	subs	r3, r3, r0
    a2d0:	2b96      	cmp	r3, #150	; 0x96
    a2d2:	dc07      	bgt.n	a2e4 <__aeabi_i2f+0x2c>
    a2d4:	2808      	cmp	r0, #8
    a2d6:	dd01      	ble.n	a2dc <__aeabi_i2f+0x24>
    a2d8:	3808      	subs	r0, #8
    a2da:	4084      	lsls	r4, r0
    a2dc:	0264      	lsls	r4, r4, #9
    a2de:	0a64      	lsrs	r4, r4, #9
    a2e0:	b2d8      	uxtb	r0, r3
    a2e2:	e01e      	b.n	a322 <__aeabi_i2f+0x6a>
    a2e4:	2b99      	cmp	r3, #153	; 0x99
    a2e6:	dd0a      	ble.n	a2fe <__aeabi_i2f+0x46>
    a2e8:	2205      	movs	r2, #5
    a2ea:	1c21      	adds	r1, r4, #0
    a2ec:	1a12      	subs	r2, r2, r0
    a2ee:	40d1      	lsrs	r1, r2
    a2f0:	1c0a      	adds	r2, r1, #0
    a2f2:	1c01      	adds	r1, r0, #0
    a2f4:	311b      	adds	r1, #27
    a2f6:	408e      	lsls	r6, r1
    a2f8:	1e71      	subs	r1, r6, #1
    a2fa:	418e      	sbcs	r6, r1
    a2fc:	4316      	orrs	r6, r2
    a2fe:	2805      	cmp	r0, #5
    a300:	dd01      	ble.n	a306 <__aeabi_i2f+0x4e>
    a302:	1f42      	subs	r2, r0, #5
    a304:	4096      	lsls	r6, r2
    a306:	4c0f      	ldr	r4, [pc, #60]	; (a344 <__aeabi_i2f+0x8c>)
    a308:	4034      	ands	r4, r6
    a30a:	0772      	lsls	r2, r6, #29
    a30c:	d004      	beq.n	a318 <__aeabi_i2f+0x60>
    a30e:	220f      	movs	r2, #15
    a310:	4016      	ands	r6, r2
    a312:	2e04      	cmp	r6, #4
    a314:	d000      	beq.n	a318 <__aeabi_i2f+0x60>
    a316:	3404      	adds	r4, #4
    a318:	0162      	lsls	r2, r4, #5
    a31a:	d40e      	bmi.n	a33a <__aeabi_i2f+0x82>
    a31c:	01a4      	lsls	r4, r4, #6
    a31e:	0a64      	lsrs	r4, r4, #9
    a320:	b2d8      	uxtb	r0, r3
    a322:	0264      	lsls	r4, r4, #9
    a324:	05c0      	lsls	r0, r0, #23
    a326:	0a64      	lsrs	r4, r4, #9
    a328:	07ed      	lsls	r5, r5, #31
    a32a:	4304      	orrs	r4, r0
    a32c:	432c      	orrs	r4, r5
    a32e:	1c20      	adds	r0, r4, #0
    a330:	bd70      	pop	{r4, r5, r6, pc}
    a332:	2500      	movs	r5, #0
    a334:	2000      	movs	r0, #0
    a336:	2400      	movs	r4, #0
    a338:	e7f3      	b.n	a322 <__aeabi_i2f+0x6a>
    a33a:	4b02      	ldr	r3, [pc, #8]	; (a344 <__aeabi_i2f+0x8c>)
    a33c:	401c      	ands	r4, r3
    a33e:	239f      	movs	r3, #159	; 0x9f
    a340:	1a1b      	subs	r3, r3, r0
    a342:	e7eb      	b.n	a31c <__aeabi_i2f+0x64>
    a344:	fbffffff 	.word	0xfbffffff

0000a348 <__aeabi_dadd>:
    a348:	b5f0      	push	{r4, r5, r6, r7, lr}
    a34a:	4645      	mov	r5, r8
    a34c:	4657      	mov	r7, sl
    a34e:	464e      	mov	r6, r9
    a350:	4694      	mov	ip, r2
    a352:	004c      	lsls	r4, r1, #1
    a354:	030a      	lsls	r2, r1, #12
    a356:	0fc9      	lsrs	r1, r1, #31
    a358:	b4e0      	push	{r5, r6, r7}
    a35a:	4688      	mov	r8, r1
    a35c:	1c0e      	adds	r6, r1, #0
    a35e:	0319      	lsls	r1, r3, #12
    a360:	0f47      	lsrs	r7, r0, #29
    a362:	00c5      	lsls	r5, r0, #3
    a364:	0a48      	lsrs	r0, r1, #9
    a366:	4661      	mov	r1, ip
    a368:	0f49      	lsrs	r1, r1, #29
    a36a:	4301      	orrs	r1, r0
    a36c:	4660      	mov	r0, ip
    a36e:	0a52      	lsrs	r2, r2, #9
    a370:	4317      	orrs	r7, r2
    a372:	00c0      	lsls	r0, r0, #3
    a374:	005a      	lsls	r2, r3, #1
    a376:	0d64      	lsrs	r4, r4, #21
    a378:	0d52      	lsrs	r2, r2, #21
    a37a:	0fdb      	lsrs	r3, r3, #31
    a37c:	4684      	mov	ip, r0
    a37e:	4598      	cmp	r8, r3
    a380:	d100      	bne.n	a384 <__aeabi_dadd+0x3c>
    a382:	e0a7      	b.n	a4d4 <__aeabi_dadd+0x18c>
    a384:	1aa0      	subs	r0, r4, r2
    a386:	2800      	cmp	r0, #0
    a388:	dc00      	bgt.n	a38c <__aeabi_dadd+0x44>
    a38a:	e101      	b.n	a590 <__aeabi_dadd+0x248>
    a38c:	2a00      	cmp	r2, #0
    a38e:	d13d      	bne.n	a40c <__aeabi_dadd+0xc4>
    a390:	4663      	mov	r3, ip
    a392:	430b      	orrs	r3, r1
    a394:	d000      	beq.n	a398 <__aeabi_dadd+0x50>
    a396:	e0d4      	b.n	a542 <__aeabi_dadd+0x1fa>
    a398:	076b      	lsls	r3, r5, #29
    a39a:	d100      	bne.n	a39e <__aeabi_dadd+0x56>
    a39c:	e088      	b.n	a4b0 <__aeabi_dadd+0x168>
    a39e:	230f      	movs	r3, #15
    a3a0:	402b      	ands	r3, r5
    a3a2:	2b04      	cmp	r3, #4
    a3a4:	d100      	bne.n	a3a8 <__aeabi_dadd+0x60>
    a3a6:	e083      	b.n	a4b0 <__aeabi_dadd+0x168>
    a3a8:	1d2a      	adds	r2, r5, #4
    a3aa:	42aa      	cmp	r2, r5
    a3ac:	41ad      	sbcs	r5, r5
    a3ae:	2380      	movs	r3, #128	; 0x80
    a3b0:	426d      	negs	r5, r5
    a3b2:	197f      	adds	r7, r7, r5
    a3b4:	041b      	lsls	r3, r3, #16
    a3b6:	403b      	ands	r3, r7
    a3b8:	4646      	mov	r6, r8
    a3ba:	1c15      	adds	r5, r2, #0
    a3bc:	2b00      	cmp	r3, #0
    a3be:	d100      	bne.n	a3c2 <__aeabi_dadd+0x7a>
    a3c0:	e07c      	b.n	a4bc <__aeabi_dadd+0x174>
    a3c2:	4bcc      	ldr	r3, [pc, #816]	; (a6f4 <__aeabi_dadd+0x3ac>)
    a3c4:	3401      	adds	r4, #1
    a3c6:	429c      	cmp	r4, r3
    a3c8:	d100      	bne.n	a3cc <__aeabi_dadd+0x84>
    a3ca:	e0fd      	b.n	a5c8 <__aeabi_dadd+0x280>
    a3cc:	1c3a      	adds	r2, r7, #0
    a3ce:	4bca      	ldr	r3, [pc, #808]	; (a6f8 <__aeabi_dadd+0x3b0>)
    a3d0:	08ed      	lsrs	r5, r5, #3
    a3d2:	401a      	ands	r2, r3
    a3d4:	0750      	lsls	r0, r2, #29
    a3d6:	0564      	lsls	r4, r4, #21
    a3d8:	0252      	lsls	r2, r2, #9
    a3da:	4305      	orrs	r5, r0
    a3dc:	0b12      	lsrs	r2, r2, #12
    a3de:	0d64      	lsrs	r4, r4, #21
    a3e0:	2100      	movs	r1, #0
    a3e2:	0312      	lsls	r2, r2, #12
    a3e4:	0d0b      	lsrs	r3, r1, #20
    a3e6:	051b      	lsls	r3, r3, #20
    a3e8:	0564      	lsls	r4, r4, #21
    a3ea:	0b12      	lsrs	r2, r2, #12
    a3ec:	431a      	orrs	r2, r3
    a3ee:	0863      	lsrs	r3, r4, #1
    a3f0:	4cc2      	ldr	r4, [pc, #776]	; (a6fc <__aeabi_dadd+0x3b4>)
    a3f2:	07f6      	lsls	r6, r6, #31
    a3f4:	4014      	ands	r4, r2
    a3f6:	431c      	orrs	r4, r3
    a3f8:	0064      	lsls	r4, r4, #1
    a3fa:	0864      	lsrs	r4, r4, #1
    a3fc:	4334      	orrs	r4, r6
    a3fe:	1c28      	adds	r0, r5, #0
    a400:	1c21      	adds	r1, r4, #0
    a402:	bc1c      	pop	{r2, r3, r4}
    a404:	4690      	mov	r8, r2
    a406:	4699      	mov	r9, r3
    a408:	46a2      	mov	sl, r4
    a40a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    a40c:	4bb9      	ldr	r3, [pc, #740]	; (a6f4 <__aeabi_dadd+0x3ac>)
    a40e:	429c      	cmp	r4, r3
    a410:	d0c2      	beq.n	a398 <__aeabi_dadd+0x50>
    a412:	2380      	movs	r3, #128	; 0x80
    a414:	041b      	lsls	r3, r3, #16
    a416:	4319      	orrs	r1, r3
    a418:	2838      	cmp	r0, #56	; 0x38
    a41a:	dd00      	ble.n	a41e <__aeabi_dadd+0xd6>
    a41c:	e0ec      	b.n	a5f8 <__aeabi_dadd+0x2b0>
    a41e:	281f      	cmp	r0, #31
    a420:	dd00      	ble.n	a424 <__aeabi_dadd+0xdc>
    a422:	e121      	b.n	a668 <__aeabi_dadd+0x320>
    a424:	2220      	movs	r2, #32
    a426:	1c0e      	adds	r6, r1, #0
    a428:	4663      	mov	r3, ip
    a42a:	1a12      	subs	r2, r2, r0
    a42c:	4096      	lsls	r6, r2
    a42e:	40c3      	lsrs	r3, r0
    a430:	4333      	orrs	r3, r6
    a432:	4666      	mov	r6, ip
    a434:	4096      	lsls	r6, r2
    a436:	1c32      	adds	r2, r6, #0
    a438:	1e56      	subs	r6, r2, #1
    a43a:	41b2      	sbcs	r2, r6
    a43c:	4313      	orrs	r3, r2
    a43e:	1c0a      	adds	r2, r1, #0
    a440:	40c2      	lsrs	r2, r0
    a442:	1aeb      	subs	r3, r5, r3
    a444:	429d      	cmp	r5, r3
    a446:	41b6      	sbcs	r6, r6
    a448:	1c1d      	adds	r5, r3, #0
    a44a:	1aba      	subs	r2, r7, r2
    a44c:	4276      	negs	r6, r6
    a44e:	1b97      	subs	r7, r2, r6
    a450:	023b      	lsls	r3, r7, #8
    a452:	d400      	bmi.n	a456 <__aeabi_dadd+0x10e>
    a454:	e097      	b.n	a586 <__aeabi_dadd+0x23e>
    a456:	027a      	lsls	r2, r7, #9
    a458:	0a56      	lsrs	r6, r2, #9
    a45a:	2e00      	cmp	r6, #0
    a45c:	d100      	bne.n	a460 <__aeabi_dadd+0x118>
    a45e:	e0b6      	b.n	a5ce <__aeabi_dadd+0x286>
    a460:	1c30      	adds	r0, r6, #0
    a462:	f001 fdb1 	bl	bfc8 <__clzsi2>
    a466:	1c03      	adds	r3, r0, #0
    a468:	3b08      	subs	r3, #8
    a46a:	2b1f      	cmp	r3, #31
    a46c:	dd00      	ble.n	a470 <__aeabi_dadd+0x128>
    a46e:	e0b7      	b.n	a5e0 <__aeabi_dadd+0x298>
    a470:	409e      	lsls	r6, r3
    a472:	1c37      	adds	r7, r6, #0
    a474:	2628      	movs	r6, #40	; 0x28
    a476:	1c2a      	adds	r2, r5, #0
    a478:	1a36      	subs	r6, r6, r0
    a47a:	40f2      	lsrs	r2, r6
    a47c:	1c16      	adds	r6, r2, #0
    a47e:	409d      	lsls	r5, r3
    a480:	433e      	orrs	r6, r7
    a482:	429c      	cmp	r4, r3
    a484:	dd00      	ble.n	a488 <__aeabi_dadd+0x140>
    a486:	e0b2      	b.n	a5ee <__aeabi_dadd+0x2a6>
    a488:	1b1c      	subs	r4, r3, r4
    a48a:	1c62      	adds	r2, r4, #1
    a48c:	2a1f      	cmp	r2, #31
    a48e:	dd00      	ble.n	a492 <__aeabi_dadd+0x14a>
    a490:	e0d8      	b.n	a644 <__aeabi_dadd+0x2fc>
    a492:	231f      	movs	r3, #31
    a494:	1c29      	adds	r1, r5, #0
    a496:	1b1c      	subs	r4, r3, r4
    a498:	1c33      	adds	r3, r6, #0
    a49a:	40a5      	lsls	r5, r4
    a49c:	40a3      	lsls	r3, r4
    a49e:	40d1      	lsrs	r1, r2
    a4a0:	1e6c      	subs	r4, r5, #1
    a4a2:	41a5      	sbcs	r5, r4
    a4a4:	40d6      	lsrs	r6, r2
    a4a6:	4319      	orrs	r1, r3
    a4a8:	430d      	orrs	r5, r1
    a4aa:	1c37      	adds	r7, r6, #0
    a4ac:	2400      	movs	r4, #0
    a4ae:	e773      	b.n	a398 <__aeabi_dadd+0x50>
    a4b0:	2380      	movs	r3, #128	; 0x80
    a4b2:	041b      	lsls	r3, r3, #16
    a4b4:	403b      	ands	r3, r7
    a4b6:	4646      	mov	r6, r8
    a4b8:	d000      	beq.n	a4bc <__aeabi_dadd+0x174>
    a4ba:	e782      	b.n	a3c2 <__aeabi_dadd+0x7a>
    a4bc:	4b8d      	ldr	r3, [pc, #564]	; (a6f4 <__aeabi_dadd+0x3ac>)
    a4be:	08ed      	lsrs	r5, r5, #3
    a4c0:	0778      	lsls	r0, r7, #29
    a4c2:	4305      	orrs	r5, r0
    a4c4:	08fa      	lsrs	r2, r7, #3
    a4c6:	429c      	cmp	r4, r3
    a4c8:	d032      	beq.n	a530 <__aeabi_dadd+0x1e8>
    a4ca:	0312      	lsls	r2, r2, #12
    a4cc:	0564      	lsls	r4, r4, #21
    a4ce:	0b12      	lsrs	r2, r2, #12
    a4d0:	0d64      	lsrs	r4, r4, #21
    a4d2:	e785      	b.n	a3e0 <__aeabi_dadd+0x98>
    a4d4:	1aa3      	subs	r3, r4, r2
    a4d6:	2b00      	cmp	r3, #0
    a4d8:	dc00      	bgt.n	a4dc <__aeabi_dadd+0x194>
    a4da:	e094      	b.n	a606 <__aeabi_dadd+0x2be>
    a4dc:	2a00      	cmp	r2, #0
    a4de:	d03c      	beq.n	a55a <__aeabi_dadd+0x212>
    a4e0:	4a84      	ldr	r2, [pc, #528]	; (a6f4 <__aeabi_dadd+0x3ac>)
    a4e2:	4294      	cmp	r4, r2
    a4e4:	d100      	bne.n	a4e8 <__aeabi_dadd+0x1a0>
    a4e6:	e757      	b.n	a398 <__aeabi_dadd+0x50>
    a4e8:	2280      	movs	r2, #128	; 0x80
    a4ea:	0412      	lsls	r2, r2, #16
    a4ec:	4311      	orrs	r1, r2
    a4ee:	2b38      	cmp	r3, #56	; 0x38
    a4f0:	dc00      	bgt.n	a4f4 <__aeabi_dadd+0x1ac>
    a4f2:	e105      	b.n	a700 <__aeabi_dadd+0x3b8>
    a4f4:	4663      	mov	r3, ip
    a4f6:	4319      	orrs	r1, r3
    a4f8:	1e48      	subs	r0, r1, #1
    a4fa:	4181      	sbcs	r1, r0
    a4fc:	2200      	movs	r2, #0
    a4fe:	b2c8      	uxtb	r0, r1
    a500:	1940      	adds	r0, r0, r5
    a502:	42a8      	cmp	r0, r5
    a504:	419b      	sbcs	r3, r3
    a506:	1c05      	adds	r5, r0, #0
    a508:	19d2      	adds	r2, r2, r7
    a50a:	425b      	negs	r3, r3
    a50c:	18d7      	adds	r7, r2, r3
    a50e:	023b      	lsls	r3, r7, #8
    a510:	d539      	bpl.n	a586 <__aeabi_dadd+0x23e>
    a512:	4b78      	ldr	r3, [pc, #480]	; (a6f4 <__aeabi_dadd+0x3ac>)
    a514:	3401      	adds	r4, #1
    a516:	429c      	cmp	r4, r3
    a518:	d100      	bne.n	a51c <__aeabi_dadd+0x1d4>
    a51a:	e14c      	b.n	a7b6 <__aeabi_dadd+0x46e>
    a51c:	2001      	movs	r0, #1
    a51e:	4a76      	ldr	r2, [pc, #472]	; (a6f8 <__aeabi_dadd+0x3b0>)
    a520:	086b      	lsrs	r3, r5, #1
    a522:	403a      	ands	r2, r7
    a524:	4028      	ands	r0, r5
    a526:	4318      	orrs	r0, r3
    a528:	07d5      	lsls	r5, r2, #31
    a52a:	4305      	orrs	r5, r0
    a52c:	0857      	lsrs	r7, r2, #1
    a52e:	e733      	b.n	a398 <__aeabi_dadd+0x50>
    a530:	1c2b      	adds	r3, r5, #0
    a532:	4313      	orrs	r3, r2
    a534:	d048      	beq.n	a5c8 <__aeabi_dadd+0x280>
    a536:	2380      	movs	r3, #128	; 0x80
    a538:	031b      	lsls	r3, r3, #12
    a53a:	431a      	orrs	r2, r3
    a53c:	0312      	lsls	r2, r2, #12
    a53e:	0b12      	lsrs	r2, r2, #12
    a540:	e74e      	b.n	a3e0 <__aeabi_dadd+0x98>
    a542:	3801      	subs	r0, #1
    a544:	2800      	cmp	r0, #0
    a546:	d178      	bne.n	a63a <__aeabi_dadd+0x2f2>
    a548:	4663      	mov	r3, ip
    a54a:	1aee      	subs	r6, r5, r3
    a54c:	42b5      	cmp	r5, r6
    a54e:	419b      	sbcs	r3, r3
    a550:	1a7a      	subs	r2, r7, r1
    a552:	425b      	negs	r3, r3
    a554:	1ad7      	subs	r7, r2, r3
    a556:	1c35      	adds	r5, r6, #0
    a558:	e77a      	b.n	a450 <__aeabi_dadd+0x108>
    a55a:	1c02      	adds	r2, r0, #0
    a55c:	430a      	orrs	r2, r1
    a55e:	d100      	bne.n	a562 <__aeabi_dadd+0x21a>
    a560:	e71a      	b.n	a398 <__aeabi_dadd+0x50>
    a562:	3b01      	subs	r3, #1
    a564:	2b00      	cmp	r3, #0
    a566:	d000      	beq.n	a56a <__aeabi_dadd+0x222>
    a568:	e0f2      	b.n	a750 <__aeabi_dadd+0x408>
    a56a:	1940      	adds	r0, r0, r5
    a56c:	42a8      	cmp	r0, r5
    a56e:	419b      	sbcs	r3, r3
    a570:	19ca      	adds	r2, r1, r7
    a572:	425b      	negs	r3, r3
    a574:	18d7      	adds	r7, r2, r3
    a576:	1c05      	adds	r5, r0, #0
    a578:	e7c9      	b.n	a50e <__aeabi_dadd+0x1c6>
    a57a:	1c13      	adds	r3, r2, #0
    a57c:	4333      	orrs	r3, r6
    a57e:	d100      	bne.n	a582 <__aeabi_dadd+0x23a>
    a580:	e118      	b.n	a7b4 <__aeabi_dadd+0x46c>
    a582:	1c17      	adds	r7, r2, #0
    a584:	1c35      	adds	r5, r6, #0
    a586:	4646      	mov	r6, r8
    a588:	076b      	lsls	r3, r5, #29
    a58a:	d000      	beq.n	a58e <__aeabi_dadd+0x246>
    a58c:	e707      	b.n	a39e <__aeabi_dadd+0x56>
    a58e:	e795      	b.n	a4bc <__aeabi_dadd+0x174>
    a590:	2800      	cmp	r0, #0
    a592:	d17a      	bne.n	a68a <__aeabi_dadd+0x342>
    a594:	1c62      	adds	r2, r4, #1
    a596:	0552      	lsls	r2, r2, #21
    a598:	0d52      	lsrs	r2, r2, #21
    a59a:	2a01      	cmp	r2, #1
    a59c:	dc00      	bgt.n	a5a0 <__aeabi_dadd+0x258>
    a59e:	e0fb      	b.n	a798 <__aeabi_dadd+0x450>
    a5a0:	4662      	mov	r2, ip
    a5a2:	1aaa      	subs	r2, r5, r2
    a5a4:	4295      	cmp	r5, r2
    a5a6:	41b6      	sbcs	r6, r6
    a5a8:	4691      	mov	r9, r2
    a5aa:	1a78      	subs	r0, r7, r1
    a5ac:	4272      	negs	r2, r6
    a5ae:	1a86      	subs	r6, r0, r2
    a5b0:	0232      	lsls	r2, r6, #8
    a5b2:	d400      	bmi.n	a5b6 <__aeabi_dadd+0x26e>
    a5b4:	e093      	b.n	a6de <__aeabi_dadd+0x396>
    a5b6:	4662      	mov	r2, ip
    a5b8:	1b55      	subs	r5, r2, r5
    a5ba:	45ac      	cmp	ip, r5
    a5bc:	4180      	sbcs	r0, r0
    a5be:	1bcf      	subs	r7, r1, r7
    a5c0:	4240      	negs	r0, r0
    a5c2:	1a3e      	subs	r6, r7, r0
    a5c4:	4698      	mov	r8, r3
    a5c6:	e748      	b.n	a45a <__aeabi_dadd+0x112>
    a5c8:	2200      	movs	r2, #0
    a5ca:	2500      	movs	r5, #0
    a5cc:	e708      	b.n	a3e0 <__aeabi_dadd+0x98>
    a5ce:	1c28      	adds	r0, r5, #0
    a5d0:	f001 fcfa 	bl	bfc8 <__clzsi2>
    a5d4:	3020      	adds	r0, #32
    a5d6:	1c03      	adds	r3, r0, #0
    a5d8:	3b08      	subs	r3, #8
    a5da:	2b1f      	cmp	r3, #31
    a5dc:	dc00      	bgt.n	a5e0 <__aeabi_dadd+0x298>
    a5de:	e747      	b.n	a470 <__aeabi_dadd+0x128>
    a5e0:	3828      	subs	r0, #40	; 0x28
    a5e2:	4085      	lsls	r5, r0
    a5e4:	1c2e      	adds	r6, r5, #0
    a5e6:	2500      	movs	r5, #0
    a5e8:	429c      	cmp	r4, r3
    a5ea:	dc00      	bgt.n	a5ee <__aeabi_dadd+0x2a6>
    a5ec:	e74c      	b.n	a488 <__aeabi_dadd+0x140>
    a5ee:	4a42      	ldr	r2, [pc, #264]	; (a6f8 <__aeabi_dadd+0x3b0>)
    a5f0:	1ae4      	subs	r4, r4, r3
    a5f2:	4016      	ands	r6, r2
    a5f4:	1c37      	adds	r7, r6, #0
    a5f6:	e6cf      	b.n	a398 <__aeabi_dadd+0x50>
    a5f8:	4663      	mov	r3, ip
    a5fa:	4319      	orrs	r1, r3
    a5fc:	1e4b      	subs	r3, r1, #1
    a5fe:	4199      	sbcs	r1, r3
    a600:	2200      	movs	r2, #0
    a602:	b2cb      	uxtb	r3, r1
    a604:	e71d      	b.n	a442 <__aeabi_dadd+0xfa>
    a606:	2b00      	cmp	r3, #0
    a608:	d000      	beq.n	a60c <__aeabi_dadd+0x2c4>
    a60a:	e0f2      	b.n	a7f2 <__aeabi_dadd+0x4aa>
    a60c:	1c60      	adds	r0, r4, #1
    a60e:	0543      	lsls	r3, r0, #21
    a610:	0d5b      	lsrs	r3, r3, #21
    a612:	2b01      	cmp	r3, #1
    a614:	dc00      	bgt.n	a618 <__aeabi_dadd+0x2d0>
    a616:	e0a4      	b.n	a762 <__aeabi_dadd+0x41a>
    a618:	4b36      	ldr	r3, [pc, #216]	; (a6f4 <__aeabi_dadd+0x3ac>)
    a61a:	4298      	cmp	r0, r3
    a61c:	d100      	bne.n	a620 <__aeabi_dadd+0x2d8>
    a61e:	e121      	b.n	a864 <__aeabi_dadd+0x51c>
    a620:	4663      	mov	r3, ip
    a622:	195c      	adds	r4, r3, r5
    a624:	42ac      	cmp	r4, r5
    a626:	419b      	sbcs	r3, r3
    a628:	19cf      	adds	r7, r1, r7
    a62a:	425b      	negs	r3, r3
    a62c:	18fa      	adds	r2, r7, r3
    a62e:	0864      	lsrs	r4, r4, #1
    a630:	07d5      	lsls	r5, r2, #31
    a632:	4325      	orrs	r5, r4
    a634:	0857      	lsrs	r7, r2, #1
    a636:	1c04      	adds	r4, r0, #0
    a638:	e6ae      	b.n	a398 <__aeabi_dadd+0x50>
    a63a:	4b2e      	ldr	r3, [pc, #184]	; (a6f4 <__aeabi_dadd+0x3ac>)
    a63c:	429c      	cmp	r4, r3
    a63e:	d000      	beq.n	a642 <__aeabi_dadd+0x2fa>
    a640:	e6ea      	b.n	a418 <__aeabi_dadd+0xd0>
    a642:	e6a9      	b.n	a398 <__aeabi_dadd+0x50>
    a644:	1c21      	adds	r1, r4, #0
    a646:	1c33      	adds	r3, r6, #0
    a648:	391f      	subs	r1, #31
    a64a:	40cb      	lsrs	r3, r1
    a64c:	1c19      	adds	r1, r3, #0
    a64e:	2a20      	cmp	r2, #32
    a650:	d100      	bne.n	a654 <__aeabi_dadd+0x30c>
    a652:	e082      	b.n	a75a <__aeabi_dadd+0x412>
    a654:	233f      	movs	r3, #63	; 0x3f
    a656:	1b1c      	subs	r4, r3, r4
    a658:	40a6      	lsls	r6, r4
    a65a:	4335      	orrs	r5, r6
    a65c:	1e6e      	subs	r6, r5, #1
    a65e:	41b5      	sbcs	r5, r6
    a660:	2700      	movs	r7, #0
    a662:	430d      	orrs	r5, r1
    a664:	2400      	movs	r4, #0
    a666:	e78e      	b.n	a586 <__aeabi_dadd+0x23e>
    a668:	1c03      	adds	r3, r0, #0
    a66a:	1c0e      	adds	r6, r1, #0
    a66c:	3b20      	subs	r3, #32
    a66e:	40de      	lsrs	r6, r3
    a670:	2820      	cmp	r0, #32
    a672:	d074      	beq.n	a75e <__aeabi_dadd+0x416>
    a674:	2340      	movs	r3, #64	; 0x40
    a676:	1a1b      	subs	r3, r3, r0
    a678:	4099      	lsls	r1, r3
    a67a:	1c0b      	adds	r3, r1, #0
    a67c:	4662      	mov	r2, ip
    a67e:	4313      	orrs	r3, r2
    a680:	1e59      	subs	r1, r3, #1
    a682:	418b      	sbcs	r3, r1
    a684:	2200      	movs	r2, #0
    a686:	4333      	orrs	r3, r6
    a688:	e6db      	b.n	a442 <__aeabi_dadd+0xfa>
    a68a:	2c00      	cmp	r4, #0
    a68c:	d050      	beq.n	a730 <__aeabi_dadd+0x3e8>
    a68e:	4c19      	ldr	r4, [pc, #100]	; (a6f4 <__aeabi_dadd+0x3ac>)
    a690:	42a2      	cmp	r2, r4
    a692:	d100      	bne.n	a696 <__aeabi_dadd+0x34e>
    a694:	e0a8      	b.n	a7e8 <__aeabi_dadd+0x4a0>
    a696:	2480      	movs	r4, #128	; 0x80
    a698:	0424      	lsls	r4, r4, #16
    a69a:	4240      	negs	r0, r0
    a69c:	4327      	orrs	r7, r4
    a69e:	2838      	cmp	r0, #56	; 0x38
    a6a0:	dd00      	ble.n	a6a4 <__aeabi_dadd+0x35c>
    a6a2:	e0d9      	b.n	a858 <__aeabi_dadd+0x510>
    a6a4:	281f      	cmp	r0, #31
    a6a6:	dd00      	ble.n	a6aa <__aeabi_dadd+0x362>
    a6a8:	e139      	b.n	a91e <__aeabi_dadd+0x5d6>
    a6aa:	2420      	movs	r4, #32
    a6ac:	1c3e      	adds	r6, r7, #0
    a6ae:	1a24      	subs	r4, r4, r0
    a6b0:	40a6      	lsls	r6, r4
    a6b2:	46b0      	mov	r8, r6
    a6b4:	1c2e      	adds	r6, r5, #0
    a6b6:	46a1      	mov	r9, r4
    a6b8:	40c6      	lsrs	r6, r0
    a6ba:	4644      	mov	r4, r8
    a6bc:	4326      	orrs	r6, r4
    a6be:	464c      	mov	r4, r9
    a6c0:	40a5      	lsls	r5, r4
    a6c2:	1e6c      	subs	r4, r5, #1
    a6c4:	41a5      	sbcs	r5, r4
    a6c6:	40c7      	lsrs	r7, r0
    a6c8:	4335      	orrs	r5, r6
    a6ca:	4660      	mov	r0, ip
    a6cc:	1b45      	subs	r5, r0, r5
    a6ce:	1bcf      	subs	r7, r1, r7
    a6d0:	45ac      	cmp	ip, r5
    a6d2:	4189      	sbcs	r1, r1
    a6d4:	4249      	negs	r1, r1
    a6d6:	1a7f      	subs	r7, r7, r1
    a6d8:	1c14      	adds	r4, r2, #0
    a6da:	4698      	mov	r8, r3
    a6dc:	e6b8      	b.n	a450 <__aeabi_dadd+0x108>
    a6de:	464b      	mov	r3, r9
    a6e0:	464d      	mov	r5, r9
    a6e2:	4333      	orrs	r3, r6
    a6e4:	d000      	beq.n	a6e8 <__aeabi_dadd+0x3a0>
    a6e6:	e6b8      	b.n	a45a <__aeabi_dadd+0x112>
    a6e8:	2600      	movs	r6, #0
    a6ea:	2700      	movs	r7, #0
    a6ec:	2400      	movs	r4, #0
    a6ee:	2500      	movs	r5, #0
    a6f0:	e6e4      	b.n	a4bc <__aeabi_dadd+0x174>
    a6f2:	46c0      	nop			; (mov r8, r8)
    a6f4:	000007ff 	.word	0x000007ff
    a6f8:	ff7fffff 	.word	0xff7fffff
    a6fc:	800fffff 	.word	0x800fffff
    a700:	2b1f      	cmp	r3, #31
    a702:	dc5b      	bgt.n	a7bc <__aeabi_dadd+0x474>
    a704:	2220      	movs	r2, #32
    a706:	1c08      	adds	r0, r1, #0
    a708:	1ad2      	subs	r2, r2, r3
    a70a:	4090      	lsls	r0, r2
    a70c:	4681      	mov	r9, r0
    a70e:	4660      	mov	r0, ip
    a710:	4692      	mov	sl, r2
    a712:	40d8      	lsrs	r0, r3
    a714:	464a      	mov	r2, r9
    a716:	4310      	orrs	r0, r2
    a718:	4681      	mov	r9, r0
    a71a:	4652      	mov	r2, sl
    a71c:	4660      	mov	r0, ip
    a71e:	4090      	lsls	r0, r2
    a720:	1c02      	adds	r2, r0, #0
    a722:	1e50      	subs	r0, r2, #1
    a724:	4182      	sbcs	r2, r0
    a726:	4648      	mov	r0, r9
    a728:	4310      	orrs	r0, r2
    a72a:	1c0a      	adds	r2, r1, #0
    a72c:	40da      	lsrs	r2, r3
    a72e:	e6e7      	b.n	a500 <__aeabi_dadd+0x1b8>
    a730:	1c3c      	adds	r4, r7, #0
    a732:	432c      	orrs	r4, r5
    a734:	d058      	beq.n	a7e8 <__aeabi_dadd+0x4a0>
    a736:	43c0      	mvns	r0, r0
    a738:	2800      	cmp	r0, #0
    a73a:	d151      	bne.n	a7e0 <__aeabi_dadd+0x498>
    a73c:	4660      	mov	r0, ip
    a73e:	1b45      	subs	r5, r0, r5
    a740:	45ac      	cmp	ip, r5
    a742:	4180      	sbcs	r0, r0
    a744:	1bcf      	subs	r7, r1, r7
    a746:	4240      	negs	r0, r0
    a748:	1a3f      	subs	r7, r7, r0
    a74a:	1c14      	adds	r4, r2, #0
    a74c:	4698      	mov	r8, r3
    a74e:	e67f      	b.n	a450 <__aeabi_dadd+0x108>
    a750:	4a8f      	ldr	r2, [pc, #572]	; (a990 <__aeabi_dadd+0x648>)
    a752:	4294      	cmp	r4, r2
    a754:	d000      	beq.n	a758 <__aeabi_dadd+0x410>
    a756:	e6ca      	b.n	a4ee <__aeabi_dadd+0x1a6>
    a758:	e61e      	b.n	a398 <__aeabi_dadd+0x50>
    a75a:	2600      	movs	r6, #0
    a75c:	e77d      	b.n	a65a <__aeabi_dadd+0x312>
    a75e:	2300      	movs	r3, #0
    a760:	e78c      	b.n	a67c <__aeabi_dadd+0x334>
    a762:	1c3b      	adds	r3, r7, #0
    a764:	432b      	orrs	r3, r5
    a766:	2c00      	cmp	r4, #0
    a768:	d000      	beq.n	a76c <__aeabi_dadd+0x424>
    a76a:	e0bd      	b.n	a8e8 <__aeabi_dadd+0x5a0>
    a76c:	2b00      	cmp	r3, #0
    a76e:	d100      	bne.n	a772 <__aeabi_dadd+0x42a>
    a770:	e0f5      	b.n	a95e <__aeabi_dadd+0x616>
    a772:	4663      	mov	r3, ip
    a774:	430b      	orrs	r3, r1
    a776:	d100      	bne.n	a77a <__aeabi_dadd+0x432>
    a778:	e60e      	b.n	a398 <__aeabi_dadd+0x50>
    a77a:	4663      	mov	r3, ip
    a77c:	195b      	adds	r3, r3, r5
    a77e:	42ab      	cmp	r3, r5
    a780:	4180      	sbcs	r0, r0
    a782:	19ca      	adds	r2, r1, r7
    a784:	4240      	negs	r0, r0
    a786:	1817      	adds	r7, r2, r0
    a788:	023a      	lsls	r2, r7, #8
    a78a:	d400      	bmi.n	a78e <__aeabi_dadd+0x446>
    a78c:	e0fc      	b.n	a988 <__aeabi_dadd+0x640>
    a78e:	4a81      	ldr	r2, [pc, #516]	; (a994 <__aeabi_dadd+0x64c>)
    a790:	1c1d      	adds	r5, r3, #0
    a792:	4017      	ands	r7, r2
    a794:	3401      	adds	r4, #1
    a796:	e5ff      	b.n	a398 <__aeabi_dadd+0x50>
    a798:	1c3a      	adds	r2, r7, #0
    a79a:	432a      	orrs	r2, r5
    a79c:	2c00      	cmp	r4, #0
    a79e:	d151      	bne.n	a844 <__aeabi_dadd+0x4fc>
    a7a0:	2a00      	cmp	r2, #0
    a7a2:	d000      	beq.n	a7a6 <__aeabi_dadd+0x45e>
    a7a4:	e085      	b.n	a8b2 <__aeabi_dadd+0x56a>
    a7a6:	4662      	mov	r2, ip
    a7a8:	430a      	orrs	r2, r1
    a7aa:	d003      	beq.n	a7b4 <__aeabi_dadd+0x46c>
    a7ac:	1c0f      	adds	r7, r1, #0
    a7ae:	4665      	mov	r5, ip
    a7b0:	4698      	mov	r8, r3
    a7b2:	e5f1      	b.n	a398 <__aeabi_dadd+0x50>
    a7b4:	2600      	movs	r6, #0
    a7b6:	2700      	movs	r7, #0
    a7b8:	2500      	movs	r5, #0
    a7ba:	e67f      	b.n	a4bc <__aeabi_dadd+0x174>
    a7bc:	1c18      	adds	r0, r3, #0
    a7be:	1c0a      	adds	r2, r1, #0
    a7c0:	3820      	subs	r0, #32
    a7c2:	40c2      	lsrs	r2, r0
    a7c4:	2b20      	cmp	r3, #32
    a7c6:	d100      	bne.n	a7ca <__aeabi_dadd+0x482>
    a7c8:	e0a7      	b.n	a91a <__aeabi_dadd+0x5d2>
    a7ca:	2040      	movs	r0, #64	; 0x40
    a7cc:	1ac0      	subs	r0, r0, r3
    a7ce:	4081      	lsls	r1, r0
    a7d0:	1c08      	adds	r0, r1, #0
    a7d2:	4663      	mov	r3, ip
    a7d4:	4318      	orrs	r0, r3
    a7d6:	1e41      	subs	r1, r0, #1
    a7d8:	4188      	sbcs	r0, r1
    a7da:	4310      	orrs	r0, r2
    a7dc:	2200      	movs	r2, #0
    a7de:	e68f      	b.n	a500 <__aeabi_dadd+0x1b8>
    a7e0:	4c6b      	ldr	r4, [pc, #428]	; (a990 <__aeabi_dadd+0x648>)
    a7e2:	42a2      	cmp	r2, r4
    a7e4:	d000      	beq.n	a7e8 <__aeabi_dadd+0x4a0>
    a7e6:	e75a      	b.n	a69e <__aeabi_dadd+0x356>
    a7e8:	1c0f      	adds	r7, r1, #0
    a7ea:	4665      	mov	r5, ip
    a7ec:	1c14      	adds	r4, r2, #0
    a7ee:	4698      	mov	r8, r3
    a7f0:	e5d2      	b.n	a398 <__aeabi_dadd+0x50>
    a7f2:	2c00      	cmp	r4, #0
    a7f4:	d13a      	bne.n	a86c <__aeabi_dadd+0x524>
    a7f6:	1c38      	adds	r0, r7, #0
    a7f8:	4328      	orrs	r0, r5
    a7fa:	d071      	beq.n	a8e0 <__aeabi_dadd+0x598>
    a7fc:	43db      	mvns	r3, r3
    a7fe:	2b00      	cmp	r3, #0
    a800:	d018      	beq.n	a834 <__aeabi_dadd+0x4ec>
    a802:	4863      	ldr	r0, [pc, #396]	; (a990 <__aeabi_dadd+0x648>)
    a804:	4282      	cmp	r2, r0
    a806:	d06b      	beq.n	a8e0 <__aeabi_dadd+0x598>
    a808:	2b38      	cmp	r3, #56	; 0x38
    a80a:	dd00      	ble.n	a80e <__aeabi_dadd+0x4c6>
    a80c:	e09d      	b.n	a94a <__aeabi_dadd+0x602>
    a80e:	2b1f      	cmp	r3, #31
    a810:	dd00      	ble.n	a814 <__aeabi_dadd+0x4cc>
    a812:	e0a7      	b.n	a964 <__aeabi_dadd+0x61c>
    a814:	2020      	movs	r0, #32
    a816:	1c3c      	adds	r4, r7, #0
    a818:	1ac0      	subs	r0, r0, r3
    a81a:	4084      	lsls	r4, r0
    a81c:	46a1      	mov	r9, r4
    a81e:	1c2c      	adds	r4, r5, #0
    a820:	4682      	mov	sl, r0
    a822:	40dc      	lsrs	r4, r3
    a824:	4648      	mov	r0, r9
    a826:	4304      	orrs	r4, r0
    a828:	4650      	mov	r0, sl
    a82a:	4085      	lsls	r5, r0
    a82c:	1e68      	subs	r0, r5, #1
    a82e:	4185      	sbcs	r5, r0
    a830:	40df      	lsrs	r7, r3
    a832:	4325      	orrs	r5, r4
    a834:	4465      	add	r5, ip
    a836:	4565      	cmp	r5, ip
    a838:	419b      	sbcs	r3, r3
    a83a:	187f      	adds	r7, r7, r1
    a83c:	425b      	negs	r3, r3
    a83e:	18ff      	adds	r7, r7, r3
    a840:	1c14      	adds	r4, r2, #0
    a842:	e664      	b.n	a50e <__aeabi_dadd+0x1c6>
    a844:	2a00      	cmp	r2, #0
    a846:	d119      	bne.n	a87c <__aeabi_dadd+0x534>
    a848:	4662      	mov	r2, ip
    a84a:	430a      	orrs	r2, r1
    a84c:	d077      	beq.n	a93e <__aeabi_dadd+0x5f6>
    a84e:	1c0f      	adds	r7, r1, #0
    a850:	4665      	mov	r5, ip
    a852:	4698      	mov	r8, r3
    a854:	4c4e      	ldr	r4, [pc, #312]	; (a990 <__aeabi_dadd+0x648>)
    a856:	e59f      	b.n	a398 <__aeabi_dadd+0x50>
    a858:	433d      	orrs	r5, r7
    a85a:	1e6f      	subs	r7, r5, #1
    a85c:	41bd      	sbcs	r5, r7
    a85e:	2700      	movs	r7, #0
    a860:	b2ed      	uxtb	r5, r5
    a862:	e732      	b.n	a6ca <__aeabi_dadd+0x382>
    a864:	1c04      	adds	r4, r0, #0
    a866:	2700      	movs	r7, #0
    a868:	2500      	movs	r5, #0
    a86a:	e627      	b.n	a4bc <__aeabi_dadd+0x174>
    a86c:	4848      	ldr	r0, [pc, #288]	; (a990 <__aeabi_dadd+0x648>)
    a86e:	4282      	cmp	r2, r0
    a870:	d036      	beq.n	a8e0 <__aeabi_dadd+0x598>
    a872:	2080      	movs	r0, #128	; 0x80
    a874:	0400      	lsls	r0, r0, #16
    a876:	425b      	negs	r3, r3
    a878:	4307      	orrs	r7, r0
    a87a:	e7c5      	b.n	a808 <__aeabi_dadd+0x4c0>
    a87c:	4662      	mov	r2, ip
    a87e:	430a      	orrs	r2, r1
    a880:	d049      	beq.n	a916 <__aeabi_dadd+0x5ce>
    a882:	2480      	movs	r4, #128	; 0x80
    a884:	08ed      	lsrs	r5, r5, #3
    a886:	0778      	lsls	r0, r7, #29
    a888:	08fa      	lsrs	r2, r7, #3
    a88a:	0324      	lsls	r4, r4, #12
    a88c:	4328      	orrs	r0, r5
    a88e:	4222      	tst	r2, r4
    a890:	d009      	beq.n	a8a6 <__aeabi_dadd+0x55e>
    a892:	08ce      	lsrs	r6, r1, #3
    a894:	4226      	tst	r6, r4
    a896:	d106      	bne.n	a8a6 <__aeabi_dadd+0x55e>
    a898:	4662      	mov	r2, ip
    a89a:	074f      	lsls	r7, r1, #29
    a89c:	1c38      	adds	r0, r7, #0
    a89e:	08d2      	lsrs	r2, r2, #3
    a8a0:	4310      	orrs	r0, r2
    a8a2:	4698      	mov	r8, r3
    a8a4:	1c32      	adds	r2, r6, #0
    a8a6:	00d2      	lsls	r2, r2, #3
    a8a8:	0f47      	lsrs	r7, r0, #29
    a8aa:	4317      	orrs	r7, r2
    a8ac:	00c5      	lsls	r5, r0, #3
    a8ae:	4c38      	ldr	r4, [pc, #224]	; (a990 <__aeabi_dadd+0x648>)
    a8b0:	e572      	b.n	a398 <__aeabi_dadd+0x50>
    a8b2:	4662      	mov	r2, ip
    a8b4:	430a      	orrs	r2, r1
    a8b6:	d100      	bne.n	a8ba <__aeabi_dadd+0x572>
    a8b8:	e56e      	b.n	a398 <__aeabi_dadd+0x50>
    a8ba:	4662      	mov	r2, ip
    a8bc:	1aae      	subs	r6, r5, r2
    a8be:	42b5      	cmp	r5, r6
    a8c0:	4192      	sbcs	r2, r2
    a8c2:	1a78      	subs	r0, r7, r1
    a8c4:	4252      	negs	r2, r2
    a8c6:	1a82      	subs	r2, r0, r2
    a8c8:	0210      	lsls	r0, r2, #8
    a8ca:	d400      	bmi.n	a8ce <__aeabi_dadd+0x586>
    a8cc:	e655      	b.n	a57a <__aeabi_dadd+0x232>
    a8ce:	4662      	mov	r2, ip
    a8d0:	1b55      	subs	r5, r2, r5
    a8d2:	45ac      	cmp	ip, r5
    a8d4:	4180      	sbcs	r0, r0
    a8d6:	1bca      	subs	r2, r1, r7
    a8d8:	4240      	negs	r0, r0
    a8da:	1a17      	subs	r7, r2, r0
    a8dc:	4698      	mov	r8, r3
    a8de:	e55b      	b.n	a398 <__aeabi_dadd+0x50>
    a8e0:	1c0f      	adds	r7, r1, #0
    a8e2:	4665      	mov	r5, ip
    a8e4:	1c14      	adds	r4, r2, #0
    a8e6:	e557      	b.n	a398 <__aeabi_dadd+0x50>
    a8e8:	2b00      	cmp	r3, #0
    a8ea:	d034      	beq.n	a956 <__aeabi_dadd+0x60e>
    a8ec:	4663      	mov	r3, ip
    a8ee:	430b      	orrs	r3, r1
    a8f0:	d011      	beq.n	a916 <__aeabi_dadd+0x5ce>
    a8f2:	2480      	movs	r4, #128	; 0x80
    a8f4:	08ed      	lsrs	r5, r5, #3
    a8f6:	0778      	lsls	r0, r7, #29
    a8f8:	08fa      	lsrs	r2, r7, #3
    a8fa:	0324      	lsls	r4, r4, #12
    a8fc:	4328      	orrs	r0, r5
    a8fe:	4222      	tst	r2, r4
    a900:	d0d1      	beq.n	a8a6 <__aeabi_dadd+0x55e>
    a902:	08cb      	lsrs	r3, r1, #3
    a904:	4223      	tst	r3, r4
    a906:	d1ce      	bne.n	a8a6 <__aeabi_dadd+0x55e>
    a908:	4662      	mov	r2, ip
    a90a:	074f      	lsls	r7, r1, #29
    a90c:	1c38      	adds	r0, r7, #0
    a90e:	08d2      	lsrs	r2, r2, #3
    a910:	4310      	orrs	r0, r2
    a912:	1c1a      	adds	r2, r3, #0
    a914:	e7c7      	b.n	a8a6 <__aeabi_dadd+0x55e>
    a916:	4c1e      	ldr	r4, [pc, #120]	; (a990 <__aeabi_dadd+0x648>)
    a918:	e53e      	b.n	a398 <__aeabi_dadd+0x50>
    a91a:	2000      	movs	r0, #0
    a91c:	e759      	b.n	a7d2 <__aeabi_dadd+0x48a>
    a91e:	1c04      	adds	r4, r0, #0
    a920:	1c3e      	adds	r6, r7, #0
    a922:	3c20      	subs	r4, #32
    a924:	40e6      	lsrs	r6, r4
    a926:	1c34      	adds	r4, r6, #0
    a928:	2820      	cmp	r0, #32
    a92a:	d02b      	beq.n	a984 <__aeabi_dadd+0x63c>
    a92c:	2640      	movs	r6, #64	; 0x40
    a92e:	1a30      	subs	r0, r6, r0
    a930:	4087      	lsls	r7, r0
    a932:	433d      	orrs	r5, r7
    a934:	1e6f      	subs	r7, r5, #1
    a936:	41bd      	sbcs	r5, r7
    a938:	2700      	movs	r7, #0
    a93a:	4325      	orrs	r5, r4
    a93c:	e6c5      	b.n	a6ca <__aeabi_dadd+0x382>
    a93e:	2780      	movs	r7, #128	; 0x80
    a940:	2600      	movs	r6, #0
    a942:	03ff      	lsls	r7, r7, #15
    a944:	4c12      	ldr	r4, [pc, #72]	; (a990 <__aeabi_dadd+0x648>)
    a946:	2500      	movs	r5, #0
    a948:	e5b8      	b.n	a4bc <__aeabi_dadd+0x174>
    a94a:	433d      	orrs	r5, r7
    a94c:	1e6f      	subs	r7, r5, #1
    a94e:	41bd      	sbcs	r5, r7
    a950:	2700      	movs	r7, #0
    a952:	b2ed      	uxtb	r5, r5
    a954:	e76e      	b.n	a834 <__aeabi_dadd+0x4ec>
    a956:	1c0f      	adds	r7, r1, #0
    a958:	4665      	mov	r5, ip
    a95a:	4c0d      	ldr	r4, [pc, #52]	; (a990 <__aeabi_dadd+0x648>)
    a95c:	e51c      	b.n	a398 <__aeabi_dadd+0x50>
    a95e:	1c0f      	adds	r7, r1, #0
    a960:	4665      	mov	r5, ip
    a962:	e519      	b.n	a398 <__aeabi_dadd+0x50>
    a964:	1c1c      	adds	r4, r3, #0
    a966:	1c38      	adds	r0, r7, #0
    a968:	3c20      	subs	r4, #32
    a96a:	40e0      	lsrs	r0, r4
    a96c:	1c04      	adds	r4, r0, #0
    a96e:	2b20      	cmp	r3, #32
    a970:	d00c      	beq.n	a98c <__aeabi_dadd+0x644>
    a972:	2040      	movs	r0, #64	; 0x40
    a974:	1ac3      	subs	r3, r0, r3
    a976:	409f      	lsls	r7, r3
    a978:	433d      	orrs	r5, r7
    a97a:	1e6f      	subs	r7, r5, #1
    a97c:	41bd      	sbcs	r5, r7
    a97e:	2700      	movs	r7, #0
    a980:	4325      	orrs	r5, r4
    a982:	e757      	b.n	a834 <__aeabi_dadd+0x4ec>
    a984:	2700      	movs	r7, #0
    a986:	e7d4      	b.n	a932 <__aeabi_dadd+0x5ea>
    a988:	1c1d      	adds	r5, r3, #0
    a98a:	e5fc      	b.n	a586 <__aeabi_dadd+0x23e>
    a98c:	2700      	movs	r7, #0
    a98e:	e7f3      	b.n	a978 <__aeabi_dadd+0x630>
    a990:	000007ff 	.word	0x000007ff
    a994:	ff7fffff 	.word	0xff7fffff

0000a998 <__aeabi_ddiv>:
    a998:	b5f0      	push	{r4, r5, r6, r7, lr}
    a99a:	465f      	mov	r7, fp
    a99c:	4656      	mov	r6, sl
    a99e:	464d      	mov	r5, r9
    a9a0:	4644      	mov	r4, r8
    a9a2:	b4f0      	push	{r4, r5, r6, r7}
    a9a4:	030f      	lsls	r7, r1, #12
    a9a6:	b087      	sub	sp, #28
    a9a8:	4698      	mov	r8, r3
    a9aa:	004d      	lsls	r5, r1, #1
    a9ac:	0b3b      	lsrs	r3, r7, #12
    a9ae:	0fcc      	lsrs	r4, r1, #31
    a9b0:	1c06      	adds	r6, r0, #0
    a9b2:	4692      	mov	sl, r2
    a9b4:	4681      	mov	r9, r0
    a9b6:	469b      	mov	fp, r3
    a9b8:	0d6d      	lsrs	r5, r5, #21
    a9ba:	9401      	str	r4, [sp, #4]
    a9bc:	d06b      	beq.n	aa96 <__aeabi_ddiv+0xfe>
    a9be:	4b66      	ldr	r3, [pc, #408]	; (ab58 <__aeabi_ddiv+0x1c0>)
    a9c0:	429d      	cmp	r5, r3
    a9c2:	d035      	beq.n	aa30 <__aeabi_ddiv+0x98>
    a9c4:	2780      	movs	r7, #128	; 0x80
    a9c6:	465b      	mov	r3, fp
    a9c8:	037f      	lsls	r7, r7, #13
    a9ca:	431f      	orrs	r7, r3
    a9cc:	00f3      	lsls	r3, r6, #3
    a9ce:	4699      	mov	r9, r3
    a9d0:	4b62      	ldr	r3, [pc, #392]	; (ab5c <__aeabi_ddiv+0x1c4>)
    a9d2:	00ff      	lsls	r7, r7, #3
    a9d4:	0f40      	lsrs	r0, r0, #29
    a9d6:	469c      	mov	ip, r3
    a9d8:	4307      	orrs	r7, r0
    a9da:	2300      	movs	r3, #0
    a9dc:	46bb      	mov	fp, r7
    a9de:	2600      	movs	r6, #0
    a9e0:	4465      	add	r5, ip
    a9e2:	9300      	str	r3, [sp, #0]
    a9e4:	4642      	mov	r2, r8
    a9e6:	0317      	lsls	r7, r2, #12
    a9e8:	0050      	lsls	r0, r2, #1
    a9ea:	0fd2      	lsrs	r2, r2, #31
    a9ec:	4653      	mov	r3, sl
    a9ee:	0b3f      	lsrs	r7, r7, #12
    a9f0:	0d40      	lsrs	r0, r0, #21
    a9f2:	4690      	mov	r8, r2
    a9f4:	d100      	bne.n	a9f8 <__aeabi_ddiv+0x60>
    a9f6:	e072      	b.n	aade <__aeabi_ddiv+0x146>
    a9f8:	4a57      	ldr	r2, [pc, #348]	; (ab58 <__aeabi_ddiv+0x1c0>)
    a9fa:	4290      	cmp	r0, r2
    a9fc:	d067      	beq.n	aace <__aeabi_ddiv+0x136>
    a9fe:	2380      	movs	r3, #128	; 0x80
    aa00:	035b      	lsls	r3, r3, #13
    aa02:	431f      	orrs	r7, r3
    aa04:	4653      	mov	r3, sl
    aa06:	4a55      	ldr	r2, [pc, #340]	; (ab5c <__aeabi_ddiv+0x1c4>)
    aa08:	0f5b      	lsrs	r3, r3, #29
    aa0a:	00ff      	lsls	r7, r7, #3
    aa0c:	431f      	orrs	r7, r3
    aa0e:	4694      	mov	ip, r2
    aa10:	4653      	mov	r3, sl
    aa12:	2100      	movs	r1, #0
    aa14:	00db      	lsls	r3, r3, #3
    aa16:	4460      	add	r0, ip
    aa18:	4642      	mov	r2, r8
    aa1a:	4062      	eors	r2, r4
    aa1c:	4692      	mov	sl, r2
    aa1e:	1a2d      	subs	r5, r5, r0
    aa20:	430e      	orrs	r6, r1
    aa22:	2e0f      	cmp	r6, #15
    aa24:	d900      	bls.n	aa28 <__aeabi_ddiv+0x90>
    aa26:	e0a1      	b.n	ab6c <__aeabi_ddiv+0x1d4>
    aa28:	484d      	ldr	r0, [pc, #308]	; (ab60 <__aeabi_ddiv+0x1c8>)
    aa2a:	00b6      	lsls	r6, r6, #2
    aa2c:	5980      	ldr	r0, [r0, r6]
    aa2e:	4687      	mov	pc, r0
    aa30:	465b      	mov	r3, fp
    aa32:	431e      	orrs	r6, r3
    aa34:	d000      	beq.n	aa38 <__aeabi_ddiv+0xa0>
    aa36:	e076      	b.n	ab26 <__aeabi_ddiv+0x18e>
    aa38:	2300      	movs	r3, #0
    aa3a:	469b      	mov	fp, r3
    aa3c:	4699      	mov	r9, r3
    aa3e:	3302      	adds	r3, #2
    aa40:	2608      	movs	r6, #8
    aa42:	9300      	str	r3, [sp, #0]
    aa44:	e7ce      	b.n	a9e4 <__aeabi_ddiv+0x4c>
    aa46:	4699      	mov	r9, r3
    aa48:	4643      	mov	r3, r8
    aa4a:	46bb      	mov	fp, r7
    aa4c:	9301      	str	r3, [sp, #4]
    aa4e:	9100      	str	r1, [sp, #0]
    aa50:	9b00      	ldr	r3, [sp, #0]
    aa52:	2b02      	cmp	r3, #2
    aa54:	d16b      	bne.n	ab2e <__aeabi_ddiv+0x196>
    aa56:	9b01      	ldr	r3, [sp, #4]
    aa58:	469a      	mov	sl, r3
    aa5a:	2100      	movs	r1, #0
    aa5c:	4653      	mov	r3, sl
    aa5e:	2201      	movs	r2, #1
    aa60:	2700      	movs	r7, #0
    aa62:	4689      	mov	r9, r1
    aa64:	401a      	ands	r2, r3
    aa66:	4b3c      	ldr	r3, [pc, #240]	; (ab58 <__aeabi_ddiv+0x1c0>)
    aa68:	2100      	movs	r1, #0
    aa6a:	033f      	lsls	r7, r7, #12
    aa6c:	0d0c      	lsrs	r4, r1, #20
    aa6e:	0524      	lsls	r4, r4, #20
    aa70:	0b3f      	lsrs	r7, r7, #12
    aa72:	4327      	orrs	r7, r4
    aa74:	4c3b      	ldr	r4, [pc, #236]	; (ab64 <__aeabi_ddiv+0x1cc>)
    aa76:	051b      	lsls	r3, r3, #20
    aa78:	4027      	ands	r7, r4
    aa7a:	431f      	orrs	r7, r3
    aa7c:	007f      	lsls	r7, r7, #1
    aa7e:	07d2      	lsls	r2, r2, #31
    aa80:	087f      	lsrs	r7, r7, #1
    aa82:	4317      	orrs	r7, r2
    aa84:	4648      	mov	r0, r9
    aa86:	1c39      	adds	r1, r7, #0
    aa88:	b007      	add	sp, #28
    aa8a:	bc3c      	pop	{r2, r3, r4, r5}
    aa8c:	4690      	mov	r8, r2
    aa8e:	4699      	mov	r9, r3
    aa90:	46a2      	mov	sl, r4
    aa92:	46ab      	mov	fp, r5
    aa94:	bdf0      	pop	{r4, r5, r6, r7, pc}
    aa96:	4303      	orrs	r3, r0
    aa98:	d03e      	beq.n	ab18 <__aeabi_ddiv+0x180>
    aa9a:	465b      	mov	r3, fp
    aa9c:	2b00      	cmp	r3, #0
    aa9e:	d100      	bne.n	aaa2 <__aeabi_ddiv+0x10a>
    aaa0:	e19c      	b.n	addc <__aeabi_ddiv+0x444>
    aaa2:	4658      	mov	r0, fp
    aaa4:	f001 fa90 	bl	bfc8 <__clzsi2>
    aaa8:	2328      	movs	r3, #40	; 0x28
    aaaa:	1c31      	adds	r1, r6, #0
    aaac:	1a1b      	subs	r3, r3, r0
    aaae:	1c02      	adds	r2, r0, #0
    aab0:	465f      	mov	r7, fp
    aab2:	40d9      	lsrs	r1, r3
    aab4:	3a08      	subs	r2, #8
    aab6:	4097      	lsls	r7, r2
    aab8:	1c0b      	adds	r3, r1, #0
    aaba:	4096      	lsls	r6, r2
    aabc:	433b      	orrs	r3, r7
    aabe:	469b      	mov	fp, r3
    aac0:	46b1      	mov	r9, r6
    aac2:	2300      	movs	r3, #0
    aac4:	4d28      	ldr	r5, [pc, #160]	; (ab68 <__aeabi_ddiv+0x1d0>)
    aac6:	2600      	movs	r6, #0
    aac8:	1a2d      	subs	r5, r5, r0
    aaca:	9300      	str	r3, [sp, #0]
    aacc:	e78a      	b.n	a9e4 <__aeabi_ddiv+0x4c>
    aace:	4652      	mov	r2, sl
    aad0:	2103      	movs	r1, #3
    aad2:	433a      	orrs	r2, r7
    aad4:	d1a0      	bne.n	aa18 <__aeabi_ddiv+0x80>
    aad6:	2700      	movs	r7, #0
    aad8:	2300      	movs	r3, #0
    aada:	2102      	movs	r1, #2
    aadc:	e79c      	b.n	aa18 <__aeabi_ddiv+0x80>
    aade:	4652      	mov	r2, sl
    aae0:	433a      	orrs	r2, r7
    aae2:	d015      	beq.n	ab10 <__aeabi_ddiv+0x178>
    aae4:	2f00      	cmp	r7, #0
    aae6:	d100      	bne.n	aaea <__aeabi_ddiv+0x152>
    aae8:	e185      	b.n	adf6 <__aeabi_ddiv+0x45e>
    aaea:	1c38      	adds	r0, r7, #0
    aaec:	f001 fa6c 	bl	bfc8 <__clzsi2>
    aaf0:	1c02      	adds	r2, r0, #0
    aaf2:	2128      	movs	r1, #40	; 0x28
    aaf4:	4650      	mov	r0, sl
    aaf6:	1a89      	subs	r1, r1, r2
    aaf8:	1c13      	adds	r3, r2, #0
    aafa:	40c8      	lsrs	r0, r1
    aafc:	4651      	mov	r1, sl
    aafe:	3b08      	subs	r3, #8
    ab00:	4099      	lsls	r1, r3
    ab02:	409f      	lsls	r7, r3
    ab04:	1c0b      	adds	r3, r1, #0
    ab06:	4307      	orrs	r7, r0
    ab08:	4817      	ldr	r0, [pc, #92]	; (ab68 <__aeabi_ddiv+0x1d0>)
    ab0a:	2100      	movs	r1, #0
    ab0c:	1a80      	subs	r0, r0, r2
    ab0e:	e783      	b.n	aa18 <__aeabi_ddiv+0x80>
    ab10:	2700      	movs	r7, #0
    ab12:	2300      	movs	r3, #0
    ab14:	2101      	movs	r1, #1
    ab16:	e77f      	b.n	aa18 <__aeabi_ddiv+0x80>
    ab18:	2300      	movs	r3, #0
    ab1a:	469b      	mov	fp, r3
    ab1c:	4699      	mov	r9, r3
    ab1e:	3301      	adds	r3, #1
    ab20:	2604      	movs	r6, #4
    ab22:	9300      	str	r3, [sp, #0]
    ab24:	e75e      	b.n	a9e4 <__aeabi_ddiv+0x4c>
    ab26:	2303      	movs	r3, #3
    ab28:	260c      	movs	r6, #12
    ab2a:	9300      	str	r3, [sp, #0]
    ab2c:	e75a      	b.n	a9e4 <__aeabi_ddiv+0x4c>
    ab2e:	2b03      	cmp	r3, #3
    ab30:	d100      	bne.n	ab34 <__aeabi_ddiv+0x19c>
    ab32:	e23c      	b.n	afae <__aeabi_ddiv+0x616>
    ab34:	2b01      	cmp	r3, #1
    ab36:	d000      	beq.n	ab3a <__aeabi_ddiv+0x1a2>
    ab38:	e1bf      	b.n	aeba <__aeabi_ddiv+0x522>
    ab3a:	1c1a      	adds	r2, r3, #0
    ab3c:	9b01      	ldr	r3, [sp, #4]
    ab3e:	401a      	ands	r2, r3
    ab40:	2100      	movs	r1, #0
    ab42:	2300      	movs	r3, #0
    ab44:	2700      	movs	r7, #0
    ab46:	4689      	mov	r9, r1
    ab48:	e78e      	b.n	aa68 <__aeabi_ddiv+0xd0>
    ab4a:	2300      	movs	r3, #0
    ab4c:	2780      	movs	r7, #128	; 0x80
    ab4e:	4699      	mov	r9, r3
    ab50:	2200      	movs	r2, #0
    ab52:	033f      	lsls	r7, r7, #12
    ab54:	4b00      	ldr	r3, [pc, #0]	; (ab58 <__aeabi_ddiv+0x1c0>)
    ab56:	e787      	b.n	aa68 <__aeabi_ddiv+0xd0>
    ab58:	000007ff 	.word	0x000007ff
    ab5c:	fffffc01 	.word	0xfffffc01
    ab60:	00011f08 	.word	0x00011f08
    ab64:	800fffff 	.word	0x800fffff
    ab68:	fffffc0d 	.word	0xfffffc0d
    ab6c:	45bb      	cmp	fp, r7
    ab6e:	d900      	bls.n	ab72 <__aeabi_ddiv+0x1da>
    ab70:	e151      	b.n	ae16 <__aeabi_ddiv+0x47e>
    ab72:	d100      	bne.n	ab76 <__aeabi_ddiv+0x1de>
    ab74:	e14c      	b.n	ae10 <__aeabi_ddiv+0x478>
    ab76:	464a      	mov	r2, r9
    ab78:	9203      	str	r2, [sp, #12]
    ab7a:	2200      	movs	r2, #0
    ab7c:	465c      	mov	r4, fp
    ab7e:	4690      	mov	r8, r2
    ab80:	3d01      	subs	r5, #1
    ab82:	0e18      	lsrs	r0, r3, #24
    ab84:	023f      	lsls	r7, r7, #8
    ab86:	4338      	orrs	r0, r7
    ab88:	021b      	lsls	r3, r3, #8
    ab8a:	9301      	str	r3, [sp, #4]
    ab8c:	0c03      	lsrs	r3, r0, #16
    ab8e:	4699      	mov	r9, r3
    ab90:	0403      	lsls	r3, r0, #16
    ab92:	0c1b      	lsrs	r3, r3, #16
    ab94:	4649      	mov	r1, r9
    ab96:	1c06      	adds	r6, r0, #0
    ab98:	1c20      	adds	r0, r4, #0
    ab9a:	1c1f      	adds	r7, r3, #0
    ab9c:	9300      	str	r3, [sp, #0]
    ab9e:	f7ff f869 	bl	9c74 <__aeabi_uidiv>
    aba2:	1c02      	adds	r2, r0, #0
    aba4:	437a      	muls	r2, r7
    aba6:	9002      	str	r0, [sp, #8]
    aba8:	4649      	mov	r1, r9
    abaa:	1c20      	adds	r0, r4, #0
    abac:	1c17      	adds	r7, r2, #0
    abae:	f7ff f8e7 	bl	9d80 <__aeabi_uidivmod>
    abb2:	9b03      	ldr	r3, [sp, #12]
    abb4:	0409      	lsls	r1, r1, #16
    abb6:	0c1b      	lsrs	r3, r3, #16
    abb8:	4319      	orrs	r1, r3
    abba:	428f      	cmp	r7, r1
    abbc:	d90c      	bls.n	abd8 <__aeabi_ddiv+0x240>
    abbe:	9b02      	ldr	r3, [sp, #8]
    abc0:	1989      	adds	r1, r1, r6
    abc2:	3b01      	subs	r3, #1
    abc4:	428e      	cmp	r6, r1
    abc6:	d900      	bls.n	abca <__aeabi_ddiv+0x232>
    abc8:	e152      	b.n	ae70 <__aeabi_ddiv+0x4d8>
    abca:	428f      	cmp	r7, r1
    abcc:	d800      	bhi.n	abd0 <__aeabi_ddiv+0x238>
    abce:	e14f      	b.n	ae70 <__aeabi_ddiv+0x4d8>
    abd0:	9b02      	ldr	r3, [sp, #8]
    abd2:	1989      	adds	r1, r1, r6
    abd4:	3b02      	subs	r3, #2
    abd6:	9302      	str	r3, [sp, #8]
    abd8:	1bcc      	subs	r4, r1, r7
    abda:	1c20      	adds	r0, r4, #0
    abdc:	4649      	mov	r1, r9
    abde:	f7ff f849 	bl	9c74 <__aeabi_uidiv>
    abe2:	9f00      	ldr	r7, [sp, #0]
    abe4:	4683      	mov	fp, r0
    abe6:	4347      	muls	r7, r0
    abe8:	4649      	mov	r1, r9
    abea:	1c20      	adds	r0, r4, #0
    abec:	f7ff f8c8 	bl	9d80 <__aeabi_uidivmod>
    abf0:	9a03      	ldr	r2, [sp, #12]
    abf2:	040b      	lsls	r3, r1, #16
    abf4:	0414      	lsls	r4, r2, #16
    abf6:	0c24      	lsrs	r4, r4, #16
    abf8:	4323      	orrs	r3, r4
    abfa:	429f      	cmp	r7, r3
    abfc:	d90d      	bls.n	ac1a <__aeabi_ddiv+0x282>
    abfe:	465a      	mov	r2, fp
    ac00:	199b      	adds	r3, r3, r6
    ac02:	3a01      	subs	r2, #1
    ac04:	429e      	cmp	r6, r3
    ac06:	d900      	bls.n	ac0a <__aeabi_ddiv+0x272>
    ac08:	e130      	b.n	ae6c <__aeabi_ddiv+0x4d4>
    ac0a:	429f      	cmp	r7, r3
    ac0c:	d800      	bhi.n	ac10 <__aeabi_ddiv+0x278>
    ac0e:	e12d      	b.n	ae6c <__aeabi_ddiv+0x4d4>
    ac10:	2202      	movs	r2, #2
    ac12:	4252      	negs	r2, r2
    ac14:	4694      	mov	ip, r2
    ac16:	199b      	adds	r3, r3, r6
    ac18:	44e3      	add	fp, ip
    ac1a:	9a02      	ldr	r2, [sp, #8]
    ac1c:	1bdb      	subs	r3, r3, r7
    ac1e:	0417      	lsls	r7, r2, #16
    ac20:	465a      	mov	r2, fp
    ac22:	433a      	orrs	r2, r7
    ac24:	4693      	mov	fp, r2
    ac26:	9c01      	ldr	r4, [sp, #4]
    ac28:	0c17      	lsrs	r7, r2, #16
    ac2a:	0c22      	lsrs	r2, r4, #16
    ac2c:	1c10      	adds	r0, r2, #0
    ac2e:	9204      	str	r2, [sp, #16]
    ac30:	465a      	mov	r2, fp
    ac32:	0411      	lsls	r1, r2, #16
    ac34:	0422      	lsls	r2, r4, #16
    ac36:	0c12      	lsrs	r2, r2, #16
    ac38:	1c14      	adds	r4, r2, #0
    ac3a:	0c09      	lsrs	r1, r1, #16
    ac3c:	437c      	muls	r4, r7
    ac3e:	9205      	str	r2, [sp, #20]
    ac40:	434a      	muls	r2, r1
    ac42:	4341      	muls	r1, r0
    ac44:	4347      	muls	r7, r0
    ac46:	1861      	adds	r1, r4, r1
    ac48:	0c10      	lsrs	r0, r2, #16
    ac4a:	1809      	adds	r1, r1, r0
    ac4c:	428c      	cmp	r4, r1
    ac4e:	d903      	bls.n	ac58 <__aeabi_ddiv+0x2c0>
    ac50:	2080      	movs	r0, #128	; 0x80
    ac52:	0240      	lsls	r0, r0, #9
    ac54:	4684      	mov	ip, r0
    ac56:	4467      	add	r7, ip
    ac58:	0c0c      	lsrs	r4, r1, #16
    ac5a:	0412      	lsls	r2, r2, #16
    ac5c:	0408      	lsls	r0, r1, #16
    ac5e:	0c12      	lsrs	r2, r2, #16
    ac60:	193c      	adds	r4, r7, r4
    ac62:	1881      	adds	r1, r0, r2
    ac64:	42a3      	cmp	r3, r4
    ac66:	d200      	bcs.n	ac6a <__aeabi_ddiv+0x2d2>
    ac68:	e0e5      	b.n	ae36 <__aeabi_ddiv+0x49e>
    ac6a:	d100      	bne.n	ac6e <__aeabi_ddiv+0x2d6>
    ac6c:	e0df      	b.n	ae2e <__aeabi_ddiv+0x496>
    ac6e:	1b1f      	subs	r7, r3, r4
    ac70:	4643      	mov	r3, r8
    ac72:	1a5c      	subs	r4, r3, r1
    ac74:	45a0      	cmp	r8, r4
    ac76:	4192      	sbcs	r2, r2
    ac78:	4252      	negs	r2, r2
    ac7a:	1abf      	subs	r7, r7, r2
    ac7c:	42b7      	cmp	r7, r6
    ac7e:	d100      	bne.n	ac82 <__aeabi_ddiv+0x2ea>
    ac80:	e10e      	b.n	aea0 <__aeabi_ddiv+0x508>
    ac82:	1c38      	adds	r0, r7, #0
    ac84:	4649      	mov	r1, r9
    ac86:	f7fe fff5 	bl	9c74 <__aeabi_uidiv>
    ac8a:	9b00      	ldr	r3, [sp, #0]
    ac8c:	9002      	str	r0, [sp, #8]
    ac8e:	4343      	muls	r3, r0
    ac90:	4649      	mov	r1, r9
    ac92:	1c38      	adds	r0, r7, #0
    ac94:	4698      	mov	r8, r3
    ac96:	f7ff f873 	bl	9d80 <__aeabi_uidivmod>
    ac9a:	0c23      	lsrs	r3, r4, #16
    ac9c:	040f      	lsls	r7, r1, #16
    ac9e:	431f      	orrs	r7, r3
    aca0:	45b8      	cmp	r8, r7
    aca2:	d90c      	bls.n	acbe <__aeabi_ddiv+0x326>
    aca4:	9b02      	ldr	r3, [sp, #8]
    aca6:	19bf      	adds	r7, r7, r6
    aca8:	3b01      	subs	r3, #1
    acaa:	42be      	cmp	r6, r7
    acac:	d900      	bls.n	acb0 <__aeabi_ddiv+0x318>
    acae:	e0fb      	b.n	aea8 <__aeabi_ddiv+0x510>
    acb0:	45b8      	cmp	r8, r7
    acb2:	d800      	bhi.n	acb6 <__aeabi_ddiv+0x31e>
    acb4:	e0f8      	b.n	aea8 <__aeabi_ddiv+0x510>
    acb6:	9b02      	ldr	r3, [sp, #8]
    acb8:	19bf      	adds	r7, r7, r6
    acba:	3b02      	subs	r3, #2
    acbc:	9302      	str	r3, [sp, #8]
    acbe:	4643      	mov	r3, r8
    acc0:	1aff      	subs	r7, r7, r3
    acc2:	4649      	mov	r1, r9
    acc4:	1c38      	adds	r0, r7, #0
    acc6:	f7fe ffd5 	bl	9c74 <__aeabi_uidiv>
    acca:	9b00      	ldr	r3, [sp, #0]
    accc:	9003      	str	r0, [sp, #12]
    acce:	4343      	muls	r3, r0
    acd0:	4649      	mov	r1, r9
    acd2:	1c38      	adds	r0, r7, #0
    acd4:	4698      	mov	r8, r3
    acd6:	f7ff f853 	bl	9d80 <__aeabi_uidivmod>
    acda:	0424      	lsls	r4, r4, #16
    acdc:	0409      	lsls	r1, r1, #16
    acde:	0c24      	lsrs	r4, r4, #16
    ace0:	4321      	orrs	r1, r4
    ace2:	4588      	cmp	r8, r1
    ace4:	d90c      	bls.n	ad00 <__aeabi_ddiv+0x368>
    ace6:	9b03      	ldr	r3, [sp, #12]
    ace8:	1989      	adds	r1, r1, r6
    acea:	3b01      	subs	r3, #1
    acec:	428e      	cmp	r6, r1
    acee:	d900      	bls.n	acf2 <__aeabi_ddiv+0x35a>
    acf0:	e0dc      	b.n	aeac <__aeabi_ddiv+0x514>
    acf2:	4588      	cmp	r8, r1
    acf4:	d800      	bhi.n	acf8 <__aeabi_ddiv+0x360>
    acf6:	e0d9      	b.n	aeac <__aeabi_ddiv+0x514>
    acf8:	9b03      	ldr	r3, [sp, #12]
    acfa:	1989      	adds	r1, r1, r6
    acfc:	3b02      	subs	r3, #2
    acfe:	9303      	str	r3, [sp, #12]
    ad00:	4643      	mov	r3, r8
    ad02:	1ac9      	subs	r1, r1, r3
    ad04:	9b02      	ldr	r3, [sp, #8]
    ad06:	9a03      	ldr	r2, [sp, #12]
    ad08:	041b      	lsls	r3, r3, #16
    ad0a:	9c05      	ldr	r4, [sp, #20]
    ad0c:	431a      	orrs	r2, r3
    ad0e:	0c10      	lsrs	r0, r2, #16
    ad10:	0413      	lsls	r3, r2, #16
    ad12:	4691      	mov	r9, r2
    ad14:	1c22      	adds	r2, r4, #0
    ad16:	9f04      	ldr	r7, [sp, #16]
    ad18:	0c1b      	lsrs	r3, r3, #16
    ad1a:	435a      	muls	r2, r3
    ad1c:	4344      	muls	r4, r0
    ad1e:	437b      	muls	r3, r7
    ad20:	4378      	muls	r0, r7
    ad22:	18e3      	adds	r3, r4, r3
    ad24:	0c17      	lsrs	r7, r2, #16
    ad26:	19db      	adds	r3, r3, r7
    ad28:	429c      	cmp	r4, r3
    ad2a:	d903      	bls.n	ad34 <__aeabi_ddiv+0x39c>
    ad2c:	2480      	movs	r4, #128	; 0x80
    ad2e:	0264      	lsls	r4, r4, #9
    ad30:	46a4      	mov	ip, r4
    ad32:	4460      	add	r0, ip
    ad34:	0c1c      	lsrs	r4, r3, #16
    ad36:	0412      	lsls	r2, r2, #16
    ad38:	041b      	lsls	r3, r3, #16
    ad3a:	0c12      	lsrs	r2, r2, #16
    ad3c:	1900      	adds	r0, r0, r4
    ad3e:	189b      	adds	r3, r3, r2
    ad40:	4281      	cmp	r1, r0
    ad42:	d200      	bcs.n	ad46 <__aeabi_ddiv+0x3ae>
    ad44:	e096      	b.n	ae74 <__aeabi_ddiv+0x4dc>
    ad46:	d100      	bne.n	ad4a <__aeabi_ddiv+0x3b2>
    ad48:	e0fc      	b.n	af44 <__aeabi_ddiv+0x5ac>
    ad4a:	464a      	mov	r2, r9
    ad4c:	2301      	movs	r3, #1
    ad4e:	431a      	orrs	r2, r3
    ad50:	4691      	mov	r9, r2
    ad52:	4b9b      	ldr	r3, [pc, #620]	; (afc0 <__aeabi_ddiv+0x628>)
    ad54:	18eb      	adds	r3, r5, r3
    ad56:	2b00      	cmp	r3, #0
    ad58:	dc00      	bgt.n	ad5c <__aeabi_ddiv+0x3c4>
    ad5a:	e099      	b.n	ae90 <__aeabi_ddiv+0x4f8>
    ad5c:	464a      	mov	r2, r9
    ad5e:	0752      	lsls	r2, r2, #29
    ad60:	d00a      	beq.n	ad78 <__aeabi_ddiv+0x3e0>
    ad62:	220f      	movs	r2, #15
    ad64:	4649      	mov	r1, r9
    ad66:	400a      	ands	r2, r1
    ad68:	2a04      	cmp	r2, #4
    ad6a:	d005      	beq.n	ad78 <__aeabi_ddiv+0x3e0>
    ad6c:	3104      	adds	r1, #4
    ad6e:	4549      	cmp	r1, r9
    ad70:	4192      	sbcs	r2, r2
    ad72:	4689      	mov	r9, r1
    ad74:	4252      	negs	r2, r2
    ad76:	4493      	add	fp, r2
    ad78:	465a      	mov	r2, fp
    ad7a:	01d2      	lsls	r2, r2, #7
    ad7c:	d506      	bpl.n	ad8c <__aeabi_ddiv+0x3f4>
    ad7e:	465a      	mov	r2, fp
    ad80:	4b90      	ldr	r3, [pc, #576]	; (afc4 <__aeabi_ddiv+0x62c>)
    ad82:	401a      	ands	r2, r3
    ad84:	2380      	movs	r3, #128	; 0x80
    ad86:	4693      	mov	fp, r2
    ad88:	00db      	lsls	r3, r3, #3
    ad8a:	18eb      	adds	r3, r5, r3
    ad8c:	4a8e      	ldr	r2, [pc, #568]	; (afc8 <__aeabi_ddiv+0x630>)
    ad8e:	4293      	cmp	r3, r2
    ad90:	dd00      	ble.n	ad94 <__aeabi_ddiv+0x3fc>
    ad92:	e662      	b.n	aa5a <__aeabi_ddiv+0xc2>
    ad94:	464a      	mov	r2, r9
    ad96:	4659      	mov	r1, fp
    ad98:	08d2      	lsrs	r2, r2, #3
    ad9a:	0749      	lsls	r1, r1, #29
    ad9c:	4311      	orrs	r1, r2
    ad9e:	465a      	mov	r2, fp
    ada0:	4689      	mov	r9, r1
    ada2:	0257      	lsls	r7, r2, #9
    ada4:	4651      	mov	r1, sl
    ada6:	2201      	movs	r2, #1
    ada8:	055b      	lsls	r3, r3, #21
    adaa:	0b3f      	lsrs	r7, r7, #12
    adac:	0d5b      	lsrs	r3, r3, #21
    adae:	400a      	ands	r2, r1
    adb0:	e65a      	b.n	aa68 <__aeabi_ddiv+0xd0>
    adb2:	2080      	movs	r0, #128	; 0x80
    adb4:	465a      	mov	r2, fp
    adb6:	0300      	lsls	r0, r0, #12
    adb8:	4202      	tst	r2, r0
    adba:	d008      	beq.n	adce <__aeabi_ddiv+0x436>
    adbc:	4207      	tst	r7, r0
    adbe:	d106      	bne.n	adce <__aeabi_ddiv+0x436>
    adc0:	4307      	orrs	r7, r0
    adc2:	033f      	lsls	r7, r7, #12
    adc4:	4699      	mov	r9, r3
    adc6:	0b3f      	lsrs	r7, r7, #12
    adc8:	4642      	mov	r2, r8
    adca:	4b80      	ldr	r3, [pc, #512]	; (afcc <__aeabi_ddiv+0x634>)
    adcc:	e64c      	b.n	aa68 <__aeabi_ddiv+0xd0>
    adce:	465f      	mov	r7, fp
    add0:	4307      	orrs	r7, r0
    add2:	033f      	lsls	r7, r7, #12
    add4:	0b3f      	lsrs	r7, r7, #12
    add6:	1c22      	adds	r2, r4, #0
    add8:	4b7c      	ldr	r3, [pc, #496]	; (afcc <__aeabi_ddiv+0x634>)
    adda:	e645      	b.n	aa68 <__aeabi_ddiv+0xd0>
    addc:	f001 f8f4 	bl	bfc8 <__clzsi2>
    ade0:	1c03      	adds	r3, r0, #0
    ade2:	3020      	adds	r0, #32
    ade4:	2827      	cmp	r0, #39	; 0x27
    ade6:	dc00      	bgt.n	adea <__aeabi_ddiv+0x452>
    ade8:	e65e      	b.n	aaa8 <__aeabi_ddiv+0x110>
    adea:	3b08      	subs	r3, #8
    adec:	409e      	lsls	r6, r3
    adee:	2300      	movs	r3, #0
    adf0:	46b3      	mov	fp, r6
    adf2:	4699      	mov	r9, r3
    adf4:	e665      	b.n	aac2 <__aeabi_ddiv+0x12a>
    adf6:	4650      	mov	r0, sl
    adf8:	f001 f8e6 	bl	bfc8 <__clzsi2>
    adfc:	1c02      	adds	r2, r0, #0
    adfe:	3220      	adds	r2, #32
    ae00:	2a27      	cmp	r2, #39	; 0x27
    ae02:	dc00      	bgt.n	ae06 <__aeabi_ddiv+0x46e>
    ae04:	e675      	b.n	aaf2 <__aeabi_ddiv+0x15a>
    ae06:	4657      	mov	r7, sl
    ae08:	3808      	subs	r0, #8
    ae0a:	4087      	lsls	r7, r0
    ae0c:	2300      	movs	r3, #0
    ae0e:	e67b      	b.n	ab08 <__aeabi_ddiv+0x170>
    ae10:	4599      	cmp	r9, r3
    ae12:	d200      	bcs.n	ae16 <__aeabi_ddiv+0x47e>
    ae14:	e6af      	b.n	ab76 <__aeabi_ddiv+0x1de>
    ae16:	465a      	mov	r2, fp
    ae18:	4659      	mov	r1, fp
    ae1a:	0854      	lsrs	r4, r2, #1
    ae1c:	464a      	mov	r2, r9
    ae1e:	07c8      	lsls	r0, r1, #31
    ae20:	0852      	lsrs	r2, r2, #1
    ae22:	4302      	orrs	r2, r0
    ae24:	9203      	str	r2, [sp, #12]
    ae26:	464a      	mov	r2, r9
    ae28:	07d2      	lsls	r2, r2, #31
    ae2a:	4690      	mov	r8, r2
    ae2c:	e6a9      	b.n	ab82 <__aeabi_ddiv+0x1ea>
    ae2e:	2700      	movs	r7, #0
    ae30:	4588      	cmp	r8, r1
    ae32:	d300      	bcc.n	ae36 <__aeabi_ddiv+0x49e>
    ae34:	e71c      	b.n	ac70 <__aeabi_ddiv+0x2d8>
    ae36:	9f01      	ldr	r7, [sp, #4]
    ae38:	465a      	mov	r2, fp
    ae3a:	46bc      	mov	ip, r7
    ae3c:	44e0      	add	r8, ip
    ae3e:	45b8      	cmp	r8, r7
    ae40:	41bf      	sbcs	r7, r7
    ae42:	427f      	negs	r7, r7
    ae44:	19bf      	adds	r7, r7, r6
    ae46:	18ff      	adds	r7, r7, r3
    ae48:	3a01      	subs	r2, #1
    ae4a:	42be      	cmp	r6, r7
    ae4c:	d206      	bcs.n	ae5c <__aeabi_ddiv+0x4c4>
    ae4e:	42bc      	cmp	r4, r7
    ae50:	d85f      	bhi.n	af12 <__aeabi_ddiv+0x57a>
    ae52:	d100      	bne.n	ae56 <__aeabi_ddiv+0x4be>
    ae54:	e09f      	b.n	af96 <__aeabi_ddiv+0x5fe>
    ae56:	1b3f      	subs	r7, r7, r4
    ae58:	4693      	mov	fp, r2
    ae5a:	e709      	b.n	ac70 <__aeabi_ddiv+0x2d8>
    ae5c:	42b7      	cmp	r7, r6
    ae5e:	d1fa      	bne.n	ae56 <__aeabi_ddiv+0x4be>
    ae60:	9b01      	ldr	r3, [sp, #4]
    ae62:	4543      	cmp	r3, r8
    ae64:	d9f3      	bls.n	ae4e <__aeabi_ddiv+0x4b6>
    ae66:	1b37      	subs	r7, r6, r4
    ae68:	4693      	mov	fp, r2
    ae6a:	e701      	b.n	ac70 <__aeabi_ddiv+0x2d8>
    ae6c:	4693      	mov	fp, r2
    ae6e:	e6d4      	b.n	ac1a <__aeabi_ddiv+0x282>
    ae70:	9302      	str	r3, [sp, #8]
    ae72:	e6b1      	b.n	abd8 <__aeabi_ddiv+0x240>
    ae74:	464a      	mov	r2, r9
    ae76:	1989      	adds	r1, r1, r6
    ae78:	3a01      	subs	r2, #1
    ae7a:	428e      	cmp	r6, r1
    ae7c:	d918      	bls.n	aeb0 <__aeabi_ddiv+0x518>
    ae7e:	4691      	mov	r9, r2
    ae80:	4281      	cmp	r1, r0
    ae82:	d000      	beq.n	ae86 <__aeabi_ddiv+0x4ee>
    ae84:	e761      	b.n	ad4a <__aeabi_ddiv+0x3b2>
    ae86:	9a01      	ldr	r2, [sp, #4]
    ae88:	429a      	cmp	r2, r3
    ae8a:	d000      	beq.n	ae8e <__aeabi_ddiv+0x4f6>
    ae8c:	e75d      	b.n	ad4a <__aeabi_ddiv+0x3b2>
    ae8e:	e760      	b.n	ad52 <__aeabi_ddiv+0x3ba>
    ae90:	4f4f      	ldr	r7, [pc, #316]	; (afd0 <__aeabi_ddiv+0x638>)
    ae92:	1b7f      	subs	r7, r7, r5
    ae94:	2f38      	cmp	r7, #56	; 0x38
    ae96:	dd13      	ble.n	aec0 <__aeabi_ddiv+0x528>
    ae98:	2201      	movs	r2, #1
    ae9a:	4653      	mov	r3, sl
    ae9c:	401a      	ands	r2, r3
    ae9e:	e64f      	b.n	ab40 <__aeabi_ddiv+0x1a8>
    aea0:	2301      	movs	r3, #1
    aea2:	425b      	negs	r3, r3
    aea4:	4699      	mov	r9, r3
    aea6:	e754      	b.n	ad52 <__aeabi_ddiv+0x3ba>
    aea8:	9302      	str	r3, [sp, #8]
    aeaa:	e708      	b.n	acbe <__aeabi_ddiv+0x326>
    aeac:	9303      	str	r3, [sp, #12]
    aeae:	e727      	b.n	ad00 <__aeabi_ddiv+0x368>
    aeb0:	4288      	cmp	r0, r1
    aeb2:	d83c      	bhi.n	af2e <__aeabi_ddiv+0x596>
    aeb4:	d074      	beq.n	afa0 <__aeabi_ddiv+0x608>
    aeb6:	4691      	mov	r9, r2
    aeb8:	e747      	b.n	ad4a <__aeabi_ddiv+0x3b2>
    aeba:	9b01      	ldr	r3, [sp, #4]
    aebc:	469a      	mov	sl, r3
    aebe:	e748      	b.n	ad52 <__aeabi_ddiv+0x3ba>
    aec0:	2f1f      	cmp	r7, #31
    aec2:	dc44      	bgt.n	af4e <__aeabi_ddiv+0x5b6>
    aec4:	4b43      	ldr	r3, [pc, #268]	; (afd4 <__aeabi_ddiv+0x63c>)
    aec6:	464a      	mov	r2, r9
    aec8:	469c      	mov	ip, r3
    aeca:	465b      	mov	r3, fp
    aecc:	4465      	add	r5, ip
    aece:	40fa      	lsrs	r2, r7
    aed0:	40ab      	lsls	r3, r5
    aed2:	4313      	orrs	r3, r2
    aed4:	464a      	mov	r2, r9
    aed6:	40aa      	lsls	r2, r5
    aed8:	1c15      	adds	r5, r2, #0
    aeda:	1e6a      	subs	r2, r5, #1
    aedc:	4195      	sbcs	r5, r2
    aede:	465a      	mov	r2, fp
    aee0:	40fa      	lsrs	r2, r7
    aee2:	432b      	orrs	r3, r5
    aee4:	1c17      	adds	r7, r2, #0
    aee6:	075a      	lsls	r2, r3, #29
    aee8:	d009      	beq.n	aefe <__aeabi_ddiv+0x566>
    aeea:	220f      	movs	r2, #15
    aeec:	401a      	ands	r2, r3
    aeee:	2a04      	cmp	r2, #4
    aef0:	d005      	beq.n	aefe <__aeabi_ddiv+0x566>
    aef2:	1d1a      	adds	r2, r3, #4
    aef4:	429a      	cmp	r2, r3
    aef6:	419b      	sbcs	r3, r3
    aef8:	425b      	negs	r3, r3
    aefa:	18ff      	adds	r7, r7, r3
    aefc:	1c13      	adds	r3, r2, #0
    aefe:	023a      	lsls	r2, r7, #8
    af00:	d53e      	bpl.n	af80 <__aeabi_ddiv+0x5e8>
    af02:	4653      	mov	r3, sl
    af04:	2201      	movs	r2, #1
    af06:	2100      	movs	r1, #0
    af08:	401a      	ands	r2, r3
    af0a:	2700      	movs	r7, #0
    af0c:	2301      	movs	r3, #1
    af0e:	4689      	mov	r9, r1
    af10:	e5aa      	b.n	aa68 <__aeabi_ddiv+0xd0>
    af12:	2302      	movs	r3, #2
    af14:	425b      	negs	r3, r3
    af16:	469c      	mov	ip, r3
    af18:	9a01      	ldr	r2, [sp, #4]
    af1a:	44e3      	add	fp, ip
    af1c:	4694      	mov	ip, r2
    af1e:	44e0      	add	r8, ip
    af20:	4590      	cmp	r8, r2
    af22:	419b      	sbcs	r3, r3
    af24:	425b      	negs	r3, r3
    af26:	199b      	adds	r3, r3, r6
    af28:	19df      	adds	r7, r3, r7
    af2a:	1b3f      	subs	r7, r7, r4
    af2c:	e6a0      	b.n	ac70 <__aeabi_ddiv+0x2d8>
    af2e:	9f01      	ldr	r7, [sp, #4]
    af30:	464a      	mov	r2, r9
    af32:	007c      	lsls	r4, r7, #1
    af34:	42bc      	cmp	r4, r7
    af36:	41bf      	sbcs	r7, r7
    af38:	427f      	negs	r7, r7
    af3a:	19bf      	adds	r7, r7, r6
    af3c:	3a02      	subs	r2, #2
    af3e:	19c9      	adds	r1, r1, r7
    af40:	9401      	str	r4, [sp, #4]
    af42:	e79c      	b.n	ae7e <__aeabi_ddiv+0x4e6>
    af44:	2b00      	cmp	r3, #0
    af46:	d195      	bne.n	ae74 <__aeabi_ddiv+0x4dc>
    af48:	2200      	movs	r2, #0
    af4a:	9201      	str	r2, [sp, #4]
    af4c:	e79b      	b.n	ae86 <__aeabi_ddiv+0x4ee>
    af4e:	465a      	mov	r2, fp
    af50:	4b21      	ldr	r3, [pc, #132]	; (afd8 <__aeabi_ddiv+0x640>)
    af52:	1b5b      	subs	r3, r3, r5
    af54:	40da      	lsrs	r2, r3
    af56:	2f20      	cmp	r7, #32
    af58:	d027      	beq.n	afaa <__aeabi_ddiv+0x612>
    af5a:	4b20      	ldr	r3, [pc, #128]	; (afdc <__aeabi_ddiv+0x644>)
    af5c:	469c      	mov	ip, r3
    af5e:	465b      	mov	r3, fp
    af60:	4465      	add	r5, ip
    af62:	40ab      	lsls	r3, r5
    af64:	4649      	mov	r1, r9
    af66:	430b      	orrs	r3, r1
    af68:	1e59      	subs	r1, r3, #1
    af6a:	418b      	sbcs	r3, r1
    af6c:	4313      	orrs	r3, r2
    af6e:	2207      	movs	r2, #7
    af70:	2700      	movs	r7, #0
    af72:	401a      	ands	r2, r3
    af74:	d007      	beq.n	af86 <__aeabi_ddiv+0x5ee>
    af76:	220f      	movs	r2, #15
    af78:	2700      	movs	r7, #0
    af7a:	401a      	ands	r2, r3
    af7c:	2a04      	cmp	r2, #4
    af7e:	d1b8      	bne.n	aef2 <__aeabi_ddiv+0x55a>
    af80:	077a      	lsls	r2, r7, #29
    af82:	027f      	lsls	r7, r7, #9
    af84:	0b3f      	lsrs	r7, r7, #12
    af86:	08db      	lsrs	r3, r3, #3
    af88:	4313      	orrs	r3, r2
    af8a:	4699      	mov	r9, r3
    af8c:	2201      	movs	r2, #1
    af8e:	4653      	mov	r3, sl
    af90:	401a      	ands	r2, r3
    af92:	2300      	movs	r3, #0
    af94:	e568      	b.n	aa68 <__aeabi_ddiv+0xd0>
    af96:	4541      	cmp	r1, r8
    af98:	d8bb      	bhi.n	af12 <__aeabi_ddiv+0x57a>
    af9a:	4693      	mov	fp, r2
    af9c:	2700      	movs	r7, #0
    af9e:	e667      	b.n	ac70 <__aeabi_ddiv+0x2d8>
    afa0:	9c01      	ldr	r4, [sp, #4]
    afa2:	429c      	cmp	r4, r3
    afa4:	d3c3      	bcc.n	af2e <__aeabi_ddiv+0x596>
    afa6:	4691      	mov	r9, r2
    afa8:	e76d      	b.n	ae86 <__aeabi_ddiv+0x4ee>
    afaa:	2300      	movs	r3, #0
    afac:	e7da      	b.n	af64 <__aeabi_ddiv+0x5cc>
    afae:	2780      	movs	r7, #128	; 0x80
    afb0:	465b      	mov	r3, fp
    afb2:	033f      	lsls	r7, r7, #12
    afb4:	431f      	orrs	r7, r3
    afb6:	033f      	lsls	r7, r7, #12
    afb8:	0b3f      	lsrs	r7, r7, #12
    afba:	9a01      	ldr	r2, [sp, #4]
    afbc:	4b03      	ldr	r3, [pc, #12]	; (afcc <__aeabi_ddiv+0x634>)
    afbe:	e553      	b.n	aa68 <__aeabi_ddiv+0xd0>
    afc0:	000003ff 	.word	0x000003ff
    afc4:	feffffff 	.word	0xfeffffff
    afc8:	000007fe 	.word	0x000007fe
    afcc:	000007ff 	.word	0x000007ff
    afd0:	fffffc02 	.word	0xfffffc02
    afd4:	0000041e 	.word	0x0000041e
    afd8:	fffffbe2 	.word	0xfffffbe2
    afdc:	0000043e 	.word	0x0000043e

0000afe0 <__eqdf2>:
    afe0:	b5f0      	push	{r4, r5, r6, r7, lr}
    afe2:	465f      	mov	r7, fp
    afe4:	464d      	mov	r5, r9
    afe6:	4644      	mov	r4, r8
    afe8:	4656      	mov	r6, sl
    afea:	b4f0      	push	{r4, r5, r6, r7}
    afec:	031f      	lsls	r7, r3, #12
    afee:	005c      	lsls	r4, r3, #1
    aff0:	0fdb      	lsrs	r3, r3, #31
    aff2:	4699      	mov	r9, r3
    aff4:	4b1b      	ldr	r3, [pc, #108]	; (b064 <__eqdf2+0x84>)
    aff6:	030e      	lsls	r6, r1, #12
    aff8:	004d      	lsls	r5, r1, #1
    affa:	0fc9      	lsrs	r1, r1, #31
    affc:	4684      	mov	ip, r0
    affe:	0b36      	lsrs	r6, r6, #12
    b000:	0d6d      	lsrs	r5, r5, #21
    b002:	468b      	mov	fp, r1
    b004:	4690      	mov	r8, r2
    b006:	0b3f      	lsrs	r7, r7, #12
    b008:	0d64      	lsrs	r4, r4, #21
    b00a:	429d      	cmp	r5, r3
    b00c:	d00c      	beq.n	b028 <__eqdf2+0x48>
    b00e:	4b15      	ldr	r3, [pc, #84]	; (b064 <__eqdf2+0x84>)
    b010:	429c      	cmp	r4, r3
    b012:	d010      	beq.n	b036 <__eqdf2+0x56>
    b014:	2301      	movs	r3, #1
    b016:	42a5      	cmp	r5, r4
    b018:	d014      	beq.n	b044 <__eqdf2+0x64>
    b01a:	1c18      	adds	r0, r3, #0
    b01c:	bc3c      	pop	{r2, r3, r4, r5}
    b01e:	4690      	mov	r8, r2
    b020:	4699      	mov	r9, r3
    b022:	46a2      	mov	sl, r4
    b024:	46ab      	mov	fp, r5
    b026:	bdf0      	pop	{r4, r5, r6, r7, pc}
    b028:	1c31      	adds	r1, r6, #0
    b02a:	2301      	movs	r3, #1
    b02c:	4301      	orrs	r1, r0
    b02e:	d1f4      	bne.n	b01a <__eqdf2+0x3a>
    b030:	4b0c      	ldr	r3, [pc, #48]	; (b064 <__eqdf2+0x84>)
    b032:	429c      	cmp	r4, r3
    b034:	d1ee      	bne.n	b014 <__eqdf2+0x34>
    b036:	433a      	orrs	r2, r7
    b038:	2301      	movs	r3, #1
    b03a:	2a00      	cmp	r2, #0
    b03c:	d1ed      	bne.n	b01a <__eqdf2+0x3a>
    b03e:	2301      	movs	r3, #1
    b040:	42a5      	cmp	r5, r4
    b042:	d1ea      	bne.n	b01a <__eqdf2+0x3a>
    b044:	42be      	cmp	r6, r7
    b046:	d1e8      	bne.n	b01a <__eqdf2+0x3a>
    b048:	45c4      	cmp	ip, r8
    b04a:	d1e6      	bne.n	b01a <__eqdf2+0x3a>
    b04c:	45cb      	cmp	fp, r9
    b04e:	d006      	beq.n	b05e <__eqdf2+0x7e>
    b050:	2d00      	cmp	r5, #0
    b052:	d1e2      	bne.n	b01a <__eqdf2+0x3a>
    b054:	4330      	orrs	r0, r6
    b056:	1c03      	adds	r3, r0, #0
    b058:	1e58      	subs	r0, r3, #1
    b05a:	4183      	sbcs	r3, r0
    b05c:	e7dd      	b.n	b01a <__eqdf2+0x3a>
    b05e:	2300      	movs	r3, #0
    b060:	e7db      	b.n	b01a <__eqdf2+0x3a>
    b062:	46c0      	nop			; (mov r8, r8)
    b064:	000007ff 	.word	0x000007ff

0000b068 <__gedf2>:
    b068:	b5f0      	push	{r4, r5, r6, r7, lr}
    b06a:	4657      	mov	r7, sl
    b06c:	4645      	mov	r5, r8
    b06e:	464e      	mov	r6, r9
    b070:	b4e0      	push	{r5, r6, r7}
    b072:	030f      	lsls	r7, r1, #12
    b074:	004e      	lsls	r6, r1, #1
    b076:	0fc9      	lsrs	r1, r1, #31
    b078:	468a      	mov	sl, r1
    b07a:	4932      	ldr	r1, [pc, #200]	; (b144 <__gedf2+0xdc>)
    b07c:	031d      	lsls	r5, r3, #12
    b07e:	005c      	lsls	r4, r3, #1
    b080:	4684      	mov	ip, r0
    b082:	0b3f      	lsrs	r7, r7, #12
    b084:	0d76      	lsrs	r6, r6, #21
    b086:	4690      	mov	r8, r2
    b088:	0b2d      	lsrs	r5, r5, #12
    b08a:	0d64      	lsrs	r4, r4, #21
    b08c:	0fdb      	lsrs	r3, r3, #31
    b08e:	428e      	cmp	r6, r1
    b090:	d00f      	beq.n	b0b2 <__gedf2+0x4a>
    b092:	428c      	cmp	r4, r1
    b094:	d039      	beq.n	b10a <__gedf2+0xa2>
    b096:	2e00      	cmp	r6, #0
    b098:	d110      	bne.n	b0bc <__gedf2+0x54>
    b09a:	4338      	orrs	r0, r7
    b09c:	4241      	negs	r1, r0
    b09e:	4141      	adcs	r1, r0
    b0a0:	4689      	mov	r9, r1
    b0a2:	2c00      	cmp	r4, #0
    b0a4:	d127      	bne.n	b0f6 <__gedf2+0x8e>
    b0a6:	432a      	orrs	r2, r5
    b0a8:	d125      	bne.n	b0f6 <__gedf2+0x8e>
    b0aa:	2000      	movs	r0, #0
    b0ac:	2900      	cmp	r1, #0
    b0ae:	d10e      	bne.n	b0ce <__gedf2+0x66>
    b0b0:	e008      	b.n	b0c4 <__gedf2+0x5c>
    b0b2:	1c39      	adds	r1, r7, #0
    b0b4:	4301      	orrs	r1, r0
    b0b6:	d12e      	bne.n	b116 <__gedf2+0xae>
    b0b8:	42b4      	cmp	r4, r6
    b0ba:	d026      	beq.n	b10a <__gedf2+0xa2>
    b0bc:	2c00      	cmp	r4, #0
    b0be:	d00b      	beq.n	b0d8 <__gedf2+0x70>
    b0c0:	459a      	cmp	sl, r3
    b0c2:	d00d      	beq.n	b0e0 <__gedf2+0x78>
    b0c4:	4653      	mov	r3, sl
    b0c6:	4259      	negs	r1, r3
    b0c8:	2301      	movs	r3, #1
    b0ca:	4319      	orrs	r1, r3
    b0cc:	1c08      	adds	r0, r1, #0
    b0ce:	bc1c      	pop	{r2, r3, r4}
    b0d0:	4690      	mov	r8, r2
    b0d2:	4699      	mov	r9, r3
    b0d4:	46a2      	mov	sl, r4
    b0d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    b0d8:	432a      	orrs	r2, r5
    b0da:	d0f3      	beq.n	b0c4 <__gedf2+0x5c>
    b0dc:	459a      	cmp	sl, r3
    b0de:	d1f1      	bne.n	b0c4 <__gedf2+0x5c>
    b0e0:	42a6      	cmp	r6, r4
    b0e2:	dcef      	bgt.n	b0c4 <__gedf2+0x5c>
    b0e4:	da1a      	bge.n	b11c <__gedf2+0xb4>
    b0e6:	4650      	mov	r0, sl
    b0e8:	4241      	negs	r1, r0
    b0ea:	4148      	adcs	r0, r1
    b0ec:	2301      	movs	r3, #1
    b0ee:	4241      	negs	r1, r0
    b0f0:	4319      	orrs	r1, r3
    b0f2:	1c08      	adds	r0, r1, #0
    b0f4:	e7eb      	b.n	b0ce <__gedf2+0x66>
    b0f6:	464a      	mov	r2, r9
    b0f8:	2a00      	cmp	r2, #0
    b0fa:	d0e1      	beq.n	b0c0 <__gedf2+0x58>
    b0fc:	4258      	negs	r0, r3
    b0fe:	4158      	adcs	r0, r3
    b100:	2201      	movs	r2, #1
    b102:	4241      	negs	r1, r0
    b104:	4311      	orrs	r1, r2
    b106:	1c08      	adds	r0, r1, #0
    b108:	e7e1      	b.n	b0ce <__gedf2+0x66>
    b10a:	1c29      	adds	r1, r5, #0
    b10c:	4311      	orrs	r1, r2
    b10e:	d102      	bne.n	b116 <__gedf2+0xae>
    b110:	2e00      	cmp	r6, #0
    b112:	d0c2      	beq.n	b09a <__gedf2+0x32>
    b114:	e7d4      	b.n	b0c0 <__gedf2+0x58>
    b116:	2002      	movs	r0, #2
    b118:	4240      	negs	r0, r0
    b11a:	e7d8      	b.n	b0ce <__gedf2+0x66>
    b11c:	42af      	cmp	r7, r5
    b11e:	d8d1      	bhi.n	b0c4 <__gedf2+0x5c>
    b120:	d009      	beq.n	b136 <__gedf2+0xce>
    b122:	2000      	movs	r0, #0
    b124:	42af      	cmp	r7, r5
    b126:	d2d2      	bcs.n	b0ce <__gedf2+0x66>
    b128:	4650      	mov	r0, sl
    b12a:	4241      	negs	r1, r0
    b12c:	4148      	adcs	r0, r1
    b12e:	2301      	movs	r3, #1
    b130:	4240      	negs	r0, r0
    b132:	4318      	orrs	r0, r3
    b134:	e7cb      	b.n	b0ce <__gedf2+0x66>
    b136:	45c4      	cmp	ip, r8
    b138:	d8c4      	bhi.n	b0c4 <__gedf2+0x5c>
    b13a:	2000      	movs	r0, #0
    b13c:	45c4      	cmp	ip, r8
    b13e:	d3f3      	bcc.n	b128 <__gedf2+0xc0>
    b140:	e7c5      	b.n	b0ce <__gedf2+0x66>
    b142:	46c0      	nop			; (mov r8, r8)
    b144:	000007ff 	.word	0x000007ff

0000b148 <__ledf2>:
    b148:	b5f0      	push	{r4, r5, r6, r7, lr}
    b14a:	465f      	mov	r7, fp
    b14c:	464d      	mov	r5, r9
    b14e:	4644      	mov	r4, r8
    b150:	4656      	mov	r6, sl
    b152:	4680      	mov	r8, r0
    b154:	b4f0      	push	{r4, r5, r6, r7}
    b156:	1c06      	adds	r6, r0, #0
    b158:	0308      	lsls	r0, r1, #12
    b15a:	0b00      	lsrs	r0, r0, #12
    b15c:	4684      	mov	ip, r0
    b15e:	482c      	ldr	r0, [pc, #176]	; (b210 <__ledf2+0xc8>)
    b160:	004c      	lsls	r4, r1, #1
    b162:	031f      	lsls	r7, r3, #12
    b164:	005d      	lsls	r5, r3, #1
    b166:	0fc9      	lsrs	r1, r1, #31
    b168:	0d64      	lsrs	r4, r4, #21
    b16a:	468b      	mov	fp, r1
    b16c:	4691      	mov	r9, r2
    b16e:	0b3f      	lsrs	r7, r7, #12
    b170:	0d6d      	lsrs	r5, r5, #21
    b172:	0fdb      	lsrs	r3, r3, #31
    b174:	4284      	cmp	r4, r0
    b176:	d012      	beq.n	b19e <__ledf2+0x56>
    b178:	4285      	cmp	r5, r0
    b17a:	d025      	beq.n	b1c8 <__ledf2+0x80>
    b17c:	2c00      	cmp	r4, #0
    b17e:	d114      	bne.n	b1aa <__ledf2+0x62>
    b180:	4661      	mov	r1, ip
    b182:	430e      	orrs	r6, r1
    b184:	4270      	negs	r0, r6
    b186:	4146      	adcs	r6, r0
    b188:	2d00      	cmp	r5, #0
    b18a:	d035      	beq.n	b1f8 <__ledf2+0xb0>
    b18c:	2e00      	cmp	r6, #0
    b18e:	d021      	beq.n	b1d4 <__ledf2+0x8c>
    b190:	4258      	negs	r0, r3
    b192:	4158      	adcs	r0, r3
    b194:	2101      	movs	r1, #1
    b196:	4243      	negs	r3, r0
    b198:	430b      	orrs	r3, r1
    b19a:	1c18      	adds	r0, r3, #0
    b19c:	e00e      	b.n	b1bc <__ledf2+0x74>
    b19e:	4661      	mov	r1, ip
    b1a0:	2002      	movs	r0, #2
    b1a2:	4331      	orrs	r1, r6
    b1a4:	d10a      	bne.n	b1bc <__ledf2+0x74>
    b1a6:	42a5      	cmp	r5, r4
    b1a8:	d00e      	beq.n	b1c8 <__ledf2+0x80>
    b1aa:	2d00      	cmp	r5, #0
    b1ac:	d112      	bne.n	b1d4 <__ledf2+0x8c>
    b1ae:	433a      	orrs	r2, r7
    b1b0:	d110      	bne.n	b1d4 <__ledf2+0x8c>
    b1b2:	465b      	mov	r3, fp
    b1b4:	4259      	negs	r1, r3
    b1b6:	2301      	movs	r3, #1
    b1b8:	4319      	orrs	r1, r3
    b1ba:	1c08      	adds	r0, r1, #0
    b1bc:	bc3c      	pop	{r2, r3, r4, r5}
    b1be:	4690      	mov	r8, r2
    b1c0:	4699      	mov	r9, r3
    b1c2:	46a2      	mov	sl, r4
    b1c4:	46ab      	mov	fp, r5
    b1c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    b1c8:	1c39      	adds	r1, r7, #0
    b1ca:	2002      	movs	r0, #2
    b1cc:	4311      	orrs	r1, r2
    b1ce:	d1f5      	bne.n	b1bc <__ledf2+0x74>
    b1d0:	2c00      	cmp	r4, #0
    b1d2:	d0d5      	beq.n	b180 <__ledf2+0x38>
    b1d4:	459b      	cmp	fp, r3
    b1d6:	d1ec      	bne.n	b1b2 <__ledf2+0x6a>
    b1d8:	42ac      	cmp	r4, r5
    b1da:	dcea      	bgt.n	b1b2 <__ledf2+0x6a>
    b1dc:	db05      	blt.n	b1ea <__ledf2+0xa2>
    b1de:	45bc      	cmp	ip, r7
    b1e0:	d8e7      	bhi.n	b1b2 <__ledf2+0x6a>
    b1e2:	d00f      	beq.n	b204 <__ledf2+0xbc>
    b1e4:	2000      	movs	r0, #0
    b1e6:	45bc      	cmp	ip, r7
    b1e8:	d2e8      	bcs.n	b1bc <__ledf2+0x74>
    b1ea:	4658      	mov	r0, fp
    b1ec:	4241      	negs	r1, r0
    b1ee:	4148      	adcs	r0, r1
    b1f0:	4241      	negs	r1, r0
    b1f2:	2001      	movs	r0, #1
    b1f4:	4308      	orrs	r0, r1
    b1f6:	e7e1      	b.n	b1bc <__ledf2+0x74>
    b1f8:	433a      	orrs	r2, r7
    b1fa:	d1c7      	bne.n	b18c <__ledf2+0x44>
    b1fc:	2000      	movs	r0, #0
    b1fe:	2e00      	cmp	r6, #0
    b200:	d1dc      	bne.n	b1bc <__ledf2+0x74>
    b202:	e7d6      	b.n	b1b2 <__ledf2+0x6a>
    b204:	45c8      	cmp	r8, r9
    b206:	d8d4      	bhi.n	b1b2 <__ledf2+0x6a>
    b208:	2000      	movs	r0, #0
    b20a:	45c8      	cmp	r8, r9
    b20c:	d3ed      	bcc.n	b1ea <__ledf2+0xa2>
    b20e:	e7d5      	b.n	b1bc <__ledf2+0x74>
    b210:	000007ff 	.word	0x000007ff

0000b214 <__aeabi_dmul>:
    b214:	b5f0      	push	{r4, r5, r6, r7, lr}
    b216:	465f      	mov	r7, fp
    b218:	4656      	mov	r6, sl
    b21a:	464d      	mov	r5, r9
    b21c:	4644      	mov	r4, r8
    b21e:	b4f0      	push	{r4, r5, r6, r7}
    b220:	1c05      	adds	r5, r0, #0
    b222:	1c06      	adds	r6, r0, #0
    b224:	0308      	lsls	r0, r1, #12
    b226:	b087      	sub	sp, #28
    b228:	4699      	mov	r9, r3
    b22a:	004f      	lsls	r7, r1, #1
    b22c:	0b03      	lsrs	r3, r0, #12
    b22e:	0fcc      	lsrs	r4, r1, #31
    b230:	4692      	mov	sl, r2
    b232:	469b      	mov	fp, r3
    b234:	0d7f      	lsrs	r7, r7, #21
    b236:	9401      	str	r4, [sp, #4]
    b238:	d067      	beq.n	b30a <__aeabi_dmul+0xf6>
    b23a:	4b6c      	ldr	r3, [pc, #432]	; (b3ec <__aeabi_dmul+0x1d8>)
    b23c:	429f      	cmp	r7, r3
    b23e:	d036      	beq.n	b2ae <__aeabi_dmul+0x9a>
    b240:	2080      	movs	r0, #128	; 0x80
    b242:	465b      	mov	r3, fp
    b244:	0340      	lsls	r0, r0, #13
    b246:	4318      	orrs	r0, r3
    b248:	00c0      	lsls	r0, r0, #3
    b24a:	0f6b      	lsrs	r3, r5, #29
    b24c:	4318      	orrs	r0, r3
    b24e:	4b68      	ldr	r3, [pc, #416]	; (b3f0 <__aeabi_dmul+0x1dc>)
    b250:	4683      	mov	fp, r0
    b252:	469c      	mov	ip, r3
    b254:	2300      	movs	r3, #0
    b256:	4698      	mov	r8, r3
    b258:	00ee      	lsls	r6, r5, #3
    b25a:	4467      	add	r7, ip
    b25c:	9300      	str	r3, [sp, #0]
    b25e:	464b      	mov	r3, r9
    b260:	4649      	mov	r1, r9
    b262:	031d      	lsls	r5, r3, #12
    b264:	0fc9      	lsrs	r1, r1, #31
    b266:	005b      	lsls	r3, r3, #1
    b268:	4652      	mov	r2, sl
    b26a:	0b2d      	lsrs	r5, r5, #12
    b26c:	0d5b      	lsrs	r3, r3, #21
    b26e:	4689      	mov	r9, r1
    b270:	d100      	bne.n	b274 <__aeabi_dmul+0x60>
    b272:	e06e      	b.n	b352 <__aeabi_dmul+0x13e>
    b274:	495d      	ldr	r1, [pc, #372]	; (b3ec <__aeabi_dmul+0x1d8>)
    b276:	428b      	cmp	r3, r1
    b278:	d064      	beq.n	b344 <__aeabi_dmul+0x130>
    b27a:	2080      	movs	r0, #128	; 0x80
    b27c:	495c      	ldr	r1, [pc, #368]	; (b3f0 <__aeabi_dmul+0x1dc>)
    b27e:	0340      	lsls	r0, r0, #13
    b280:	468c      	mov	ip, r1
    b282:	2100      	movs	r1, #0
    b284:	4305      	orrs	r5, r0
    b286:	00ed      	lsls	r5, r5, #3
    b288:	0f50      	lsrs	r0, r2, #29
    b28a:	4305      	orrs	r5, r0
    b28c:	00d2      	lsls	r2, r2, #3
    b28e:	4463      	add	r3, ip
    b290:	4648      	mov	r0, r9
    b292:	18ff      	adds	r7, r7, r3
    b294:	1c7b      	adds	r3, r7, #1
    b296:	469a      	mov	sl, r3
    b298:	9b00      	ldr	r3, [sp, #0]
    b29a:	4060      	eors	r0, r4
    b29c:	9002      	str	r0, [sp, #8]
    b29e:	430b      	orrs	r3, r1
    b2a0:	2b0f      	cmp	r3, #15
    b2a2:	d900      	bls.n	b2a6 <__aeabi_dmul+0x92>
    b2a4:	e0ac      	b.n	b400 <__aeabi_dmul+0x1ec>
    b2a6:	4853      	ldr	r0, [pc, #332]	; (b3f4 <__aeabi_dmul+0x1e0>)
    b2a8:	009b      	lsls	r3, r3, #2
    b2aa:	58c3      	ldr	r3, [r0, r3]
    b2ac:	469f      	mov	pc, r3
    b2ae:	465b      	mov	r3, fp
    b2b0:	431d      	orrs	r5, r3
    b2b2:	d000      	beq.n	b2b6 <__aeabi_dmul+0xa2>
    b2b4:	e082      	b.n	b3bc <__aeabi_dmul+0x1a8>
    b2b6:	2308      	movs	r3, #8
    b2b8:	9300      	str	r3, [sp, #0]
    b2ba:	2300      	movs	r3, #0
    b2bc:	469b      	mov	fp, r3
    b2be:	3302      	adds	r3, #2
    b2c0:	2600      	movs	r6, #0
    b2c2:	4698      	mov	r8, r3
    b2c4:	e7cb      	b.n	b25e <__aeabi_dmul+0x4a>
    b2c6:	9b02      	ldr	r3, [sp, #8]
    b2c8:	9301      	str	r3, [sp, #4]
    b2ca:	4643      	mov	r3, r8
    b2cc:	2b02      	cmp	r3, #2
    b2ce:	d159      	bne.n	b384 <__aeabi_dmul+0x170>
    b2d0:	2401      	movs	r4, #1
    b2d2:	2500      	movs	r5, #0
    b2d4:	2600      	movs	r6, #0
    b2d6:	9b01      	ldr	r3, [sp, #4]
    b2d8:	401c      	ands	r4, r3
    b2da:	4b44      	ldr	r3, [pc, #272]	; (b3ec <__aeabi_dmul+0x1d8>)
    b2dc:	2100      	movs	r1, #0
    b2de:	032d      	lsls	r5, r5, #12
    b2e0:	0d0a      	lsrs	r2, r1, #20
    b2e2:	0512      	lsls	r2, r2, #20
    b2e4:	0b2d      	lsrs	r5, r5, #12
    b2e6:	4315      	orrs	r5, r2
    b2e8:	4a43      	ldr	r2, [pc, #268]	; (b3f8 <__aeabi_dmul+0x1e4>)
    b2ea:	051b      	lsls	r3, r3, #20
    b2ec:	4015      	ands	r5, r2
    b2ee:	431d      	orrs	r5, r3
    b2f0:	006d      	lsls	r5, r5, #1
    b2f2:	07e4      	lsls	r4, r4, #31
    b2f4:	086d      	lsrs	r5, r5, #1
    b2f6:	4325      	orrs	r5, r4
    b2f8:	1c30      	adds	r0, r6, #0
    b2fa:	1c29      	adds	r1, r5, #0
    b2fc:	b007      	add	sp, #28
    b2fe:	bc3c      	pop	{r2, r3, r4, r5}
    b300:	4690      	mov	r8, r2
    b302:	4699      	mov	r9, r3
    b304:	46a2      	mov	sl, r4
    b306:	46ab      	mov	fp, r5
    b308:	bdf0      	pop	{r4, r5, r6, r7, pc}
    b30a:	432b      	orrs	r3, r5
    b30c:	d04e      	beq.n	b3ac <__aeabi_dmul+0x198>
    b30e:	465b      	mov	r3, fp
    b310:	2b00      	cmp	r3, #0
    b312:	d100      	bne.n	b316 <__aeabi_dmul+0x102>
    b314:	e185      	b.n	b622 <__aeabi_dmul+0x40e>
    b316:	4658      	mov	r0, fp
    b318:	f000 fe56 	bl	bfc8 <__clzsi2>
    b31c:	1c02      	adds	r2, r0, #0
    b31e:	2328      	movs	r3, #40	; 0x28
    b320:	1c29      	adds	r1, r5, #0
    b322:	1a9b      	subs	r3, r3, r2
    b324:	1c16      	adds	r6, r2, #0
    b326:	4658      	mov	r0, fp
    b328:	40d9      	lsrs	r1, r3
    b32a:	3e08      	subs	r6, #8
    b32c:	40b0      	lsls	r0, r6
    b32e:	1c0b      	adds	r3, r1, #0
    b330:	40b5      	lsls	r5, r6
    b332:	4303      	orrs	r3, r0
    b334:	469b      	mov	fp, r3
    b336:	1c2e      	adds	r6, r5, #0
    b338:	2300      	movs	r3, #0
    b33a:	4f30      	ldr	r7, [pc, #192]	; (b3fc <__aeabi_dmul+0x1e8>)
    b33c:	9300      	str	r3, [sp, #0]
    b33e:	1abf      	subs	r7, r7, r2
    b340:	4698      	mov	r8, r3
    b342:	e78c      	b.n	b25e <__aeabi_dmul+0x4a>
    b344:	4651      	mov	r1, sl
    b346:	4329      	orrs	r1, r5
    b348:	d12e      	bne.n	b3a8 <__aeabi_dmul+0x194>
    b34a:	2500      	movs	r5, #0
    b34c:	2200      	movs	r2, #0
    b34e:	2102      	movs	r1, #2
    b350:	e79e      	b.n	b290 <__aeabi_dmul+0x7c>
    b352:	4651      	mov	r1, sl
    b354:	4329      	orrs	r1, r5
    b356:	d023      	beq.n	b3a0 <__aeabi_dmul+0x18c>
    b358:	2d00      	cmp	r5, #0
    b35a:	d100      	bne.n	b35e <__aeabi_dmul+0x14a>
    b35c:	e154      	b.n	b608 <__aeabi_dmul+0x3f4>
    b35e:	1c28      	adds	r0, r5, #0
    b360:	f000 fe32 	bl	bfc8 <__clzsi2>
    b364:	1c03      	adds	r3, r0, #0
    b366:	2128      	movs	r1, #40	; 0x28
    b368:	4650      	mov	r0, sl
    b36a:	1ac9      	subs	r1, r1, r3
    b36c:	1c1a      	adds	r2, r3, #0
    b36e:	40c8      	lsrs	r0, r1
    b370:	4651      	mov	r1, sl
    b372:	3a08      	subs	r2, #8
    b374:	4091      	lsls	r1, r2
    b376:	4095      	lsls	r5, r2
    b378:	1c0a      	adds	r2, r1, #0
    b37a:	4305      	orrs	r5, r0
    b37c:	481f      	ldr	r0, [pc, #124]	; (b3fc <__aeabi_dmul+0x1e8>)
    b37e:	2100      	movs	r1, #0
    b380:	1ac3      	subs	r3, r0, r3
    b382:	e785      	b.n	b290 <__aeabi_dmul+0x7c>
    b384:	2b03      	cmp	r3, #3
    b386:	d100      	bne.n	b38a <__aeabi_dmul+0x176>
    b388:	e1c2      	b.n	b710 <__aeabi_dmul+0x4fc>
    b38a:	2b01      	cmp	r3, #1
    b38c:	d000      	beq.n	b390 <__aeabi_dmul+0x17c>
    b38e:	e16d      	b.n	b66c <__aeabi_dmul+0x458>
    b390:	4644      	mov	r4, r8
    b392:	9b01      	ldr	r3, [sp, #4]
    b394:	2500      	movs	r5, #0
    b396:	401c      	ands	r4, r3
    b398:	b2e4      	uxtb	r4, r4
    b39a:	2300      	movs	r3, #0
    b39c:	2600      	movs	r6, #0
    b39e:	e79d      	b.n	b2dc <__aeabi_dmul+0xc8>
    b3a0:	2500      	movs	r5, #0
    b3a2:	2200      	movs	r2, #0
    b3a4:	2101      	movs	r1, #1
    b3a6:	e773      	b.n	b290 <__aeabi_dmul+0x7c>
    b3a8:	2103      	movs	r1, #3
    b3aa:	e771      	b.n	b290 <__aeabi_dmul+0x7c>
    b3ac:	2304      	movs	r3, #4
    b3ae:	9300      	str	r3, [sp, #0]
    b3b0:	2300      	movs	r3, #0
    b3b2:	469b      	mov	fp, r3
    b3b4:	3301      	adds	r3, #1
    b3b6:	2600      	movs	r6, #0
    b3b8:	4698      	mov	r8, r3
    b3ba:	e750      	b.n	b25e <__aeabi_dmul+0x4a>
    b3bc:	230c      	movs	r3, #12
    b3be:	9300      	str	r3, [sp, #0]
    b3c0:	3b09      	subs	r3, #9
    b3c2:	4698      	mov	r8, r3
    b3c4:	e74b      	b.n	b25e <__aeabi_dmul+0x4a>
    b3c6:	2580      	movs	r5, #128	; 0x80
    b3c8:	2400      	movs	r4, #0
    b3ca:	032d      	lsls	r5, r5, #12
    b3cc:	2600      	movs	r6, #0
    b3ce:	4b07      	ldr	r3, [pc, #28]	; (b3ec <__aeabi_dmul+0x1d8>)
    b3d0:	e784      	b.n	b2dc <__aeabi_dmul+0xc8>
    b3d2:	464b      	mov	r3, r9
    b3d4:	46ab      	mov	fp, r5
    b3d6:	1c16      	adds	r6, r2, #0
    b3d8:	9301      	str	r3, [sp, #4]
    b3da:	4688      	mov	r8, r1
    b3dc:	e775      	b.n	b2ca <__aeabi_dmul+0xb6>
    b3de:	9b02      	ldr	r3, [sp, #8]
    b3e0:	46ab      	mov	fp, r5
    b3e2:	1c16      	adds	r6, r2, #0
    b3e4:	9301      	str	r3, [sp, #4]
    b3e6:	4688      	mov	r8, r1
    b3e8:	e76f      	b.n	b2ca <__aeabi_dmul+0xb6>
    b3ea:	46c0      	nop			; (mov r8, r8)
    b3ec:	000007ff 	.word	0x000007ff
    b3f0:	fffffc01 	.word	0xfffffc01
    b3f4:	00011f48 	.word	0x00011f48
    b3f8:	800fffff 	.word	0x800fffff
    b3fc:	fffffc0d 	.word	0xfffffc0d
    b400:	0c33      	lsrs	r3, r6, #16
    b402:	0436      	lsls	r6, r6, #16
    b404:	0c36      	lsrs	r6, r6, #16
    b406:	469c      	mov	ip, r3
    b408:	1c33      	adds	r3, r6, #0
    b40a:	0c14      	lsrs	r4, r2, #16
    b40c:	0412      	lsls	r2, r2, #16
    b40e:	0c12      	lsrs	r2, r2, #16
    b410:	4353      	muls	r3, r2
    b412:	4698      	mov	r8, r3
    b414:	4663      	mov	r3, ip
    b416:	4353      	muls	r3, r2
    b418:	4699      	mov	r9, r3
    b41a:	4663      	mov	r3, ip
    b41c:	4363      	muls	r3, r4
    b41e:	9301      	str	r3, [sp, #4]
    b420:	1c33      	adds	r3, r6, #0
    b422:	4641      	mov	r1, r8
    b424:	4363      	muls	r3, r4
    b426:	0c09      	lsrs	r1, r1, #16
    b428:	444b      	add	r3, r9
    b42a:	185b      	adds	r3, r3, r1
    b42c:	4599      	cmp	r9, r3
    b42e:	d905      	bls.n	b43c <__aeabi_dmul+0x228>
    b430:	2080      	movs	r0, #128	; 0x80
    b432:	0240      	lsls	r0, r0, #9
    b434:	4681      	mov	r9, r0
    b436:	9901      	ldr	r1, [sp, #4]
    b438:	4449      	add	r1, r9
    b43a:	9101      	str	r1, [sp, #4]
    b43c:	0c19      	lsrs	r1, r3, #16
    b43e:	9103      	str	r1, [sp, #12]
    b440:	4641      	mov	r1, r8
    b442:	0409      	lsls	r1, r1, #16
    b444:	0c09      	lsrs	r1, r1, #16
    b446:	041b      	lsls	r3, r3, #16
    b448:	185b      	adds	r3, r3, r1
    b44a:	9304      	str	r3, [sp, #16]
    b44c:	0c2b      	lsrs	r3, r5, #16
    b44e:	4698      	mov	r8, r3
    b450:	1c33      	adds	r3, r6, #0
    b452:	042d      	lsls	r5, r5, #16
    b454:	0c29      	lsrs	r1, r5, #16
    b456:	434b      	muls	r3, r1
    b458:	4660      	mov	r0, ip
    b45a:	9300      	str	r3, [sp, #0]
    b45c:	4643      	mov	r3, r8
    b45e:	4665      	mov	r5, ip
    b460:	4358      	muls	r0, r3
    b462:	435e      	muls	r6, r3
    b464:	9b00      	ldr	r3, [sp, #0]
    b466:	434d      	muls	r5, r1
    b468:	0c1b      	lsrs	r3, r3, #16
    b46a:	4699      	mov	r9, r3
    b46c:	19ae      	adds	r6, r5, r6
    b46e:	444e      	add	r6, r9
    b470:	4684      	mov	ip, r0
    b472:	42b5      	cmp	r5, r6
    b474:	d903      	bls.n	b47e <__aeabi_dmul+0x26a>
    b476:	2380      	movs	r3, #128	; 0x80
    b478:	025b      	lsls	r3, r3, #9
    b47a:	4699      	mov	r9, r3
    b47c:	44cc      	add	ip, r9
    b47e:	0c35      	lsrs	r5, r6, #16
    b480:	1c2b      	adds	r3, r5, #0
    b482:	9803      	ldr	r0, [sp, #12]
    b484:	4463      	add	r3, ip
    b486:	4684      	mov	ip, r0
    b488:	9305      	str	r3, [sp, #20]
    b48a:	9b00      	ldr	r3, [sp, #0]
    b48c:	0436      	lsls	r6, r6, #16
    b48e:	041b      	lsls	r3, r3, #16
    b490:	0c1b      	lsrs	r3, r3, #16
    b492:	18f3      	adds	r3, r6, r3
    b494:	449c      	add	ip, r3
    b496:	4660      	mov	r0, ip
    b498:	9003      	str	r0, [sp, #12]
    b49a:	4658      	mov	r0, fp
    b49c:	0405      	lsls	r5, r0, #16
    b49e:	0c06      	lsrs	r6, r0, #16
    b4a0:	0c28      	lsrs	r0, r5, #16
    b4a2:	4684      	mov	ip, r0
    b4a4:	4350      	muls	r0, r2
    b4a6:	1c35      	adds	r5, r6, #0
    b4a8:	4681      	mov	r9, r0
    b4aa:	4660      	mov	r0, ip
    b4ac:	4365      	muls	r5, r4
    b4ae:	4344      	muls	r4, r0
    b4b0:	4648      	mov	r0, r9
    b4b2:	0c00      	lsrs	r0, r0, #16
    b4b4:	4683      	mov	fp, r0
    b4b6:	4372      	muls	r2, r6
    b4b8:	1914      	adds	r4, r2, r4
    b4ba:	445c      	add	r4, fp
    b4bc:	42a2      	cmp	r2, r4
    b4be:	d903      	bls.n	b4c8 <__aeabi_dmul+0x2b4>
    b4c0:	2280      	movs	r2, #128	; 0x80
    b4c2:	0252      	lsls	r2, r2, #9
    b4c4:	4693      	mov	fp, r2
    b4c6:	445d      	add	r5, fp
    b4c8:	0c22      	lsrs	r2, r4, #16
    b4ca:	18ad      	adds	r5, r5, r2
    b4cc:	464a      	mov	r2, r9
    b4ce:	0412      	lsls	r2, r2, #16
    b4d0:	0c12      	lsrs	r2, r2, #16
    b4d2:	0424      	lsls	r4, r4, #16
    b4d4:	4640      	mov	r0, r8
    b4d6:	18a4      	adds	r4, r4, r2
    b4d8:	4662      	mov	r2, ip
    b4da:	434a      	muls	r2, r1
    b4dc:	4371      	muls	r1, r6
    b4de:	4346      	muls	r6, r0
    b4e0:	4660      	mov	r0, ip
    b4e2:	9600      	str	r6, [sp, #0]
    b4e4:	4646      	mov	r6, r8
    b4e6:	4370      	muls	r0, r6
    b4e8:	4680      	mov	r8, r0
    b4ea:	0c10      	lsrs	r0, r2, #16
    b4ec:	4684      	mov	ip, r0
    b4ee:	4488      	add	r8, r1
    b4f0:	44e0      	add	r8, ip
    b4f2:	4541      	cmp	r1, r8
    b4f4:	d905      	bls.n	b502 <__aeabi_dmul+0x2ee>
    b4f6:	2180      	movs	r1, #128	; 0x80
    b4f8:	0249      	lsls	r1, r1, #9
    b4fa:	468c      	mov	ip, r1
    b4fc:	9900      	ldr	r1, [sp, #0]
    b4fe:	4461      	add	r1, ip
    b500:	9100      	str	r1, [sp, #0]
    b502:	9801      	ldr	r0, [sp, #4]
    b504:	9903      	ldr	r1, [sp, #12]
    b506:	4684      	mov	ip, r0
    b508:	4461      	add	r1, ip
    b50a:	4299      	cmp	r1, r3
    b50c:	419b      	sbcs	r3, r3
    b50e:	425b      	negs	r3, r3
    b510:	4699      	mov	r9, r3
    b512:	9805      	ldr	r0, [sp, #20]
    b514:	4643      	mov	r3, r8
    b516:	4684      	mov	ip, r0
    b518:	0412      	lsls	r2, r2, #16
    b51a:	0c12      	lsrs	r2, r2, #16
    b51c:	041b      	lsls	r3, r3, #16
    b51e:	189b      	adds	r3, r3, r2
    b520:	4463      	add	r3, ip
    b522:	469c      	mov	ip, r3
    b524:	46ab      	mov	fp, r5
    b526:	4283      	cmp	r3, r0
    b528:	419b      	sbcs	r3, r3
    b52a:	4640      	mov	r0, r8
    b52c:	190a      	adds	r2, r1, r4
    b52e:	44cc      	add	ip, r9
    b530:	42a2      	cmp	r2, r4
    b532:	4189      	sbcs	r1, r1
    b534:	44e3      	add	fp, ip
    b536:	45cc      	cmp	ip, r9
    b538:	41b6      	sbcs	r6, r6
    b53a:	465c      	mov	r4, fp
    b53c:	0c00      	lsrs	r0, r0, #16
    b53e:	4680      	mov	r8, r0
    b540:	4249      	negs	r1, r1
    b542:	4276      	negs	r6, r6
    b544:	425b      	negs	r3, r3
    b546:	1864      	adds	r4, r4, r1
    b548:	4333      	orrs	r3, r6
    b54a:	4498      	add	r8, r3
    b54c:	428c      	cmp	r4, r1
    b54e:	4189      	sbcs	r1, r1
    b550:	45ab      	cmp	fp, r5
    b552:	419b      	sbcs	r3, r3
    b554:	4249      	negs	r1, r1
    b556:	425b      	negs	r3, r3
    b558:	4319      	orrs	r1, r3
    b55a:	1c0d      	adds	r5, r1, #0
    b55c:	9b00      	ldr	r3, [sp, #0]
    b55e:	4445      	add	r5, r8
    b560:	18ee      	adds	r6, r5, r3
    b562:	0276      	lsls	r6, r6, #9
    b564:	0de5      	lsrs	r5, r4, #23
    b566:	432e      	orrs	r6, r5
    b568:	46b3      	mov	fp, r6
    b56a:	9b04      	ldr	r3, [sp, #16]
    b56c:	0256      	lsls	r6, r2, #9
    b56e:	431e      	orrs	r6, r3
    b570:	1e73      	subs	r3, r6, #1
    b572:	419e      	sbcs	r6, r3
    b574:	465b      	mov	r3, fp
    b576:	0dd2      	lsrs	r2, r2, #23
    b578:	4332      	orrs	r2, r6
    b57a:	0266      	lsls	r6, r4, #9
    b57c:	4316      	orrs	r6, r2
    b57e:	01db      	lsls	r3, r3, #7
    b580:	d50a      	bpl.n	b598 <__aeabi_dmul+0x384>
    b582:	2301      	movs	r3, #1
    b584:	4033      	ands	r3, r6
    b586:	0876      	lsrs	r6, r6, #1
    b588:	431e      	orrs	r6, r3
    b58a:	465b      	mov	r3, fp
    b58c:	07db      	lsls	r3, r3, #31
    b58e:	431e      	orrs	r6, r3
    b590:	465b      	mov	r3, fp
    b592:	085b      	lsrs	r3, r3, #1
    b594:	469b      	mov	fp, r3
    b596:	4657      	mov	r7, sl
    b598:	4b63      	ldr	r3, [pc, #396]	; (b728 <__aeabi_dmul+0x514>)
    b59a:	18fb      	adds	r3, r7, r3
    b59c:	2b00      	cmp	r3, #0
    b59e:	dd5a      	ble.n	b656 <__aeabi_dmul+0x442>
    b5a0:	0772      	lsls	r2, r6, #29
    b5a2:	d009      	beq.n	b5b8 <__aeabi_dmul+0x3a4>
    b5a4:	220f      	movs	r2, #15
    b5a6:	4032      	ands	r2, r6
    b5a8:	2a04      	cmp	r2, #4
    b5aa:	d005      	beq.n	b5b8 <__aeabi_dmul+0x3a4>
    b5ac:	1d32      	adds	r2, r6, #4
    b5ae:	42b2      	cmp	r2, r6
    b5b0:	41b6      	sbcs	r6, r6
    b5b2:	4276      	negs	r6, r6
    b5b4:	44b3      	add	fp, r6
    b5b6:	1c16      	adds	r6, r2, #0
    b5b8:	465a      	mov	r2, fp
    b5ba:	01d2      	lsls	r2, r2, #7
    b5bc:	d506      	bpl.n	b5cc <__aeabi_dmul+0x3b8>
    b5be:	465a      	mov	r2, fp
    b5c0:	4b5a      	ldr	r3, [pc, #360]	; (b72c <__aeabi_dmul+0x518>)
    b5c2:	401a      	ands	r2, r3
    b5c4:	2380      	movs	r3, #128	; 0x80
    b5c6:	4693      	mov	fp, r2
    b5c8:	00db      	lsls	r3, r3, #3
    b5ca:	18fb      	adds	r3, r7, r3
    b5cc:	4a58      	ldr	r2, [pc, #352]	; (b730 <__aeabi_dmul+0x51c>)
    b5ce:	4293      	cmp	r3, r2
    b5d0:	dd34      	ble.n	b63c <__aeabi_dmul+0x428>
    b5d2:	2401      	movs	r4, #1
    b5d4:	9b02      	ldr	r3, [sp, #8]
    b5d6:	2500      	movs	r5, #0
    b5d8:	401c      	ands	r4, r3
    b5da:	2600      	movs	r6, #0
    b5dc:	4b55      	ldr	r3, [pc, #340]	; (b734 <__aeabi_dmul+0x520>)
    b5de:	e67d      	b.n	b2dc <__aeabi_dmul+0xc8>
    b5e0:	2080      	movs	r0, #128	; 0x80
    b5e2:	465b      	mov	r3, fp
    b5e4:	0300      	lsls	r0, r0, #12
    b5e6:	4203      	tst	r3, r0
    b5e8:	d008      	beq.n	b5fc <__aeabi_dmul+0x3e8>
    b5ea:	4205      	tst	r5, r0
    b5ec:	d106      	bne.n	b5fc <__aeabi_dmul+0x3e8>
    b5ee:	4305      	orrs	r5, r0
    b5f0:	032d      	lsls	r5, r5, #12
    b5f2:	0b2d      	lsrs	r5, r5, #12
    b5f4:	464c      	mov	r4, r9
    b5f6:	1c16      	adds	r6, r2, #0
    b5f8:	4b4e      	ldr	r3, [pc, #312]	; (b734 <__aeabi_dmul+0x520>)
    b5fa:	e66f      	b.n	b2dc <__aeabi_dmul+0xc8>
    b5fc:	465d      	mov	r5, fp
    b5fe:	4305      	orrs	r5, r0
    b600:	032d      	lsls	r5, r5, #12
    b602:	0b2d      	lsrs	r5, r5, #12
    b604:	4b4b      	ldr	r3, [pc, #300]	; (b734 <__aeabi_dmul+0x520>)
    b606:	e669      	b.n	b2dc <__aeabi_dmul+0xc8>
    b608:	4650      	mov	r0, sl
    b60a:	f000 fcdd 	bl	bfc8 <__clzsi2>
    b60e:	1c03      	adds	r3, r0, #0
    b610:	3320      	adds	r3, #32
    b612:	2b27      	cmp	r3, #39	; 0x27
    b614:	dc00      	bgt.n	b618 <__aeabi_dmul+0x404>
    b616:	e6a6      	b.n	b366 <__aeabi_dmul+0x152>
    b618:	4655      	mov	r5, sl
    b61a:	3808      	subs	r0, #8
    b61c:	4085      	lsls	r5, r0
    b61e:	2200      	movs	r2, #0
    b620:	e6ac      	b.n	b37c <__aeabi_dmul+0x168>
    b622:	1c28      	adds	r0, r5, #0
    b624:	f000 fcd0 	bl	bfc8 <__clzsi2>
    b628:	1c02      	adds	r2, r0, #0
    b62a:	3220      	adds	r2, #32
    b62c:	2a27      	cmp	r2, #39	; 0x27
    b62e:	dc00      	bgt.n	b632 <__aeabi_dmul+0x41e>
    b630:	e675      	b.n	b31e <__aeabi_dmul+0x10a>
    b632:	3808      	subs	r0, #8
    b634:	4085      	lsls	r5, r0
    b636:	2600      	movs	r6, #0
    b638:	46ab      	mov	fp, r5
    b63a:	e67d      	b.n	b338 <__aeabi_dmul+0x124>
    b63c:	465a      	mov	r2, fp
    b63e:	08f6      	lsrs	r6, r6, #3
    b640:	0752      	lsls	r2, r2, #29
    b642:	4316      	orrs	r6, r2
    b644:	465a      	mov	r2, fp
    b646:	2401      	movs	r4, #1
    b648:	0255      	lsls	r5, r2, #9
    b64a:	9a02      	ldr	r2, [sp, #8]
    b64c:	055b      	lsls	r3, r3, #21
    b64e:	0b2d      	lsrs	r5, r5, #12
    b650:	0d5b      	lsrs	r3, r3, #21
    b652:	4014      	ands	r4, r2
    b654:	e642      	b.n	b2dc <__aeabi_dmul+0xc8>
    b656:	4d38      	ldr	r5, [pc, #224]	; (b738 <__aeabi_dmul+0x524>)
    b658:	1bed      	subs	r5, r5, r7
    b65a:	2d38      	cmp	r5, #56	; 0x38
    b65c:	dd0a      	ble.n	b674 <__aeabi_dmul+0x460>
    b65e:	2401      	movs	r4, #1
    b660:	9b02      	ldr	r3, [sp, #8]
    b662:	2500      	movs	r5, #0
    b664:	401c      	ands	r4, r3
    b666:	2600      	movs	r6, #0
    b668:	2300      	movs	r3, #0
    b66a:	e637      	b.n	b2dc <__aeabi_dmul+0xc8>
    b66c:	9b01      	ldr	r3, [sp, #4]
    b66e:	4657      	mov	r7, sl
    b670:	9302      	str	r3, [sp, #8]
    b672:	e791      	b.n	b598 <__aeabi_dmul+0x384>
    b674:	2d1f      	cmp	r5, #31
    b676:	dc25      	bgt.n	b6c4 <__aeabi_dmul+0x4b0>
    b678:	4b30      	ldr	r3, [pc, #192]	; (b73c <__aeabi_dmul+0x528>)
    b67a:	1c32      	adds	r2, r6, #0
    b67c:	469c      	mov	ip, r3
    b67e:	4467      	add	r7, ip
    b680:	40be      	lsls	r6, r7
    b682:	465b      	mov	r3, fp
    b684:	40bb      	lsls	r3, r7
    b686:	1c37      	adds	r7, r6, #0
    b688:	40ea      	lsrs	r2, r5
    b68a:	1e7e      	subs	r6, r7, #1
    b68c:	41b7      	sbcs	r7, r6
    b68e:	4313      	orrs	r3, r2
    b690:	433b      	orrs	r3, r7
    b692:	1c1e      	adds	r6, r3, #0
    b694:	465b      	mov	r3, fp
    b696:	40eb      	lsrs	r3, r5
    b698:	1c1d      	adds	r5, r3, #0
    b69a:	0773      	lsls	r3, r6, #29
    b69c:	d009      	beq.n	b6b2 <__aeabi_dmul+0x49e>
    b69e:	230f      	movs	r3, #15
    b6a0:	4033      	ands	r3, r6
    b6a2:	2b04      	cmp	r3, #4
    b6a4:	d005      	beq.n	b6b2 <__aeabi_dmul+0x49e>
    b6a6:	1d33      	adds	r3, r6, #4
    b6a8:	42b3      	cmp	r3, r6
    b6aa:	41b6      	sbcs	r6, r6
    b6ac:	4276      	negs	r6, r6
    b6ae:	19ad      	adds	r5, r5, r6
    b6b0:	1c1e      	adds	r6, r3, #0
    b6b2:	022b      	lsls	r3, r5, #8
    b6b4:	d520      	bpl.n	b6f8 <__aeabi_dmul+0x4e4>
    b6b6:	2401      	movs	r4, #1
    b6b8:	9b02      	ldr	r3, [sp, #8]
    b6ba:	2500      	movs	r5, #0
    b6bc:	401c      	ands	r4, r3
    b6be:	2600      	movs	r6, #0
    b6c0:	2301      	movs	r3, #1
    b6c2:	e60b      	b.n	b2dc <__aeabi_dmul+0xc8>
    b6c4:	465a      	mov	r2, fp
    b6c6:	4b1e      	ldr	r3, [pc, #120]	; (b740 <__aeabi_dmul+0x52c>)
    b6c8:	1bdb      	subs	r3, r3, r7
    b6ca:	40da      	lsrs	r2, r3
    b6cc:	1c13      	adds	r3, r2, #0
    b6ce:	2d20      	cmp	r5, #32
    b6d0:	d01c      	beq.n	b70c <__aeabi_dmul+0x4f8>
    b6d2:	4a1c      	ldr	r2, [pc, #112]	; (b744 <__aeabi_dmul+0x530>)
    b6d4:	4694      	mov	ip, r2
    b6d6:	465a      	mov	r2, fp
    b6d8:	4467      	add	r7, ip
    b6da:	40ba      	lsls	r2, r7
    b6dc:	1c17      	adds	r7, r2, #0
    b6de:	433e      	orrs	r6, r7
    b6e0:	1e72      	subs	r2, r6, #1
    b6e2:	4196      	sbcs	r6, r2
    b6e4:	431e      	orrs	r6, r3
    b6e6:	2307      	movs	r3, #7
    b6e8:	2500      	movs	r5, #0
    b6ea:	4033      	ands	r3, r6
    b6ec:	d007      	beq.n	b6fe <__aeabi_dmul+0x4ea>
    b6ee:	230f      	movs	r3, #15
    b6f0:	2500      	movs	r5, #0
    b6f2:	4033      	ands	r3, r6
    b6f4:	2b04      	cmp	r3, #4
    b6f6:	d1d6      	bne.n	b6a6 <__aeabi_dmul+0x492>
    b6f8:	076b      	lsls	r3, r5, #29
    b6fa:	026d      	lsls	r5, r5, #9
    b6fc:	0b2d      	lsrs	r5, r5, #12
    b6fe:	2401      	movs	r4, #1
    b700:	08f6      	lsrs	r6, r6, #3
    b702:	431e      	orrs	r6, r3
    b704:	9b02      	ldr	r3, [sp, #8]
    b706:	401c      	ands	r4, r3
    b708:	2300      	movs	r3, #0
    b70a:	e5e7      	b.n	b2dc <__aeabi_dmul+0xc8>
    b70c:	2700      	movs	r7, #0
    b70e:	e7e6      	b.n	b6de <__aeabi_dmul+0x4ca>
    b710:	2580      	movs	r5, #128	; 0x80
    b712:	465b      	mov	r3, fp
    b714:	2401      	movs	r4, #1
    b716:	032d      	lsls	r5, r5, #12
    b718:	431d      	orrs	r5, r3
    b71a:	9b01      	ldr	r3, [sp, #4]
    b71c:	032d      	lsls	r5, r5, #12
    b71e:	4023      	ands	r3, r4
    b720:	1c1c      	adds	r4, r3, #0
    b722:	0b2d      	lsrs	r5, r5, #12
    b724:	4b03      	ldr	r3, [pc, #12]	; (b734 <__aeabi_dmul+0x520>)
    b726:	e5d9      	b.n	b2dc <__aeabi_dmul+0xc8>
    b728:	000003ff 	.word	0x000003ff
    b72c:	feffffff 	.word	0xfeffffff
    b730:	000007fe 	.word	0x000007fe
    b734:	000007ff 	.word	0x000007ff
    b738:	fffffc02 	.word	0xfffffc02
    b73c:	0000041e 	.word	0x0000041e
    b740:	fffffbe2 	.word	0xfffffbe2
    b744:	0000043e 	.word	0x0000043e

0000b748 <__aeabi_dsub>:
    b748:	b5f0      	push	{r4, r5, r6, r7, lr}
    b74a:	464d      	mov	r5, r9
    b74c:	4644      	mov	r4, r8
    b74e:	465f      	mov	r7, fp
    b750:	4656      	mov	r6, sl
    b752:	b4f0      	push	{r4, r5, r6, r7}
    b754:	1c0e      	adds	r6, r1, #0
    b756:	1c11      	adds	r1, r2, #0
    b758:	0332      	lsls	r2, r6, #12
    b75a:	0a52      	lsrs	r2, r2, #9
    b75c:	0f47      	lsrs	r7, r0, #29
    b75e:	4317      	orrs	r7, r2
    b760:	00c5      	lsls	r5, r0, #3
    b762:	031a      	lsls	r2, r3, #12
    b764:	0058      	lsls	r0, r3, #1
    b766:	0fdb      	lsrs	r3, r3, #31
    b768:	4699      	mov	r9, r3
    b76a:	0a52      	lsrs	r2, r2, #9
    b76c:	0f4b      	lsrs	r3, r1, #29
    b76e:	b083      	sub	sp, #12
    b770:	431a      	orrs	r2, r3
    b772:	00cb      	lsls	r3, r1, #3
    b774:	9301      	str	r3, [sp, #4]
    b776:	4bcf      	ldr	r3, [pc, #828]	; (bab4 <__aeabi_dsub+0x36c>)
    b778:	0074      	lsls	r4, r6, #1
    b77a:	0ff6      	lsrs	r6, r6, #31
    b77c:	0d64      	lsrs	r4, r4, #21
    b77e:	46b0      	mov	r8, r6
    b780:	0d40      	lsrs	r0, r0, #21
    b782:	4298      	cmp	r0, r3
    b784:	d100      	bne.n	b788 <__aeabi_dsub+0x40>
    b786:	e0e8      	b.n	b95a <__aeabi_dsub+0x212>
    b788:	2301      	movs	r3, #1
    b78a:	4649      	mov	r1, r9
    b78c:	4059      	eors	r1, r3
    b78e:	1c0b      	adds	r3, r1, #0
    b790:	429e      	cmp	r6, r3
    b792:	d100      	bne.n	b796 <__aeabi_dsub+0x4e>
    b794:	e0b1      	b.n	b8fa <__aeabi_dsub+0x1b2>
    b796:	1a26      	subs	r6, r4, r0
    b798:	2e00      	cmp	r6, #0
    b79a:	dc00      	bgt.n	b79e <__aeabi_dsub+0x56>
    b79c:	e11c      	b.n	b9d8 <__aeabi_dsub+0x290>
    b79e:	2800      	cmp	r0, #0
    b7a0:	d142      	bne.n	b828 <__aeabi_dsub+0xe0>
    b7a2:	1c13      	adds	r3, r2, #0
    b7a4:	9901      	ldr	r1, [sp, #4]
    b7a6:	430b      	orrs	r3, r1
    b7a8:	d000      	beq.n	b7ac <__aeabi_dsub+0x64>
    b7aa:	e0e6      	b.n	b97a <__aeabi_dsub+0x232>
    b7ac:	076b      	lsls	r3, r5, #29
    b7ae:	d100      	bne.n	b7b2 <__aeabi_dsub+0x6a>
    b7b0:	e08e      	b.n	b8d0 <__aeabi_dsub+0x188>
    b7b2:	230f      	movs	r3, #15
    b7b4:	402b      	ands	r3, r5
    b7b6:	2b04      	cmp	r3, #4
    b7b8:	d100      	bne.n	b7bc <__aeabi_dsub+0x74>
    b7ba:	e089      	b.n	b8d0 <__aeabi_dsub+0x188>
    b7bc:	1d2a      	adds	r2, r5, #4
    b7be:	42aa      	cmp	r2, r5
    b7c0:	41ad      	sbcs	r5, r5
    b7c2:	2380      	movs	r3, #128	; 0x80
    b7c4:	2601      	movs	r6, #1
    b7c6:	4641      	mov	r1, r8
    b7c8:	426d      	negs	r5, r5
    b7ca:	197f      	adds	r7, r7, r5
    b7cc:	041b      	lsls	r3, r3, #16
    b7ce:	403b      	ands	r3, r7
    b7d0:	400e      	ands	r6, r1
    b7d2:	1c15      	adds	r5, r2, #0
    b7d4:	2b00      	cmp	r3, #0
    b7d6:	d100      	bne.n	b7da <__aeabi_dsub+0x92>
    b7d8:	e083      	b.n	b8e2 <__aeabi_dsub+0x19a>
    b7da:	4bb6      	ldr	r3, [pc, #728]	; (bab4 <__aeabi_dsub+0x36c>)
    b7dc:	3401      	adds	r4, #1
    b7de:	429c      	cmp	r4, r3
    b7e0:	d100      	bne.n	b7e4 <__aeabi_dsub+0x9c>
    b7e2:	e116      	b.n	ba12 <__aeabi_dsub+0x2ca>
    b7e4:	1c3a      	adds	r2, r7, #0
    b7e6:	4bb4      	ldr	r3, [pc, #720]	; (bab8 <__aeabi_dsub+0x370>)
    b7e8:	08ed      	lsrs	r5, r5, #3
    b7ea:	401a      	ands	r2, r3
    b7ec:	0750      	lsls	r0, r2, #29
    b7ee:	0564      	lsls	r4, r4, #21
    b7f0:	0252      	lsls	r2, r2, #9
    b7f2:	4305      	orrs	r5, r0
    b7f4:	0b12      	lsrs	r2, r2, #12
    b7f6:	0d64      	lsrs	r4, r4, #21
    b7f8:	2100      	movs	r1, #0
    b7fa:	0312      	lsls	r2, r2, #12
    b7fc:	0d0b      	lsrs	r3, r1, #20
    b7fe:	051b      	lsls	r3, r3, #20
    b800:	0564      	lsls	r4, r4, #21
    b802:	0b12      	lsrs	r2, r2, #12
    b804:	431a      	orrs	r2, r3
    b806:	0863      	lsrs	r3, r4, #1
    b808:	4cac      	ldr	r4, [pc, #688]	; (babc <__aeabi_dsub+0x374>)
    b80a:	07f6      	lsls	r6, r6, #31
    b80c:	4014      	ands	r4, r2
    b80e:	431c      	orrs	r4, r3
    b810:	0064      	lsls	r4, r4, #1
    b812:	0864      	lsrs	r4, r4, #1
    b814:	4334      	orrs	r4, r6
    b816:	1c28      	adds	r0, r5, #0
    b818:	1c21      	adds	r1, r4, #0
    b81a:	b003      	add	sp, #12
    b81c:	bc3c      	pop	{r2, r3, r4, r5}
    b81e:	4690      	mov	r8, r2
    b820:	4699      	mov	r9, r3
    b822:	46a2      	mov	sl, r4
    b824:	46ab      	mov	fp, r5
    b826:	bdf0      	pop	{r4, r5, r6, r7, pc}
    b828:	4ba2      	ldr	r3, [pc, #648]	; (bab4 <__aeabi_dsub+0x36c>)
    b82a:	429c      	cmp	r4, r3
    b82c:	d0be      	beq.n	b7ac <__aeabi_dsub+0x64>
    b82e:	2380      	movs	r3, #128	; 0x80
    b830:	041b      	lsls	r3, r3, #16
    b832:	431a      	orrs	r2, r3
    b834:	2e38      	cmp	r6, #56	; 0x38
    b836:	dd00      	ble.n	b83a <__aeabi_dsub+0xf2>
    b838:	e103      	b.n	ba42 <__aeabi_dsub+0x2fa>
    b83a:	2e1f      	cmp	r6, #31
    b83c:	dd00      	ble.n	b840 <__aeabi_dsub+0xf8>
    b83e:	e13f      	b.n	bac0 <__aeabi_dsub+0x378>
    b840:	2020      	movs	r0, #32
    b842:	1b83      	subs	r3, r0, r6
    b844:	4699      	mov	r9, r3
    b846:	1c13      	adds	r3, r2, #0
    b848:	4649      	mov	r1, r9
    b84a:	408b      	lsls	r3, r1
    b84c:	469c      	mov	ip, r3
    b84e:	9b01      	ldr	r3, [sp, #4]
    b850:	4660      	mov	r0, ip
    b852:	40f3      	lsrs	r3, r6
    b854:	4303      	orrs	r3, r0
    b856:	9801      	ldr	r0, [sp, #4]
    b858:	40f2      	lsrs	r2, r6
    b85a:	4088      	lsls	r0, r1
    b85c:	1c01      	adds	r1, r0, #0
    b85e:	1e48      	subs	r0, r1, #1
    b860:	4181      	sbcs	r1, r0
    b862:	430b      	orrs	r3, r1
    b864:	1aeb      	subs	r3, r5, r3
    b866:	429d      	cmp	r5, r3
    b868:	4180      	sbcs	r0, r0
    b86a:	1c1d      	adds	r5, r3, #0
    b86c:	1aba      	subs	r2, r7, r2
    b86e:	4240      	negs	r0, r0
    b870:	1a17      	subs	r7, r2, r0
    b872:	023b      	lsls	r3, r7, #8
    b874:	d400      	bmi.n	b878 <__aeabi_dsub+0x130>
    b876:	e0a8      	b.n	b9ca <__aeabi_dsub+0x282>
    b878:	027a      	lsls	r2, r7, #9
    b87a:	0a56      	lsrs	r6, r2, #9
    b87c:	2e00      	cmp	r6, #0
    b87e:	d100      	bne.n	b882 <__aeabi_dsub+0x13a>
    b880:	e0ca      	b.n	ba18 <__aeabi_dsub+0x2d0>
    b882:	1c30      	adds	r0, r6, #0
    b884:	f000 fba0 	bl	bfc8 <__clzsi2>
    b888:	1c03      	adds	r3, r0, #0
    b88a:	3b08      	subs	r3, #8
    b88c:	2b1f      	cmp	r3, #31
    b88e:	dd00      	ble.n	b892 <__aeabi_dsub+0x14a>
    b890:	e0cb      	b.n	ba2a <__aeabi_dsub+0x2e2>
    b892:	2228      	movs	r2, #40	; 0x28
    b894:	1c29      	adds	r1, r5, #0
    b896:	1a12      	subs	r2, r2, r0
    b898:	40d1      	lsrs	r1, r2
    b89a:	409e      	lsls	r6, r3
    b89c:	1c0a      	adds	r2, r1, #0
    b89e:	409d      	lsls	r5, r3
    b8a0:	4332      	orrs	r2, r6
    b8a2:	429c      	cmp	r4, r3
    b8a4:	dd00      	ble.n	b8a8 <__aeabi_dsub+0x160>
    b8a6:	e0c8      	b.n	ba3a <__aeabi_dsub+0x2f2>
    b8a8:	1b1c      	subs	r4, r3, r4
    b8aa:	1c67      	adds	r7, r4, #1
    b8ac:	2f1f      	cmp	r7, #31
    b8ae:	dd00      	ble.n	b8b2 <__aeabi_dsub+0x16a>
    b8b0:	e0ed      	b.n	ba8e <__aeabi_dsub+0x346>
    b8b2:	231f      	movs	r3, #31
    b8b4:	1c29      	adds	r1, r5, #0
    b8b6:	1b1c      	subs	r4, r3, r4
    b8b8:	1c13      	adds	r3, r2, #0
    b8ba:	40a5      	lsls	r5, r4
    b8bc:	40a3      	lsls	r3, r4
    b8be:	40f9      	lsrs	r1, r7
    b8c0:	1e6c      	subs	r4, r5, #1
    b8c2:	41a5      	sbcs	r5, r4
    b8c4:	40fa      	lsrs	r2, r7
    b8c6:	4319      	orrs	r1, r3
    b8c8:	430d      	orrs	r5, r1
    b8ca:	1c17      	adds	r7, r2, #0
    b8cc:	2400      	movs	r4, #0
    b8ce:	e76d      	b.n	b7ac <__aeabi_dsub+0x64>
    b8d0:	2380      	movs	r3, #128	; 0x80
    b8d2:	2601      	movs	r6, #1
    b8d4:	4642      	mov	r2, r8
    b8d6:	041b      	lsls	r3, r3, #16
    b8d8:	403b      	ands	r3, r7
    b8da:	4016      	ands	r6, r2
    b8dc:	2b00      	cmp	r3, #0
    b8de:	d000      	beq.n	b8e2 <__aeabi_dsub+0x19a>
    b8e0:	e77b      	b.n	b7da <__aeabi_dsub+0x92>
    b8e2:	4b74      	ldr	r3, [pc, #464]	; (bab4 <__aeabi_dsub+0x36c>)
    b8e4:	08ed      	lsrs	r5, r5, #3
    b8e6:	0778      	lsls	r0, r7, #29
    b8e8:	4305      	orrs	r5, r0
    b8ea:	08fa      	lsrs	r2, r7, #3
    b8ec:	429c      	cmp	r4, r3
    b8ee:	d03b      	beq.n	b968 <__aeabi_dsub+0x220>
    b8f0:	0312      	lsls	r2, r2, #12
    b8f2:	0564      	lsls	r4, r4, #21
    b8f4:	0b12      	lsrs	r2, r2, #12
    b8f6:	0d64      	lsrs	r4, r4, #21
    b8f8:	e77e      	b.n	b7f8 <__aeabi_dsub+0xb0>
    b8fa:	1a23      	subs	r3, r4, r0
    b8fc:	469a      	mov	sl, r3
    b8fe:	2b00      	cmp	r3, #0
    b900:	dc00      	bgt.n	b904 <__aeabi_dsub+0x1bc>
    b902:	e0a5      	b.n	ba50 <__aeabi_dsub+0x308>
    b904:	2800      	cmp	r0, #0
    b906:	d044      	beq.n	b992 <__aeabi_dsub+0x24a>
    b908:	486a      	ldr	r0, [pc, #424]	; (bab4 <__aeabi_dsub+0x36c>)
    b90a:	4284      	cmp	r4, r0
    b90c:	d100      	bne.n	b910 <__aeabi_dsub+0x1c8>
    b90e:	e74d      	b.n	b7ac <__aeabi_dsub+0x64>
    b910:	2080      	movs	r0, #128	; 0x80
    b912:	0400      	lsls	r0, r0, #16
    b914:	4302      	orrs	r2, r0
    b916:	4653      	mov	r3, sl
    b918:	2b38      	cmp	r3, #56	; 0x38
    b91a:	dc00      	bgt.n	b91e <__aeabi_dsub+0x1d6>
    b91c:	e11c      	b.n	bb58 <__aeabi_dsub+0x410>
    b91e:	9b01      	ldr	r3, [sp, #4]
    b920:	431a      	orrs	r2, r3
    b922:	1e51      	subs	r1, r2, #1
    b924:	418a      	sbcs	r2, r1
    b926:	b2d1      	uxtb	r1, r2
    b928:	2200      	movs	r2, #0
    b92a:	1949      	adds	r1, r1, r5
    b92c:	42a9      	cmp	r1, r5
    b92e:	4180      	sbcs	r0, r0
    b930:	1c0d      	adds	r5, r1, #0
    b932:	19d2      	adds	r2, r2, r7
    b934:	4240      	negs	r0, r0
    b936:	1817      	adds	r7, r2, r0
    b938:	023b      	lsls	r3, r7, #8
    b93a:	d546      	bpl.n	b9ca <__aeabi_dsub+0x282>
    b93c:	4b5d      	ldr	r3, [pc, #372]	; (bab4 <__aeabi_dsub+0x36c>)
    b93e:	3401      	adds	r4, #1
    b940:	429c      	cmp	r4, r3
    b942:	d100      	bne.n	b946 <__aeabi_dsub+0x1fe>
    b944:	e169      	b.n	bc1a <__aeabi_dsub+0x4d2>
    b946:	2001      	movs	r0, #1
    b948:	4a5b      	ldr	r2, [pc, #364]	; (bab8 <__aeabi_dsub+0x370>)
    b94a:	086b      	lsrs	r3, r5, #1
    b94c:	403a      	ands	r2, r7
    b94e:	4028      	ands	r0, r5
    b950:	4318      	orrs	r0, r3
    b952:	07d5      	lsls	r5, r2, #31
    b954:	4305      	orrs	r5, r0
    b956:	0857      	lsrs	r7, r2, #1
    b958:	e728      	b.n	b7ac <__aeabi_dsub+0x64>
    b95a:	1c13      	adds	r3, r2, #0
    b95c:	9901      	ldr	r1, [sp, #4]
    b95e:	430b      	orrs	r3, r1
    b960:	d100      	bne.n	b964 <__aeabi_dsub+0x21c>
    b962:	e711      	b.n	b788 <__aeabi_dsub+0x40>
    b964:	464b      	mov	r3, r9
    b966:	e713      	b.n	b790 <__aeabi_dsub+0x48>
    b968:	1c2b      	adds	r3, r5, #0
    b96a:	4313      	orrs	r3, r2
    b96c:	d051      	beq.n	ba12 <__aeabi_dsub+0x2ca>
    b96e:	2380      	movs	r3, #128	; 0x80
    b970:	031b      	lsls	r3, r3, #12
    b972:	431a      	orrs	r2, r3
    b974:	0312      	lsls	r2, r2, #12
    b976:	0b12      	lsrs	r2, r2, #12
    b978:	e73e      	b.n	b7f8 <__aeabi_dsub+0xb0>
    b97a:	3e01      	subs	r6, #1
    b97c:	2e00      	cmp	r6, #0
    b97e:	d000      	beq.n	b982 <__aeabi_dsub+0x23a>
    b980:	e080      	b.n	ba84 <__aeabi_dsub+0x33c>
    b982:	1a69      	subs	r1, r5, r1
    b984:	428d      	cmp	r5, r1
    b986:	419b      	sbcs	r3, r3
    b988:	1aba      	subs	r2, r7, r2
    b98a:	425b      	negs	r3, r3
    b98c:	1ad7      	subs	r7, r2, r3
    b98e:	1c0d      	adds	r5, r1, #0
    b990:	e76f      	b.n	b872 <__aeabi_dsub+0x12a>
    b992:	1c10      	adds	r0, r2, #0
    b994:	9b01      	ldr	r3, [sp, #4]
    b996:	4318      	orrs	r0, r3
    b998:	d100      	bne.n	b99c <__aeabi_dsub+0x254>
    b99a:	e707      	b.n	b7ac <__aeabi_dsub+0x64>
    b99c:	2301      	movs	r3, #1
    b99e:	425b      	negs	r3, r3
    b9a0:	469c      	mov	ip, r3
    b9a2:	44e2      	add	sl, ip
    b9a4:	4653      	mov	r3, sl
    b9a6:	2b00      	cmp	r3, #0
    b9a8:	d000      	beq.n	b9ac <__aeabi_dsub+0x264>
    b9aa:	e102      	b.n	bbb2 <__aeabi_dsub+0x46a>
    b9ac:	9b01      	ldr	r3, [sp, #4]
    b9ae:	19d2      	adds	r2, r2, r7
    b9b0:	1959      	adds	r1, r3, r5
    b9b2:	42a9      	cmp	r1, r5
    b9b4:	419b      	sbcs	r3, r3
    b9b6:	425b      	negs	r3, r3
    b9b8:	18d7      	adds	r7, r2, r3
    b9ba:	1c0d      	adds	r5, r1, #0
    b9bc:	e7bc      	b.n	b938 <__aeabi_dsub+0x1f0>
    b9be:	4663      	mov	r3, ip
    b9c0:	4303      	orrs	r3, r0
    b9c2:	d100      	bne.n	b9c6 <__aeabi_dsub+0x27e>
    b9c4:	e128      	b.n	bc18 <__aeabi_dsub+0x4d0>
    b9c6:	1c07      	adds	r7, r0, #0
    b9c8:	4665      	mov	r5, ip
    b9ca:	076b      	lsls	r3, r5, #29
    b9cc:	d000      	beq.n	b9d0 <__aeabi_dsub+0x288>
    b9ce:	e6f0      	b.n	b7b2 <__aeabi_dsub+0x6a>
    b9d0:	2601      	movs	r6, #1
    b9d2:	4643      	mov	r3, r8
    b9d4:	401e      	ands	r6, r3
    b9d6:	e784      	b.n	b8e2 <__aeabi_dsub+0x19a>
    b9d8:	2e00      	cmp	r6, #0
    b9da:	d000      	beq.n	b9de <__aeabi_dsub+0x296>
    b9dc:	e081      	b.n	bae2 <__aeabi_dsub+0x39a>
    b9de:	1c60      	adds	r0, r4, #1
    b9e0:	0540      	lsls	r0, r0, #21
    b9e2:	0d40      	lsrs	r0, r0, #21
    b9e4:	2801      	cmp	r0, #1
    b9e6:	dc00      	bgt.n	b9ea <__aeabi_dsub+0x2a2>
    b9e8:	e107      	b.n	bbfa <__aeabi_dsub+0x4b2>
    b9ea:	9901      	ldr	r1, [sp, #4]
    b9ec:	1a68      	subs	r0, r5, r1
    b9ee:	4684      	mov	ip, r0
    b9f0:	4565      	cmp	r5, ip
    b9f2:	41b6      	sbcs	r6, r6
    b9f4:	1ab8      	subs	r0, r7, r2
    b9f6:	4276      	negs	r6, r6
    b9f8:	1b86      	subs	r6, r0, r6
    b9fa:	0230      	lsls	r0, r6, #8
    b9fc:	d400      	bmi.n	ba00 <__aeabi_dsub+0x2b8>
    b9fe:	e0a1      	b.n	bb44 <__aeabi_dsub+0x3fc>
    ba00:	468c      	mov	ip, r1
    ba02:	1b4d      	subs	r5, r1, r5
    ba04:	45ac      	cmp	ip, r5
    ba06:	4189      	sbcs	r1, r1
    ba08:	1bd2      	subs	r2, r2, r7
    ba0a:	4249      	negs	r1, r1
    ba0c:	1a56      	subs	r6, r2, r1
    ba0e:	4698      	mov	r8, r3
    ba10:	e734      	b.n	b87c <__aeabi_dsub+0x134>
    ba12:	2200      	movs	r2, #0
    ba14:	2500      	movs	r5, #0
    ba16:	e6ef      	b.n	b7f8 <__aeabi_dsub+0xb0>
    ba18:	1c28      	adds	r0, r5, #0
    ba1a:	f000 fad5 	bl	bfc8 <__clzsi2>
    ba1e:	3020      	adds	r0, #32
    ba20:	1c03      	adds	r3, r0, #0
    ba22:	3b08      	subs	r3, #8
    ba24:	2b1f      	cmp	r3, #31
    ba26:	dc00      	bgt.n	ba2a <__aeabi_dsub+0x2e2>
    ba28:	e733      	b.n	b892 <__aeabi_dsub+0x14a>
    ba2a:	1c02      	adds	r2, r0, #0
    ba2c:	3a28      	subs	r2, #40	; 0x28
    ba2e:	4095      	lsls	r5, r2
    ba30:	1c2a      	adds	r2, r5, #0
    ba32:	2500      	movs	r5, #0
    ba34:	429c      	cmp	r4, r3
    ba36:	dc00      	bgt.n	ba3a <__aeabi_dsub+0x2f2>
    ba38:	e736      	b.n	b8a8 <__aeabi_dsub+0x160>
    ba3a:	4f1f      	ldr	r7, [pc, #124]	; (bab8 <__aeabi_dsub+0x370>)
    ba3c:	1ae4      	subs	r4, r4, r3
    ba3e:	4017      	ands	r7, r2
    ba40:	e6b4      	b.n	b7ac <__aeabi_dsub+0x64>
    ba42:	9b01      	ldr	r3, [sp, #4]
    ba44:	431a      	orrs	r2, r3
    ba46:	1e51      	subs	r1, r2, #1
    ba48:	418a      	sbcs	r2, r1
    ba4a:	b2d3      	uxtb	r3, r2
    ba4c:	2200      	movs	r2, #0
    ba4e:	e709      	b.n	b864 <__aeabi_dsub+0x11c>
    ba50:	2b00      	cmp	r3, #0
    ba52:	d000      	beq.n	ba56 <__aeabi_dsub+0x30e>
    ba54:	e101      	b.n	bc5a <__aeabi_dsub+0x512>
    ba56:	1c60      	adds	r0, r4, #1
    ba58:	0543      	lsls	r3, r0, #21
    ba5a:	0d5b      	lsrs	r3, r3, #21
    ba5c:	2b01      	cmp	r3, #1
    ba5e:	dc00      	bgt.n	ba62 <__aeabi_dsub+0x31a>
    ba60:	e0b0      	b.n	bbc4 <__aeabi_dsub+0x47c>
    ba62:	4b14      	ldr	r3, [pc, #80]	; (bab4 <__aeabi_dsub+0x36c>)
    ba64:	4298      	cmp	r0, r3
    ba66:	d100      	bne.n	ba6a <__aeabi_dsub+0x322>
    ba68:	e11e      	b.n	bca8 <__aeabi_dsub+0x560>
    ba6a:	9b01      	ldr	r3, [sp, #4]
    ba6c:	19d2      	adds	r2, r2, r7
    ba6e:	1959      	adds	r1, r3, r5
    ba70:	42a9      	cmp	r1, r5
    ba72:	419b      	sbcs	r3, r3
    ba74:	425b      	negs	r3, r3
    ba76:	18d2      	adds	r2, r2, r3
    ba78:	0849      	lsrs	r1, r1, #1
    ba7a:	07d5      	lsls	r5, r2, #31
    ba7c:	430d      	orrs	r5, r1
    ba7e:	0857      	lsrs	r7, r2, #1
    ba80:	1c04      	adds	r4, r0, #0
    ba82:	e693      	b.n	b7ac <__aeabi_dsub+0x64>
    ba84:	4b0b      	ldr	r3, [pc, #44]	; (bab4 <__aeabi_dsub+0x36c>)
    ba86:	429c      	cmp	r4, r3
    ba88:	d000      	beq.n	ba8c <__aeabi_dsub+0x344>
    ba8a:	e6d3      	b.n	b834 <__aeabi_dsub+0xec>
    ba8c:	e68e      	b.n	b7ac <__aeabi_dsub+0x64>
    ba8e:	1c21      	adds	r1, r4, #0
    ba90:	1c13      	adds	r3, r2, #0
    ba92:	391f      	subs	r1, #31
    ba94:	40cb      	lsrs	r3, r1
    ba96:	1c19      	adds	r1, r3, #0
    ba98:	2f20      	cmp	r7, #32
    ba9a:	d100      	bne.n	ba9e <__aeabi_dsub+0x356>
    ba9c:	e08e      	b.n	bbbc <__aeabi_dsub+0x474>
    ba9e:	233f      	movs	r3, #63	; 0x3f
    baa0:	1b1c      	subs	r4, r3, r4
    baa2:	40a2      	lsls	r2, r4
    baa4:	4315      	orrs	r5, r2
    baa6:	1e6a      	subs	r2, r5, #1
    baa8:	4195      	sbcs	r5, r2
    baaa:	2700      	movs	r7, #0
    baac:	430d      	orrs	r5, r1
    baae:	2400      	movs	r4, #0
    bab0:	e78b      	b.n	b9ca <__aeabi_dsub+0x282>
    bab2:	46c0      	nop			; (mov r8, r8)
    bab4:	000007ff 	.word	0x000007ff
    bab8:	ff7fffff 	.word	0xff7fffff
    babc:	800fffff 	.word	0x800fffff
    bac0:	1c33      	adds	r3, r6, #0
    bac2:	1c10      	adds	r0, r2, #0
    bac4:	3b20      	subs	r3, #32
    bac6:	40d8      	lsrs	r0, r3
    bac8:	2e20      	cmp	r6, #32
    baca:	d079      	beq.n	bbc0 <__aeabi_dsub+0x478>
    bacc:	2340      	movs	r3, #64	; 0x40
    bace:	1b9b      	subs	r3, r3, r6
    bad0:	409a      	lsls	r2, r3
    bad2:	1c13      	adds	r3, r2, #0
    bad4:	9a01      	ldr	r2, [sp, #4]
    bad6:	4313      	orrs	r3, r2
    bad8:	1e59      	subs	r1, r3, #1
    bada:	418b      	sbcs	r3, r1
    badc:	2200      	movs	r2, #0
    bade:	4303      	orrs	r3, r0
    bae0:	e6c0      	b.n	b864 <__aeabi_dsub+0x11c>
    bae2:	2c00      	cmp	r4, #0
    bae4:	d053      	beq.n	bb8e <__aeabi_dsub+0x446>
    bae6:	4cc7      	ldr	r4, [pc, #796]	; (be04 <__aeabi_dsub+0x6bc>)
    bae8:	42a0      	cmp	r0, r4
    baea:	d100      	bne.n	baee <__aeabi_dsub+0x3a6>
    baec:	e0b0      	b.n	bc50 <__aeabi_dsub+0x508>
    baee:	2480      	movs	r4, #128	; 0x80
    baf0:	4271      	negs	r1, r6
    baf2:	4689      	mov	r9, r1
    baf4:	0424      	lsls	r4, r4, #16
    baf6:	4327      	orrs	r7, r4
    baf8:	4649      	mov	r1, r9
    bafa:	2938      	cmp	r1, #56	; 0x38
    bafc:	dd00      	ble.n	bb00 <__aeabi_dsub+0x3b8>
    bafe:	e0cd      	b.n	bc9c <__aeabi_dsub+0x554>
    bb00:	291f      	cmp	r1, #31
    bb02:	dd00      	ble.n	bb06 <__aeabi_dsub+0x3be>
    bb04:	e159      	b.n	bdba <__aeabi_dsub+0x672>
    bb06:	2420      	movs	r4, #32
    bb08:	1c3e      	adds	r6, r7, #0
    bb0a:	1a61      	subs	r1, r4, r1
    bb0c:	408e      	lsls	r6, r1
    bb0e:	468a      	mov	sl, r1
    bb10:	46b0      	mov	r8, r6
    bb12:	4649      	mov	r1, r9
    bb14:	1c2e      	adds	r6, r5, #0
    bb16:	40ce      	lsrs	r6, r1
    bb18:	4651      	mov	r1, sl
    bb1a:	46b4      	mov	ip, r6
    bb1c:	408d      	lsls	r5, r1
    bb1e:	4664      	mov	r4, ip
    bb20:	4646      	mov	r6, r8
    bb22:	4649      	mov	r1, r9
    bb24:	4326      	orrs	r6, r4
    bb26:	1e6c      	subs	r4, r5, #1
    bb28:	41a5      	sbcs	r5, r4
    bb2a:	40cf      	lsrs	r7, r1
    bb2c:	4335      	orrs	r5, r6
    bb2e:	9901      	ldr	r1, [sp, #4]
    bb30:	1bd7      	subs	r7, r2, r7
    bb32:	468c      	mov	ip, r1
    bb34:	1b4d      	subs	r5, r1, r5
    bb36:	45ac      	cmp	ip, r5
    bb38:	4192      	sbcs	r2, r2
    bb3a:	4252      	negs	r2, r2
    bb3c:	1abf      	subs	r7, r7, r2
    bb3e:	1c04      	adds	r4, r0, #0
    bb40:	4698      	mov	r8, r3
    bb42:	e696      	b.n	b872 <__aeabi_dsub+0x12a>
    bb44:	4663      	mov	r3, ip
    bb46:	4665      	mov	r5, ip
    bb48:	4333      	orrs	r3, r6
    bb4a:	d000      	beq.n	bb4e <__aeabi_dsub+0x406>
    bb4c:	e696      	b.n	b87c <__aeabi_dsub+0x134>
    bb4e:	2600      	movs	r6, #0
    bb50:	2700      	movs	r7, #0
    bb52:	2400      	movs	r4, #0
    bb54:	2500      	movs	r5, #0
    bb56:	e6c4      	b.n	b8e2 <__aeabi_dsub+0x19a>
    bb58:	2b1f      	cmp	r3, #31
    bb5a:	dc61      	bgt.n	bc20 <__aeabi_dsub+0x4d8>
    bb5c:	2020      	movs	r0, #32
    bb5e:	1ac3      	subs	r3, r0, r3
    bb60:	469b      	mov	fp, r3
    bb62:	1c13      	adds	r3, r2, #0
    bb64:	4659      	mov	r1, fp
    bb66:	408b      	lsls	r3, r1
    bb68:	4651      	mov	r1, sl
    bb6a:	4699      	mov	r9, r3
    bb6c:	9b01      	ldr	r3, [sp, #4]
    bb6e:	40cb      	lsrs	r3, r1
    bb70:	469c      	mov	ip, r3
    bb72:	464b      	mov	r3, r9
    bb74:	4660      	mov	r0, ip
    bb76:	4303      	orrs	r3, r0
    bb78:	469c      	mov	ip, r3
    bb7a:	465b      	mov	r3, fp
    bb7c:	9901      	ldr	r1, [sp, #4]
    bb7e:	4099      	lsls	r1, r3
    bb80:	4663      	mov	r3, ip
    bb82:	1e48      	subs	r0, r1, #1
    bb84:	4181      	sbcs	r1, r0
    bb86:	4319      	orrs	r1, r3
    bb88:	4653      	mov	r3, sl
    bb8a:	40da      	lsrs	r2, r3
    bb8c:	e6cd      	b.n	b92a <__aeabi_dsub+0x1e2>
    bb8e:	1c3c      	adds	r4, r7, #0
    bb90:	432c      	orrs	r4, r5
    bb92:	d05d      	beq.n	bc50 <__aeabi_dsub+0x508>
    bb94:	43f1      	mvns	r1, r6
    bb96:	4689      	mov	r9, r1
    bb98:	2900      	cmp	r1, #0
    bb9a:	d155      	bne.n	bc48 <__aeabi_dsub+0x500>
    bb9c:	9901      	ldr	r1, [sp, #4]
    bb9e:	1bd2      	subs	r2, r2, r7
    bba0:	468c      	mov	ip, r1
    bba2:	1b4d      	subs	r5, r1, r5
    bba4:	45ac      	cmp	ip, r5
    bba6:	4189      	sbcs	r1, r1
    bba8:	4249      	negs	r1, r1
    bbaa:	1a57      	subs	r7, r2, r1
    bbac:	1c04      	adds	r4, r0, #0
    bbae:	4698      	mov	r8, r3
    bbb0:	e65f      	b.n	b872 <__aeabi_dsub+0x12a>
    bbb2:	4894      	ldr	r0, [pc, #592]	; (be04 <__aeabi_dsub+0x6bc>)
    bbb4:	4284      	cmp	r4, r0
    bbb6:	d000      	beq.n	bbba <__aeabi_dsub+0x472>
    bbb8:	e6ad      	b.n	b916 <__aeabi_dsub+0x1ce>
    bbba:	e5f7      	b.n	b7ac <__aeabi_dsub+0x64>
    bbbc:	2200      	movs	r2, #0
    bbbe:	e771      	b.n	baa4 <__aeabi_dsub+0x35c>
    bbc0:	2300      	movs	r3, #0
    bbc2:	e787      	b.n	bad4 <__aeabi_dsub+0x38c>
    bbc4:	1c3b      	adds	r3, r7, #0
    bbc6:	432b      	orrs	r3, r5
    bbc8:	2c00      	cmp	r4, #0
    bbca:	d000      	beq.n	bbce <__aeabi_dsub+0x486>
    bbcc:	e0da      	b.n	bd84 <__aeabi_dsub+0x63c>
    bbce:	2b00      	cmp	r3, #0
    bbd0:	d100      	bne.n	bbd4 <__aeabi_dsub+0x48c>
    bbd2:	e113      	b.n	bdfc <__aeabi_dsub+0x6b4>
    bbd4:	1c13      	adds	r3, r2, #0
    bbd6:	9901      	ldr	r1, [sp, #4]
    bbd8:	430b      	orrs	r3, r1
    bbda:	d100      	bne.n	bbde <__aeabi_dsub+0x496>
    bbdc:	e5e6      	b.n	b7ac <__aeabi_dsub+0x64>
    bbde:	1949      	adds	r1, r1, r5
    bbe0:	42a9      	cmp	r1, r5
    bbe2:	419b      	sbcs	r3, r3
    bbe4:	19d2      	adds	r2, r2, r7
    bbe6:	425b      	negs	r3, r3
    bbe8:	18d7      	adds	r7, r2, r3
    bbea:	023b      	lsls	r3, r7, #8
    bbec:	d400      	bmi.n	bbf0 <__aeabi_dsub+0x4a8>
    bbee:	e121      	b.n	be34 <__aeabi_dsub+0x6ec>
    bbf0:	4b85      	ldr	r3, [pc, #532]	; (be08 <__aeabi_dsub+0x6c0>)
    bbf2:	1c0d      	adds	r5, r1, #0
    bbf4:	401f      	ands	r7, r3
    bbf6:	1c04      	adds	r4, r0, #0
    bbf8:	e5d8      	b.n	b7ac <__aeabi_dsub+0x64>
    bbfa:	1c38      	adds	r0, r7, #0
    bbfc:	4328      	orrs	r0, r5
    bbfe:	2c00      	cmp	r4, #0
    bc00:	d140      	bne.n	bc84 <__aeabi_dsub+0x53c>
    bc02:	2800      	cmp	r0, #0
    bc04:	d000      	beq.n	bc08 <__aeabi_dsub+0x4c0>
    bc06:	e083      	b.n	bd10 <__aeabi_dsub+0x5c8>
    bc08:	1c10      	adds	r0, r2, #0
    bc0a:	9901      	ldr	r1, [sp, #4]
    bc0c:	4308      	orrs	r0, r1
    bc0e:	d003      	beq.n	bc18 <__aeabi_dsub+0x4d0>
    bc10:	1c17      	adds	r7, r2, #0
    bc12:	1c0d      	adds	r5, r1, #0
    bc14:	4698      	mov	r8, r3
    bc16:	e5c9      	b.n	b7ac <__aeabi_dsub+0x64>
    bc18:	2600      	movs	r6, #0
    bc1a:	2700      	movs	r7, #0
    bc1c:	2500      	movs	r5, #0
    bc1e:	e660      	b.n	b8e2 <__aeabi_dsub+0x19a>
    bc20:	4650      	mov	r0, sl
    bc22:	1c13      	adds	r3, r2, #0
    bc24:	3820      	subs	r0, #32
    bc26:	40c3      	lsrs	r3, r0
    bc28:	1c18      	adds	r0, r3, #0
    bc2a:	4653      	mov	r3, sl
    bc2c:	2b20      	cmp	r3, #32
    bc2e:	d100      	bne.n	bc32 <__aeabi_dsub+0x4ea>
    bc30:	e0c1      	b.n	bdb6 <__aeabi_dsub+0x66e>
    bc32:	2340      	movs	r3, #64	; 0x40
    bc34:	4651      	mov	r1, sl
    bc36:	1a5b      	subs	r3, r3, r1
    bc38:	409a      	lsls	r2, r3
    bc3a:	9901      	ldr	r1, [sp, #4]
    bc3c:	4311      	orrs	r1, r2
    bc3e:	1e4a      	subs	r2, r1, #1
    bc40:	4191      	sbcs	r1, r2
    bc42:	2200      	movs	r2, #0
    bc44:	4301      	orrs	r1, r0
    bc46:	e670      	b.n	b92a <__aeabi_dsub+0x1e2>
    bc48:	4c6e      	ldr	r4, [pc, #440]	; (be04 <__aeabi_dsub+0x6bc>)
    bc4a:	42a0      	cmp	r0, r4
    bc4c:	d000      	beq.n	bc50 <__aeabi_dsub+0x508>
    bc4e:	e753      	b.n	baf8 <__aeabi_dsub+0x3b0>
    bc50:	1c17      	adds	r7, r2, #0
    bc52:	9d01      	ldr	r5, [sp, #4]
    bc54:	1c04      	adds	r4, r0, #0
    bc56:	4698      	mov	r8, r3
    bc58:	e5a8      	b.n	b7ac <__aeabi_dsub+0x64>
    bc5a:	2c00      	cmp	r4, #0
    bc5c:	d128      	bne.n	bcb0 <__aeabi_dsub+0x568>
    bc5e:	1c3c      	adds	r4, r7, #0
    bc60:	432c      	orrs	r4, r5
    bc62:	d100      	bne.n	bc66 <__aeabi_dsub+0x51e>
    bc64:	e08a      	b.n	bd7c <__aeabi_dsub+0x634>
    bc66:	43db      	mvns	r3, r3
    bc68:	469a      	mov	sl, r3
    bc6a:	2b00      	cmp	r3, #0
    bc6c:	d000      	beq.n	bc70 <__aeabi_dsub+0x528>
    bc6e:	e082      	b.n	bd76 <__aeabi_dsub+0x62e>
    bc70:	9b01      	ldr	r3, [sp, #4]
    bc72:	19d2      	adds	r2, r2, r7
    bc74:	469c      	mov	ip, r3
    bc76:	4465      	add	r5, ip
    bc78:	429d      	cmp	r5, r3
    bc7a:	4189      	sbcs	r1, r1
    bc7c:	4249      	negs	r1, r1
    bc7e:	1857      	adds	r7, r2, r1
    bc80:	1c04      	adds	r4, r0, #0
    bc82:	e659      	b.n	b938 <__aeabi_dsub+0x1f0>
    bc84:	2800      	cmp	r0, #0
    bc86:	d15b      	bne.n	bd40 <__aeabi_dsub+0x5f8>
    bc88:	1c10      	adds	r0, r2, #0
    bc8a:	9901      	ldr	r1, [sp, #4]
    bc8c:	4308      	orrs	r0, r1
    bc8e:	d100      	bne.n	bc92 <__aeabi_dsub+0x54a>
    bc90:	e0a4      	b.n	bddc <__aeabi_dsub+0x694>
    bc92:	1c17      	adds	r7, r2, #0
    bc94:	1c0d      	adds	r5, r1, #0
    bc96:	4698      	mov	r8, r3
    bc98:	4c5a      	ldr	r4, [pc, #360]	; (be04 <__aeabi_dsub+0x6bc>)
    bc9a:	e587      	b.n	b7ac <__aeabi_dsub+0x64>
    bc9c:	433d      	orrs	r5, r7
    bc9e:	1e6f      	subs	r7, r5, #1
    bca0:	41bd      	sbcs	r5, r7
    bca2:	2700      	movs	r7, #0
    bca4:	b2ed      	uxtb	r5, r5
    bca6:	e742      	b.n	bb2e <__aeabi_dsub+0x3e6>
    bca8:	1c04      	adds	r4, r0, #0
    bcaa:	2700      	movs	r7, #0
    bcac:	2500      	movs	r5, #0
    bcae:	e618      	b.n	b8e2 <__aeabi_dsub+0x19a>
    bcb0:	4c54      	ldr	r4, [pc, #336]	; (be04 <__aeabi_dsub+0x6bc>)
    bcb2:	42a0      	cmp	r0, r4
    bcb4:	d062      	beq.n	bd7c <__aeabi_dsub+0x634>
    bcb6:	4653      	mov	r3, sl
    bcb8:	2480      	movs	r4, #128	; 0x80
    bcba:	425b      	negs	r3, r3
    bcbc:	469a      	mov	sl, r3
    bcbe:	0424      	lsls	r4, r4, #16
    bcc0:	4327      	orrs	r7, r4
    bcc2:	4653      	mov	r3, sl
    bcc4:	2b38      	cmp	r3, #56	; 0x38
    bcc6:	dd00      	ble.n	bcca <__aeabi_dsub+0x582>
    bcc8:	e08e      	b.n	bde8 <__aeabi_dsub+0x6a0>
    bcca:	2b1f      	cmp	r3, #31
    bccc:	dd00      	ble.n	bcd0 <__aeabi_dsub+0x588>
    bcce:	e09d      	b.n	be0c <__aeabi_dsub+0x6c4>
    bcd0:	2420      	movs	r4, #32
    bcd2:	1ae3      	subs	r3, r4, r3
    bcd4:	469b      	mov	fp, r3
    bcd6:	1c3b      	adds	r3, r7, #0
    bcd8:	4659      	mov	r1, fp
    bcda:	408b      	lsls	r3, r1
    bcdc:	4651      	mov	r1, sl
    bcde:	4699      	mov	r9, r3
    bce0:	1c2b      	adds	r3, r5, #0
    bce2:	40cb      	lsrs	r3, r1
    bce4:	469c      	mov	ip, r3
    bce6:	464b      	mov	r3, r9
    bce8:	4664      	mov	r4, ip
    bcea:	4323      	orrs	r3, r4
    bcec:	469c      	mov	ip, r3
    bcee:	465b      	mov	r3, fp
    bcf0:	409d      	lsls	r5, r3
    bcf2:	4663      	mov	r3, ip
    bcf4:	1e6c      	subs	r4, r5, #1
    bcf6:	41a5      	sbcs	r5, r4
    bcf8:	40cf      	lsrs	r7, r1
    bcfa:	431d      	orrs	r5, r3
    bcfc:	9b01      	ldr	r3, [sp, #4]
    bcfe:	18bf      	adds	r7, r7, r2
    bd00:	469c      	mov	ip, r3
    bd02:	4465      	add	r5, ip
    bd04:	429d      	cmp	r5, r3
    bd06:	4192      	sbcs	r2, r2
    bd08:	4252      	negs	r2, r2
    bd0a:	18bf      	adds	r7, r7, r2
    bd0c:	1c04      	adds	r4, r0, #0
    bd0e:	e613      	b.n	b938 <__aeabi_dsub+0x1f0>
    bd10:	1c10      	adds	r0, r2, #0
    bd12:	9901      	ldr	r1, [sp, #4]
    bd14:	4308      	orrs	r0, r1
    bd16:	d100      	bne.n	bd1a <__aeabi_dsub+0x5d2>
    bd18:	e548      	b.n	b7ac <__aeabi_dsub+0x64>
    bd1a:	1a68      	subs	r0, r5, r1
    bd1c:	4684      	mov	ip, r0
    bd1e:	4285      	cmp	r5, r0
    bd20:	4180      	sbcs	r0, r0
    bd22:	1abe      	subs	r6, r7, r2
    bd24:	4240      	negs	r0, r0
    bd26:	1a30      	subs	r0, r6, r0
    bd28:	0206      	lsls	r6, r0, #8
    bd2a:	d400      	bmi.n	bd2e <__aeabi_dsub+0x5e6>
    bd2c:	e647      	b.n	b9be <__aeabi_dsub+0x276>
    bd2e:	468c      	mov	ip, r1
    bd30:	1b4d      	subs	r5, r1, r5
    bd32:	45ac      	cmp	ip, r5
    bd34:	4189      	sbcs	r1, r1
    bd36:	1bd2      	subs	r2, r2, r7
    bd38:	4249      	negs	r1, r1
    bd3a:	1a57      	subs	r7, r2, r1
    bd3c:	4698      	mov	r8, r3
    bd3e:	e535      	b.n	b7ac <__aeabi_dsub+0x64>
    bd40:	1c10      	adds	r0, r2, #0
    bd42:	9901      	ldr	r1, [sp, #4]
    bd44:	4308      	orrs	r0, r1
    bd46:	d034      	beq.n	bdb2 <__aeabi_dsub+0x66a>
    bd48:	2480      	movs	r4, #128	; 0x80
    bd4a:	0778      	lsls	r0, r7, #29
    bd4c:	08ed      	lsrs	r5, r5, #3
    bd4e:	08ff      	lsrs	r7, r7, #3
    bd50:	0324      	lsls	r4, r4, #12
    bd52:	4328      	orrs	r0, r5
    bd54:	4227      	tst	r7, r4
    bd56:	d008      	beq.n	bd6a <__aeabi_dsub+0x622>
    bd58:	08d6      	lsrs	r6, r2, #3
    bd5a:	4226      	tst	r6, r4
    bd5c:	d105      	bne.n	bd6a <__aeabi_dsub+0x622>
    bd5e:	08c9      	lsrs	r1, r1, #3
    bd60:	0752      	lsls	r2, r2, #29
    bd62:	430a      	orrs	r2, r1
    bd64:	1c10      	adds	r0, r2, #0
    bd66:	1c37      	adds	r7, r6, #0
    bd68:	4698      	mov	r8, r3
    bd6a:	00ff      	lsls	r7, r7, #3
    bd6c:	0f42      	lsrs	r2, r0, #29
    bd6e:	4317      	orrs	r7, r2
    bd70:	00c5      	lsls	r5, r0, #3
    bd72:	4c24      	ldr	r4, [pc, #144]	; (be04 <__aeabi_dsub+0x6bc>)
    bd74:	e51a      	b.n	b7ac <__aeabi_dsub+0x64>
    bd76:	4c23      	ldr	r4, [pc, #140]	; (be04 <__aeabi_dsub+0x6bc>)
    bd78:	42a0      	cmp	r0, r4
    bd7a:	d1a2      	bne.n	bcc2 <__aeabi_dsub+0x57a>
    bd7c:	1c17      	adds	r7, r2, #0
    bd7e:	9d01      	ldr	r5, [sp, #4]
    bd80:	1c04      	adds	r4, r0, #0
    bd82:	e513      	b.n	b7ac <__aeabi_dsub+0x64>
    bd84:	2b00      	cmp	r3, #0
    bd86:	d035      	beq.n	bdf4 <__aeabi_dsub+0x6ac>
    bd88:	1c13      	adds	r3, r2, #0
    bd8a:	9901      	ldr	r1, [sp, #4]
    bd8c:	430b      	orrs	r3, r1
    bd8e:	d010      	beq.n	bdb2 <__aeabi_dsub+0x66a>
    bd90:	2480      	movs	r4, #128	; 0x80
    bd92:	0778      	lsls	r0, r7, #29
    bd94:	08ed      	lsrs	r5, r5, #3
    bd96:	08ff      	lsrs	r7, r7, #3
    bd98:	0324      	lsls	r4, r4, #12
    bd9a:	4328      	orrs	r0, r5
    bd9c:	4227      	tst	r7, r4
    bd9e:	d0e4      	beq.n	bd6a <__aeabi_dsub+0x622>
    bda0:	08d3      	lsrs	r3, r2, #3
    bda2:	4223      	tst	r3, r4
    bda4:	d1e1      	bne.n	bd6a <__aeabi_dsub+0x622>
    bda6:	08c9      	lsrs	r1, r1, #3
    bda8:	0752      	lsls	r2, r2, #29
    bdaa:	430a      	orrs	r2, r1
    bdac:	1c10      	adds	r0, r2, #0
    bdae:	1c1f      	adds	r7, r3, #0
    bdb0:	e7db      	b.n	bd6a <__aeabi_dsub+0x622>
    bdb2:	4c14      	ldr	r4, [pc, #80]	; (be04 <__aeabi_dsub+0x6bc>)
    bdb4:	e4fa      	b.n	b7ac <__aeabi_dsub+0x64>
    bdb6:	2200      	movs	r2, #0
    bdb8:	e73f      	b.n	bc3a <__aeabi_dsub+0x4f2>
    bdba:	464c      	mov	r4, r9
    bdbc:	1c3e      	adds	r6, r7, #0
    bdbe:	3c20      	subs	r4, #32
    bdc0:	40e6      	lsrs	r6, r4
    bdc2:	4649      	mov	r1, r9
    bdc4:	1c34      	adds	r4, r6, #0
    bdc6:	2920      	cmp	r1, #32
    bdc8:	d032      	beq.n	be30 <__aeabi_dsub+0x6e8>
    bdca:	2640      	movs	r6, #64	; 0x40
    bdcc:	1a76      	subs	r6, r6, r1
    bdce:	40b7      	lsls	r7, r6
    bdd0:	433d      	orrs	r5, r7
    bdd2:	1e6f      	subs	r7, r5, #1
    bdd4:	41bd      	sbcs	r5, r7
    bdd6:	2700      	movs	r7, #0
    bdd8:	4325      	orrs	r5, r4
    bdda:	e6a8      	b.n	bb2e <__aeabi_dsub+0x3e6>
    bddc:	2780      	movs	r7, #128	; 0x80
    bdde:	2600      	movs	r6, #0
    bde0:	03ff      	lsls	r7, r7, #15
    bde2:	4c08      	ldr	r4, [pc, #32]	; (be04 <__aeabi_dsub+0x6bc>)
    bde4:	2500      	movs	r5, #0
    bde6:	e57c      	b.n	b8e2 <__aeabi_dsub+0x19a>
    bde8:	433d      	orrs	r5, r7
    bdea:	1e6f      	subs	r7, r5, #1
    bdec:	41bd      	sbcs	r5, r7
    bdee:	2700      	movs	r7, #0
    bdf0:	b2ed      	uxtb	r5, r5
    bdf2:	e783      	b.n	bcfc <__aeabi_dsub+0x5b4>
    bdf4:	1c17      	adds	r7, r2, #0
    bdf6:	9d01      	ldr	r5, [sp, #4]
    bdf8:	4c02      	ldr	r4, [pc, #8]	; (be04 <__aeabi_dsub+0x6bc>)
    bdfa:	e4d7      	b.n	b7ac <__aeabi_dsub+0x64>
    bdfc:	1c17      	adds	r7, r2, #0
    bdfe:	9d01      	ldr	r5, [sp, #4]
    be00:	e4d4      	b.n	b7ac <__aeabi_dsub+0x64>
    be02:	46c0      	nop			; (mov r8, r8)
    be04:	000007ff 	.word	0x000007ff
    be08:	ff7fffff 	.word	0xff7fffff
    be0c:	4654      	mov	r4, sl
    be0e:	1c3b      	adds	r3, r7, #0
    be10:	3c20      	subs	r4, #32
    be12:	40e3      	lsrs	r3, r4
    be14:	1c1c      	adds	r4, r3, #0
    be16:	4653      	mov	r3, sl
    be18:	2b20      	cmp	r3, #32
    be1a:	d00d      	beq.n	be38 <__aeabi_dsub+0x6f0>
    be1c:	2340      	movs	r3, #64	; 0x40
    be1e:	4651      	mov	r1, sl
    be20:	1a5b      	subs	r3, r3, r1
    be22:	409f      	lsls	r7, r3
    be24:	433d      	orrs	r5, r7
    be26:	1e6f      	subs	r7, r5, #1
    be28:	41bd      	sbcs	r5, r7
    be2a:	2700      	movs	r7, #0
    be2c:	4325      	orrs	r5, r4
    be2e:	e765      	b.n	bcfc <__aeabi_dsub+0x5b4>
    be30:	2700      	movs	r7, #0
    be32:	e7cd      	b.n	bdd0 <__aeabi_dsub+0x688>
    be34:	1c0d      	adds	r5, r1, #0
    be36:	e5c8      	b.n	b9ca <__aeabi_dsub+0x282>
    be38:	2700      	movs	r7, #0
    be3a:	e7f3      	b.n	be24 <__aeabi_dsub+0x6dc>

0000be3c <__aeabi_d2iz>:
    be3c:	030b      	lsls	r3, r1, #12
    be3e:	b530      	push	{r4, r5, lr}
    be40:	4c13      	ldr	r4, [pc, #76]	; (be90 <__aeabi_d2iz+0x54>)
    be42:	0b1a      	lsrs	r2, r3, #12
    be44:	004b      	lsls	r3, r1, #1
    be46:	1c05      	adds	r5, r0, #0
    be48:	0d5b      	lsrs	r3, r3, #21
    be4a:	0fc9      	lsrs	r1, r1, #31
    be4c:	2000      	movs	r0, #0
    be4e:	42a3      	cmp	r3, r4
    be50:	dd10      	ble.n	be74 <__aeabi_d2iz+0x38>
    be52:	4810      	ldr	r0, [pc, #64]	; (be94 <__aeabi_d2iz+0x58>)
    be54:	4283      	cmp	r3, r0
    be56:	dc0e      	bgt.n	be76 <__aeabi_d2iz+0x3a>
    be58:	2080      	movs	r0, #128	; 0x80
    be5a:	4c0f      	ldr	r4, [pc, #60]	; (be98 <__aeabi_d2iz+0x5c>)
    be5c:	0340      	lsls	r0, r0, #13
    be5e:	4302      	orrs	r2, r0
    be60:	1ae4      	subs	r4, r4, r3
    be62:	2c1f      	cmp	r4, #31
    be64:	dd0a      	ble.n	be7c <__aeabi_d2iz+0x40>
    be66:	480d      	ldr	r0, [pc, #52]	; (be9c <__aeabi_d2iz+0x60>)
    be68:	1ac3      	subs	r3, r0, r3
    be6a:	40da      	lsrs	r2, r3
    be6c:	1c13      	adds	r3, r2, #0
    be6e:	4248      	negs	r0, r1
    be70:	4043      	eors	r3, r0
    be72:	1858      	adds	r0, r3, r1
    be74:	bd30      	pop	{r4, r5, pc}
    be76:	4b0a      	ldr	r3, [pc, #40]	; (bea0 <__aeabi_d2iz+0x64>)
    be78:	18c8      	adds	r0, r1, r3
    be7a:	e7fb      	b.n	be74 <__aeabi_d2iz+0x38>
    be7c:	1c28      	adds	r0, r5, #0
    be7e:	40e0      	lsrs	r0, r4
    be80:	4c08      	ldr	r4, [pc, #32]	; (bea4 <__aeabi_d2iz+0x68>)
    be82:	46a4      	mov	ip, r4
    be84:	4463      	add	r3, ip
    be86:	409a      	lsls	r2, r3
    be88:	1c13      	adds	r3, r2, #0
    be8a:	4303      	orrs	r3, r0
    be8c:	e7ef      	b.n	be6e <__aeabi_d2iz+0x32>
    be8e:	46c0      	nop			; (mov r8, r8)
    be90:	000003fe 	.word	0x000003fe
    be94:	0000041d 	.word	0x0000041d
    be98:	00000433 	.word	0x00000433
    be9c:	00000413 	.word	0x00000413
    bea0:	7fffffff 	.word	0x7fffffff
    bea4:	fffffbed 	.word	0xfffffbed

0000bea8 <__aeabi_i2d>:
    bea8:	b538      	push	{r3, r4, r5, lr}
    beaa:	1e04      	subs	r4, r0, #0
    beac:	d016      	beq.n	bedc <__aeabi_i2d+0x34>
    beae:	0fc5      	lsrs	r5, r0, #31
    beb0:	d000      	beq.n	beb4 <__aeabi_i2d+0xc>
    beb2:	4244      	negs	r4, r0
    beb4:	1c20      	adds	r0, r4, #0
    beb6:	f000 f887 	bl	bfc8 <__clzsi2>
    beba:	4b17      	ldr	r3, [pc, #92]	; (bf18 <__aeabi_i2d+0x70>)
    bebc:	1a1b      	subs	r3, r3, r0
    bebe:	280a      	cmp	r0, #10
    bec0:	dc21      	bgt.n	bf06 <__aeabi_i2d+0x5e>
    bec2:	1c02      	adds	r2, r0, #0
    bec4:	1c21      	adds	r1, r4, #0
    bec6:	3215      	adds	r2, #21
    bec8:	4091      	lsls	r1, r2
    beca:	1c0a      	adds	r2, r1, #0
    becc:	210b      	movs	r1, #11
    bece:	1a08      	subs	r0, r1, r0
    bed0:	40c4      	lsrs	r4, r0
    bed2:	055b      	lsls	r3, r3, #21
    bed4:	0324      	lsls	r4, r4, #12
    bed6:	0b24      	lsrs	r4, r4, #12
    bed8:	0d5b      	lsrs	r3, r3, #21
    beda:	e003      	b.n	bee4 <__aeabi_i2d+0x3c>
    bedc:	2500      	movs	r5, #0
    bede:	2300      	movs	r3, #0
    bee0:	2400      	movs	r4, #0
    bee2:	2200      	movs	r2, #0
    bee4:	2100      	movs	r1, #0
    bee6:	1c10      	adds	r0, r2, #0
    bee8:	0324      	lsls	r4, r4, #12
    beea:	0d0a      	lsrs	r2, r1, #20
    beec:	0512      	lsls	r2, r2, #20
    beee:	0b24      	lsrs	r4, r4, #12
    bef0:	4314      	orrs	r4, r2
    bef2:	4a0a      	ldr	r2, [pc, #40]	; (bf1c <__aeabi_i2d+0x74>)
    bef4:	051b      	lsls	r3, r3, #20
    bef6:	4014      	ands	r4, r2
    bef8:	431c      	orrs	r4, r3
    befa:	0064      	lsls	r4, r4, #1
    befc:	07ed      	lsls	r5, r5, #31
    befe:	0864      	lsrs	r4, r4, #1
    bf00:	432c      	orrs	r4, r5
    bf02:	1c21      	adds	r1, r4, #0
    bf04:	bd38      	pop	{r3, r4, r5, pc}
    bf06:	380b      	subs	r0, #11
    bf08:	4084      	lsls	r4, r0
    bf0a:	055b      	lsls	r3, r3, #21
    bf0c:	0324      	lsls	r4, r4, #12
    bf0e:	0b24      	lsrs	r4, r4, #12
    bf10:	0d5b      	lsrs	r3, r3, #21
    bf12:	2200      	movs	r2, #0
    bf14:	e7e6      	b.n	bee4 <__aeabi_i2d+0x3c>
    bf16:	46c0      	nop			; (mov r8, r8)
    bf18:	0000041e 	.word	0x0000041e
    bf1c:	800fffff 	.word	0x800fffff

0000bf20 <__aeabi_f2d>:
    bf20:	0042      	lsls	r2, r0, #1
    bf22:	0e12      	lsrs	r2, r2, #24
    bf24:	1c51      	adds	r1, r2, #1
    bf26:	b538      	push	{r3, r4, r5, lr}
    bf28:	b2c9      	uxtb	r1, r1
    bf2a:	0243      	lsls	r3, r0, #9
    bf2c:	0a5d      	lsrs	r5, r3, #9
    bf2e:	0fc4      	lsrs	r4, r0, #31
    bf30:	2901      	cmp	r1, #1
    bf32:	dd15      	ble.n	bf60 <__aeabi_f2d+0x40>
    bf34:	21e0      	movs	r1, #224	; 0xe0
    bf36:	0089      	lsls	r1, r1, #2
    bf38:	468c      	mov	ip, r1
    bf3a:	076d      	lsls	r5, r5, #29
    bf3c:	0b1b      	lsrs	r3, r3, #12
    bf3e:	4462      	add	r2, ip
    bf40:	2100      	movs	r1, #0
    bf42:	1c28      	adds	r0, r5, #0
    bf44:	0d0d      	lsrs	r5, r1, #20
    bf46:	052d      	lsls	r5, r5, #20
    bf48:	432b      	orrs	r3, r5
    bf4a:	4d1c      	ldr	r5, [pc, #112]	; (bfbc <__aeabi_f2d+0x9c>)
    bf4c:	0552      	lsls	r2, r2, #21
    bf4e:	402b      	ands	r3, r5
    bf50:	0852      	lsrs	r2, r2, #1
    bf52:	4313      	orrs	r3, r2
    bf54:	005b      	lsls	r3, r3, #1
    bf56:	07e4      	lsls	r4, r4, #31
    bf58:	085b      	lsrs	r3, r3, #1
    bf5a:	4323      	orrs	r3, r4
    bf5c:	1c19      	adds	r1, r3, #0
    bf5e:	bd38      	pop	{r3, r4, r5, pc}
    bf60:	2a00      	cmp	r2, #0
    bf62:	d115      	bne.n	bf90 <__aeabi_f2d+0x70>
    bf64:	2d00      	cmp	r5, #0
    bf66:	d01f      	beq.n	bfa8 <__aeabi_f2d+0x88>
    bf68:	1c28      	adds	r0, r5, #0
    bf6a:	f000 f82d 	bl	bfc8 <__clzsi2>
    bf6e:	280a      	cmp	r0, #10
    bf70:	dc1d      	bgt.n	bfae <__aeabi_f2d+0x8e>
    bf72:	230b      	movs	r3, #11
    bf74:	1c2a      	adds	r2, r5, #0
    bf76:	1a1b      	subs	r3, r3, r0
    bf78:	40da      	lsrs	r2, r3
    bf7a:	1c13      	adds	r3, r2, #0
    bf7c:	1c02      	adds	r2, r0, #0
    bf7e:	3215      	adds	r2, #21
    bf80:	4095      	lsls	r5, r2
    bf82:	4a0f      	ldr	r2, [pc, #60]	; (bfc0 <__aeabi_f2d+0xa0>)
    bf84:	031b      	lsls	r3, r3, #12
    bf86:	1a12      	subs	r2, r2, r0
    bf88:	0552      	lsls	r2, r2, #21
    bf8a:	0b1b      	lsrs	r3, r3, #12
    bf8c:	0d52      	lsrs	r2, r2, #21
    bf8e:	e7d7      	b.n	bf40 <__aeabi_f2d+0x20>
    bf90:	2d00      	cmp	r5, #0
    bf92:	d006      	beq.n	bfa2 <__aeabi_f2d+0x82>
    bf94:	2280      	movs	r2, #128	; 0x80
    bf96:	0b1b      	lsrs	r3, r3, #12
    bf98:	0312      	lsls	r2, r2, #12
    bf9a:	4313      	orrs	r3, r2
    bf9c:	076d      	lsls	r5, r5, #29
    bf9e:	4a09      	ldr	r2, [pc, #36]	; (bfc4 <__aeabi_f2d+0xa4>)
    bfa0:	e7ce      	b.n	bf40 <__aeabi_f2d+0x20>
    bfa2:	4a08      	ldr	r2, [pc, #32]	; (bfc4 <__aeabi_f2d+0xa4>)
    bfa4:	2300      	movs	r3, #0
    bfa6:	e7cb      	b.n	bf40 <__aeabi_f2d+0x20>
    bfa8:	2200      	movs	r2, #0
    bfaa:	2300      	movs	r3, #0
    bfac:	e7c8      	b.n	bf40 <__aeabi_f2d+0x20>
    bfae:	1c03      	adds	r3, r0, #0
    bfb0:	3b0b      	subs	r3, #11
    bfb2:	409d      	lsls	r5, r3
    bfb4:	1c2b      	adds	r3, r5, #0
    bfb6:	2500      	movs	r5, #0
    bfb8:	e7e3      	b.n	bf82 <__aeabi_f2d+0x62>
    bfba:	46c0      	nop			; (mov r8, r8)
    bfbc:	800fffff 	.word	0x800fffff
    bfc0:	00000389 	.word	0x00000389
    bfc4:	000007ff 	.word	0x000007ff

0000bfc8 <__clzsi2>:
    bfc8:	211c      	movs	r1, #28
    bfca:	2301      	movs	r3, #1
    bfcc:	041b      	lsls	r3, r3, #16
    bfce:	4298      	cmp	r0, r3
    bfd0:	d301      	bcc.n	bfd6 <__clzsi2+0xe>
    bfd2:	0c00      	lsrs	r0, r0, #16
    bfd4:	3910      	subs	r1, #16
    bfd6:	0a1b      	lsrs	r3, r3, #8
    bfd8:	4298      	cmp	r0, r3
    bfda:	d301      	bcc.n	bfe0 <__clzsi2+0x18>
    bfdc:	0a00      	lsrs	r0, r0, #8
    bfde:	3908      	subs	r1, #8
    bfe0:	091b      	lsrs	r3, r3, #4
    bfe2:	4298      	cmp	r0, r3
    bfe4:	d301      	bcc.n	bfea <__clzsi2+0x22>
    bfe6:	0900      	lsrs	r0, r0, #4
    bfe8:	3904      	subs	r1, #4
    bfea:	a202      	add	r2, pc, #8	; (adr r2, bff4 <__clzsi2+0x2c>)
    bfec:	5c10      	ldrb	r0, [r2, r0]
    bfee:	1840      	adds	r0, r0, r1
    bff0:	4770      	bx	lr
    bff2:	46c0      	nop			; (mov r8, r8)
    bff4:	02020304 	.word	0x02020304
    bff8:	01010101 	.word	0x01010101
	...

0000c004 <atoi>:
    c004:	b508      	push	{r3, lr}
    c006:	2100      	movs	r1, #0
    c008:	220a      	movs	r2, #10
    c00a:	f000 ffc5 	bl	cf98 <strtol>
    c00e:	bd08      	pop	{r3, pc}

0000c010 <__errno>:
    c010:	4b01      	ldr	r3, [pc, #4]	; (c018 <__errno+0x8>)
    c012:	6818      	ldr	r0, [r3, #0]
    c014:	4770      	bx	lr
    c016:	46c0      	nop			; (mov r8, r8)
    c018:	200000c0 	.word	0x200000c0

0000c01c <__libc_init_array>:
    c01c:	4b0e      	ldr	r3, [pc, #56]	; (c058 <__libc_init_array+0x3c>)
    c01e:	b570      	push	{r4, r5, r6, lr}
    c020:	2500      	movs	r5, #0
    c022:	1c1e      	adds	r6, r3, #0
    c024:	4c0d      	ldr	r4, [pc, #52]	; (c05c <__libc_init_array+0x40>)
    c026:	1ae4      	subs	r4, r4, r3
    c028:	10a4      	asrs	r4, r4, #2
    c02a:	42a5      	cmp	r5, r4
    c02c:	d004      	beq.n	c038 <__libc_init_array+0x1c>
    c02e:	00ab      	lsls	r3, r5, #2
    c030:	58f3      	ldr	r3, [r6, r3]
    c032:	4798      	blx	r3
    c034:	3501      	adds	r5, #1
    c036:	e7f8      	b.n	c02a <__libc_init_array+0xe>
    c038:	f006 fbd4 	bl	127e4 <_init>
    c03c:	4b08      	ldr	r3, [pc, #32]	; (c060 <__libc_init_array+0x44>)
    c03e:	2500      	movs	r5, #0
    c040:	1c1e      	adds	r6, r3, #0
    c042:	4c08      	ldr	r4, [pc, #32]	; (c064 <__libc_init_array+0x48>)
    c044:	1ae4      	subs	r4, r4, r3
    c046:	10a4      	asrs	r4, r4, #2
    c048:	42a5      	cmp	r5, r4
    c04a:	d004      	beq.n	c056 <__libc_init_array+0x3a>
    c04c:	00ab      	lsls	r3, r5, #2
    c04e:	58f3      	ldr	r3, [r6, r3]
    c050:	4798      	blx	r3
    c052:	3501      	adds	r5, #1
    c054:	e7f8      	b.n	c048 <__libc_init_array+0x2c>
    c056:	bd70      	pop	{r4, r5, r6, pc}
    c058:	000127f0 	.word	0x000127f0
    c05c:	000127f0 	.word	0x000127f0
    c060:	000127f0 	.word	0x000127f0
    c064:	000127f4 	.word	0x000127f4

0000c068 <malloc>:
    c068:	b508      	push	{r3, lr}
    c06a:	4b03      	ldr	r3, [pc, #12]	; (c078 <malloc+0x10>)
    c06c:	1c01      	adds	r1, r0, #0
    c06e:	6818      	ldr	r0, [r3, #0]
    c070:	f000 f884 	bl	c17c <_malloc_r>
    c074:	bd08      	pop	{r3, pc}
    c076:	46c0      	nop			; (mov r8, r8)
    c078:	200000c0 	.word	0x200000c0

0000c07c <free>:
    c07c:	b508      	push	{r3, lr}
    c07e:	4b03      	ldr	r3, [pc, #12]	; (c08c <free+0x10>)
    c080:	1c01      	adds	r1, r0, #0
    c082:	6818      	ldr	r0, [r3, #0]
    c084:	f000 f834 	bl	c0f0 <_free_r>
    c088:	bd08      	pop	{r3, pc}
    c08a:	46c0      	nop			; (mov r8, r8)
    c08c:	200000c0 	.word	0x200000c0

0000c090 <memchr>:
    c090:	b2c9      	uxtb	r1, r1
    c092:	1882      	adds	r2, r0, r2
    c094:	4290      	cmp	r0, r2
    c096:	d004      	beq.n	c0a2 <memchr+0x12>
    c098:	7803      	ldrb	r3, [r0, #0]
    c09a:	428b      	cmp	r3, r1
    c09c:	d002      	beq.n	c0a4 <memchr+0x14>
    c09e:	3001      	adds	r0, #1
    c0a0:	e7f8      	b.n	c094 <memchr+0x4>
    c0a2:	2000      	movs	r0, #0
    c0a4:	4770      	bx	lr

0000c0a6 <memcpy>:
    c0a6:	2300      	movs	r3, #0
    c0a8:	b510      	push	{r4, lr}
    c0aa:	4293      	cmp	r3, r2
    c0ac:	d003      	beq.n	c0b6 <memcpy+0x10>
    c0ae:	5ccc      	ldrb	r4, [r1, r3]
    c0b0:	54c4      	strb	r4, [r0, r3]
    c0b2:	3301      	adds	r3, #1
    c0b4:	e7f9      	b.n	c0aa <memcpy+0x4>
    c0b6:	bd10      	pop	{r4, pc}

0000c0b8 <memmove>:
    c0b8:	b510      	push	{r4, lr}
    c0ba:	4281      	cmp	r1, r0
    c0bc:	d208      	bcs.n	c0d0 <memmove+0x18>
    c0be:	188b      	adds	r3, r1, r2
    c0c0:	4298      	cmp	r0, r3
    c0c2:	d205      	bcs.n	c0d0 <memmove+0x18>
    c0c4:	1a9b      	subs	r3, r3, r2
    c0c6:	3a01      	subs	r2, #1
    c0c8:	d309      	bcc.n	c0de <memmove+0x26>
    c0ca:	5c99      	ldrb	r1, [r3, r2]
    c0cc:	5481      	strb	r1, [r0, r2]
    c0ce:	e7fa      	b.n	c0c6 <memmove+0xe>
    c0d0:	2300      	movs	r3, #0
    c0d2:	4293      	cmp	r3, r2
    c0d4:	d003      	beq.n	c0de <memmove+0x26>
    c0d6:	5ccc      	ldrb	r4, [r1, r3]
    c0d8:	54c4      	strb	r4, [r0, r3]
    c0da:	3301      	adds	r3, #1
    c0dc:	e7f9      	b.n	c0d2 <memmove+0x1a>
    c0de:	bd10      	pop	{r4, pc}

0000c0e0 <memset>:
    c0e0:	1c03      	adds	r3, r0, #0
    c0e2:	1882      	adds	r2, r0, r2
    c0e4:	4293      	cmp	r3, r2
    c0e6:	d002      	beq.n	c0ee <memset+0xe>
    c0e8:	7019      	strb	r1, [r3, #0]
    c0ea:	3301      	adds	r3, #1
    c0ec:	e7fa      	b.n	c0e4 <memset+0x4>
    c0ee:	4770      	bx	lr

0000c0f0 <_free_r>:
    c0f0:	b530      	push	{r4, r5, lr}
    c0f2:	2900      	cmp	r1, #0
    c0f4:	d03e      	beq.n	c174 <_free_r+0x84>
    c0f6:	3904      	subs	r1, #4
    c0f8:	680b      	ldr	r3, [r1, #0]
    c0fa:	2b00      	cmp	r3, #0
    c0fc:	da00      	bge.n	c100 <_free_r+0x10>
    c0fe:	18c9      	adds	r1, r1, r3
    c100:	4a1d      	ldr	r2, [pc, #116]	; (c178 <_free_r+0x88>)
    c102:	6813      	ldr	r3, [r2, #0]
    c104:	1c14      	adds	r4, r2, #0
    c106:	2b00      	cmp	r3, #0
    c108:	d102      	bne.n	c110 <_free_r+0x20>
    c10a:	604b      	str	r3, [r1, #4]
    c10c:	6011      	str	r1, [r2, #0]
    c10e:	e031      	b.n	c174 <_free_r+0x84>
    c110:	4299      	cmp	r1, r3
    c112:	d20d      	bcs.n	c130 <_free_r+0x40>
    c114:	6808      	ldr	r0, [r1, #0]
    c116:	180a      	adds	r2, r1, r0
    c118:	429a      	cmp	r2, r3
    c11a:	d103      	bne.n	c124 <_free_r+0x34>
    c11c:	6813      	ldr	r3, [r2, #0]
    c11e:	18c3      	adds	r3, r0, r3
    c120:	600b      	str	r3, [r1, #0]
    c122:	6853      	ldr	r3, [r2, #4]
    c124:	604b      	str	r3, [r1, #4]
    c126:	6021      	str	r1, [r4, #0]
    c128:	e024      	b.n	c174 <_free_r+0x84>
    c12a:	428a      	cmp	r2, r1
    c12c:	d803      	bhi.n	c136 <_free_r+0x46>
    c12e:	1c13      	adds	r3, r2, #0
    c130:	685a      	ldr	r2, [r3, #4]
    c132:	2a00      	cmp	r2, #0
    c134:	d1f9      	bne.n	c12a <_free_r+0x3a>
    c136:	681d      	ldr	r5, [r3, #0]
    c138:	195c      	adds	r4, r3, r5
    c13a:	428c      	cmp	r4, r1
    c13c:	d10b      	bne.n	c156 <_free_r+0x66>
    c13e:	6809      	ldr	r1, [r1, #0]
    c140:	1869      	adds	r1, r5, r1
    c142:	1858      	adds	r0, r3, r1
    c144:	6019      	str	r1, [r3, #0]
    c146:	4290      	cmp	r0, r2
    c148:	d114      	bne.n	c174 <_free_r+0x84>
    c14a:	6810      	ldr	r0, [r2, #0]
    c14c:	6852      	ldr	r2, [r2, #4]
    c14e:	1809      	adds	r1, r1, r0
    c150:	6019      	str	r1, [r3, #0]
    c152:	605a      	str	r2, [r3, #4]
    c154:	e00e      	b.n	c174 <_free_r+0x84>
    c156:	428c      	cmp	r4, r1
    c158:	d902      	bls.n	c160 <_free_r+0x70>
    c15a:	230c      	movs	r3, #12
    c15c:	6003      	str	r3, [r0, #0]
    c15e:	e009      	b.n	c174 <_free_r+0x84>
    c160:	6808      	ldr	r0, [r1, #0]
    c162:	180c      	adds	r4, r1, r0
    c164:	4294      	cmp	r4, r2
    c166:	d103      	bne.n	c170 <_free_r+0x80>
    c168:	6814      	ldr	r4, [r2, #0]
    c16a:	6852      	ldr	r2, [r2, #4]
    c16c:	1900      	adds	r0, r0, r4
    c16e:	6008      	str	r0, [r1, #0]
    c170:	604a      	str	r2, [r1, #4]
    c172:	6059      	str	r1, [r3, #4]
    c174:	bd30      	pop	{r4, r5, pc}
    c176:	46c0      	nop			; (mov r8, r8)
    c178:	200006e8 	.word	0x200006e8

0000c17c <_malloc_r>:
    c17c:	2303      	movs	r3, #3
    c17e:	b570      	push	{r4, r5, r6, lr}
    c180:	1ccc      	adds	r4, r1, #3
    c182:	439c      	bics	r4, r3
    c184:	3408      	adds	r4, #8
    c186:	1c05      	adds	r5, r0, #0
    c188:	2c0c      	cmp	r4, #12
    c18a:	d201      	bcs.n	c190 <_malloc_r+0x14>
    c18c:	240c      	movs	r4, #12
    c18e:	e005      	b.n	c19c <_malloc_r+0x20>
    c190:	2c00      	cmp	r4, #0
    c192:	da03      	bge.n	c19c <_malloc_r+0x20>
    c194:	230c      	movs	r3, #12
    c196:	2000      	movs	r0, #0
    c198:	602b      	str	r3, [r5, #0]
    c19a:	e042      	b.n	c222 <_malloc_r+0xa6>
    c19c:	428c      	cmp	r4, r1
    c19e:	d3f9      	bcc.n	c194 <_malloc_r+0x18>
    c1a0:	4a20      	ldr	r2, [pc, #128]	; (c224 <_malloc_r+0xa8>)
    c1a2:	6813      	ldr	r3, [r2, #0]
    c1a4:	1c10      	adds	r0, r2, #0
    c1a6:	1c19      	adds	r1, r3, #0
    c1a8:	2900      	cmp	r1, #0
    c1aa:	d013      	beq.n	c1d4 <_malloc_r+0x58>
    c1ac:	680a      	ldr	r2, [r1, #0]
    c1ae:	1b12      	subs	r2, r2, r4
    c1b0:	d40d      	bmi.n	c1ce <_malloc_r+0x52>
    c1b2:	2a0b      	cmp	r2, #11
    c1b4:	d902      	bls.n	c1bc <_malloc_r+0x40>
    c1b6:	600a      	str	r2, [r1, #0]
    c1b8:	188b      	adds	r3, r1, r2
    c1ba:	e01f      	b.n	c1fc <_malloc_r+0x80>
    c1bc:	428b      	cmp	r3, r1
    c1be:	d102      	bne.n	c1c6 <_malloc_r+0x4a>
    c1c0:	685a      	ldr	r2, [r3, #4]
    c1c2:	6002      	str	r2, [r0, #0]
    c1c4:	e01b      	b.n	c1fe <_malloc_r+0x82>
    c1c6:	684a      	ldr	r2, [r1, #4]
    c1c8:	605a      	str	r2, [r3, #4]
    c1ca:	1c0b      	adds	r3, r1, #0
    c1cc:	e017      	b.n	c1fe <_malloc_r+0x82>
    c1ce:	1c0b      	adds	r3, r1, #0
    c1d0:	6849      	ldr	r1, [r1, #4]
    c1d2:	e7e9      	b.n	c1a8 <_malloc_r+0x2c>
    c1d4:	4e14      	ldr	r6, [pc, #80]	; (c228 <_malloc_r+0xac>)
    c1d6:	6833      	ldr	r3, [r6, #0]
    c1d8:	2b00      	cmp	r3, #0
    c1da:	d103      	bne.n	c1e4 <_malloc_r+0x68>
    c1dc:	1c28      	adds	r0, r5, #0
    c1de:	f000 fb7d 	bl	c8dc <_sbrk_r>
    c1e2:	6030      	str	r0, [r6, #0]
    c1e4:	1c28      	adds	r0, r5, #0
    c1e6:	1c21      	adds	r1, r4, #0
    c1e8:	f000 fb78 	bl	c8dc <_sbrk_r>
    c1ec:	1c03      	adds	r3, r0, #0
    c1ee:	1c42      	adds	r2, r0, #1
    c1f0:	d0d0      	beq.n	c194 <_malloc_r+0x18>
    c1f2:	2203      	movs	r2, #3
    c1f4:	1cc6      	adds	r6, r0, #3
    c1f6:	4396      	bics	r6, r2
    c1f8:	4286      	cmp	r6, r0
    c1fa:	d10a      	bne.n	c212 <_malloc_r+0x96>
    c1fc:	601c      	str	r4, [r3, #0]
    c1fe:	1c18      	adds	r0, r3, #0
    c200:	2107      	movs	r1, #7
    c202:	300b      	adds	r0, #11
    c204:	1d1a      	adds	r2, r3, #4
    c206:	4388      	bics	r0, r1
    c208:	1a82      	subs	r2, r0, r2
    c20a:	d00a      	beq.n	c222 <_malloc_r+0xa6>
    c20c:	4251      	negs	r1, r2
    c20e:	5099      	str	r1, [r3, r2]
    c210:	e007      	b.n	c222 <_malloc_r+0xa6>
    c212:	1a31      	subs	r1, r6, r0
    c214:	1c28      	adds	r0, r5, #0
    c216:	f000 fb61 	bl	c8dc <_sbrk_r>
    c21a:	1c43      	adds	r3, r0, #1
    c21c:	d0ba      	beq.n	c194 <_malloc_r+0x18>
    c21e:	1c33      	adds	r3, r6, #0
    c220:	e7ec      	b.n	c1fc <_malloc_r+0x80>
    c222:	bd70      	pop	{r4, r5, r6, pc}
    c224:	200006e8 	.word	0x200006e8
    c228:	200006e4 	.word	0x200006e4

0000c22c <__sfputc_r>:
    c22c:	6893      	ldr	r3, [r2, #8]
    c22e:	b510      	push	{r4, lr}
    c230:	3b01      	subs	r3, #1
    c232:	6093      	str	r3, [r2, #8]
    c234:	2b00      	cmp	r3, #0
    c236:	da05      	bge.n	c244 <__sfputc_r+0x18>
    c238:	6994      	ldr	r4, [r2, #24]
    c23a:	42a3      	cmp	r3, r4
    c23c:	db08      	blt.n	c250 <__sfputc_r+0x24>
    c23e:	b2cb      	uxtb	r3, r1
    c240:	2b0a      	cmp	r3, #10
    c242:	d005      	beq.n	c250 <__sfputc_r+0x24>
    c244:	6813      	ldr	r3, [r2, #0]
    c246:	1c58      	adds	r0, r3, #1
    c248:	6010      	str	r0, [r2, #0]
    c24a:	7019      	strb	r1, [r3, #0]
    c24c:	b2c8      	uxtb	r0, r1
    c24e:	e001      	b.n	c254 <__sfputc_r+0x28>
    c250:	f000 feec 	bl	d02c <__swbuf_r>
    c254:	bd10      	pop	{r4, pc}

0000c256 <__sfputs_r>:
    c256:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    c258:	1c06      	adds	r6, r0, #0
    c25a:	1c0f      	adds	r7, r1, #0
    c25c:	1c14      	adds	r4, r2, #0
    c25e:	18d5      	adds	r5, r2, r3
    c260:	42ac      	cmp	r4, r5
    c262:	d008      	beq.n	c276 <__sfputs_r+0x20>
    c264:	7821      	ldrb	r1, [r4, #0]
    c266:	1c30      	adds	r0, r6, #0
    c268:	1c3a      	adds	r2, r7, #0
    c26a:	f7ff ffdf 	bl	c22c <__sfputc_r>
    c26e:	3401      	adds	r4, #1
    c270:	1c43      	adds	r3, r0, #1
    c272:	d1f5      	bne.n	c260 <__sfputs_r+0xa>
    c274:	e000      	b.n	c278 <__sfputs_r+0x22>
    c276:	2000      	movs	r0, #0
    c278:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0000c27c <_vfiprintf_r>:
    c27c:	b5f0      	push	{r4, r5, r6, r7, lr}
    c27e:	b09f      	sub	sp, #124	; 0x7c
    c280:	1c06      	adds	r6, r0, #0
    c282:	1c0f      	adds	r7, r1, #0
    c284:	9202      	str	r2, [sp, #8]
    c286:	9305      	str	r3, [sp, #20]
    c288:	2800      	cmp	r0, #0
    c28a:	d004      	beq.n	c296 <_vfiprintf_r+0x1a>
    c28c:	6983      	ldr	r3, [r0, #24]
    c28e:	2b00      	cmp	r3, #0
    c290:	d101      	bne.n	c296 <_vfiprintf_r+0x1a>
    c292:	f001 f8b5 	bl	d400 <__sinit>
    c296:	4b79      	ldr	r3, [pc, #484]	; (c47c <_vfiprintf_r+0x200>)
    c298:	429f      	cmp	r7, r3
    c29a:	d101      	bne.n	c2a0 <_vfiprintf_r+0x24>
    c29c:	6877      	ldr	r7, [r6, #4]
    c29e:	e008      	b.n	c2b2 <_vfiprintf_r+0x36>
    c2a0:	4b77      	ldr	r3, [pc, #476]	; (c480 <_vfiprintf_r+0x204>)
    c2a2:	429f      	cmp	r7, r3
    c2a4:	d101      	bne.n	c2aa <_vfiprintf_r+0x2e>
    c2a6:	68b7      	ldr	r7, [r6, #8]
    c2a8:	e003      	b.n	c2b2 <_vfiprintf_r+0x36>
    c2aa:	4b76      	ldr	r3, [pc, #472]	; (c484 <_vfiprintf_r+0x208>)
    c2ac:	429f      	cmp	r7, r3
    c2ae:	d100      	bne.n	c2b2 <_vfiprintf_r+0x36>
    c2b0:	68f7      	ldr	r7, [r6, #12]
    c2b2:	89bb      	ldrh	r3, [r7, #12]
    c2b4:	071b      	lsls	r3, r3, #28
    c2b6:	d50a      	bpl.n	c2ce <_vfiprintf_r+0x52>
    c2b8:	693b      	ldr	r3, [r7, #16]
    c2ba:	2b00      	cmp	r3, #0
    c2bc:	d007      	beq.n	c2ce <_vfiprintf_r+0x52>
    c2be:	2300      	movs	r3, #0
    c2c0:	ad06      	add	r5, sp, #24
    c2c2:	616b      	str	r3, [r5, #20]
    c2c4:	3320      	adds	r3, #32
    c2c6:	766b      	strb	r3, [r5, #25]
    c2c8:	3310      	adds	r3, #16
    c2ca:	76ab      	strb	r3, [r5, #26]
    c2cc:	e03d      	b.n	c34a <_vfiprintf_r+0xce>
    c2ce:	1c30      	adds	r0, r6, #0
    c2d0:	1c39      	adds	r1, r7, #0
    c2d2:	f000 ff17 	bl	d104 <__swsetup_r>
    c2d6:	2800      	cmp	r0, #0
    c2d8:	d0f1      	beq.n	c2be <_vfiprintf_r+0x42>
    c2da:	2001      	movs	r0, #1
    c2dc:	4240      	negs	r0, r0
    c2de:	e0ca      	b.n	c476 <_vfiprintf_r+0x1fa>
    c2e0:	9a05      	ldr	r2, [sp, #20]
    c2e2:	1d11      	adds	r1, r2, #4
    c2e4:	6812      	ldr	r2, [r2, #0]
    c2e6:	9105      	str	r1, [sp, #20]
    c2e8:	2a00      	cmp	r2, #0
    c2ea:	db7e      	blt.n	c3ea <_vfiprintf_r+0x16e>
    c2ec:	9209      	str	r2, [sp, #36]	; 0x24
    c2ee:	3401      	adds	r4, #1
    c2f0:	7823      	ldrb	r3, [r4, #0]
    c2f2:	2b2e      	cmp	r3, #46	; 0x2e
    c2f4:	d100      	bne.n	c2f8 <_vfiprintf_r+0x7c>
    c2f6:	e089      	b.n	c40c <_vfiprintf_r+0x190>
    c2f8:	7821      	ldrb	r1, [r4, #0]
    c2fa:	4863      	ldr	r0, [pc, #396]	; (c488 <_vfiprintf_r+0x20c>)
    c2fc:	2203      	movs	r2, #3
    c2fe:	f7ff fec7 	bl	c090 <memchr>
    c302:	2800      	cmp	r0, #0
    c304:	d008      	beq.n	c318 <_vfiprintf_r+0x9c>
    c306:	4b60      	ldr	r3, [pc, #384]	; (c488 <_vfiprintf_r+0x20c>)
    c308:	3401      	adds	r4, #1
    c30a:	1ac0      	subs	r0, r0, r3
    c30c:	2340      	movs	r3, #64	; 0x40
    c30e:	4083      	lsls	r3, r0
    c310:	1c18      	adds	r0, r3, #0
    c312:	682b      	ldr	r3, [r5, #0]
    c314:	4318      	orrs	r0, r3
    c316:	6028      	str	r0, [r5, #0]
    c318:	7821      	ldrb	r1, [r4, #0]
    c31a:	1c63      	adds	r3, r4, #1
    c31c:	485b      	ldr	r0, [pc, #364]	; (c48c <_vfiprintf_r+0x210>)
    c31e:	2206      	movs	r2, #6
    c320:	9302      	str	r3, [sp, #8]
    c322:	7629      	strb	r1, [r5, #24]
    c324:	f7ff feb4 	bl	c090 <memchr>
    c328:	2800      	cmp	r0, #0
    c32a:	d100      	bne.n	c32e <_vfiprintf_r+0xb2>
    c32c:	e091      	b.n	c452 <_vfiprintf_r+0x1d6>
    c32e:	4b58      	ldr	r3, [pc, #352]	; (c490 <_vfiprintf_r+0x214>)
    c330:	2b00      	cmp	r3, #0
    c332:	d000      	beq.n	c336 <_vfiprintf_r+0xba>
    c334:	e084      	b.n	c440 <_vfiprintf_r+0x1c4>
    c336:	2207      	movs	r2, #7
    c338:	9b05      	ldr	r3, [sp, #20]
    c33a:	3307      	adds	r3, #7
    c33c:	4393      	bics	r3, r2
    c33e:	3308      	adds	r3, #8
    c340:	9305      	str	r3, [sp, #20]
    c342:	696b      	ldr	r3, [r5, #20]
    c344:	9a03      	ldr	r2, [sp, #12]
    c346:	189b      	adds	r3, r3, r2
    c348:	616b      	str	r3, [r5, #20]
    c34a:	9c02      	ldr	r4, [sp, #8]
    c34c:	7823      	ldrb	r3, [r4, #0]
    c34e:	2b00      	cmp	r3, #0
    c350:	d104      	bne.n	c35c <_vfiprintf_r+0xe0>
    c352:	9b02      	ldr	r3, [sp, #8]
    c354:	1ae3      	subs	r3, r4, r3
    c356:	9304      	str	r3, [sp, #16]
    c358:	d011      	beq.n	c37e <_vfiprintf_r+0x102>
    c35a:	e003      	b.n	c364 <_vfiprintf_r+0xe8>
    c35c:	2b25      	cmp	r3, #37	; 0x25
    c35e:	d0f8      	beq.n	c352 <_vfiprintf_r+0xd6>
    c360:	3401      	adds	r4, #1
    c362:	e7f3      	b.n	c34c <_vfiprintf_r+0xd0>
    c364:	9b04      	ldr	r3, [sp, #16]
    c366:	1c30      	adds	r0, r6, #0
    c368:	1c39      	adds	r1, r7, #0
    c36a:	9a02      	ldr	r2, [sp, #8]
    c36c:	f7ff ff73 	bl	c256 <__sfputs_r>
    c370:	1c43      	adds	r3, r0, #1
    c372:	d07b      	beq.n	c46c <_vfiprintf_r+0x1f0>
    c374:	696a      	ldr	r2, [r5, #20]
    c376:	9b04      	ldr	r3, [sp, #16]
    c378:	4694      	mov	ip, r2
    c37a:	4463      	add	r3, ip
    c37c:	616b      	str	r3, [r5, #20]
    c37e:	7823      	ldrb	r3, [r4, #0]
    c380:	2b00      	cmp	r3, #0
    c382:	d073      	beq.n	c46c <_vfiprintf_r+0x1f0>
    c384:	2201      	movs	r2, #1
    c386:	2300      	movs	r3, #0
    c388:	4252      	negs	r2, r2
    c38a:	606a      	str	r2, [r5, #4]
    c38c:	a902      	add	r1, sp, #8
    c38e:	3254      	adds	r2, #84	; 0x54
    c390:	1852      	adds	r2, r2, r1
    c392:	3401      	adds	r4, #1
    c394:	602b      	str	r3, [r5, #0]
    c396:	60eb      	str	r3, [r5, #12]
    c398:	60ab      	str	r3, [r5, #8]
    c39a:	7013      	strb	r3, [r2, #0]
    c39c:	65ab      	str	r3, [r5, #88]	; 0x58
    c39e:	7821      	ldrb	r1, [r4, #0]
    c3a0:	483c      	ldr	r0, [pc, #240]	; (c494 <_vfiprintf_r+0x218>)
    c3a2:	2205      	movs	r2, #5
    c3a4:	f7ff fe74 	bl	c090 <memchr>
    c3a8:	2800      	cmp	r0, #0
    c3aa:	d009      	beq.n	c3c0 <_vfiprintf_r+0x144>
    c3ac:	4b39      	ldr	r3, [pc, #228]	; (c494 <_vfiprintf_r+0x218>)
    c3ae:	3401      	adds	r4, #1
    c3b0:	1ac0      	subs	r0, r0, r3
    c3b2:	2301      	movs	r3, #1
    c3b4:	4083      	lsls	r3, r0
    c3b6:	1c18      	adds	r0, r3, #0
    c3b8:	682b      	ldr	r3, [r5, #0]
    c3ba:	4318      	orrs	r0, r3
    c3bc:	6028      	str	r0, [r5, #0]
    c3be:	e7ee      	b.n	c39e <_vfiprintf_r+0x122>
    c3c0:	682b      	ldr	r3, [r5, #0]
    c3c2:	06da      	lsls	r2, r3, #27
    c3c4:	d504      	bpl.n	c3d0 <_vfiprintf_r+0x154>
    c3c6:	2253      	movs	r2, #83	; 0x53
    c3c8:	2120      	movs	r1, #32
    c3ca:	a802      	add	r0, sp, #8
    c3cc:	1812      	adds	r2, r2, r0
    c3ce:	7011      	strb	r1, [r2, #0]
    c3d0:	071a      	lsls	r2, r3, #28
    c3d2:	d504      	bpl.n	c3de <_vfiprintf_r+0x162>
    c3d4:	2253      	movs	r2, #83	; 0x53
    c3d6:	212b      	movs	r1, #43	; 0x2b
    c3d8:	a802      	add	r0, sp, #8
    c3da:	1812      	adds	r2, r2, r0
    c3dc:	7011      	strb	r1, [r2, #0]
    c3de:	7822      	ldrb	r2, [r4, #0]
    c3e0:	2a2a      	cmp	r2, #42	; 0x2a
    c3e2:	d100      	bne.n	c3e6 <_vfiprintf_r+0x16a>
    c3e4:	e77c      	b.n	c2e0 <_vfiprintf_r+0x64>
    c3e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
    c3e8:	e005      	b.n	c3f6 <_vfiprintf_r+0x17a>
    c3ea:	4252      	negs	r2, r2
    c3ec:	60ea      	str	r2, [r5, #12]
    c3ee:	2202      	movs	r2, #2
    c3f0:	4313      	orrs	r3, r2
    c3f2:	602b      	str	r3, [r5, #0]
    c3f4:	e77b      	b.n	c2ee <_vfiprintf_r+0x72>
    c3f6:	7822      	ldrb	r2, [r4, #0]
    c3f8:	3a30      	subs	r2, #48	; 0x30
    c3fa:	2a09      	cmp	r2, #9
    c3fc:	d804      	bhi.n	c408 <_vfiprintf_r+0x18c>
    c3fe:	210a      	movs	r1, #10
    c400:	434b      	muls	r3, r1
    c402:	3401      	adds	r4, #1
    c404:	189b      	adds	r3, r3, r2
    c406:	e7f6      	b.n	c3f6 <_vfiprintf_r+0x17a>
    c408:	9309      	str	r3, [sp, #36]	; 0x24
    c40a:	e771      	b.n	c2f0 <_vfiprintf_r+0x74>
    c40c:	7863      	ldrb	r3, [r4, #1]
    c40e:	2b2a      	cmp	r3, #42	; 0x2a
    c410:	d109      	bne.n	c426 <_vfiprintf_r+0x1aa>
    c412:	9b05      	ldr	r3, [sp, #20]
    c414:	3402      	adds	r4, #2
    c416:	1d1a      	adds	r2, r3, #4
    c418:	681b      	ldr	r3, [r3, #0]
    c41a:	9205      	str	r2, [sp, #20]
    c41c:	2b00      	cmp	r3, #0
    c41e:	da0d      	bge.n	c43c <_vfiprintf_r+0x1c0>
    c420:	2301      	movs	r3, #1
    c422:	425b      	negs	r3, r3
    c424:	e00a      	b.n	c43c <_vfiprintf_r+0x1c0>
    c426:	2300      	movs	r3, #0
    c428:	3401      	adds	r4, #1
    c42a:	7822      	ldrb	r2, [r4, #0]
    c42c:	3a30      	subs	r2, #48	; 0x30
    c42e:	2a09      	cmp	r2, #9
    c430:	d804      	bhi.n	c43c <_vfiprintf_r+0x1c0>
    c432:	210a      	movs	r1, #10
    c434:	434b      	muls	r3, r1
    c436:	3401      	adds	r4, #1
    c438:	189b      	adds	r3, r3, r2
    c43a:	e7f6      	b.n	c42a <_vfiprintf_r+0x1ae>
    c43c:	9307      	str	r3, [sp, #28]
    c43e:	e75b      	b.n	c2f8 <_vfiprintf_r+0x7c>
    c440:	ab05      	add	r3, sp, #20
    c442:	9300      	str	r3, [sp, #0]
    c444:	1c30      	adds	r0, r6, #0
    c446:	1c29      	adds	r1, r5, #0
    c448:	1c3a      	adds	r2, r7, #0
    c44a:	4b13      	ldr	r3, [pc, #76]	; (c498 <_vfiprintf_r+0x21c>)
    c44c:	e000      	b.n	c450 <_vfiprintf_r+0x1d4>
    c44e:	bf00      	nop
    c450:	e007      	b.n	c462 <_vfiprintf_r+0x1e6>
    c452:	ab05      	add	r3, sp, #20
    c454:	9300      	str	r3, [sp, #0]
    c456:	1c30      	adds	r0, r6, #0
    c458:	1c29      	adds	r1, r5, #0
    c45a:	1c3a      	adds	r2, r7, #0
    c45c:	4b0e      	ldr	r3, [pc, #56]	; (c498 <_vfiprintf_r+0x21c>)
    c45e:	f000 f88b 	bl	c578 <_printf_i>
    c462:	9003      	str	r0, [sp, #12]
    c464:	9b03      	ldr	r3, [sp, #12]
    c466:	3301      	adds	r3, #1
    c468:	d000      	beq.n	c46c <_vfiprintf_r+0x1f0>
    c46a:	e76a      	b.n	c342 <_vfiprintf_r+0xc6>
    c46c:	89bb      	ldrh	r3, [r7, #12]
    c46e:	065b      	lsls	r3, r3, #25
    c470:	d500      	bpl.n	c474 <_vfiprintf_r+0x1f8>
    c472:	e732      	b.n	c2da <_vfiprintf_r+0x5e>
    c474:	980b      	ldr	r0, [sp, #44]	; 0x2c
    c476:	b01f      	add	sp, #124	; 0x7c
    c478:	bdf0      	pop	{r4, r5, r6, r7, pc}
    c47a:	46c0      	nop			; (mov r8, r8)
    c47c:	0001275c 	.word	0x0001275c
    c480:	0001277c 	.word	0x0001277c
    c484:	0001279c 	.word	0x0001279c
    c488:	00011f96 	.word	0x00011f96
    c48c:	00011f9a 	.word	0x00011f9a
    c490:	00000000 	.word	0x00000000
    c494:	00011f90 	.word	0x00011f90
    c498:	0000c257 	.word	0x0000c257

0000c49c <_printf_common>:
    c49c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    c49e:	1c17      	adds	r7, r2, #0
    c4a0:	9301      	str	r3, [sp, #4]
    c4a2:	690a      	ldr	r2, [r1, #16]
    c4a4:	688b      	ldr	r3, [r1, #8]
    c4a6:	9000      	str	r0, [sp, #0]
    c4a8:	1c0c      	adds	r4, r1, #0
    c4aa:	4293      	cmp	r3, r2
    c4ac:	da00      	bge.n	c4b0 <_printf_common+0x14>
    c4ae:	1c13      	adds	r3, r2, #0
    c4b0:	1c22      	adds	r2, r4, #0
    c4b2:	603b      	str	r3, [r7, #0]
    c4b4:	3243      	adds	r2, #67	; 0x43
    c4b6:	7812      	ldrb	r2, [r2, #0]
    c4b8:	2a00      	cmp	r2, #0
    c4ba:	d001      	beq.n	c4c0 <_printf_common+0x24>
    c4bc:	3301      	adds	r3, #1
    c4be:	603b      	str	r3, [r7, #0]
    c4c0:	6823      	ldr	r3, [r4, #0]
    c4c2:	069b      	lsls	r3, r3, #26
    c4c4:	d502      	bpl.n	c4cc <_printf_common+0x30>
    c4c6:	683b      	ldr	r3, [r7, #0]
    c4c8:	3302      	adds	r3, #2
    c4ca:	603b      	str	r3, [r7, #0]
    c4cc:	2506      	movs	r5, #6
    c4ce:	6823      	ldr	r3, [r4, #0]
    c4d0:	401d      	ands	r5, r3
    c4d2:	d01e      	beq.n	c512 <_printf_common+0x76>
    c4d4:	1c23      	adds	r3, r4, #0
    c4d6:	3343      	adds	r3, #67	; 0x43
    c4d8:	781b      	ldrb	r3, [r3, #0]
    c4da:	1e5a      	subs	r2, r3, #1
    c4dc:	4193      	sbcs	r3, r2
    c4de:	6822      	ldr	r2, [r4, #0]
    c4e0:	0692      	lsls	r2, r2, #26
    c4e2:	d51c      	bpl.n	c51e <_printf_common+0x82>
    c4e4:	2030      	movs	r0, #48	; 0x30
    c4e6:	18e1      	adds	r1, r4, r3
    c4e8:	3140      	adds	r1, #64	; 0x40
    c4ea:	70c8      	strb	r0, [r1, #3]
    c4ec:	1c21      	adds	r1, r4, #0
    c4ee:	1c5a      	adds	r2, r3, #1
    c4f0:	3145      	adds	r1, #69	; 0x45
    c4f2:	7809      	ldrb	r1, [r1, #0]
    c4f4:	18a2      	adds	r2, r4, r2
    c4f6:	3240      	adds	r2, #64	; 0x40
    c4f8:	3302      	adds	r3, #2
    c4fa:	70d1      	strb	r1, [r2, #3]
    c4fc:	e00f      	b.n	c51e <_printf_common+0x82>
    c4fe:	1c22      	adds	r2, r4, #0
    c500:	2301      	movs	r3, #1
    c502:	9800      	ldr	r0, [sp, #0]
    c504:	9901      	ldr	r1, [sp, #4]
    c506:	3219      	adds	r2, #25
    c508:	9e08      	ldr	r6, [sp, #32]
    c50a:	47b0      	blx	r6
    c50c:	1c43      	adds	r3, r0, #1
    c50e:	d00e      	beq.n	c52e <_printf_common+0x92>
    c510:	3501      	adds	r5, #1
    c512:	68e3      	ldr	r3, [r4, #12]
    c514:	683a      	ldr	r2, [r7, #0]
    c516:	1a9b      	subs	r3, r3, r2
    c518:	429d      	cmp	r5, r3
    c51a:	dbf0      	blt.n	c4fe <_printf_common+0x62>
    c51c:	e7da      	b.n	c4d4 <_printf_common+0x38>
    c51e:	1c22      	adds	r2, r4, #0
    c520:	9800      	ldr	r0, [sp, #0]
    c522:	9901      	ldr	r1, [sp, #4]
    c524:	3243      	adds	r2, #67	; 0x43
    c526:	9d08      	ldr	r5, [sp, #32]
    c528:	47a8      	blx	r5
    c52a:	1c43      	adds	r3, r0, #1
    c52c:	d102      	bne.n	c534 <_printf_common+0x98>
    c52e:	2001      	movs	r0, #1
    c530:	4240      	negs	r0, r0
    c532:	e020      	b.n	c576 <_printf_common+0xda>
    c534:	2306      	movs	r3, #6
    c536:	6820      	ldr	r0, [r4, #0]
    c538:	68e1      	ldr	r1, [r4, #12]
    c53a:	683a      	ldr	r2, [r7, #0]
    c53c:	4003      	ands	r3, r0
    c53e:	2500      	movs	r5, #0
    c540:	2b04      	cmp	r3, #4
    c542:	d103      	bne.n	c54c <_printf_common+0xb0>
    c544:	1a8d      	subs	r5, r1, r2
    c546:	43eb      	mvns	r3, r5
    c548:	17db      	asrs	r3, r3, #31
    c54a:	401d      	ands	r5, r3
    c54c:	68a3      	ldr	r3, [r4, #8]
    c54e:	6922      	ldr	r2, [r4, #16]
    c550:	4293      	cmp	r3, r2
    c552:	dd01      	ble.n	c558 <_printf_common+0xbc>
    c554:	1a9b      	subs	r3, r3, r2
    c556:	18ed      	adds	r5, r5, r3
    c558:	2700      	movs	r7, #0
    c55a:	42af      	cmp	r7, r5
    c55c:	da0a      	bge.n	c574 <_printf_common+0xd8>
    c55e:	1c22      	adds	r2, r4, #0
    c560:	2301      	movs	r3, #1
    c562:	9800      	ldr	r0, [sp, #0]
    c564:	9901      	ldr	r1, [sp, #4]
    c566:	321a      	adds	r2, #26
    c568:	9e08      	ldr	r6, [sp, #32]
    c56a:	47b0      	blx	r6
    c56c:	1c43      	adds	r3, r0, #1
    c56e:	d0de      	beq.n	c52e <_printf_common+0x92>
    c570:	3701      	adds	r7, #1
    c572:	e7f2      	b.n	c55a <_printf_common+0xbe>
    c574:	2000      	movs	r0, #0
    c576:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

0000c578 <_printf_i>:
    c578:	b5f0      	push	{r4, r5, r6, r7, lr}
    c57a:	b08b      	sub	sp, #44	; 0x2c
    c57c:	9206      	str	r2, [sp, #24]
    c57e:	1c0a      	adds	r2, r1, #0
    c580:	3243      	adds	r2, #67	; 0x43
    c582:	9307      	str	r3, [sp, #28]
    c584:	9005      	str	r0, [sp, #20]
    c586:	9204      	str	r2, [sp, #16]
    c588:	7e0a      	ldrb	r2, [r1, #24]
    c58a:	1c0c      	adds	r4, r1, #0
    c58c:	9b10      	ldr	r3, [sp, #64]	; 0x40
    c58e:	2a6e      	cmp	r2, #110	; 0x6e
    c590:	d100      	bne.n	c594 <_printf_i+0x1c>
    c592:	e0a8      	b.n	c6e6 <_printf_i+0x16e>
    c594:	d811      	bhi.n	c5ba <_printf_i+0x42>
    c596:	2a63      	cmp	r2, #99	; 0x63
    c598:	d022      	beq.n	c5e0 <_printf_i+0x68>
    c59a:	d809      	bhi.n	c5b0 <_printf_i+0x38>
    c59c:	2a00      	cmp	r2, #0
    c59e:	d100      	bne.n	c5a2 <_printf_i+0x2a>
    c5a0:	e0b2      	b.n	c708 <_printf_i+0x190>
    c5a2:	2a58      	cmp	r2, #88	; 0x58
    c5a4:	d000      	beq.n	c5a8 <_printf_i+0x30>
    c5a6:	e0c2      	b.n	c72e <_printf_i+0x1b6>
    c5a8:	3145      	adds	r1, #69	; 0x45
    c5aa:	700a      	strb	r2, [r1, #0]
    c5ac:	4a7c      	ldr	r2, [pc, #496]	; (c7a0 <_printf_i+0x228>)
    c5ae:	e04f      	b.n	c650 <_printf_i+0xd8>
    c5b0:	2a64      	cmp	r2, #100	; 0x64
    c5b2:	d01d      	beq.n	c5f0 <_printf_i+0x78>
    c5b4:	2a69      	cmp	r2, #105	; 0x69
    c5b6:	d01b      	beq.n	c5f0 <_printf_i+0x78>
    c5b8:	e0b9      	b.n	c72e <_printf_i+0x1b6>
    c5ba:	2a73      	cmp	r2, #115	; 0x73
    c5bc:	d100      	bne.n	c5c0 <_printf_i+0x48>
    c5be:	e0a7      	b.n	c710 <_printf_i+0x198>
    c5c0:	d809      	bhi.n	c5d6 <_printf_i+0x5e>
    c5c2:	2a6f      	cmp	r2, #111	; 0x6f
    c5c4:	d029      	beq.n	c61a <_printf_i+0xa2>
    c5c6:	2a70      	cmp	r2, #112	; 0x70
    c5c8:	d000      	beq.n	c5cc <_printf_i+0x54>
    c5ca:	e0b0      	b.n	c72e <_printf_i+0x1b6>
    c5cc:	2220      	movs	r2, #32
    c5ce:	6809      	ldr	r1, [r1, #0]
    c5d0:	430a      	orrs	r2, r1
    c5d2:	6022      	str	r2, [r4, #0]
    c5d4:	e037      	b.n	c646 <_printf_i+0xce>
    c5d6:	2a75      	cmp	r2, #117	; 0x75
    c5d8:	d01f      	beq.n	c61a <_printf_i+0xa2>
    c5da:	2a78      	cmp	r2, #120	; 0x78
    c5dc:	d033      	beq.n	c646 <_printf_i+0xce>
    c5de:	e0a6      	b.n	c72e <_printf_i+0x1b6>
    c5e0:	1c0e      	adds	r6, r1, #0
    c5e2:	681a      	ldr	r2, [r3, #0]
    c5e4:	3642      	adds	r6, #66	; 0x42
    c5e6:	1d11      	adds	r1, r2, #4
    c5e8:	6019      	str	r1, [r3, #0]
    c5ea:	6813      	ldr	r3, [r2, #0]
    c5ec:	7033      	strb	r3, [r6, #0]
    c5ee:	e0a1      	b.n	c734 <_printf_i+0x1bc>
    c5f0:	6821      	ldr	r1, [r4, #0]
    c5f2:	681a      	ldr	r2, [r3, #0]
    c5f4:	0608      	lsls	r0, r1, #24
    c5f6:	d406      	bmi.n	c606 <_printf_i+0x8e>
    c5f8:	0649      	lsls	r1, r1, #25
    c5fa:	d504      	bpl.n	c606 <_printf_i+0x8e>
    c5fc:	1d11      	adds	r1, r2, #4
    c5fe:	6019      	str	r1, [r3, #0]
    c600:	2300      	movs	r3, #0
    c602:	5ed5      	ldrsh	r5, [r2, r3]
    c604:	e002      	b.n	c60c <_printf_i+0x94>
    c606:	1d11      	adds	r1, r2, #4
    c608:	6019      	str	r1, [r3, #0]
    c60a:	6815      	ldr	r5, [r2, #0]
    c60c:	2d00      	cmp	r5, #0
    c60e:	da3b      	bge.n	c688 <_printf_i+0x110>
    c610:	232d      	movs	r3, #45	; 0x2d
    c612:	9a04      	ldr	r2, [sp, #16]
    c614:	426d      	negs	r5, r5
    c616:	7013      	strb	r3, [r2, #0]
    c618:	e036      	b.n	c688 <_printf_i+0x110>
    c61a:	6821      	ldr	r1, [r4, #0]
    c61c:	681a      	ldr	r2, [r3, #0]
    c61e:	0608      	lsls	r0, r1, #24
    c620:	d406      	bmi.n	c630 <_printf_i+0xb8>
    c622:	0649      	lsls	r1, r1, #25
    c624:	d504      	bpl.n	c630 <_printf_i+0xb8>
    c626:	6815      	ldr	r5, [r2, #0]
    c628:	1d11      	adds	r1, r2, #4
    c62a:	6019      	str	r1, [r3, #0]
    c62c:	b2ad      	uxth	r5, r5
    c62e:	e002      	b.n	c636 <_printf_i+0xbe>
    c630:	1d11      	adds	r1, r2, #4
    c632:	6019      	str	r1, [r3, #0]
    c634:	6815      	ldr	r5, [r2, #0]
    c636:	4b5a      	ldr	r3, [pc, #360]	; (c7a0 <_printf_i+0x228>)
    c638:	7e22      	ldrb	r2, [r4, #24]
    c63a:	9303      	str	r3, [sp, #12]
    c63c:	270a      	movs	r7, #10
    c63e:	2a6f      	cmp	r2, #111	; 0x6f
    c640:	d11d      	bne.n	c67e <_printf_i+0x106>
    c642:	2708      	movs	r7, #8
    c644:	e01b      	b.n	c67e <_printf_i+0x106>
    c646:	1c22      	adds	r2, r4, #0
    c648:	2178      	movs	r1, #120	; 0x78
    c64a:	3245      	adds	r2, #69	; 0x45
    c64c:	7011      	strb	r1, [r2, #0]
    c64e:	4a55      	ldr	r2, [pc, #340]	; (c7a4 <_printf_i+0x22c>)
    c650:	6819      	ldr	r1, [r3, #0]
    c652:	9203      	str	r2, [sp, #12]
    c654:	1d08      	adds	r0, r1, #4
    c656:	6822      	ldr	r2, [r4, #0]
    c658:	6018      	str	r0, [r3, #0]
    c65a:	680d      	ldr	r5, [r1, #0]
    c65c:	0610      	lsls	r0, r2, #24
    c65e:	d402      	bmi.n	c666 <_printf_i+0xee>
    c660:	0650      	lsls	r0, r2, #25
    c662:	d500      	bpl.n	c666 <_printf_i+0xee>
    c664:	b2ad      	uxth	r5, r5
    c666:	07d3      	lsls	r3, r2, #31
    c668:	d502      	bpl.n	c670 <_printf_i+0xf8>
    c66a:	2320      	movs	r3, #32
    c66c:	431a      	orrs	r2, r3
    c66e:	6022      	str	r2, [r4, #0]
    c670:	2710      	movs	r7, #16
    c672:	2d00      	cmp	r5, #0
    c674:	d103      	bne.n	c67e <_printf_i+0x106>
    c676:	2320      	movs	r3, #32
    c678:	6822      	ldr	r2, [r4, #0]
    c67a:	439a      	bics	r2, r3
    c67c:	6022      	str	r2, [r4, #0]
    c67e:	1c23      	adds	r3, r4, #0
    c680:	2200      	movs	r2, #0
    c682:	3343      	adds	r3, #67	; 0x43
    c684:	701a      	strb	r2, [r3, #0]
    c686:	e002      	b.n	c68e <_printf_i+0x116>
    c688:	270a      	movs	r7, #10
    c68a:	4b45      	ldr	r3, [pc, #276]	; (c7a0 <_printf_i+0x228>)
    c68c:	9303      	str	r3, [sp, #12]
    c68e:	6863      	ldr	r3, [r4, #4]
    c690:	60a3      	str	r3, [r4, #8]
    c692:	2b00      	cmp	r3, #0
    c694:	db03      	blt.n	c69e <_printf_i+0x126>
    c696:	2204      	movs	r2, #4
    c698:	6821      	ldr	r1, [r4, #0]
    c69a:	4391      	bics	r1, r2
    c69c:	6021      	str	r1, [r4, #0]
    c69e:	2d00      	cmp	r5, #0
    c6a0:	d102      	bne.n	c6a8 <_printf_i+0x130>
    c6a2:	9e04      	ldr	r6, [sp, #16]
    c6a4:	2b00      	cmp	r3, #0
    c6a6:	d00e      	beq.n	c6c6 <_printf_i+0x14e>
    c6a8:	9e04      	ldr	r6, [sp, #16]
    c6aa:	1c28      	adds	r0, r5, #0
    c6ac:	1c39      	adds	r1, r7, #0
    c6ae:	f7fd fb67 	bl	9d80 <__aeabi_uidivmod>
    c6b2:	9b03      	ldr	r3, [sp, #12]
    c6b4:	3e01      	subs	r6, #1
    c6b6:	5c5b      	ldrb	r3, [r3, r1]
    c6b8:	1c28      	adds	r0, r5, #0
    c6ba:	7033      	strb	r3, [r6, #0]
    c6bc:	1c39      	adds	r1, r7, #0
    c6be:	f7fd fad9 	bl	9c74 <__aeabi_uidiv>
    c6c2:	1e05      	subs	r5, r0, #0
    c6c4:	d1f1      	bne.n	c6aa <_printf_i+0x132>
    c6c6:	2f08      	cmp	r7, #8
    c6c8:	d109      	bne.n	c6de <_printf_i+0x166>
    c6ca:	6823      	ldr	r3, [r4, #0]
    c6cc:	07db      	lsls	r3, r3, #31
    c6ce:	d506      	bpl.n	c6de <_printf_i+0x166>
    c6d0:	6863      	ldr	r3, [r4, #4]
    c6d2:	6922      	ldr	r2, [r4, #16]
    c6d4:	4293      	cmp	r3, r2
    c6d6:	dc02      	bgt.n	c6de <_printf_i+0x166>
    c6d8:	2330      	movs	r3, #48	; 0x30
    c6da:	3e01      	subs	r6, #1
    c6dc:	7033      	strb	r3, [r6, #0]
    c6de:	9b04      	ldr	r3, [sp, #16]
    c6e0:	1b9b      	subs	r3, r3, r6
    c6e2:	6123      	str	r3, [r4, #16]
    c6e4:	e02b      	b.n	c73e <_printf_i+0x1c6>
    c6e6:	6809      	ldr	r1, [r1, #0]
    c6e8:	681a      	ldr	r2, [r3, #0]
    c6ea:	0608      	lsls	r0, r1, #24
    c6ec:	d407      	bmi.n	c6fe <_printf_i+0x186>
    c6ee:	0649      	lsls	r1, r1, #25
    c6f0:	d505      	bpl.n	c6fe <_printf_i+0x186>
    c6f2:	1d11      	adds	r1, r2, #4
    c6f4:	6019      	str	r1, [r3, #0]
    c6f6:	6813      	ldr	r3, [r2, #0]
    c6f8:	8aa2      	ldrh	r2, [r4, #20]
    c6fa:	801a      	strh	r2, [r3, #0]
    c6fc:	e004      	b.n	c708 <_printf_i+0x190>
    c6fe:	1d11      	adds	r1, r2, #4
    c700:	6019      	str	r1, [r3, #0]
    c702:	6813      	ldr	r3, [r2, #0]
    c704:	6962      	ldr	r2, [r4, #20]
    c706:	601a      	str	r2, [r3, #0]
    c708:	2300      	movs	r3, #0
    c70a:	9e04      	ldr	r6, [sp, #16]
    c70c:	6123      	str	r3, [r4, #16]
    c70e:	e016      	b.n	c73e <_printf_i+0x1c6>
    c710:	681a      	ldr	r2, [r3, #0]
    c712:	1d11      	adds	r1, r2, #4
    c714:	6019      	str	r1, [r3, #0]
    c716:	6816      	ldr	r6, [r2, #0]
    c718:	2100      	movs	r1, #0
    c71a:	1c30      	adds	r0, r6, #0
    c71c:	6862      	ldr	r2, [r4, #4]
    c71e:	f7ff fcb7 	bl	c090 <memchr>
    c722:	2800      	cmp	r0, #0
    c724:	d001      	beq.n	c72a <_printf_i+0x1b2>
    c726:	1b80      	subs	r0, r0, r6
    c728:	6060      	str	r0, [r4, #4]
    c72a:	6863      	ldr	r3, [r4, #4]
    c72c:	e003      	b.n	c736 <_printf_i+0x1be>
    c72e:	1c26      	adds	r6, r4, #0
    c730:	3642      	adds	r6, #66	; 0x42
    c732:	7032      	strb	r2, [r6, #0]
    c734:	2301      	movs	r3, #1
    c736:	6123      	str	r3, [r4, #16]
    c738:	2300      	movs	r3, #0
    c73a:	9a04      	ldr	r2, [sp, #16]
    c73c:	7013      	strb	r3, [r2, #0]
    c73e:	9b07      	ldr	r3, [sp, #28]
    c740:	9805      	ldr	r0, [sp, #20]
    c742:	9300      	str	r3, [sp, #0]
    c744:	1c21      	adds	r1, r4, #0
    c746:	9b06      	ldr	r3, [sp, #24]
    c748:	aa09      	add	r2, sp, #36	; 0x24
    c74a:	f7ff fea7 	bl	c49c <_printf_common>
    c74e:	1c43      	adds	r3, r0, #1
    c750:	d102      	bne.n	c758 <_printf_i+0x1e0>
    c752:	2001      	movs	r0, #1
    c754:	4240      	negs	r0, r0
    c756:	e021      	b.n	c79c <_printf_i+0x224>
    c758:	6923      	ldr	r3, [r4, #16]
    c75a:	9805      	ldr	r0, [sp, #20]
    c75c:	9906      	ldr	r1, [sp, #24]
    c75e:	1c32      	adds	r2, r6, #0
    c760:	9d07      	ldr	r5, [sp, #28]
    c762:	47a8      	blx	r5
    c764:	1c43      	adds	r3, r0, #1
    c766:	d0f4      	beq.n	c752 <_printf_i+0x1da>
    c768:	6823      	ldr	r3, [r4, #0]
    c76a:	079b      	lsls	r3, r3, #30
    c76c:	d405      	bmi.n	c77a <_printf_i+0x202>
    c76e:	9b09      	ldr	r3, [sp, #36]	; 0x24
    c770:	68e0      	ldr	r0, [r4, #12]
    c772:	4298      	cmp	r0, r3
    c774:	da12      	bge.n	c79c <_printf_i+0x224>
    c776:	1c18      	adds	r0, r3, #0
    c778:	e010      	b.n	c79c <_printf_i+0x224>
    c77a:	2500      	movs	r5, #0
    c77c:	68e3      	ldr	r3, [r4, #12]
    c77e:	9a09      	ldr	r2, [sp, #36]	; 0x24
    c780:	1a9b      	subs	r3, r3, r2
    c782:	429d      	cmp	r5, r3
    c784:	daf3      	bge.n	c76e <_printf_i+0x1f6>
    c786:	1c22      	adds	r2, r4, #0
    c788:	2301      	movs	r3, #1
    c78a:	9805      	ldr	r0, [sp, #20]
    c78c:	9906      	ldr	r1, [sp, #24]
    c78e:	3219      	adds	r2, #25
    c790:	9e07      	ldr	r6, [sp, #28]
    c792:	47b0      	blx	r6
    c794:	1c43      	adds	r3, r0, #1
    c796:	d0dc      	beq.n	c752 <_printf_i+0x1da>
    c798:	3501      	adds	r5, #1
    c79a:	e7ef      	b.n	c77c <_printf_i+0x204>
    c79c:	b00b      	add	sp, #44	; 0x2c
    c79e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    c7a0:	00011fa1 	.word	0x00011fa1
    c7a4:	00011fb2 	.word	0x00011fb2

0000c7a8 <iprintf>:
    c7a8:	b40f      	push	{r0, r1, r2, r3}
    c7aa:	4b0b      	ldr	r3, [pc, #44]	; (c7d8 <iprintf+0x30>)
    c7ac:	b513      	push	{r0, r1, r4, lr}
    c7ae:	681c      	ldr	r4, [r3, #0]
    c7b0:	2c00      	cmp	r4, #0
    c7b2:	d005      	beq.n	c7c0 <iprintf+0x18>
    c7b4:	69a3      	ldr	r3, [r4, #24]
    c7b6:	2b00      	cmp	r3, #0
    c7b8:	d102      	bne.n	c7c0 <iprintf+0x18>
    c7ba:	1c20      	adds	r0, r4, #0
    c7bc:	f000 fe20 	bl	d400 <__sinit>
    c7c0:	ab05      	add	r3, sp, #20
    c7c2:	1c20      	adds	r0, r4, #0
    c7c4:	68a1      	ldr	r1, [r4, #8]
    c7c6:	9a04      	ldr	r2, [sp, #16]
    c7c8:	9301      	str	r3, [sp, #4]
    c7ca:	f7ff fd57 	bl	c27c <_vfiprintf_r>
    c7ce:	bc16      	pop	{r1, r2, r4}
    c7d0:	bc08      	pop	{r3}
    c7d2:	b004      	add	sp, #16
    c7d4:	4718      	bx	r3
    c7d6:	46c0      	nop			; (mov r8, r8)
    c7d8:	200000c0 	.word	0x200000c0

0000c7dc <putchar>:
    c7dc:	b538      	push	{r3, r4, r5, lr}
    c7de:	4b08      	ldr	r3, [pc, #32]	; (c800 <putchar+0x24>)
    c7e0:	1c05      	adds	r5, r0, #0
    c7e2:	681c      	ldr	r4, [r3, #0]
    c7e4:	2c00      	cmp	r4, #0
    c7e6:	d005      	beq.n	c7f4 <putchar+0x18>
    c7e8:	69a3      	ldr	r3, [r4, #24]
    c7ea:	2b00      	cmp	r3, #0
    c7ec:	d102      	bne.n	c7f4 <putchar+0x18>
    c7ee:	1c20      	adds	r0, r4, #0
    c7f0:	f000 fe06 	bl	d400 <__sinit>
    c7f4:	1c29      	adds	r1, r5, #0
    c7f6:	1c20      	adds	r0, r4, #0
    c7f8:	68a2      	ldr	r2, [r4, #8]
    c7fa:	f001 fba7 	bl	df4c <_putc_r>
    c7fe:	bd38      	pop	{r3, r4, r5, pc}
    c800:	200000c0 	.word	0x200000c0

0000c804 <_puts_r>:
    c804:	b570      	push	{r4, r5, r6, lr}
    c806:	1c05      	adds	r5, r0, #0
    c808:	1c0e      	adds	r6, r1, #0
    c80a:	2800      	cmp	r0, #0
    c80c:	d004      	beq.n	c818 <_puts_r+0x14>
    c80e:	6983      	ldr	r3, [r0, #24]
    c810:	2b00      	cmp	r3, #0
    c812:	d101      	bne.n	c818 <_puts_r+0x14>
    c814:	f000 fdf4 	bl	d400 <__sinit>
    c818:	68ac      	ldr	r4, [r5, #8]
    c81a:	89a3      	ldrh	r3, [r4, #12]
    c81c:	071b      	lsls	r3, r3, #28
    c81e:	d502      	bpl.n	c826 <_puts_r+0x22>
    c820:	6923      	ldr	r3, [r4, #16]
    c822:	2b00      	cmp	r3, #0
    c824:	d119      	bne.n	c85a <_puts_r+0x56>
    c826:	1c28      	adds	r0, r5, #0
    c828:	1c21      	adds	r1, r4, #0
    c82a:	f000 fc6b 	bl	d104 <__swsetup_r>
    c82e:	2800      	cmp	r0, #0
    c830:	d013      	beq.n	c85a <_puts_r+0x56>
    c832:	2001      	movs	r0, #1
    c834:	4240      	negs	r0, r0
    c836:	e045      	b.n	c8c4 <_puts_r+0xc0>
    c838:	7831      	ldrb	r1, [r6, #0]
    c83a:	2b00      	cmp	r3, #0
    c83c:	da1b      	bge.n	c876 <_puts_r+0x72>
    c83e:	69a2      	ldr	r2, [r4, #24]
    c840:	4293      	cmp	r3, r2
    c842:	da11      	bge.n	c868 <_puts_r+0x64>
    c844:	1c22      	adds	r2, r4, #0
    c846:	1c28      	adds	r0, r5, #0
    c848:	f000 fbf0 	bl	d02c <__swbuf_r>
    c84c:	3001      	adds	r0, #1
    c84e:	4242      	negs	r2, r0
    c850:	4142      	adcs	r2, r0
    c852:	b2d0      	uxtb	r0, r2
    c854:	2800      	cmp	r0, #0
    c856:	d1ec      	bne.n	c832 <_puts_r+0x2e>
    c858:	3601      	adds	r6, #1
    c85a:	68a3      	ldr	r3, [r4, #8]
    c85c:	7832      	ldrb	r2, [r6, #0]
    c85e:	3b01      	subs	r3, #1
    c860:	60a3      	str	r3, [r4, #8]
    c862:	2a00      	cmp	r2, #0
    c864:	d1e8      	bne.n	c838 <_puts_r+0x34>
    c866:	e00c      	b.n	c882 <_puts_r+0x7e>
    c868:	6823      	ldr	r3, [r4, #0]
    c86a:	7019      	strb	r1, [r3, #0]
    c86c:	6823      	ldr	r3, [r4, #0]
    c86e:	7819      	ldrb	r1, [r3, #0]
    c870:	290a      	cmp	r1, #10
    c872:	d103      	bne.n	c87c <_puts_r+0x78>
    c874:	e7e6      	b.n	c844 <_puts_r+0x40>
    c876:	6823      	ldr	r3, [r4, #0]
    c878:	7019      	strb	r1, [r3, #0]
    c87a:	6823      	ldr	r3, [r4, #0]
    c87c:	3301      	adds	r3, #1
    c87e:	6023      	str	r3, [r4, #0]
    c880:	e7ea      	b.n	c858 <_puts_r+0x54>
    c882:	2b00      	cmp	r3, #0
    c884:	da17      	bge.n	c8b6 <_puts_r+0xb2>
    c886:	69a2      	ldr	r2, [r4, #24]
    c888:	4293      	cmp	r3, r2
    c88a:	db08      	blt.n	c89e <_puts_r+0x9a>
    c88c:	230a      	movs	r3, #10
    c88e:	6822      	ldr	r2, [r4, #0]
    c890:	7013      	strb	r3, [r2, #0]
    c892:	6823      	ldr	r3, [r4, #0]
    c894:	7819      	ldrb	r1, [r3, #0]
    c896:	290a      	cmp	r1, #10
    c898:	d111      	bne.n	c8be <_puts_r+0xba>
    c89a:	1c28      	adds	r0, r5, #0
    c89c:	e001      	b.n	c8a2 <_puts_r+0x9e>
    c89e:	1c28      	adds	r0, r5, #0
    c8a0:	210a      	movs	r1, #10
    c8a2:	1c22      	adds	r2, r4, #0
    c8a4:	f000 fbc2 	bl	d02c <__swbuf_r>
    c8a8:	3001      	adds	r0, #1
    c8aa:	4242      	negs	r2, r0
    c8ac:	4142      	adcs	r2, r0
    c8ae:	b2d0      	uxtb	r0, r2
    c8b0:	2800      	cmp	r0, #0
    c8b2:	d006      	beq.n	c8c2 <_puts_r+0xbe>
    c8b4:	e7bd      	b.n	c832 <_puts_r+0x2e>
    c8b6:	230a      	movs	r3, #10
    c8b8:	6822      	ldr	r2, [r4, #0]
    c8ba:	7013      	strb	r3, [r2, #0]
    c8bc:	6823      	ldr	r3, [r4, #0]
    c8be:	3301      	adds	r3, #1
    c8c0:	6023      	str	r3, [r4, #0]
    c8c2:	200a      	movs	r0, #10
    c8c4:	bd70      	pop	{r4, r5, r6, pc}
	...

0000c8c8 <puts>:
    c8c8:	b508      	push	{r3, lr}
    c8ca:	4b03      	ldr	r3, [pc, #12]	; (c8d8 <puts+0x10>)
    c8cc:	1c01      	adds	r1, r0, #0
    c8ce:	6818      	ldr	r0, [r3, #0]
    c8d0:	f7ff ff98 	bl	c804 <_puts_r>
    c8d4:	bd08      	pop	{r3, pc}
    c8d6:	46c0      	nop			; (mov r8, r8)
    c8d8:	200000c0 	.word	0x200000c0

0000c8dc <_sbrk_r>:
    c8dc:	b538      	push	{r3, r4, r5, lr}
    c8de:	2300      	movs	r3, #0
    c8e0:	4c06      	ldr	r4, [pc, #24]	; (c8fc <_sbrk_r+0x20>)
    c8e2:	1c05      	adds	r5, r0, #0
    c8e4:	1c08      	adds	r0, r1, #0
    c8e6:	6023      	str	r3, [r4, #0]
    c8e8:	f7fc fb20 	bl	8f2c <_sbrk>
    c8ec:	1c43      	adds	r3, r0, #1
    c8ee:	d103      	bne.n	c8f8 <_sbrk_r+0x1c>
    c8f0:	6823      	ldr	r3, [r4, #0]
    c8f2:	2b00      	cmp	r3, #0
    c8f4:	d000      	beq.n	c8f8 <_sbrk_r+0x1c>
    c8f6:	602b      	str	r3, [r5, #0]
    c8f8:	bd38      	pop	{r3, r4, r5, pc}
    c8fa:	46c0      	nop			; (mov r8, r8)
    c8fc:	20000b2c 	.word	0x20000b2c

0000c900 <siprintf>:
    c900:	b40e      	push	{r1, r2, r3}
    c902:	b510      	push	{r4, lr}
    c904:	b09d      	sub	sp, #116	; 0x74
    c906:	a902      	add	r1, sp, #8
    c908:	9002      	str	r0, [sp, #8]
    c90a:	6108      	str	r0, [r1, #16]
    c90c:	480b      	ldr	r0, [pc, #44]	; (c93c <siprintf+0x3c>)
    c90e:	2482      	movs	r4, #130	; 0x82
    c910:	6088      	str	r0, [r1, #8]
    c912:	6148      	str	r0, [r1, #20]
    c914:	2001      	movs	r0, #1
    c916:	4240      	negs	r0, r0
    c918:	ab1f      	add	r3, sp, #124	; 0x7c
    c91a:	81c8      	strh	r0, [r1, #14]
    c91c:	4808      	ldr	r0, [pc, #32]	; (c940 <siprintf+0x40>)
    c91e:	cb04      	ldmia	r3!, {r2}
    c920:	00a4      	lsls	r4, r4, #2
    c922:	6800      	ldr	r0, [r0, #0]
    c924:	9301      	str	r3, [sp, #4]
    c926:	818c      	strh	r4, [r1, #12]
    c928:	f000 feee 	bl	d708 <_svfiprintf_r>
    c92c:	2300      	movs	r3, #0
    c92e:	9a02      	ldr	r2, [sp, #8]
    c930:	7013      	strb	r3, [r2, #0]
    c932:	b01d      	add	sp, #116	; 0x74
    c934:	bc10      	pop	{r4}
    c936:	bc08      	pop	{r3}
    c938:	b003      	add	sp, #12
    c93a:	4718      	bx	r3
    c93c:	7fffffff 	.word	0x7fffffff
    c940:	200000c0 	.word	0x200000c0

0000c944 <siscanf>:
    c944:	b40e      	push	{r1, r2, r3}
    c946:	2381      	movs	r3, #129	; 0x81
    c948:	b570      	push	{r4, r5, r6, lr}
    c94a:	b09d      	sub	sp, #116	; 0x74
    c94c:	ac02      	add	r4, sp, #8
    c94e:	ad21      	add	r5, sp, #132	; 0x84
    c950:	009b      	lsls	r3, r3, #2
    c952:	cd40      	ldmia	r5!, {r6}
    c954:	81a3      	strh	r3, [r4, #12]
    c956:	9002      	str	r0, [sp, #8]
    c958:	9006      	str	r0, [sp, #24]
    c95a:	f000 fa43 	bl	cde4 <strlen>
    c95e:	4b0b      	ldr	r3, [pc, #44]	; (c98c <siscanf+0x48>)
    c960:	6060      	str	r0, [r4, #4]
    c962:	6263      	str	r3, [r4, #36]	; 0x24
    c964:	2300      	movs	r3, #0
    c966:	6363      	str	r3, [r4, #52]	; 0x34
    c968:	64a3      	str	r3, [r4, #72]	; 0x48
    c96a:	3b01      	subs	r3, #1
    c96c:	81e3      	strh	r3, [r4, #14]
    c96e:	4b08      	ldr	r3, [pc, #32]	; (c990 <siscanf+0x4c>)
    c970:	6160      	str	r0, [r4, #20]
    c972:	1c21      	adds	r1, r4, #0
    c974:	6818      	ldr	r0, [r3, #0]
    c976:	1c32      	adds	r2, r6, #0
    c978:	1c2b      	adds	r3, r5, #0
    c97a:	9501      	str	r5, [sp, #4]
    c97c:	f001 f816 	bl	d9ac <__ssvfiscanf_r>
    c980:	b01d      	add	sp, #116	; 0x74
    c982:	bc70      	pop	{r4, r5, r6}
    c984:	bc08      	pop	{r3}
    c986:	b003      	add	sp, #12
    c988:	4718      	bx	r3
    c98a:	46c0      	nop			; (mov r8, r8)
    c98c:	0000c9bd 	.word	0x0000c9bd
    c990:	200000c0 	.word	0x200000c0

0000c994 <__sread>:
    c994:	b538      	push	{r3, r4, r5, lr}
    c996:	1c0c      	adds	r4, r1, #0
    c998:	250e      	movs	r5, #14
    c99a:	5f49      	ldrsh	r1, [r1, r5]
    c99c:	f001 fb12 	bl	dfc4 <_read_r>
    c9a0:	2800      	cmp	r0, #0
    c9a2:	db03      	blt.n	c9ac <__sread+0x18>
    c9a4:	6d63      	ldr	r3, [r4, #84]	; 0x54
    c9a6:	181b      	adds	r3, r3, r0
    c9a8:	6563      	str	r3, [r4, #84]	; 0x54
    c9aa:	e003      	b.n	c9b4 <__sread+0x20>
    c9ac:	89a2      	ldrh	r2, [r4, #12]
    c9ae:	4b02      	ldr	r3, [pc, #8]	; (c9b8 <__sread+0x24>)
    c9b0:	4013      	ands	r3, r2
    c9b2:	81a3      	strh	r3, [r4, #12]
    c9b4:	bd38      	pop	{r3, r4, r5, pc}
    c9b6:	46c0      	nop			; (mov r8, r8)
    c9b8:	ffffefff 	.word	0xffffefff

0000c9bc <__seofread>:
    c9bc:	2000      	movs	r0, #0
    c9be:	4770      	bx	lr

0000c9c0 <__swrite>:
    c9c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    c9c2:	1c1e      	adds	r6, r3, #0
    c9c4:	898b      	ldrh	r3, [r1, #12]
    c9c6:	1c05      	adds	r5, r0, #0
    c9c8:	1c0c      	adds	r4, r1, #0
    c9ca:	1c17      	adds	r7, r2, #0
    c9cc:	05db      	lsls	r3, r3, #23
    c9ce:	d505      	bpl.n	c9dc <__swrite+0x1c>
    c9d0:	230e      	movs	r3, #14
    c9d2:	5ec9      	ldrsh	r1, [r1, r3]
    c9d4:	2200      	movs	r2, #0
    c9d6:	2302      	movs	r3, #2
    c9d8:	f000 fda4 	bl	d524 <_lseek_r>
    c9dc:	89a2      	ldrh	r2, [r4, #12]
    c9de:	4b05      	ldr	r3, [pc, #20]	; (c9f4 <__swrite+0x34>)
    c9e0:	1c28      	adds	r0, r5, #0
    c9e2:	4013      	ands	r3, r2
    c9e4:	81a3      	strh	r3, [r4, #12]
    c9e6:	1c3a      	adds	r2, r7, #0
    c9e8:	230e      	movs	r3, #14
    c9ea:	5ee1      	ldrsh	r1, [r4, r3]
    c9ec:	1c33      	adds	r3, r6, #0
    c9ee:	f000 fb75 	bl	d0dc <_write_r>
    c9f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    c9f4:	ffffefff 	.word	0xffffefff

0000c9f8 <__sseek>:
    c9f8:	b538      	push	{r3, r4, r5, lr}
    c9fa:	1c0c      	adds	r4, r1, #0
    c9fc:	250e      	movs	r5, #14
    c9fe:	5f49      	ldrsh	r1, [r1, r5]
    ca00:	f000 fd90 	bl	d524 <_lseek_r>
    ca04:	89a3      	ldrh	r3, [r4, #12]
    ca06:	1c42      	adds	r2, r0, #1
    ca08:	d103      	bne.n	ca12 <__sseek+0x1a>
    ca0a:	4a05      	ldr	r2, [pc, #20]	; (ca20 <__sseek+0x28>)
    ca0c:	4013      	ands	r3, r2
    ca0e:	81a3      	strh	r3, [r4, #12]
    ca10:	e004      	b.n	ca1c <__sseek+0x24>
    ca12:	2280      	movs	r2, #128	; 0x80
    ca14:	0152      	lsls	r2, r2, #5
    ca16:	4313      	orrs	r3, r2
    ca18:	81a3      	strh	r3, [r4, #12]
    ca1a:	6560      	str	r0, [r4, #84]	; 0x54
    ca1c:	bd38      	pop	{r3, r4, r5, pc}
    ca1e:	46c0      	nop			; (mov r8, r8)
    ca20:	ffffefff 	.word	0xffffefff

0000ca24 <__sclose>:
    ca24:	b508      	push	{r3, lr}
    ca26:	230e      	movs	r3, #14
    ca28:	5ec9      	ldrsh	r1, [r1, r3]
    ca2a:	f000 fbdf 	bl	d1ec <_close_r>
    ca2e:	bd08      	pop	{r3, pc}

0000ca30 <strcmp>:
    ca30:	7802      	ldrb	r2, [r0, #0]
    ca32:	780b      	ldrb	r3, [r1, #0]
    ca34:	2a00      	cmp	r2, #0
    ca36:	d003      	beq.n	ca40 <strcmp+0x10>
    ca38:	3001      	adds	r0, #1
    ca3a:	3101      	adds	r1, #1
    ca3c:	429a      	cmp	r2, r3
    ca3e:	d0f7      	beq.n	ca30 <strcmp>
    ca40:	1ad0      	subs	r0, r2, r3
    ca42:	4770      	bx	lr

0000ca44 <strcpy>:
    ca44:	1c03      	adds	r3, r0, #0
    ca46:	780a      	ldrb	r2, [r1, #0]
    ca48:	3101      	adds	r1, #1
    ca4a:	701a      	strb	r2, [r3, #0]
    ca4c:	3301      	adds	r3, #1
    ca4e:	2a00      	cmp	r2, #0
    ca50:	d1f9      	bne.n	ca46 <strcpy+0x2>
    ca52:	4770      	bx	lr

0000ca54 <strdup>:
    ca54:	b508      	push	{r3, lr}
    ca56:	4b03      	ldr	r3, [pc, #12]	; (ca64 <strdup+0x10>)
    ca58:	1c01      	adds	r1, r0, #0
    ca5a:	6818      	ldr	r0, [r3, #0]
    ca5c:	f000 f804 	bl	ca68 <_strdup_r>
    ca60:	bd08      	pop	{r3, pc}
    ca62:	46c0      	nop			; (mov r8, r8)
    ca64:	200000c0 	.word	0x200000c0

0000ca68 <_strdup_r>:
    ca68:	b570      	push	{r4, r5, r6, lr}
    ca6a:	1c05      	adds	r5, r0, #0
    ca6c:	1c08      	adds	r0, r1, #0
    ca6e:	1c0e      	adds	r6, r1, #0
    ca70:	f000 f9b8 	bl	cde4 <strlen>
    ca74:	1c44      	adds	r4, r0, #1
    ca76:	1c21      	adds	r1, r4, #0
    ca78:	1c28      	adds	r0, r5, #0
    ca7a:	f7ff fb7f 	bl	c17c <_malloc_r>
    ca7e:	1e05      	subs	r5, r0, #0
    ca80:	d003      	beq.n	ca8a <_strdup_r+0x22>
    ca82:	1c31      	adds	r1, r6, #0
    ca84:	1c22      	adds	r2, r4, #0
    ca86:	f7ff fb0e 	bl	c0a6 <memcpy>
    ca8a:	1c28      	adds	r0, r5, #0
    ca8c:	bd70      	pop	{r4, r5, r6, pc}
	...

0000ca90 <_strerror_r>:
    ca90:	b510      	push	{r4, lr}
    ca92:	1c04      	adds	r4, r0, #0
    ca94:	298e      	cmp	r1, #142	; 0x8e
    ca96:	d900      	bls.n	ca9a <_strerror_r+0xa>
    ca98:	e0e8      	b.n	cc6c <_strerror_r+0x1dc>
    ca9a:	1c08      	adds	r0, r1, #0
    ca9c:	f001 fbca 	bl	e234 <__gnu_thumb1_case_uqi>
    caa0:	4c4a48f2 	.word	0x4c4a48f2
    caa4:	5452504e 	.word	0x5452504e
    caa8:	605c5a56 	.word	0x605c5a56
    caac:	e6666462 	.word	0xe6666462
    cab0:	6e6c6a68 	.word	0x6e6c6a68
    cab4:	7e787670 	.word	0x7e787670
    cab8:	86848280 	.word	0x86848280
    cabc:	92908e8a 	.word	0x92908e8a
    cac0:	9a989694 	.word	0x9a989694
    cac4:	e6e6e69c 	.word	0xe6e6e69c
    cac8:	e6e6e6e6 	.word	0xe6e6e6e6
    cacc:	e6a4a0e6 	.word	0xe6a4a0e6
    cad0:	e6e6e6e6 	.word	0xe6e6e6e6
    cad4:	e6e6e6e6 	.word	0xe6e6e6e6
    cad8:	e6e6e6e6 	.word	0xe6e6e6e6
    cadc:	aaa8c0a6 	.word	0xaaa8c0a6
    cae0:	ace6e6e6 	.word	0xace6e6e6
    cae4:	aee6e6e6 	.word	0xaee6e6e6
    cae8:	e6b2e6e6 	.word	0xe6b2e6e6
    caec:	e6e6b4e6 	.word	0xe6e6b4e6
    caf0:	e6e6e6e6 	.word	0xe6e6e6e6
    caf4:	e6e6e6e6 	.word	0xe6e6e6e6
    caf8:	bab8e6b6 	.word	0xbab8e6b6
    cafc:	dee6e6bc 	.word	0xdee6e6bc
    cb00:	e6e6e6e6 	.word	0xe6e6e6e6
    cb04:	e6e6e6e6 	.word	0xe6e6e6e6
    cb08:	c4c2becc 	.word	0xc4c2becc
    cb0c:	cae6c8c6 	.word	0xcae6c8c6
    cb10:	7aa2d2ce 	.word	0x7aa2d2ce
    cb14:	748872e4 	.word	0x748872e4
    cb18:	b0e25e58 	.word	0xb0e25e58
    cb1c:	d67cd0e6 	.word	0xd67cd0e6
    cb20:	e6e6e6d4 	.word	0xe6e6e6d4
    cb24:	e68ce6e6 	.word	0xe68ce6e6
    cb28:	e09ee6e6 	.word	0xe09ee6e6
    cb2c:	dad8      	.short	0xdad8
    cb2e:	dc          	.byte	0xdc
    cb2f:	00          	.byte	0x00
    cb30:	4855      	ldr	r0, [pc, #340]	; (cc88 <_strerror_r+0x1f8>)
    cb32:	e0a8      	b.n	cc86 <_strerror_r+0x1f6>
    cb34:	4855      	ldr	r0, [pc, #340]	; (cc8c <_strerror_r+0x1fc>)
    cb36:	e0a6      	b.n	cc86 <_strerror_r+0x1f6>
    cb38:	4855      	ldr	r0, [pc, #340]	; (cc90 <_strerror_r+0x200>)
    cb3a:	e0a4      	b.n	cc86 <_strerror_r+0x1f6>
    cb3c:	4855      	ldr	r0, [pc, #340]	; (cc94 <_strerror_r+0x204>)
    cb3e:	e0a2      	b.n	cc86 <_strerror_r+0x1f6>
    cb40:	4855      	ldr	r0, [pc, #340]	; (cc98 <_strerror_r+0x208>)
    cb42:	e0a0      	b.n	cc86 <_strerror_r+0x1f6>
    cb44:	4855      	ldr	r0, [pc, #340]	; (cc9c <_strerror_r+0x20c>)
    cb46:	e09e      	b.n	cc86 <_strerror_r+0x1f6>
    cb48:	4855      	ldr	r0, [pc, #340]	; (cca0 <_strerror_r+0x210>)
    cb4a:	e09c      	b.n	cc86 <_strerror_r+0x1f6>
    cb4c:	4855      	ldr	r0, [pc, #340]	; (cca4 <_strerror_r+0x214>)
    cb4e:	e09a      	b.n	cc86 <_strerror_r+0x1f6>
    cb50:	4855      	ldr	r0, [pc, #340]	; (cca8 <_strerror_r+0x218>)
    cb52:	e098      	b.n	cc86 <_strerror_r+0x1f6>
    cb54:	4855      	ldr	r0, [pc, #340]	; (ccac <_strerror_r+0x21c>)
    cb56:	e096      	b.n	cc86 <_strerror_r+0x1f6>
    cb58:	4855      	ldr	r0, [pc, #340]	; (ccb0 <_strerror_r+0x220>)
    cb5a:	e094      	b.n	cc86 <_strerror_r+0x1f6>
    cb5c:	4855      	ldr	r0, [pc, #340]	; (ccb4 <_strerror_r+0x224>)
    cb5e:	e092      	b.n	cc86 <_strerror_r+0x1f6>
    cb60:	4855      	ldr	r0, [pc, #340]	; (ccb8 <_strerror_r+0x228>)
    cb62:	e090      	b.n	cc86 <_strerror_r+0x1f6>
    cb64:	4855      	ldr	r0, [pc, #340]	; (ccbc <_strerror_r+0x22c>)
    cb66:	e08e      	b.n	cc86 <_strerror_r+0x1f6>
    cb68:	4855      	ldr	r0, [pc, #340]	; (ccc0 <_strerror_r+0x230>)
    cb6a:	e08c      	b.n	cc86 <_strerror_r+0x1f6>
    cb6c:	4855      	ldr	r0, [pc, #340]	; (ccc4 <_strerror_r+0x234>)
    cb6e:	e08a      	b.n	cc86 <_strerror_r+0x1f6>
    cb70:	4855      	ldr	r0, [pc, #340]	; (ccc8 <_strerror_r+0x238>)
    cb72:	e088      	b.n	cc86 <_strerror_r+0x1f6>
    cb74:	4855      	ldr	r0, [pc, #340]	; (cccc <_strerror_r+0x23c>)
    cb76:	e086      	b.n	cc86 <_strerror_r+0x1f6>
    cb78:	4855      	ldr	r0, [pc, #340]	; (ccd0 <_strerror_r+0x240>)
    cb7a:	e084      	b.n	cc86 <_strerror_r+0x1f6>
    cb7c:	4855      	ldr	r0, [pc, #340]	; (ccd4 <_strerror_r+0x244>)
    cb7e:	e082      	b.n	cc86 <_strerror_r+0x1f6>
    cb80:	4855      	ldr	r0, [pc, #340]	; (ccd8 <_strerror_r+0x248>)
    cb82:	e080      	b.n	cc86 <_strerror_r+0x1f6>
    cb84:	4855      	ldr	r0, [pc, #340]	; (ccdc <_strerror_r+0x24c>)
    cb86:	e07e      	b.n	cc86 <_strerror_r+0x1f6>
    cb88:	4855      	ldr	r0, [pc, #340]	; (cce0 <_strerror_r+0x250>)
    cb8a:	e07c      	b.n	cc86 <_strerror_r+0x1f6>
    cb8c:	4855      	ldr	r0, [pc, #340]	; (cce4 <_strerror_r+0x254>)
    cb8e:	e07a      	b.n	cc86 <_strerror_r+0x1f6>
    cb90:	4855      	ldr	r0, [pc, #340]	; (cce8 <_strerror_r+0x258>)
    cb92:	e078      	b.n	cc86 <_strerror_r+0x1f6>
    cb94:	4855      	ldr	r0, [pc, #340]	; (ccec <_strerror_r+0x25c>)
    cb96:	e076      	b.n	cc86 <_strerror_r+0x1f6>
    cb98:	4855      	ldr	r0, [pc, #340]	; (ccf0 <_strerror_r+0x260>)
    cb9a:	e074      	b.n	cc86 <_strerror_r+0x1f6>
    cb9c:	4855      	ldr	r0, [pc, #340]	; (ccf4 <_strerror_r+0x264>)
    cb9e:	e072      	b.n	cc86 <_strerror_r+0x1f6>
    cba0:	4855      	ldr	r0, [pc, #340]	; (ccf8 <_strerror_r+0x268>)
    cba2:	e070      	b.n	cc86 <_strerror_r+0x1f6>
    cba4:	4855      	ldr	r0, [pc, #340]	; (ccfc <_strerror_r+0x26c>)
    cba6:	e06e      	b.n	cc86 <_strerror_r+0x1f6>
    cba8:	4855      	ldr	r0, [pc, #340]	; (cd00 <_strerror_r+0x270>)
    cbaa:	e06c      	b.n	cc86 <_strerror_r+0x1f6>
    cbac:	4855      	ldr	r0, [pc, #340]	; (cd04 <_strerror_r+0x274>)
    cbae:	e06a      	b.n	cc86 <_strerror_r+0x1f6>
    cbb0:	4855      	ldr	r0, [pc, #340]	; (cd08 <_strerror_r+0x278>)
    cbb2:	e068      	b.n	cc86 <_strerror_r+0x1f6>
    cbb4:	4855      	ldr	r0, [pc, #340]	; (cd0c <_strerror_r+0x27c>)
    cbb6:	e066      	b.n	cc86 <_strerror_r+0x1f6>
    cbb8:	4855      	ldr	r0, [pc, #340]	; (cd10 <_strerror_r+0x280>)
    cbba:	e064      	b.n	cc86 <_strerror_r+0x1f6>
    cbbc:	4855      	ldr	r0, [pc, #340]	; (cd14 <_strerror_r+0x284>)
    cbbe:	e062      	b.n	cc86 <_strerror_r+0x1f6>
    cbc0:	4855      	ldr	r0, [pc, #340]	; (cd18 <_strerror_r+0x288>)
    cbc2:	e060      	b.n	cc86 <_strerror_r+0x1f6>
    cbc4:	4855      	ldr	r0, [pc, #340]	; (cd1c <_strerror_r+0x28c>)
    cbc6:	e05e      	b.n	cc86 <_strerror_r+0x1f6>
    cbc8:	4855      	ldr	r0, [pc, #340]	; (cd20 <_strerror_r+0x290>)
    cbca:	e05c      	b.n	cc86 <_strerror_r+0x1f6>
    cbcc:	4855      	ldr	r0, [pc, #340]	; (cd24 <_strerror_r+0x294>)
    cbce:	e05a      	b.n	cc86 <_strerror_r+0x1f6>
    cbd0:	4855      	ldr	r0, [pc, #340]	; (cd28 <_strerror_r+0x298>)
    cbd2:	e058      	b.n	cc86 <_strerror_r+0x1f6>
    cbd4:	4855      	ldr	r0, [pc, #340]	; (cd2c <_strerror_r+0x29c>)
    cbd6:	e056      	b.n	cc86 <_strerror_r+0x1f6>
    cbd8:	4855      	ldr	r0, [pc, #340]	; (cd30 <_strerror_r+0x2a0>)
    cbda:	e054      	b.n	cc86 <_strerror_r+0x1f6>
    cbdc:	4855      	ldr	r0, [pc, #340]	; (cd34 <_strerror_r+0x2a4>)
    cbde:	e052      	b.n	cc86 <_strerror_r+0x1f6>
    cbe0:	4855      	ldr	r0, [pc, #340]	; (cd38 <_strerror_r+0x2a8>)
    cbe2:	e050      	b.n	cc86 <_strerror_r+0x1f6>
    cbe4:	4855      	ldr	r0, [pc, #340]	; (cd3c <_strerror_r+0x2ac>)
    cbe6:	e04e      	b.n	cc86 <_strerror_r+0x1f6>
    cbe8:	4855      	ldr	r0, [pc, #340]	; (cd40 <_strerror_r+0x2b0>)
    cbea:	e04c      	b.n	cc86 <_strerror_r+0x1f6>
    cbec:	4855      	ldr	r0, [pc, #340]	; (cd44 <_strerror_r+0x2b4>)
    cbee:	e04a      	b.n	cc86 <_strerror_r+0x1f6>
    cbf0:	4855      	ldr	r0, [pc, #340]	; (cd48 <_strerror_r+0x2b8>)
    cbf2:	e048      	b.n	cc86 <_strerror_r+0x1f6>
    cbf4:	4855      	ldr	r0, [pc, #340]	; (cd4c <_strerror_r+0x2bc>)
    cbf6:	e046      	b.n	cc86 <_strerror_r+0x1f6>
    cbf8:	4855      	ldr	r0, [pc, #340]	; (cd50 <_strerror_r+0x2c0>)
    cbfa:	e044      	b.n	cc86 <_strerror_r+0x1f6>
    cbfc:	4855      	ldr	r0, [pc, #340]	; (cd54 <_strerror_r+0x2c4>)
    cbfe:	e042      	b.n	cc86 <_strerror_r+0x1f6>
    cc00:	4855      	ldr	r0, [pc, #340]	; (cd58 <_strerror_r+0x2c8>)
    cc02:	e040      	b.n	cc86 <_strerror_r+0x1f6>
    cc04:	4855      	ldr	r0, [pc, #340]	; (cd5c <_strerror_r+0x2cc>)
    cc06:	e03e      	b.n	cc86 <_strerror_r+0x1f6>
    cc08:	4855      	ldr	r0, [pc, #340]	; (cd60 <_strerror_r+0x2d0>)
    cc0a:	e03c      	b.n	cc86 <_strerror_r+0x1f6>
    cc0c:	4855      	ldr	r0, [pc, #340]	; (cd64 <_strerror_r+0x2d4>)
    cc0e:	e03a      	b.n	cc86 <_strerror_r+0x1f6>
    cc10:	4855      	ldr	r0, [pc, #340]	; (cd68 <_strerror_r+0x2d8>)
    cc12:	e038      	b.n	cc86 <_strerror_r+0x1f6>
    cc14:	4855      	ldr	r0, [pc, #340]	; (cd6c <_strerror_r+0x2dc>)
    cc16:	e036      	b.n	cc86 <_strerror_r+0x1f6>
    cc18:	4855      	ldr	r0, [pc, #340]	; (cd70 <_strerror_r+0x2e0>)
    cc1a:	e034      	b.n	cc86 <_strerror_r+0x1f6>
    cc1c:	4855      	ldr	r0, [pc, #340]	; (cd74 <_strerror_r+0x2e4>)
    cc1e:	e032      	b.n	cc86 <_strerror_r+0x1f6>
    cc20:	4855      	ldr	r0, [pc, #340]	; (cd78 <_strerror_r+0x2e8>)
    cc22:	e030      	b.n	cc86 <_strerror_r+0x1f6>
    cc24:	4855      	ldr	r0, [pc, #340]	; (cd7c <_strerror_r+0x2ec>)
    cc26:	e02e      	b.n	cc86 <_strerror_r+0x1f6>
    cc28:	4855      	ldr	r0, [pc, #340]	; (cd80 <_strerror_r+0x2f0>)
    cc2a:	e02c      	b.n	cc86 <_strerror_r+0x1f6>
    cc2c:	4855      	ldr	r0, [pc, #340]	; (cd84 <_strerror_r+0x2f4>)
    cc2e:	e02a      	b.n	cc86 <_strerror_r+0x1f6>
    cc30:	4855      	ldr	r0, [pc, #340]	; (cd88 <_strerror_r+0x2f8>)
    cc32:	e028      	b.n	cc86 <_strerror_r+0x1f6>
    cc34:	4855      	ldr	r0, [pc, #340]	; (cd8c <_strerror_r+0x2fc>)
    cc36:	e026      	b.n	cc86 <_strerror_r+0x1f6>
    cc38:	4855      	ldr	r0, [pc, #340]	; (cd90 <_strerror_r+0x300>)
    cc3a:	e024      	b.n	cc86 <_strerror_r+0x1f6>
    cc3c:	4855      	ldr	r0, [pc, #340]	; (cd94 <_strerror_r+0x304>)
    cc3e:	e022      	b.n	cc86 <_strerror_r+0x1f6>
    cc40:	4855      	ldr	r0, [pc, #340]	; (cd98 <_strerror_r+0x308>)
    cc42:	e020      	b.n	cc86 <_strerror_r+0x1f6>
    cc44:	4855      	ldr	r0, [pc, #340]	; (cd9c <_strerror_r+0x30c>)
    cc46:	e01e      	b.n	cc86 <_strerror_r+0x1f6>
    cc48:	4855      	ldr	r0, [pc, #340]	; (cda0 <_strerror_r+0x310>)
    cc4a:	e01c      	b.n	cc86 <_strerror_r+0x1f6>
    cc4c:	4855      	ldr	r0, [pc, #340]	; (cda4 <_strerror_r+0x314>)
    cc4e:	e01a      	b.n	cc86 <_strerror_r+0x1f6>
    cc50:	4855      	ldr	r0, [pc, #340]	; (cda8 <_strerror_r+0x318>)
    cc52:	e018      	b.n	cc86 <_strerror_r+0x1f6>
    cc54:	4855      	ldr	r0, [pc, #340]	; (cdac <_strerror_r+0x31c>)
    cc56:	e016      	b.n	cc86 <_strerror_r+0x1f6>
    cc58:	4855      	ldr	r0, [pc, #340]	; (cdb0 <_strerror_r+0x320>)
    cc5a:	e014      	b.n	cc86 <_strerror_r+0x1f6>
    cc5c:	4855      	ldr	r0, [pc, #340]	; (cdb4 <_strerror_r+0x324>)
    cc5e:	e012      	b.n	cc86 <_strerror_r+0x1f6>
    cc60:	4855      	ldr	r0, [pc, #340]	; (cdb8 <_strerror_r+0x328>)
    cc62:	e010      	b.n	cc86 <_strerror_r+0x1f6>
    cc64:	4855      	ldr	r0, [pc, #340]	; (cdbc <_strerror_r+0x32c>)
    cc66:	e00e      	b.n	cc86 <_strerror_r+0x1f6>
    cc68:	4855      	ldr	r0, [pc, #340]	; (cdc0 <_strerror_r+0x330>)
    cc6a:	e00c      	b.n	cc86 <_strerror_r+0x1f6>
    cc6c:	2b00      	cmp	r3, #0
    cc6e:	d100      	bne.n	cc72 <_strerror_r+0x1e2>
    cc70:	1c23      	adds	r3, r4, #0
    cc72:	1c08      	adds	r0, r1, #0
    cc74:	1c11      	adds	r1, r2, #0
    cc76:	1c1a      	adds	r2, r3, #0
    cc78:	f000 f99c 	bl	cfb4 <_user_strerror>
    cc7c:	2800      	cmp	r0, #0
    cc7e:	d102      	bne.n	cc86 <_strerror_r+0x1f6>
    cc80:	4850      	ldr	r0, [pc, #320]	; (cdc4 <_strerror_r+0x334>)
    cc82:	e000      	b.n	cc86 <_strerror_r+0x1f6>
    cc84:	4850      	ldr	r0, [pc, #320]	; (cdc8 <_strerror_r+0x338>)
    cc86:	bd10      	pop	{r4, pc}
    cc88:	00011fcb 	.word	0x00011fcb
    cc8c:	00011fd5 	.word	0x00011fd5
    cc90:	00011fef 	.word	0x00011fef
    cc94:	00011fff 	.word	0x00011fff
    cc98:	00012017 	.word	0x00012017
    cc9c:	00012021 	.word	0x00012021
    cca0:	0001203b 	.word	0x0001203b
    cca4:	0001204d 	.word	0x0001204d
    cca8:	0001205f 	.word	0x0001205f
    ccac:	00012078 	.word	0x00012078
    ccb0:	00012088 	.word	0x00012088
    ccb4:	00012094 	.word	0x00012094
    ccb8:	000120b1 	.word	0x000120b1
    ccbc:	000120c3 	.word	0x000120c3
    ccc0:	000120d4 	.word	0x000120d4
    ccc4:	000120e6 	.word	0x000120e6
    ccc8:	000120f2 	.word	0x000120f2
    cccc:	0001210a 	.word	0x0001210a
    ccd0:	00012116 	.word	0x00012116
    ccd4:	00012128 	.word	0x00012128
    ccd8:	00012137 	.word	0x00012137
    ccdc:	00012147 	.word	0x00012147
    cce0:	00012154 	.word	0x00012154
    cce4:	00012173 	.word	0x00012173
    cce8:	00012182 	.word	0x00012182
    ccec:	00012193 	.word	0x00012193
    ccf0:	000121b7 	.word	0x000121b7
    ccf4:	000121d5 	.word	0x000121d5
    ccf8:	000121f3 	.word	0x000121f3
    ccfc:	00012213 	.word	0x00012213
    cd00:	0001222a 	.word	0x0001222a
    cd04:	00012239 	.word	0x00012239
    cd08:	00012248 	.word	0x00012248
    cd0c:	0001225c 	.word	0x0001225c
    cd10:	00012274 	.word	0x00012274
    cd14:	00012282 	.word	0x00012282
    cd18:	0001228f 	.word	0x0001228f
    cd1c:	000122a5 	.word	0x000122a5
    cd20:	000122b4 	.word	0x000122b4
    cd24:	000122c0 	.word	0x000122c0
    cd28:	000122ef 	.word	0x000122ef
    cd2c:	00012300 	.word	0x00012300
    cd30:	0001231b 	.word	0x0001231b
    cd34:	0001232e 	.word	0x0001232e
    cd38:	00012344 	.word	0x00012344
    cd3c:	0001234d 	.word	0x0001234d
    cd40:	00012364 	.word	0x00012364
    cd44:	0001236c 	.word	0x0001236c
    cd48:	00012379 	.word	0x00012379
    cd4c:	0001238e 	.word	0x0001238e
    cd50:	000123a2 	.word	0x000123a2
    cd54:	000123ba 	.word	0x000123ba
    cd58:	000123c9 	.word	0x000123c9
    cd5c:	000123da 	.word	0x000123da
    cd60:	000123ed 	.word	0x000123ed
    cd64:	000123f9 	.word	0x000123f9
    cd68:	00012412 	.word	0x00012412
    cd6c:	00012426 	.word	0x00012426
    cd70:	00012441 	.word	0x00012441
    cd74:	00012459 	.word	0x00012459
    cd78:	00012473 	.word	0x00012473
    cd7c:	0001247b 	.word	0x0001247b
    cd80:	000124ab 	.word	0x000124ab
    cd84:	000124ca 	.word	0x000124ca
    cd88:	000124e9 	.word	0x000124e9
    cd8c:	00012500 	.word	0x00012500
    cd90:	00012513 	.word	0x00012513
    cd94:	0001252c 	.word	0x0001252c
    cd98:	00012543 	.word	0x00012543
    cd9c:	00012559 	.word	0x00012559
    cda0:	0001257a 	.word	0x0001257a
    cda4:	00012592 	.word	0x00012592
    cda8:	000125ae 	.word	0x000125ae
    cdac:	000125c1 	.word	0x000125c1
    cdb0:	000125d7 	.word	0x000125d7
    cdb4:	000125eb 	.word	0x000125eb
    cdb8:	0001260d 	.word	0x0001260d
    cdbc:	00012633 	.word	0x00012633
    cdc0:	00012644 	.word	0x00012644
    cdc4:	00011f95 	.word	0x00011f95
    cdc8:	00011fc3 	.word	0x00011fc3

0000cdcc <strerror>:
    cdcc:	2200      	movs	r2, #0
    cdce:	b508      	push	{r3, lr}
    cdd0:	4b03      	ldr	r3, [pc, #12]	; (cde0 <strerror+0x14>)
    cdd2:	1c01      	adds	r1, r0, #0
    cdd4:	6818      	ldr	r0, [r3, #0]
    cdd6:	1c13      	adds	r3, r2, #0
    cdd8:	f7ff fe5a 	bl	ca90 <_strerror_r>
    cddc:	bd08      	pop	{r3, pc}
    cdde:	46c0      	nop			; (mov r8, r8)
    cde0:	200000c0 	.word	0x200000c0

0000cde4 <strlen>:
    cde4:	2300      	movs	r3, #0
    cde6:	5cc2      	ldrb	r2, [r0, r3]
    cde8:	3301      	adds	r3, #1
    cdea:	2a00      	cmp	r2, #0
    cdec:	d1fb      	bne.n	cde6 <strlen+0x2>
    cdee:	1e58      	subs	r0, r3, #1
    cdf0:	4770      	bx	lr

0000cdf2 <strncmp>:
    cdf2:	2300      	movs	r3, #0
    cdf4:	b530      	push	{r4, r5, lr}
    cdf6:	429a      	cmp	r2, r3
    cdf8:	d00d      	beq.n	ce16 <strncmp+0x24>
    cdfa:	3a01      	subs	r2, #1
    cdfc:	5cc4      	ldrb	r4, [r0, r3]
    cdfe:	5ccd      	ldrb	r5, [r1, r3]
    ce00:	42ac      	cmp	r4, r5
    ce02:	d102      	bne.n	ce0a <strncmp+0x18>
    ce04:	4293      	cmp	r3, r2
    ce06:	d102      	bne.n	ce0e <strncmp+0x1c>
    ce08:	1c25      	adds	r5, r4, #0
    ce0a:	1b63      	subs	r3, r4, r5
    ce0c:	e003      	b.n	ce16 <strncmp+0x24>
    ce0e:	3301      	adds	r3, #1
    ce10:	2c00      	cmp	r4, #0
    ce12:	d1f3      	bne.n	cdfc <strncmp+0xa>
    ce14:	e7f8      	b.n	ce08 <strncmp+0x16>
    ce16:	1c18      	adds	r0, r3, #0
    ce18:	bd30      	pop	{r4, r5, pc}

0000ce1a <strncpy>:
    ce1a:	1c03      	adds	r3, r0, #0
    ce1c:	b530      	push	{r4, r5, lr}
    ce1e:	2a00      	cmp	r2, #0
    ce20:	d007      	beq.n	ce32 <strncpy+0x18>
    ce22:	780c      	ldrb	r4, [r1, #0]
    ce24:	3301      	adds	r3, #1
    ce26:	1e5d      	subs	r5, r3, #1
    ce28:	3a01      	subs	r2, #1
    ce2a:	702c      	strb	r4, [r5, #0]
    ce2c:	3101      	adds	r1, #1
    ce2e:	2c00      	cmp	r4, #0
    ce30:	d1f5      	bne.n	ce1e <strncpy+0x4>
    ce32:	189a      	adds	r2, r3, r2
    ce34:	4293      	cmp	r3, r2
    ce36:	d003      	beq.n	ce40 <strncpy+0x26>
    ce38:	2100      	movs	r1, #0
    ce3a:	7019      	strb	r1, [r3, #0]
    ce3c:	3301      	adds	r3, #1
    ce3e:	e7f9      	b.n	ce34 <strncpy+0x1a>
    ce40:	bd30      	pop	{r4, r5, pc}

0000ce42 <strstr>:
    ce42:	b510      	push	{r4, lr}
    ce44:	7803      	ldrb	r3, [r0, #0]
    ce46:	1c02      	adds	r2, r0, #0
    ce48:	2b00      	cmp	r3, #0
    ce4a:	d105      	bne.n	ce58 <strstr+0x16>
    ce4c:	7809      	ldrb	r1, [r1, #0]
    ce4e:	1c18      	adds	r0, r3, #0
    ce50:	2900      	cmp	r1, #0
    ce52:	d00f      	beq.n	ce74 <strstr+0x32>
    ce54:	e00f      	b.n	ce76 <strstr+0x34>
    ce56:	3201      	adds	r2, #1
    ce58:	7813      	ldrb	r3, [r2, #0]
    ce5a:	2b00      	cmp	r3, #0
    ce5c:	d008      	beq.n	ce70 <strstr+0x2e>
    ce5e:	2300      	movs	r3, #0
    ce60:	5cc8      	ldrb	r0, [r1, r3]
    ce62:	2800      	cmp	r0, #0
    ce64:	d006      	beq.n	ce74 <strstr+0x32>
    ce66:	5cd4      	ldrb	r4, [r2, r3]
    ce68:	4284      	cmp	r4, r0
    ce6a:	d1f4      	bne.n	ce56 <strstr+0x14>
    ce6c:	3301      	adds	r3, #1
    ce6e:	e7f7      	b.n	ce60 <strstr+0x1e>
    ce70:	1c18      	adds	r0, r3, #0
    ce72:	e000      	b.n	ce76 <strstr+0x34>
    ce74:	1c10      	adds	r0, r2, #0
    ce76:	bd10      	pop	{r4, pc}

0000ce78 <_strtol_r>:
    ce78:	b5f0      	push	{r4, r5, r6, r7, lr}
    ce7a:	1c1e      	adds	r6, r3, #0
    ce7c:	4b44      	ldr	r3, [pc, #272]	; (cf90 <_strtol_r+0x118>)
    ce7e:	b087      	sub	sp, #28
    ce80:	681b      	ldr	r3, [r3, #0]
    ce82:	9005      	str	r0, [sp, #20]
    ce84:	9302      	str	r3, [sp, #8]
    ce86:	1c0b      	adds	r3, r1, #0
    ce88:	9103      	str	r1, [sp, #12]
    ce8a:	9201      	str	r2, [sp, #4]
    ce8c:	781c      	ldrb	r4, [r3, #0]
    ce8e:	9a02      	ldr	r2, [sp, #8]
    ce90:	1c5d      	adds	r5, r3, #1
    ce92:	1912      	adds	r2, r2, r4
    ce94:	7850      	ldrb	r0, [r2, #1]
    ce96:	2208      	movs	r2, #8
    ce98:	4010      	ands	r0, r2
    ce9a:	d001      	beq.n	cea0 <_strtol_r+0x28>
    ce9c:	1c2b      	adds	r3, r5, #0
    ce9e:	e7f5      	b.n	ce8c <_strtol_r+0x14>
    cea0:	2c2d      	cmp	r4, #45	; 0x2d
    cea2:	d104      	bne.n	ceae <_strtol_r+0x36>
    cea4:	1c9d      	adds	r5, r3, #2
    cea6:	785c      	ldrb	r4, [r3, #1]
    cea8:	2301      	movs	r3, #1
    ceaa:	9300      	str	r3, [sp, #0]
    ceac:	e004      	b.n	ceb8 <_strtol_r+0x40>
    ceae:	9000      	str	r0, [sp, #0]
    ceb0:	2c2b      	cmp	r4, #43	; 0x2b
    ceb2:	d101      	bne.n	ceb8 <_strtol_r+0x40>
    ceb4:	785c      	ldrb	r4, [r3, #1]
    ceb6:	1c9d      	adds	r5, r3, #2
    ceb8:	2e00      	cmp	r6, #0
    ceba:	d002      	beq.n	cec2 <_strtol_r+0x4a>
    cebc:	2e10      	cmp	r6, #16
    cebe:	d10a      	bne.n	ced6 <_strtol_r+0x5e>
    cec0:	e060      	b.n	cf84 <_strtol_r+0x10c>
    cec2:	2c30      	cmp	r4, #48	; 0x30
    cec4:	d15c      	bne.n	cf80 <_strtol_r+0x108>
    cec6:	2220      	movs	r2, #32
    cec8:	782b      	ldrb	r3, [r5, #0]
    ceca:	4393      	bics	r3, r2
    cecc:	2b58      	cmp	r3, #88	; 0x58
    cece:	d152      	bne.n	cf76 <_strtol_r+0xfe>
    ced0:	2610      	movs	r6, #16
    ced2:	786c      	ldrb	r4, [r5, #1]
    ced4:	3502      	adds	r5, #2
    ced6:	9f00      	ldr	r7, [sp, #0]
    ced8:	1c31      	adds	r1, r6, #0
    ceda:	1e7b      	subs	r3, r7, #1
    cedc:	419f      	sbcs	r7, r3
    cede:	4b2d      	ldr	r3, [pc, #180]	; (cf94 <_strtol_r+0x11c>)
    cee0:	18ff      	adds	r7, r7, r3
    cee2:	1c38      	adds	r0, r7, #0
    cee4:	f7fc ff4c 	bl	9d80 <__aeabi_uidivmod>
    cee8:	1c38      	adds	r0, r7, #0
    ceea:	9104      	str	r1, [sp, #16]
    ceec:	1c31      	adds	r1, r6, #0
    ceee:	f7fc fec1 	bl	9c74 <__aeabi_uidiv>
    cef2:	2200      	movs	r2, #0
    cef4:	1c07      	adds	r7, r0, #0
    cef6:	1c13      	adds	r3, r2, #0
    cef8:	9902      	ldr	r1, [sp, #8]
    cefa:	1909      	adds	r1, r1, r4
    cefc:	7849      	ldrb	r1, [r1, #1]
    cefe:	0748      	lsls	r0, r1, #29
    cf00:	d501      	bpl.n	cf06 <_strtol_r+0x8e>
    cf02:	3c30      	subs	r4, #48	; 0x30
    cf04:	e007      	b.n	cf16 <_strtol_r+0x9e>
    cf06:	2003      	movs	r0, #3
    cf08:	4008      	ands	r0, r1
    cf0a:	d017      	beq.n	cf3c <_strtol_r+0xc4>
    cf0c:	2137      	movs	r1, #55	; 0x37
    cf0e:	2801      	cmp	r0, #1
    cf10:	d000      	beq.n	cf14 <_strtol_r+0x9c>
    cf12:	3120      	adds	r1, #32
    cf14:	1a64      	subs	r4, r4, r1
    cf16:	42b4      	cmp	r4, r6
    cf18:	da10      	bge.n	cf3c <_strtol_r+0xc4>
    cf1a:	1c51      	adds	r1, r2, #1
    cf1c:	d00b      	beq.n	cf36 <_strtol_r+0xbe>
    cf1e:	42bb      	cmp	r3, r7
    cf20:	d807      	bhi.n	cf32 <_strtol_r+0xba>
    cf22:	d102      	bne.n	cf2a <_strtol_r+0xb2>
    cf24:	9a04      	ldr	r2, [sp, #16]
    cf26:	4294      	cmp	r4, r2
    cf28:	dc03      	bgt.n	cf32 <_strtol_r+0xba>
    cf2a:	4373      	muls	r3, r6
    cf2c:	2201      	movs	r2, #1
    cf2e:	18e3      	adds	r3, r4, r3
    cf30:	e001      	b.n	cf36 <_strtol_r+0xbe>
    cf32:	2201      	movs	r2, #1
    cf34:	4252      	negs	r2, r2
    cf36:	782c      	ldrb	r4, [r5, #0]
    cf38:	3501      	adds	r5, #1
    cf3a:	e7dd      	b.n	cef8 <_strtol_r+0x80>
    cf3c:	1c18      	adds	r0, r3, #0
    cf3e:	1c51      	adds	r1, r2, #1
    cf40:	d10b      	bne.n	cf5a <_strtol_r+0xe2>
    cf42:	9800      	ldr	r0, [sp, #0]
    cf44:	9a05      	ldr	r2, [sp, #20]
    cf46:	1e43      	subs	r3, r0, #1
    cf48:	4198      	sbcs	r0, r3
    cf4a:	4b12      	ldr	r3, [pc, #72]	; (cf94 <_strtol_r+0x11c>)
    cf4c:	18c0      	adds	r0, r0, r3
    cf4e:	2322      	movs	r3, #34	; 0x22
    cf50:	6013      	str	r3, [r2, #0]
    cf52:	9b01      	ldr	r3, [sp, #4]
    cf54:	2b00      	cmp	r3, #0
    cf56:	d10a      	bne.n	cf6e <_strtol_r+0xf6>
    cf58:	e017      	b.n	cf8a <_strtol_r+0x112>
    cf5a:	9900      	ldr	r1, [sp, #0]
    cf5c:	2900      	cmp	r1, #0
    cf5e:	d000      	beq.n	cf62 <_strtol_r+0xea>
    cf60:	4258      	negs	r0, r3
    cf62:	9b01      	ldr	r3, [sp, #4]
    cf64:	2b00      	cmp	r3, #0
    cf66:	d010      	beq.n	cf8a <_strtol_r+0x112>
    cf68:	9b03      	ldr	r3, [sp, #12]
    cf6a:	2a00      	cmp	r2, #0
    cf6c:	d000      	beq.n	cf70 <_strtol_r+0xf8>
    cf6e:	1e6b      	subs	r3, r5, #1
    cf70:	9a01      	ldr	r2, [sp, #4]
    cf72:	6013      	str	r3, [r2, #0]
    cf74:	e009      	b.n	cf8a <_strtol_r+0x112>
    cf76:	2430      	movs	r4, #48	; 0x30
    cf78:	2e00      	cmp	r6, #0
    cf7a:	d1ac      	bne.n	ced6 <_strtol_r+0x5e>
    cf7c:	2608      	movs	r6, #8
    cf7e:	e7aa      	b.n	ced6 <_strtol_r+0x5e>
    cf80:	260a      	movs	r6, #10
    cf82:	e7a8      	b.n	ced6 <_strtol_r+0x5e>
    cf84:	2c30      	cmp	r4, #48	; 0x30
    cf86:	d1a6      	bne.n	ced6 <_strtol_r+0x5e>
    cf88:	e79d      	b.n	cec6 <_strtol_r+0x4e>
    cf8a:	b007      	add	sp, #28
    cf8c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    cf8e:	46c0      	nop			; (mov r8, r8)
    cf90:	200000c4 	.word	0x200000c4
    cf94:	7fffffff 	.word	0x7fffffff

0000cf98 <strtol>:
    cf98:	b538      	push	{r3, r4, r5, lr}
    cf9a:	1c05      	adds	r5, r0, #0
    cf9c:	1c0c      	adds	r4, r1, #0
    cf9e:	1c13      	adds	r3, r2, #0
    cfa0:	4a03      	ldr	r2, [pc, #12]	; (cfb0 <strtol+0x18>)
    cfa2:	1c29      	adds	r1, r5, #0
    cfa4:	6810      	ldr	r0, [r2, #0]
    cfa6:	1c22      	adds	r2, r4, #0
    cfa8:	f7ff ff66 	bl	ce78 <_strtol_r>
    cfac:	bd38      	pop	{r3, r4, r5, pc}
    cfae:	46c0      	nop			; (mov r8, r8)
    cfb0:	200000c0 	.word	0x200000c0

0000cfb4 <_user_strerror>:
    cfb4:	2000      	movs	r0, #0
    cfb6:	4770      	bx	lr

0000cfb8 <_vsniprintf_r>:
    cfb8:	b530      	push	{r4, r5, lr}
    cfba:	1c15      	adds	r5, r2, #0
    cfbc:	b09b      	sub	sp, #108	; 0x6c
    cfbe:	2a00      	cmp	r2, #0
    cfc0:	da04      	bge.n	cfcc <_vsniprintf_r+0x14>
    cfc2:	238b      	movs	r3, #139	; 0x8b
    cfc4:	6003      	str	r3, [r0, #0]
    cfc6:	2001      	movs	r0, #1
    cfc8:	4240      	negs	r0, r0
    cfca:	e01d      	b.n	d008 <_vsniprintf_r+0x50>
    cfcc:	2282      	movs	r2, #130	; 0x82
    cfce:	466c      	mov	r4, sp
    cfd0:	9100      	str	r1, [sp, #0]
    cfd2:	9104      	str	r1, [sp, #16]
    cfd4:	2100      	movs	r1, #0
    cfd6:	0092      	lsls	r2, r2, #2
    cfd8:	81a2      	strh	r2, [r4, #12]
    cfda:	428d      	cmp	r5, r1
    cfdc:	d000      	beq.n	cfe0 <_vsniprintf_r+0x28>
    cfde:	1e69      	subs	r1, r5, #1
    cfe0:	1c1a      	adds	r2, r3, #0
    cfe2:	2301      	movs	r3, #1
    cfe4:	9102      	str	r1, [sp, #8]
    cfe6:	9105      	str	r1, [sp, #20]
    cfe8:	4669      	mov	r1, sp
    cfea:	425b      	negs	r3, r3
    cfec:	81cb      	strh	r3, [r1, #14]
    cfee:	9b1e      	ldr	r3, [sp, #120]	; 0x78
    cff0:	1c04      	adds	r4, r0, #0
    cff2:	f000 fb89 	bl	d708 <_svfiprintf_r>
    cff6:	1c43      	adds	r3, r0, #1
    cff8:	da01      	bge.n	cffe <_vsniprintf_r+0x46>
    cffa:	238b      	movs	r3, #139	; 0x8b
    cffc:	6023      	str	r3, [r4, #0]
    cffe:	2d00      	cmp	r5, #0
    d000:	d002      	beq.n	d008 <_vsniprintf_r+0x50>
    d002:	2300      	movs	r3, #0
    d004:	9a00      	ldr	r2, [sp, #0]
    d006:	7013      	strb	r3, [r2, #0]
    d008:	b01b      	add	sp, #108	; 0x6c
    d00a:	bd30      	pop	{r4, r5, pc}

0000d00c <vsniprintf>:
    d00c:	b573      	push	{r0, r1, r4, r5, r6, lr}
    d00e:	1c06      	adds	r6, r0, #0
    d010:	1c0d      	adds	r5, r1, #0
    d012:	1c14      	adds	r4, r2, #0
    d014:	9300      	str	r3, [sp, #0]
    d016:	4b04      	ldr	r3, [pc, #16]	; (d028 <vsniprintf+0x1c>)
    d018:	1c31      	adds	r1, r6, #0
    d01a:	1c2a      	adds	r2, r5, #0
    d01c:	6818      	ldr	r0, [r3, #0]
    d01e:	1c23      	adds	r3, r4, #0
    d020:	f7ff ffca 	bl	cfb8 <_vsniprintf_r>
    d024:	bd76      	pop	{r1, r2, r4, r5, r6, pc}
    d026:	46c0      	nop			; (mov r8, r8)
    d028:	200000c0 	.word	0x200000c0

0000d02c <__swbuf_r>:
    d02c:	b570      	push	{r4, r5, r6, lr}
    d02e:	1c05      	adds	r5, r0, #0
    d030:	1c0e      	adds	r6, r1, #0
    d032:	1c14      	adds	r4, r2, #0
    d034:	2800      	cmp	r0, #0
    d036:	d004      	beq.n	d042 <__swbuf_r+0x16>
    d038:	6983      	ldr	r3, [r0, #24]
    d03a:	2b00      	cmp	r3, #0
    d03c:	d101      	bne.n	d042 <__swbuf_r+0x16>
    d03e:	f000 f9df 	bl	d400 <__sinit>
    d042:	4b23      	ldr	r3, [pc, #140]	; (d0d0 <__swbuf_r+0xa4>)
    d044:	429c      	cmp	r4, r3
    d046:	d101      	bne.n	d04c <__swbuf_r+0x20>
    d048:	686c      	ldr	r4, [r5, #4]
    d04a:	e008      	b.n	d05e <__swbuf_r+0x32>
    d04c:	4b21      	ldr	r3, [pc, #132]	; (d0d4 <__swbuf_r+0xa8>)
    d04e:	429c      	cmp	r4, r3
    d050:	d101      	bne.n	d056 <__swbuf_r+0x2a>
    d052:	68ac      	ldr	r4, [r5, #8]
    d054:	e003      	b.n	d05e <__swbuf_r+0x32>
    d056:	4b20      	ldr	r3, [pc, #128]	; (d0d8 <__swbuf_r+0xac>)
    d058:	429c      	cmp	r4, r3
    d05a:	d100      	bne.n	d05e <__swbuf_r+0x32>
    d05c:	68ec      	ldr	r4, [r5, #12]
    d05e:	69a3      	ldr	r3, [r4, #24]
    d060:	60a3      	str	r3, [r4, #8]
    d062:	89a3      	ldrh	r3, [r4, #12]
    d064:	071b      	lsls	r3, r3, #28
    d066:	d50a      	bpl.n	d07e <__swbuf_r+0x52>
    d068:	6923      	ldr	r3, [r4, #16]
    d06a:	2b00      	cmp	r3, #0
    d06c:	d007      	beq.n	d07e <__swbuf_r+0x52>
    d06e:	6823      	ldr	r3, [r4, #0]
    d070:	6922      	ldr	r2, [r4, #16]
    d072:	b2f6      	uxtb	r6, r6
    d074:	1a98      	subs	r0, r3, r2
    d076:	6963      	ldr	r3, [r4, #20]
    d078:	4298      	cmp	r0, r3
    d07a:	db0f      	blt.n	d09c <__swbuf_r+0x70>
    d07c:	e008      	b.n	d090 <__swbuf_r+0x64>
    d07e:	1c28      	adds	r0, r5, #0
    d080:	1c21      	adds	r1, r4, #0
    d082:	f000 f83f 	bl	d104 <__swsetup_r>
    d086:	2800      	cmp	r0, #0
    d088:	d0f1      	beq.n	d06e <__swbuf_r+0x42>
    d08a:	2001      	movs	r0, #1
    d08c:	4240      	negs	r0, r0
    d08e:	e01d      	b.n	d0cc <__swbuf_r+0xa0>
    d090:	1c28      	adds	r0, r5, #0
    d092:	1c21      	adds	r1, r4, #0
    d094:	f000 f946 	bl	d324 <_fflush_r>
    d098:	2800      	cmp	r0, #0
    d09a:	d1f6      	bne.n	d08a <__swbuf_r+0x5e>
    d09c:	68a3      	ldr	r3, [r4, #8]
    d09e:	3001      	adds	r0, #1
    d0a0:	3b01      	subs	r3, #1
    d0a2:	60a3      	str	r3, [r4, #8]
    d0a4:	6823      	ldr	r3, [r4, #0]
    d0a6:	1c5a      	adds	r2, r3, #1
    d0a8:	6022      	str	r2, [r4, #0]
    d0aa:	701e      	strb	r6, [r3, #0]
    d0ac:	6963      	ldr	r3, [r4, #20]
    d0ae:	4298      	cmp	r0, r3
    d0b0:	d005      	beq.n	d0be <__swbuf_r+0x92>
    d0b2:	89a3      	ldrh	r3, [r4, #12]
    d0b4:	1c30      	adds	r0, r6, #0
    d0b6:	07db      	lsls	r3, r3, #31
    d0b8:	d508      	bpl.n	d0cc <__swbuf_r+0xa0>
    d0ba:	2e0a      	cmp	r6, #10
    d0bc:	d106      	bne.n	d0cc <__swbuf_r+0xa0>
    d0be:	1c28      	adds	r0, r5, #0
    d0c0:	1c21      	adds	r1, r4, #0
    d0c2:	f000 f92f 	bl	d324 <_fflush_r>
    d0c6:	2800      	cmp	r0, #0
    d0c8:	d1df      	bne.n	d08a <__swbuf_r+0x5e>
    d0ca:	1c30      	adds	r0, r6, #0
    d0cc:	bd70      	pop	{r4, r5, r6, pc}
    d0ce:	46c0      	nop			; (mov r8, r8)
    d0d0:	0001275c 	.word	0x0001275c
    d0d4:	0001277c 	.word	0x0001277c
    d0d8:	0001279c 	.word	0x0001279c

0000d0dc <_write_r>:
    d0dc:	b538      	push	{r3, r4, r5, lr}
    d0de:	1c05      	adds	r5, r0, #0
    d0e0:	2000      	movs	r0, #0
    d0e2:	4c07      	ldr	r4, [pc, #28]	; (d100 <_write_r+0x24>)
    d0e4:	6020      	str	r0, [r4, #0]
    d0e6:	1c08      	adds	r0, r1, #0
    d0e8:	1c11      	adds	r1, r2, #0
    d0ea:	1c1a      	adds	r2, r3, #0
    d0ec:	f7fb fef6 	bl	8edc <_write>
    d0f0:	1c43      	adds	r3, r0, #1
    d0f2:	d103      	bne.n	d0fc <_write_r+0x20>
    d0f4:	6823      	ldr	r3, [r4, #0]
    d0f6:	2b00      	cmp	r3, #0
    d0f8:	d000      	beq.n	d0fc <_write_r+0x20>
    d0fa:	602b      	str	r3, [r5, #0]
    d0fc:	bd38      	pop	{r3, r4, r5, pc}
    d0fe:	46c0      	nop			; (mov r8, r8)
    d100:	20000b2c 	.word	0x20000b2c

0000d104 <__swsetup_r>:
    d104:	4b35      	ldr	r3, [pc, #212]	; (d1dc <__swsetup_r+0xd8>)
    d106:	b570      	push	{r4, r5, r6, lr}
    d108:	681d      	ldr	r5, [r3, #0]
    d10a:	1c06      	adds	r6, r0, #0
    d10c:	1c0c      	adds	r4, r1, #0
    d10e:	2d00      	cmp	r5, #0
    d110:	d005      	beq.n	d11e <__swsetup_r+0x1a>
    d112:	69ab      	ldr	r3, [r5, #24]
    d114:	2b00      	cmp	r3, #0
    d116:	d102      	bne.n	d11e <__swsetup_r+0x1a>
    d118:	1c28      	adds	r0, r5, #0
    d11a:	f000 f971 	bl	d400 <__sinit>
    d11e:	4b30      	ldr	r3, [pc, #192]	; (d1e0 <__swsetup_r+0xdc>)
    d120:	429c      	cmp	r4, r3
    d122:	d101      	bne.n	d128 <__swsetup_r+0x24>
    d124:	686c      	ldr	r4, [r5, #4]
    d126:	e008      	b.n	d13a <__swsetup_r+0x36>
    d128:	4b2e      	ldr	r3, [pc, #184]	; (d1e4 <__swsetup_r+0xe0>)
    d12a:	429c      	cmp	r4, r3
    d12c:	d101      	bne.n	d132 <__swsetup_r+0x2e>
    d12e:	68ac      	ldr	r4, [r5, #8]
    d130:	e003      	b.n	d13a <__swsetup_r+0x36>
    d132:	4b2d      	ldr	r3, [pc, #180]	; (d1e8 <__swsetup_r+0xe4>)
    d134:	429c      	cmp	r4, r3
    d136:	d100      	bne.n	d13a <__swsetup_r+0x36>
    d138:	68ec      	ldr	r4, [r5, #12]
    d13a:	89a3      	ldrh	r3, [r4, #12]
    d13c:	b29a      	uxth	r2, r3
    d13e:	0711      	lsls	r1, r2, #28
    d140:	d423      	bmi.n	d18a <__swsetup_r+0x86>
    d142:	06d1      	lsls	r1, r2, #27
    d144:	d407      	bmi.n	d156 <__swsetup_r+0x52>
    d146:	2209      	movs	r2, #9
    d148:	2001      	movs	r0, #1
    d14a:	6032      	str	r2, [r6, #0]
    d14c:	3237      	adds	r2, #55	; 0x37
    d14e:	4313      	orrs	r3, r2
    d150:	81a3      	strh	r3, [r4, #12]
    d152:	4240      	negs	r0, r0
    d154:	e040      	b.n	d1d8 <__swsetup_r+0xd4>
    d156:	0753      	lsls	r3, r2, #29
    d158:	d513      	bpl.n	d182 <__swsetup_r+0x7e>
    d15a:	6b61      	ldr	r1, [r4, #52]	; 0x34
    d15c:	2900      	cmp	r1, #0
    d15e:	d008      	beq.n	d172 <__swsetup_r+0x6e>
    d160:	1c23      	adds	r3, r4, #0
    d162:	3344      	adds	r3, #68	; 0x44
    d164:	4299      	cmp	r1, r3
    d166:	d002      	beq.n	d16e <__swsetup_r+0x6a>
    d168:	1c30      	adds	r0, r6, #0
    d16a:	f7fe ffc1 	bl	c0f0 <_free_r>
    d16e:	2300      	movs	r3, #0
    d170:	6363      	str	r3, [r4, #52]	; 0x34
    d172:	2224      	movs	r2, #36	; 0x24
    d174:	89a3      	ldrh	r3, [r4, #12]
    d176:	4393      	bics	r3, r2
    d178:	81a3      	strh	r3, [r4, #12]
    d17a:	2300      	movs	r3, #0
    d17c:	6063      	str	r3, [r4, #4]
    d17e:	6923      	ldr	r3, [r4, #16]
    d180:	6023      	str	r3, [r4, #0]
    d182:	2208      	movs	r2, #8
    d184:	89a3      	ldrh	r3, [r4, #12]
    d186:	4313      	orrs	r3, r2
    d188:	81a3      	strh	r3, [r4, #12]
    d18a:	6923      	ldr	r3, [r4, #16]
    d18c:	2b00      	cmp	r3, #0
    d18e:	d10b      	bne.n	d1a8 <__swsetup_r+0xa4>
    d190:	23a0      	movs	r3, #160	; 0xa0
    d192:	89a2      	ldrh	r2, [r4, #12]
    d194:	009b      	lsls	r3, r3, #2
    d196:	4013      	ands	r3, r2
    d198:	2280      	movs	r2, #128	; 0x80
    d19a:	0092      	lsls	r2, r2, #2
    d19c:	4293      	cmp	r3, r2
    d19e:	d003      	beq.n	d1a8 <__swsetup_r+0xa4>
    d1a0:	1c30      	adds	r0, r6, #0
    d1a2:	1c21      	adds	r1, r4, #0
    d1a4:	f000 f9d2 	bl	d54c <__smakebuf_r>
    d1a8:	2301      	movs	r3, #1
    d1aa:	89a2      	ldrh	r2, [r4, #12]
    d1ac:	4013      	ands	r3, r2
    d1ae:	d005      	beq.n	d1bc <__swsetup_r+0xb8>
    d1b0:	2300      	movs	r3, #0
    d1b2:	60a3      	str	r3, [r4, #8]
    d1b4:	6963      	ldr	r3, [r4, #20]
    d1b6:	425b      	negs	r3, r3
    d1b8:	61a3      	str	r3, [r4, #24]
    d1ba:	e003      	b.n	d1c4 <__swsetup_r+0xc0>
    d1bc:	0791      	lsls	r1, r2, #30
    d1be:	d400      	bmi.n	d1c2 <__swsetup_r+0xbe>
    d1c0:	6963      	ldr	r3, [r4, #20]
    d1c2:	60a3      	str	r3, [r4, #8]
    d1c4:	2000      	movs	r0, #0
    d1c6:	6923      	ldr	r3, [r4, #16]
    d1c8:	4283      	cmp	r3, r0
    d1ca:	d105      	bne.n	d1d8 <__swsetup_r+0xd4>
    d1cc:	0613      	lsls	r3, r2, #24
    d1ce:	d503      	bpl.n	d1d8 <__swsetup_r+0xd4>
    d1d0:	2340      	movs	r3, #64	; 0x40
    d1d2:	431a      	orrs	r2, r3
    d1d4:	81a2      	strh	r2, [r4, #12]
    d1d6:	3801      	subs	r0, #1
    d1d8:	bd70      	pop	{r4, r5, r6, pc}
    d1da:	46c0      	nop			; (mov r8, r8)
    d1dc:	200000c0 	.word	0x200000c0
    d1e0:	0001275c 	.word	0x0001275c
    d1e4:	0001277c 	.word	0x0001277c
    d1e8:	0001279c 	.word	0x0001279c

0000d1ec <_close_r>:
    d1ec:	b538      	push	{r3, r4, r5, lr}
    d1ee:	2300      	movs	r3, #0
    d1f0:	4c06      	ldr	r4, [pc, #24]	; (d20c <_close_r+0x20>)
    d1f2:	1c05      	adds	r5, r0, #0
    d1f4:	1c08      	adds	r0, r1, #0
    d1f6:	6023      	str	r3, [r4, #0]
    d1f8:	f7fb feaa 	bl	8f50 <_close>
    d1fc:	1c43      	adds	r3, r0, #1
    d1fe:	d103      	bne.n	d208 <_close_r+0x1c>
    d200:	6823      	ldr	r3, [r4, #0]
    d202:	2b00      	cmp	r3, #0
    d204:	d000      	beq.n	d208 <_close_r+0x1c>
    d206:	602b      	str	r3, [r5, #0]
    d208:	bd38      	pop	{r3, r4, r5, pc}
    d20a:	46c0      	nop			; (mov r8, r8)
    d20c:	20000b2c 	.word	0x20000b2c

0000d210 <__sflush_r>:
    d210:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    d212:	898a      	ldrh	r2, [r1, #12]
    d214:	1c05      	adds	r5, r0, #0
    d216:	1c0c      	adds	r4, r1, #0
    d218:	0713      	lsls	r3, r2, #28
    d21a:	d45e      	bmi.n	d2da <__sflush_r+0xca>
    d21c:	684b      	ldr	r3, [r1, #4]
    d21e:	2b00      	cmp	r3, #0
    d220:	dc02      	bgt.n	d228 <__sflush_r+0x18>
    d222:	6c0b      	ldr	r3, [r1, #64]	; 0x40
    d224:	2b00      	cmp	r3, #0
    d226:	dd1a      	ble.n	d25e <__sflush_r+0x4e>
    d228:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
    d22a:	2f00      	cmp	r7, #0
    d22c:	d017      	beq.n	d25e <__sflush_r+0x4e>
    d22e:	2300      	movs	r3, #0
    d230:	682e      	ldr	r6, [r5, #0]
    d232:	602b      	str	r3, [r5, #0]
    d234:	2380      	movs	r3, #128	; 0x80
    d236:	015b      	lsls	r3, r3, #5
    d238:	401a      	ands	r2, r3
    d23a:	d001      	beq.n	d240 <__sflush_r+0x30>
    d23c:	6d62      	ldr	r2, [r4, #84]	; 0x54
    d23e:	e015      	b.n	d26c <__sflush_r+0x5c>
    d240:	1c28      	adds	r0, r5, #0
    d242:	6a21      	ldr	r1, [r4, #32]
    d244:	2301      	movs	r3, #1
    d246:	47b8      	blx	r7
    d248:	1c02      	adds	r2, r0, #0
    d24a:	1c43      	adds	r3, r0, #1
    d24c:	d10e      	bne.n	d26c <__sflush_r+0x5c>
    d24e:	682b      	ldr	r3, [r5, #0]
    d250:	2b00      	cmp	r3, #0
    d252:	d00b      	beq.n	d26c <__sflush_r+0x5c>
    d254:	2b1d      	cmp	r3, #29
    d256:	d001      	beq.n	d25c <__sflush_r+0x4c>
    d258:	2b16      	cmp	r3, #22
    d25a:	d102      	bne.n	d262 <__sflush_r+0x52>
    d25c:	602e      	str	r6, [r5, #0]
    d25e:	2000      	movs	r0, #0
    d260:	e05e      	b.n	d320 <__sflush_r+0x110>
    d262:	2140      	movs	r1, #64	; 0x40
    d264:	89a3      	ldrh	r3, [r4, #12]
    d266:	430b      	orrs	r3, r1
    d268:	81a3      	strh	r3, [r4, #12]
    d26a:	e059      	b.n	d320 <__sflush_r+0x110>
    d26c:	89a3      	ldrh	r3, [r4, #12]
    d26e:	075b      	lsls	r3, r3, #29
    d270:	d506      	bpl.n	d280 <__sflush_r+0x70>
    d272:	6863      	ldr	r3, [r4, #4]
    d274:	1ad2      	subs	r2, r2, r3
    d276:	6b63      	ldr	r3, [r4, #52]	; 0x34
    d278:	2b00      	cmp	r3, #0
    d27a:	d001      	beq.n	d280 <__sflush_r+0x70>
    d27c:	6c23      	ldr	r3, [r4, #64]	; 0x40
    d27e:	1ad2      	subs	r2, r2, r3
    d280:	2300      	movs	r3, #0
    d282:	1c28      	adds	r0, r5, #0
    d284:	6a21      	ldr	r1, [r4, #32]
    d286:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
    d288:	47b8      	blx	r7
    d28a:	89a3      	ldrh	r3, [r4, #12]
    d28c:	1c42      	adds	r2, r0, #1
    d28e:	d106      	bne.n	d29e <__sflush_r+0x8e>
    d290:	682a      	ldr	r2, [r5, #0]
    d292:	2a00      	cmp	r2, #0
    d294:	d003      	beq.n	d29e <__sflush_r+0x8e>
    d296:	2a1d      	cmp	r2, #29
    d298:	d001      	beq.n	d29e <__sflush_r+0x8e>
    d29a:	2a16      	cmp	r2, #22
    d29c:	d119      	bne.n	d2d2 <__sflush_r+0xc2>
    d29e:	2200      	movs	r2, #0
    d2a0:	6062      	str	r2, [r4, #4]
    d2a2:	6922      	ldr	r2, [r4, #16]
    d2a4:	6022      	str	r2, [r4, #0]
    d2a6:	04db      	lsls	r3, r3, #19
    d2a8:	d505      	bpl.n	d2b6 <__sflush_r+0xa6>
    d2aa:	1c43      	adds	r3, r0, #1
    d2ac:	d102      	bne.n	d2b4 <__sflush_r+0xa4>
    d2ae:	682b      	ldr	r3, [r5, #0]
    d2b0:	2b00      	cmp	r3, #0
    d2b2:	d100      	bne.n	d2b6 <__sflush_r+0xa6>
    d2b4:	6560      	str	r0, [r4, #84]	; 0x54
    d2b6:	6b61      	ldr	r1, [r4, #52]	; 0x34
    d2b8:	602e      	str	r6, [r5, #0]
    d2ba:	2900      	cmp	r1, #0
    d2bc:	d0cf      	beq.n	d25e <__sflush_r+0x4e>
    d2be:	1c23      	adds	r3, r4, #0
    d2c0:	3344      	adds	r3, #68	; 0x44
    d2c2:	4299      	cmp	r1, r3
    d2c4:	d002      	beq.n	d2cc <__sflush_r+0xbc>
    d2c6:	1c28      	adds	r0, r5, #0
    d2c8:	f7fe ff12 	bl	c0f0 <_free_r>
    d2cc:	2000      	movs	r0, #0
    d2ce:	6360      	str	r0, [r4, #52]	; 0x34
    d2d0:	e026      	b.n	d320 <__sflush_r+0x110>
    d2d2:	2240      	movs	r2, #64	; 0x40
    d2d4:	4313      	orrs	r3, r2
    d2d6:	81a3      	strh	r3, [r4, #12]
    d2d8:	e022      	b.n	d320 <__sflush_r+0x110>
    d2da:	690f      	ldr	r7, [r1, #16]
    d2dc:	2f00      	cmp	r7, #0
    d2de:	d0be      	beq.n	d25e <__sflush_r+0x4e>
    d2e0:	680b      	ldr	r3, [r1, #0]
    d2e2:	600f      	str	r7, [r1, #0]
    d2e4:	1bdb      	subs	r3, r3, r7
    d2e6:	9301      	str	r3, [sp, #4]
    d2e8:	2300      	movs	r3, #0
    d2ea:	0792      	lsls	r2, r2, #30
    d2ec:	d100      	bne.n	d2f0 <__sflush_r+0xe0>
    d2ee:	694b      	ldr	r3, [r1, #20]
    d2f0:	60a3      	str	r3, [r4, #8]
    d2f2:	9b01      	ldr	r3, [sp, #4]
    d2f4:	2b00      	cmp	r3, #0
    d2f6:	ddb2      	ble.n	d25e <__sflush_r+0x4e>
    d2f8:	1c28      	adds	r0, r5, #0
    d2fa:	6a21      	ldr	r1, [r4, #32]
    d2fc:	1c3a      	adds	r2, r7, #0
    d2fe:	9b01      	ldr	r3, [sp, #4]
    d300:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    d302:	47b0      	blx	r6
    d304:	2800      	cmp	r0, #0
    d306:	dc06      	bgt.n	d316 <__sflush_r+0x106>
    d308:	2240      	movs	r2, #64	; 0x40
    d30a:	2001      	movs	r0, #1
    d30c:	89a3      	ldrh	r3, [r4, #12]
    d30e:	4240      	negs	r0, r0
    d310:	4313      	orrs	r3, r2
    d312:	81a3      	strh	r3, [r4, #12]
    d314:	e004      	b.n	d320 <__sflush_r+0x110>
    d316:	9b01      	ldr	r3, [sp, #4]
    d318:	183f      	adds	r7, r7, r0
    d31a:	1a1b      	subs	r3, r3, r0
    d31c:	9301      	str	r3, [sp, #4]
    d31e:	e7e8      	b.n	d2f2 <__sflush_r+0xe2>
    d320:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
	...

0000d324 <_fflush_r>:
    d324:	b538      	push	{r3, r4, r5, lr}
    d326:	690b      	ldr	r3, [r1, #16]
    d328:	1c05      	adds	r5, r0, #0
    d32a:	1c0c      	adds	r4, r1, #0
    d32c:	2b00      	cmp	r3, #0
    d32e:	d101      	bne.n	d334 <_fflush_r+0x10>
    d330:	2000      	movs	r0, #0
    d332:	e01c      	b.n	d36e <_fflush_r+0x4a>
    d334:	2800      	cmp	r0, #0
    d336:	d004      	beq.n	d342 <_fflush_r+0x1e>
    d338:	6983      	ldr	r3, [r0, #24]
    d33a:	2b00      	cmp	r3, #0
    d33c:	d101      	bne.n	d342 <_fflush_r+0x1e>
    d33e:	f000 f85f 	bl	d400 <__sinit>
    d342:	4b0b      	ldr	r3, [pc, #44]	; (d370 <_fflush_r+0x4c>)
    d344:	429c      	cmp	r4, r3
    d346:	d101      	bne.n	d34c <_fflush_r+0x28>
    d348:	686c      	ldr	r4, [r5, #4]
    d34a:	e008      	b.n	d35e <_fflush_r+0x3a>
    d34c:	4b09      	ldr	r3, [pc, #36]	; (d374 <_fflush_r+0x50>)
    d34e:	429c      	cmp	r4, r3
    d350:	d101      	bne.n	d356 <_fflush_r+0x32>
    d352:	68ac      	ldr	r4, [r5, #8]
    d354:	e003      	b.n	d35e <_fflush_r+0x3a>
    d356:	4b08      	ldr	r3, [pc, #32]	; (d378 <_fflush_r+0x54>)
    d358:	429c      	cmp	r4, r3
    d35a:	d100      	bne.n	d35e <_fflush_r+0x3a>
    d35c:	68ec      	ldr	r4, [r5, #12]
    d35e:	220c      	movs	r2, #12
    d360:	5ea3      	ldrsh	r3, [r4, r2]
    d362:	2b00      	cmp	r3, #0
    d364:	d0e4      	beq.n	d330 <_fflush_r+0xc>
    d366:	1c28      	adds	r0, r5, #0
    d368:	1c21      	adds	r1, r4, #0
    d36a:	f7ff ff51 	bl	d210 <__sflush_r>
    d36e:	bd38      	pop	{r3, r4, r5, pc}
    d370:	0001275c 	.word	0x0001275c
    d374:	0001277c 	.word	0x0001277c
    d378:	0001279c 	.word	0x0001279c

0000d37c <_cleanup_r>:
    d37c:	b508      	push	{r3, lr}
    d37e:	4902      	ldr	r1, [pc, #8]	; (d388 <_cleanup_r+0xc>)
    d380:	f000 f8ae 	bl	d4e0 <_fwalk_reent>
    d384:	bd08      	pop	{r3, pc}
    d386:	46c0      	nop			; (mov r8, r8)
    d388:	0000d325 	.word	0x0000d325

0000d38c <std.isra.0>:
    d38c:	2300      	movs	r3, #0
    d38e:	b510      	push	{r4, lr}
    d390:	1c04      	adds	r4, r0, #0
    d392:	6003      	str	r3, [r0, #0]
    d394:	6043      	str	r3, [r0, #4]
    d396:	6083      	str	r3, [r0, #8]
    d398:	8181      	strh	r1, [r0, #12]
    d39a:	6643      	str	r3, [r0, #100]	; 0x64
    d39c:	81c2      	strh	r2, [r0, #14]
    d39e:	6103      	str	r3, [r0, #16]
    d3a0:	6143      	str	r3, [r0, #20]
    d3a2:	6183      	str	r3, [r0, #24]
    d3a4:	1c19      	adds	r1, r3, #0
    d3a6:	2208      	movs	r2, #8
    d3a8:	305c      	adds	r0, #92	; 0x5c
    d3aa:	f7fe fe99 	bl	c0e0 <memset>
    d3ae:	4b05      	ldr	r3, [pc, #20]	; (d3c4 <std.isra.0+0x38>)
    d3b0:	6224      	str	r4, [r4, #32]
    d3b2:	6263      	str	r3, [r4, #36]	; 0x24
    d3b4:	4b04      	ldr	r3, [pc, #16]	; (d3c8 <std.isra.0+0x3c>)
    d3b6:	62a3      	str	r3, [r4, #40]	; 0x28
    d3b8:	4b04      	ldr	r3, [pc, #16]	; (d3cc <std.isra.0+0x40>)
    d3ba:	62e3      	str	r3, [r4, #44]	; 0x2c
    d3bc:	4b04      	ldr	r3, [pc, #16]	; (d3d0 <std.isra.0+0x44>)
    d3be:	6323      	str	r3, [r4, #48]	; 0x30
    d3c0:	bd10      	pop	{r4, pc}
    d3c2:	46c0      	nop			; (mov r8, r8)
    d3c4:	0000c995 	.word	0x0000c995
    d3c8:	0000c9c1 	.word	0x0000c9c1
    d3cc:	0000c9f9 	.word	0x0000c9f9
    d3d0:	0000ca25 	.word	0x0000ca25

0000d3d4 <__sfmoreglue>:
    d3d4:	b570      	push	{r4, r5, r6, lr}
    d3d6:	2568      	movs	r5, #104	; 0x68
    d3d8:	1e4b      	subs	r3, r1, #1
    d3da:	435d      	muls	r5, r3
    d3dc:	1c0e      	adds	r6, r1, #0
    d3de:	1c29      	adds	r1, r5, #0
    d3e0:	3174      	adds	r1, #116	; 0x74
    d3e2:	f7fe fecb 	bl	c17c <_malloc_r>
    d3e6:	1e04      	subs	r4, r0, #0
    d3e8:	d008      	beq.n	d3fc <__sfmoreglue+0x28>
    d3ea:	2100      	movs	r1, #0
    d3ec:	1c2a      	adds	r2, r5, #0
    d3ee:	6001      	str	r1, [r0, #0]
    d3f0:	6046      	str	r6, [r0, #4]
    d3f2:	300c      	adds	r0, #12
    d3f4:	60a0      	str	r0, [r4, #8]
    d3f6:	3268      	adds	r2, #104	; 0x68
    d3f8:	f7fe fe72 	bl	c0e0 <memset>
    d3fc:	1c20      	adds	r0, r4, #0
    d3fe:	bd70      	pop	{r4, r5, r6, pc}

0000d400 <__sinit>:
    d400:	6983      	ldr	r3, [r0, #24]
    d402:	b513      	push	{r0, r1, r4, lr}
    d404:	2b00      	cmp	r3, #0
    d406:	d128      	bne.n	d45a <__sinit+0x5a>
    d408:	6483      	str	r3, [r0, #72]	; 0x48
    d40a:	64c3      	str	r3, [r0, #76]	; 0x4c
    d40c:	6503      	str	r3, [r0, #80]	; 0x50
    d40e:	4b13      	ldr	r3, [pc, #76]	; (d45c <__sinit+0x5c>)
    d410:	4a13      	ldr	r2, [pc, #76]	; (d460 <__sinit+0x60>)
    d412:	681b      	ldr	r3, [r3, #0]
    d414:	6282      	str	r2, [r0, #40]	; 0x28
    d416:	9301      	str	r3, [sp, #4]
    d418:	4298      	cmp	r0, r3
    d41a:	d101      	bne.n	d420 <__sinit+0x20>
    d41c:	2301      	movs	r3, #1
    d41e:	6183      	str	r3, [r0, #24]
    d420:	1c04      	adds	r4, r0, #0
    d422:	f000 f81f 	bl	d464 <__sfp>
    d426:	6060      	str	r0, [r4, #4]
    d428:	1c20      	adds	r0, r4, #0
    d42a:	f000 f81b 	bl	d464 <__sfp>
    d42e:	60a0      	str	r0, [r4, #8]
    d430:	1c20      	adds	r0, r4, #0
    d432:	f000 f817 	bl	d464 <__sfp>
    d436:	2104      	movs	r1, #4
    d438:	60e0      	str	r0, [r4, #12]
    d43a:	2200      	movs	r2, #0
    d43c:	6860      	ldr	r0, [r4, #4]
    d43e:	f7ff ffa5 	bl	d38c <std.isra.0>
    d442:	68a0      	ldr	r0, [r4, #8]
    d444:	2109      	movs	r1, #9
    d446:	2201      	movs	r2, #1
    d448:	f7ff ffa0 	bl	d38c <std.isra.0>
    d44c:	68e0      	ldr	r0, [r4, #12]
    d44e:	2112      	movs	r1, #18
    d450:	2202      	movs	r2, #2
    d452:	f7ff ff9b 	bl	d38c <std.isra.0>
    d456:	2301      	movs	r3, #1
    d458:	61a3      	str	r3, [r4, #24]
    d45a:	bd13      	pop	{r0, r1, r4, pc}
    d45c:	00011f8c 	.word	0x00011f8c
    d460:	0000d37d 	.word	0x0000d37d

0000d464 <__sfp>:
    d464:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    d466:	4b1d      	ldr	r3, [pc, #116]	; (d4dc <__sfp+0x78>)
    d468:	1c06      	adds	r6, r0, #0
    d46a:	681d      	ldr	r5, [r3, #0]
    d46c:	69ab      	ldr	r3, [r5, #24]
    d46e:	2b00      	cmp	r3, #0
    d470:	d102      	bne.n	d478 <__sfp+0x14>
    d472:	1c28      	adds	r0, r5, #0
    d474:	f7ff ffc4 	bl	d400 <__sinit>
    d478:	3548      	adds	r5, #72	; 0x48
    d47a:	68ac      	ldr	r4, [r5, #8]
    d47c:	686b      	ldr	r3, [r5, #4]
    d47e:	3b01      	subs	r3, #1
    d480:	d405      	bmi.n	d48e <__sfp+0x2a>
    d482:	220c      	movs	r2, #12
    d484:	5ea7      	ldrsh	r7, [r4, r2]
    d486:	2f00      	cmp	r7, #0
    d488:	d010      	beq.n	d4ac <__sfp+0x48>
    d48a:	3468      	adds	r4, #104	; 0x68
    d48c:	e7f7      	b.n	d47e <__sfp+0x1a>
    d48e:	682b      	ldr	r3, [r5, #0]
    d490:	2b00      	cmp	r3, #0
    d492:	d106      	bne.n	d4a2 <__sfp+0x3e>
    d494:	1c30      	adds	r0, r6, #0
    d496:	2104      	movs	r1, #4
    d498:	f7ff ff9c 	bl	d3d4 <__sfmoreglue>
    d49c:	6028      	str	r0, [r5, #0]
    d49e:	2800      	cmp	r0, #0
    d4a0:	d001      	beq.n	d4a6 <__sfp+0x42>
    d4a2:	682d      	ldr	r5, [r5, #0]
    d4a4:	e7e9      	b.n	d47a <__sfp+0x16>
    d4a6:	230c      	movs	r3, #12
    d4a8:	6033      	str	r3, [r6, #0]
    d4aa:	e016      	b.n	d4da <__sfp+0x76>
    d4ac:	2301      	movs	r3, #1
    d4ae:	1c20      	adds	r0, r4, #0
    d4b0:	425b      	negs	r3, r3
    d4b2:	81e3      	strh	r3, [r4, #14]
    d4b4:	3302      	adds	r3, #2
    d4b6:	81a3      	strh	r3, [r4, #12]
    d4b8:	6667      	str	r7, [r4, #100]	; 0x64
    d4ba:	6027      	str	r7, [r4, #0]
    d4bc:	60a7      	str	r7, [r4, #8]
    d4be:	6067      	str	r7, [r4, #4]
    d4c0:	6127      	str	r7, [r4, #16]
    d4c2:	6167      	str	r7, [r4, #20]
    d4c4:	61a7      	str	r7, [r4, #24]
    d4c6:	305c      	adds	r0, #92	; 0x5c
    d4c8:	1c39      	adds	r1, r7, #0
    d4ca:	2208      	movs	r2, #8
    d4cc:	f7fe fe08 	bl	c0e0 <memset>
    d4d0:	1c20      	adds	r0, r4, #0
    d4d2:	6367      	str	r7, [r4, #52]	; 0x34
    d4d4:	63a7      	str	r7, [r4, #56]	; 0x38
    d4d6:	64a7      	str	r7, [r4, #72]	; 0x48
    d4d8:	64e7      	str	r7, [r4, #76]	; 0x4c
    d4da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    d4dc:	00011f8c 	.word	0x00011f8c

0000d4e0 <_fwalk_reent>:
    d4e0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    d4e2:	1c04      	adds	r4, r0, #0
    d4e4:	1c07      	adds	r7, r0, #0
    d4e6:	2600      	movs	r6, #0
    d4e8:	9101      	str	r1, [sp, #4]
    d4ea:	3448      	adds	r4, #72	; 0x48
    d4ec:	2c00      	cmp	r4, #0
    d4ee:	d016      	beq.n	d51e <_fwalk_reent+0x3e>
    d4f0:	6863      	ldr	r3, [r4, #4]
    d4f2:	68a5      	ldr	r5, [r4, #8]
    d4f4:	9300      	str	r3, [sp, #0]
    d4f6:	9b00      	ldr	r3, [sp, #0]
    d4f8:	3b01      	subs	r3, #1
    d4fa:	9300      	str	r3, [sp, #0]
    d4fc:	d40d      	bmi.n	d51a <_fwalk_reent+0x3a>
    d4fe:	89ab      	ldrh	r3, [r5, #12]
    d500:	2b01      	cmp	r3, #1
    d502:	d908      	bls.n	d516 <_fwalk_reent+0x36>
    d504:	220e      	movs	r2, #14
    d506:	5eab      	ldrsh	r3, [r5, r2]
    d508:	3301      	adds	r3, #1
    d50a:	d004      	beq.n	d516 <_fwalk_reent+0x36>
    d50c:	1c38      	adds	r0, r7, #0
    d50e:	1c29      	adds	r1, r5, #0
    d510:	9b01      	ldr	r3, [sp, #4]
    d512:	4798      	blx	r3
    d514:	4306      	orrs	r6, r0
    d516:	3568      	adds	r5, #104	; 0x68
    d518:	e7ed      	b.n	d4f6 <_fwalk_reent+0x16>
    d51a:	6824      	ldr	r4, [r4, #0]
    d51c:	e7e6      	b.n	d4ec <_fwalk_reent+0xc>
    d51e:	1c30      	adds	r0, r6, #0
    d520:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
	...

0000d524 <_lseek_r>:
    d524:	b538      	push	{r3, r4, r5, lr}
    d526:	1c05      	adds	r5, r0, #0
    d528:	2000      	movs	r0, #0
    d52a:	4c07      	ldr	r4, [pc, #28]	; (d548 <_lseek_r+0x24>)
    d52c:	6020      	str	r0, [r4, #0]
    d52e:	1c08      	adds	r0, r1, #0
    d530:	1c11      	adds	r1, r2, #0
    d532:	1c1a      	adds	r2, r3, #0
    d534:	f7fb fd18 	bl	8f68 <_lseek>
    d538:	1c43      	adds	r3, r0, #1
    d53a:	d103      	bne.n	d544 <_lseek_r+0x20>
    d53c:	6823      	ldr	r3, [r4, #0]
    d53e:	2b00      	cmp	r3, #0
    d540:	d000      	beq.n	d544 <_lseek_r+0x20>
    d542:	602b      	str	r3, [r5, #0]
    d544:	bd38      	pop	{r3, r4, r5, pc}
    d546:	46c0      	nop			; (mov r8, r8)
    d548:	20000b2c 	.word	0x20000b2c

0000d54c <__smakebuf_r>:
    d54c:	b5f0      	push	{r4, r5, r6, r7, lr}
    d54e:	898b      	ldrh	r3, [r1, #12]
    d550:	b091      	sub	sp, #68	; 0x44
    d552:	079b      	lsls	r3, r3, #30
    d554:	d506      	bpl.n	d564 <__smakebuf_r+0x18>
    d556:	1c0b      	adds	r3, r1, #0
    d558:	3347      	adds	r3, #71	; 0x47
    d55a:	600b      	str	r3, [r1, #0]
    d55c:	610b      	str	r3, [r1, #16]
    d55e:	2301      	movs	r3, #1
    d560:	614b      	str	r3, [r1, #20]
    d562:	e045      	b.n	d5f0 <__smakebuf_r+0xa4>
    d564:	1c0c      	adds	r4, r1, #0
    d566:	230e      	movs	r3, #14
    d568:	5ec9      	ldrsh	r1, [r1, r3]
    d56a:	1c06      	adds	r6, r0, #0
    d56c:	2900      	cmp	r1, #0
    d56e:	da04      	bge.n	d57a <__smakebuf_r+0x2e>
    d570:	2380      	movs	r3, #128	; 0x80
    d572:	89a5      	ldrh	r5, [r4, #12]
    d574:	401d      	ands	r5, r3
    d576:	d110      	bne.n	d59a <__smakebuf_r+0x4e>
    d578:	e00c      	b.n	d594 <__smakebuf_r+0x48>
    d57a:	aa01      	add	r2, sp, #4
    d57c:	f000 fe2a 	bl	e1d4 <_fstat_r>
    d580:	2800      	cmp	r0, #0
    d582:	dbf5      	blt.n	d570 <__smakebuf_r+0x24>
    d584:	23f0      	movs	r3, #240	; 0xf0
    d586:	9d02      	ldr	r5, [sp, #8]
    d588:	021b      	lsls	r3, r3, #8
    d58a:	401d      	ands	r5, r3
    d58c:	4b19      	ldr	r3, [pc, #100]	; (d5f4 <__smakebuf_r+0xa8>)
    d58e:	18ed      	adds	r5, r5, r3
    d590:	426b      	negs	r3, r5
    d592:	415d      	adcs	r5, r3
    d594:	2780      	movs	r7, #128	; 0x80
    d596:	00ff      	lsls	r7, r7, #3
    d598:	e001      	b.n	d59e <__smakebuf_r+0x52>
    d59a:	2500      	movs	r5, #0
    d59c:	2740      	movs	r7, #64	; 0x40
    d59e:	1c30      	adds	r0, r6, #0
    d5a0:	1c39      	adds	r1, r7, #0
    d5a2:	f7fe fdeb 	bl	c17c <_malloc_r>
    d5a6:	2800      	cmp	r0, #0
    d5a8:	d10c      	bne.n	d5c4 <__smakebuf_r+0x78>
    d5aa:	89a3      	ldrh	r3, [r4, #12]
    d5ac:	059a      	lsls	r2, r3, #22
    d5ae:	d41f      	bmi.n	d5f0 <__smakebuf_r+0xa4>
    d5b0:	2202      	movs	r2, #2
    d5b2:	4313      	orrs	r3, r2
    d5b4:	81a3      	strh	r3, [r4, #12]
    d5b6:	1c23      	adds	r3, r4, #0
    d5b8:	3347      	adds	r3, #71	; 0x47
    d5ba:	6023      	str	r3, [r4, #0]
    d5bc:	6123      	str	r3, [r4, #16]
    d5be:	2301      	movs	r3, #1
    d5c0:	6163      	str	r3, [r4, #20]
    d5c2:	e015      	b.n	d5f0 <__smakebuf_r+0xa4>
    d5c4:	2280      	movs	r2, #128	; 0x80
    d5c6:	4b0c      	ldr	r3, [pc, #48]	; (d5f8 <__smakebuf_r+0xac>)
    d5c8:	62b3      	str	r3, [r6, #40]	; 0x28
    d5ca:	89a3      	ldrh	r3, [r4, #12]
    d5cc:	6020      	str	r0, [r4, #0]
    d5ce:	4313      	orrs	r3, r2
    d5d0:	81a3      	strh	r3, [r4, #12]
    d5d2:	6120      	str	r0, [r4, #16]
    d5d4:	6167      	str	r7, [r4, #20]
    d5d6:	2d00      	cmp	r5, #0
    d5d8:	d00a      	beq.n	d5f0 <__smakebuf_r+0xa4>
    d5da:	230e      	movs	r3, #14
    d5dc:	5ee1      	ldrsh	r1, [r4, r3]
    d5de:	1c30      	adds	r0, r6, #0
    d5e0:	f000 fe0a 	bl	e1f8 <_isatty_r>
    d5e4:	2800      	cmp	r0, #0
    d5e6:	d003      	beq.n	d5f0 <__smakebuf_r+0xa4>
    d5e8:	2201      	movs	r2, #1
    d5ea:	89a3      	ldrh	r3, [r4, #12]
    d5ec:	4313      	orrs	r3, r2
    d5ee:	81a3      	strh	r3, [r4, #12]
    d5f0:	b011      	add	sp, #68	; 0x44
    d5f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    d5f4:	ffffe000 	.word	0xffffe000
    d5f8:	0000d37d 	.word	0x0000d37d

0000d5fc <_realloc_r>:
    d5fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    d5fe:	1c06      	adds	r6, r0, #0
    d600:	1c0c      	adds	r4, r1, #0
    d602:	1c15      	adds	r5, r2, #0
    d604:	2900      	cmp	r1, #0
    d606:	d104      	bne.n	d612 <_realloc_r+0x16>
    d608:	1c11      	adds	r1, r2, #0
    d60a:	f7fe fdb7 	bl	c17c <_malloc_r>
    d60e:	1c04      	adds	r4, r0, #0
    d610:	e018      	b.n	d644 <_realloc_r+0x48>
    d612:	2a00      	cmp	r2, #0
    d614:	d103      	bne.n	d61e <_realloc_r+0x22>
    d616:	f7fe fd6b 	bl	c0f0 <_free_r>
    d61a:	1c2c      	adds	r4, r5, #0
    d61c:	e012      	b.n	d644 <_realloc_r+0x48>
    d61e:	f000 fdfd 	bl	e21c <_malloc_usable_size_r>
    d622:	42a8      	cmp	r0, r5
    d624:	d20e      	bcs.n	d644 <_realloc_r+0x48>
    d626:	1c30      	adds	r0, r6, #0
    d628:	1c29      	adds	r1, r5, #0
    d62a:	f7fe fda7 	bl	c17c <_malloc_r>
    d62e:	1e07      	subs	r7, r0, #0
    d630:	d007      	beq.n	d642 <_realloc_r+0x46>
    d632:	1c21      	adds	r1, r4, #0
    d634:	1c2a      	adds	r2, r5, #0
    d636:	f7fe fd36 	bl	c0a6 <memcpy>
    d63a:	1c30      	adds	r0, r6, #0
    d63c:	1c21      	adds	r1, r4, #0
    d63e:	f7fe fd57 	bl	c0f0 <_free_r>
    d642:	1c3c      	adds	r4, r7, #0
    d644:	1c20      	adds	r0, r4, #0
    d646:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0000d648 <__ssputs_r>:
    d648:	b5f0      	push	{r4, r5, r6, r7, lr}
    d64a:	688e      	ldr	r6, [r1, #8]
    d64c:	b085      	sub	sp, #20
    d64e:	1c07      	adds	r7, r0, #0
    d650:	1c0c      	adds	r4, r1, #0
    d652:	9203      	str	r2, [sp, #12]
    d654:	9301      	str	r3, [sp, #4]
    d656:	42b3      	cmp	r3, r6
    d658:	d345      	bcc.n	d6e6 <__ssputs_r+0x9e>
    d65a:	2390      	movs	r3, #144	; 0x90
    d65c:	898a      	ldrh	r2, [r1, #12]
    d65e:	00db      	lsls	r3, r3, #3
    d660:	421a      	tst	r2, r3
    d662:	d03d      	beq.n	d6e0 <__ssputs_r+0x98>
    d664:	2503      	movs	r5, #3
    d666:	6909      	ldr	r1, [r1, #16]
    d668:	6823      	ldr	r3, [r4, #0]
    d66a:	9801      	ldr	r0, [sp, #4]
    d66c:	1a5b      	subs	r3, r3, r1
    d66e:	9302      	str	r3, [sp, #8]
    d670:	6963      	ldr	r3, [r4, #20]
    d672:	435d      	muls	r5, r3
    d674:	0feb      	lsrs	r3, r5, #31
    d676:	195d      	adds	r5, r3, r5
    d678:	9b02      	ldr	r3, [sp, #8]
    d67a:	106d      	asrs	r5, r5, #1
    d67c:	3301      	adds	r3, #1
    d67e:	181b      	adds	r3, r3, r0
    d680:	429d      	cmp	r5, r3
    d682:	d200      	bcs.n	d686 <__ssputs_r+0x3e>
    d684:	1c1d      	adds	r5, r3, #0
    d686:	1c38      	adds	r0, r7, #0
    d688:	0553      	lsls	r3, r2, #21
    d68a:	d50f      	bpl.n	d6ac <__ssputs_r+0x64>
    d68c:	1c29      	adds	r1, r5, #0
    d68e:	f7fe fd75 	bl	c17c <_malloc_r>
    d692:	1e06      	subs	r6, r0, #0
    d694:	d013      	beq.n	d6be <__ssputs_r+0x76>
    d696:	9a02      	ldr	r2, [sp, #8]
    d698:	6921      	ldr	r1, [r4, #16]
    d69a:	f7fe fd04 	bl	c0a6 <memcpy>
    d69e:	89a2      	ldrh	r2, [r4, #12]
    d6a0:	4b18      	ldr	r3, [pc, #96]	; (d704 <__ssputs_r+0xbc>)
    d6a2:	4013      	ands	r3, r2
    d6a4:	2280      	movs	r2, #128	; 0x80
    d6a6:	4313      	orrs	r3, r2
    d6a8:	81a3      	strh	r3, [r4, #12]
    d6aa:	e011      	b.n	d6d0 <__ssputs_r+0x88>
    d6ac:	1c2a      	adds	r2, r5, #0
    d6ae:	f7ff ffa5 	bl	d5fc <_realloc_r>
    d6b2:	1e06      	subs	r6, r0, #0
    d6b4:	d10c      	bne.n	d6d0 <__ssputs_r+0x88>
    d6b6:	1c38      	adds	r0, r7, #0
    d6b8:	6921      	ldr	r1, [r4, #16]
    d6ba:	f7fe fd19 	bl	c0f0 <_free_r>
    d6be:	230c      	movs	r3, #12
    d6c0:	2240      	movs	r2, #64	; 0x40
    d6c2:	2001      	movs	r0, #1
    d6c4:	603b      	str	r3, [r7, #0]
    d6c6:	89a3      	ldrh	r3, [r4, #12]
    d6c8:	4240      	negs	r0, r0
    d6ca:	4313      	orrs	r3, r2
    d6cc:	81a3      	strh	r3, [r4, #12]
    d6ce:	e017      	b.n	d700 <__ssputs_r+0xb8>
    d6d0:	9b02      	ldr	r3, [sp, #8]
    d6d2:	6126      	str	r6, [r4, #16]
    d6d4:	18f6      	adds	r6, r6, r3
    d6d6:	6026      	str	r6, [r4, #0]
    d6d8:	6165      	str	r5, [r4, #20]
    d6da:	9e01      	ldr	r6, [sp, #4]
    d6dc:	1aed      	subs	r5, r5, r3
    d6de:	60a5      	str	r5, [r4, #8]
    d6e0:	9b01      	ldr	r3, [sp, #4]
    d6e2:	42b3      	cmp	r3, r6
    d6e4:	d200      	bcs.n	d6e8 <__ssputs_r+0xa0>
    d6e6:	9e01      	ldr	r6, [sp, #4]
    d6e8:	1c32      	adds	r2, r6, #0
    d6ea:	6820      	ldr	r0, [r4, #0]
    d6ec:	9903      	ldr	r1, [sp, #12]
    d6ee:	f7fe fce3 	bl	c0b8 <memmove>
    d6f2:	2000      	movs	r0, #0
    d6f4:	68a3      	ldr	r3, [r4, #8]
    d6f6:	1b9b      	subs	r3, r3, r6
    d6f8:	60a3      	str	r3, [r4, #8]
    d6fa:	6823      	ldr	r3, [r4, #0]
    d6fc:	199e      	adds	r6, r3, r6
    d6fe:	6026      	str	r6, [r4, #0]
    d700:	b005      	add	sp, #20
    d702:	bdf0      	pop	{r4, r5, r6, r7, pc}
    d704:	fffffb7f 	.word	0xfffffb7f

0000d708 <_svfiprintf_r>:
    d708:	b5f0      	push	{r4, r5, r6, r7, lr}
    d70a:	b09f      	sub	sp, #124	; 0x7c
    d70c:	9002      	str	r0, [sp, #8]
    d70e:	9305      	str	r3, [sp, #20]
    d710:	898b      	ldrh	r3, [r1, #12]
    d712:	1c0e      	adds	r6, r1, #0
    d714:	1c17      	adds	r7, r2, #0
    d716:	061b      	lsls	r3, r3, #24
    d718:	d510      	bpl.n	d73c <_svfiprintf_r+0x34>
    d71a:	690b      	ldr	r3, [r1, #16]
    d71c:	2b00      	cmp	r3, #0
    d71e:	d10d      	bne.n	d73c <_svfiprintf_r+0x34>
    d720:	2140      	movs	r1, #64	; 0x40
    d722:	f7fe fd2b 	bl	c17c <_malloc_r>
    d726:	6030      	str	r0, [r6, #0]
    d728:	6130      	str	r0, [r6, #16]
    d72a:	2800      	cmp	r0, #0
    d72c:	d104      	bne.n	d738 <_svfiprintf_r+0x30>
    d72e:	230c      	movs	r3, #12
    d730:	9a02      	ldr	r2, [sp, #8]
    d732:	3801      	subs	r0, #1
    d734:	6013      	str	r3, [r2, #0]
    d736:	e0d0      	b.n	d8da <_svfiprintf_r+0x1d2>
    d738:	2340      	movs	r3, #64	; 0x40
    d73a:	6173      	str	r3, [r6, #20]
    d73c:	2300      	movs	r3, #0
    d73e:	ad06      	add	r5, sp, #24
    d740:	616b      	str	r3, [r5, #20]
    d742:	3320      	adds	r3, #32
    d744:	766b      	strb	r3, [r5, #25]
    d746:	3310      	adds	r3, #16
    d748:	76ab      	strb	r3, [r5, #26]
    d74a:	1c3c      	adds	r4, r7, #0
    d74c:	7823      	ldrb	r3, [r4, #0]
    d74e:	2b00      	cmp	r3, #0
    d750:	d103      	bne.n	d75a <_svfiprintf_r+0x52>
    d752:	1be3      	subs	r3, r4, r7
    d754:	9304      	str	r3, [sp, #16]
    d756:	d012      	beq.n	d77e <_svfiprintf_r+0x76>
    d758:	e003      	b.n	d762 <_svfiprintf_r+0x5a>
    d75a:	2b25      	cmp	r3, #37	; 0x25
    d75c:	d0f9      	beq.n	d752 <_svfiprintf_r+0x4a>
    d75e:	3401      	adds	r4, #1
    d760:	e7f4      	b.n	d74c <_svfiprintf_r+0x44>
    d762:	9b04      	ldr	r3, [sp, #16]
    d764:	9802      	ldr	r0, [sp, #8]
    d766:	1c31      	adds	r1, r6, #0
    d768:	1c3a      	adds	r2, r7, #0
    d76a:	f7ff ff6d 	bl	d648 <__ssputs_r>
    d76e:	1c43      	adds	r3, r0, #1
    d770:	d100      	bne.n	d774 <_svfiprintf_r+0x6c>
    d772:	e0ac      	b.n	d8ce <_svfiprintf_r+0x1c6>
    d774:	696a      	ldr	r2, [r5, #20]
    d776:	9b04      	ldr	r3, [sp, #16]
    d778:	4694      	mov	ip, r2
    d77a:	4463      	add	r3, ip
    d77c:	616b      	str	r3, [r5, #20]
    d77e:	7823      	ldrb	r3, [r4, #0]
    d780:	2b00      	cmp	r3, #0
    d782:	d100      	bne.n	d786 <_svfiprintf_r+0x7e>
    d784:	e0a3      	b.n	d8ce <_svfiprintf_r+0x1c6>
    d786:	2201      	movs	r2, #1
    d788:	2300      	movs	r3, #0
    d78a:	4252      	negs	r2, r2
    d78c:	606a      	str	r2, [r5, #4]
    d78e:	a902      	add	r1, sp, #8
    d790:	3254      	adds	r2, #84	; 0x54
    d792:	1852      	adds	r2, r2, r1
    d794:	3401      	adds	r4, #1
    d796:	602b      	str	r3, [r5, #0]
    d798:	60eb      	str	r3, [r5, #12]
    d79a:	60ab      	str	r3, [r5, #8]
    d79c:	7013      	strb	r3, [r2, #0]
    d79e:	65ab      	str	r3, [r5, #88]	; 0x58
    d7a0:	4f4f      	ldr	r7, [pc, #316]	; (d8e0 <_svfiprintf_r+0x1d8>)
    d7a2:	7821      	ldrb	r1, [r4, #0]
    d7a4:	1c38      	adds	r0, r7, #0
    d7a6:	2205      	movs	r2, #5
    d7a8:	f7fe fc72 	bl	c090 <memchr>
    d7ac:	2800      	cmp	r0, #0
    d7ae:	d008      	beq.n	d7c2 <_svfiprintf_r+0xba>
    d7b0:	1bc0      	subs	r0, r0, r7
    d7b2:	2701      	movs	r7, #1
    d7b4:	4087      	lsls	r7, r0
    d7b6:	1c38      	adds	r0, r7, #0
    d7b8:	682b      	ldr	r3, [r5, #0]
    d7ba:	3401      	adds	r4, #1
    d7bc:	4318      	orrs	r0, r3
    d7be:	6028      	str	r0, [r5, #0]
    d7c0:	e7ee      	b.n	d7a0 <_svfiprintf_r+0x98>
    d7c2:	682b      	ldr	r3, [r5, #0]
    d7c4:	06da      	lsls	r2, r3, #27
    d7c6:	d504      	bpl.n	d7d2 <_svfiprintf_r+0xca>
    d7c8:	2253      	movs	r2, #83	; 0x53
    d7ca:	2120      	movs	r1, #32
    d7cc:	a802      	add	r0, sp, #8
    d7ce:	1812      	adds	r2, r2, r0
    d7d0:	7011      	strb	r1, [r2, #0]
    d7d2:	071a      	lsls	r2, r3, #28
    d7d4:	d504      	bpl.n	d7e0 <_svfiprintf_r+0xd8>
    d7d6:	2253      	movs	r2, #83	; 0x53
    d7d8:	212b      	movs	r1, #43	; 0x2b
    d7da:	a802      	add	r0, sp, #8
    d7dc:	1812      	adds	r2, r2, r0
    d7de:	7011      	strb	r1, [r2, #0]
    d7e0:	7822      	ldrb	r2, [r4, #0]
    d7e2:	2a2a      	cmp	r2, #42	; 0x2a
    d7e4:	d001      	beq.n	d7ea <_svfiprintf_r+0xe2>
    d7e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
    d7e8:	e00e      	b.n	d808 <_svfiprintf_r+0x100>
    d7ea:	9a05      	ldr	r2, [sp, #20]
    d7ec:	1d11      	adds	r1, r2, #4
    d7ee:	6812      	ldr	r2, [r2, #0]
    d7f0:	9105      	str	r1, [sp, #20]
    d7f2:	2a00      	cmp	r2, #0
    d7f4:	db01      	blt.n	d7fa <_svfiprintf_r+0xf2>
    d7f6:	9209      	str	r2, [sp, #36]	; 0x24
    d7f8:	e004      	b.n	d804 <_svfiprintf_r+0xfc>
    d7fa:	4252      	negs	r2, r2
    d7fc:	60ea      	str	r2, [r5, #12]
    d7fe:	2202      	movs	r2, #2
    d800:	4313      	orrs	r3, r2
    d802:	602b      	str	r3, [r5, #0]
    d804:	3401      	adds	r4, #1
    d806:	e009      	b.n	d81c <_svfiprintf_r+0x114>
    d808:	7822      	ldrb	r2, [r4, #0]
    d80a:	3a30      	subs	r2, #48	; 0x30
    d80c:	2a09      	cmp	r2, #9
    d80e:	d804      	bhi.n	d81a <_svfiprintf_r+0x112>
    d810:	210a      	movs	r1, #10
    d812:	434b      	muls	r3, r1
    d814:	3401      	adds	r4, #1
    d816:	189b      	adds	r3, r3, r2
    d818:	e7f6      	b.n	d808 <_svfiprintf_r+0x100>
    d81a:	9309      	str	r3, [sp, #36]	; 0x24
    d81c:	7823      	ldrb	r3, [r4, #0]
    d81e:	2b2e      	cmp	r3, #46	; 0x2e
    d820:	d118      	bne.n	d854 <_svfiprintf_r+0x14c>
    d822:	7863      	ldrb	r3, [r4, #1]
    d824:	2b2a      	cmp	r3, #42	; 0x2a
    d826:	d109      	bne.n	d83c <_svfiprintf_r+0x134>
    d828:	9b05      	ldr	r3, [sp, #20]
    d82a:	3402      	adds	r4, #2
    d82c:	1d1a      	adds	r2, r3, #4
    d82e:	681b      	ldr	r3, [r3, #0]
    d830:	9205      	str	r2, [sp, #20]
    d832:	2b00      	cmp	r3, #0
    d834:	da0d      	bge.n	d852 <_svfiprintf_r+0x14a>
    d836:	2301      	movs	r3, #1
    d838:	425b      	negs	r3, r3
    d83a:	e00a      	b.n	d852 <_svfiprintf_r+0x14a>
    d83c:	2300      	movs	r3, #0
    d83e:	3401      	adds	r4, #1
    d840:	7822      	ldrb	r2, [r4, #0]
    d842:	3a30      	subs	r2, #48	; 0x30
    d844:	2a09      	cmp	r2, #9
    d846:	d804      	bhi.n	d852 <_svfiprintf_r+0x14a>
    d848:	210a      	movs	r1, #10
    d84a:	434b      	muls	r3, r1
    d84c:	3401      	adds	r4, #1
    d84e:	189b      	adds	r3, r3, r2
    d850:	e7f6      	b.n	d840 <_svfiprintf_r+0x138>
    d852:	9307      	str	r3, [sp, #28]
    d854:	4f23      	ldr	r7, [pc, #140]	; (d8e4 <_svfiprintf_r+0x1dc>)
    d856:	7821      	ldrb	r1, [r4, #0]
    d858:	1c38      	adds	r0, r7, #0
    d85a:	2203      	movs	r2, #3
    d85c:	f7fe fc18 	bl	c090 <memchr>
    d860:	2800      	cmp	r0, #0
    d862:	d007      	beq.n	d874 <_svfiprintf_r+0x16c>
    d864:	1bc0      	subs	r0, r0, r7
    d866:	2740      	movs	r7, #64	; 0x40
    d868:	4087      	lsls	r7, r0
    d86a:	1c38      	adds	r0, r7, #0
    d86c:	682b      	ldr	r3, [r5, #0]
    d86e:	3401      	adds	r4, #1
    d870:	4318      	orrs	r0, r3
    d872:	6028      	str	r0, [r5, #0]
    d874:	7821      	ldrb	r1, [r4, #0]
    d876:	481c      	ldr	r0, [pc, #112]	; (d8e8 <_svfiprintf_r+0x1e0>)
    d878:	2206      	movs	r2, #6
    d87a:	1c67      	adds	r7, r4, #1
    d87c:	7629      	strb	r1, [r5, #24]
    d87e:	f7fe fc07 	bl	c090 <memchr>
    d882:	2800      	cmp	r0, #0
    d884:	d012      	beq.n	d8ac <_svfiprintf_r+0x1a4>
    d886:	4b19      	ldr	r3, [pc, #100]	; (d8ec <_svfiprintf_r+0x1e4>)
    d888:	2b00      	cmp	r3, #0
    d88a:	d106      	bne.n	d89a <_svfiprintf_r+0x192>
    d88c:	2207      	movs	r2, #7
    d88e:	9b05      	ldr	r3, [sp, #20]
    d890:	3307      	adds	r3, #7
    d892:	4393      	bics	r3, r2
    d894:	3308      	adds	r3, #8
    d896:	9305      	str	r3, [sp, #20]
    d898:	e014      	b.n	d8c4 <_svfiprintf_r+0x1bc>
    d89a:	ab05      	add	r3, sp, #20
    d89c:	9300      	str	r3, [sp, #0]
    d89e:	9802      	ldr	r0, [sp, #8]
    d8a0:	1c29      	adds	r1, r5, #0
    d8a2:	1c32      	adds	r2, r6, #0
    d8a4:	4b12      	ldr	r3, [pc, #72]	; (d8f0 <_svfiprintf_r+0x1e8>)
    d8a6:	e000      	b.n	d8aa <_svfiprintf_r+0x1a2>
    d8a8:	bf00      	nop
    d8aa:	e007      	b.n	d8bc <_svfiprintf_r+0x1b4>
    d8ac:	ab05      	add	r3, sp, #20
    d8ae:	9300      	str	r3, [sp, #0]
    d8b0:	9802      	ldr	r0, [sp, #8]
    d8b2:	1c29      	adds	r1, r5, #0
    d8b4:	1c32      	adds	r2, r6, #0
    d8b6:	4b0e      	ldr	r3, [pc, #56]	; (d8f0 <_svfiprintf_r+0x1e8>)
    d8b8:	f7fe fe5e 	bl	c578 <_printf_i>
    d8bc:	9003      	str	r0, [sp, #12]
    d8be:	9b03      	ldr	r3, [sp, #12]
    d8c0:	3301      	adds	r3, #1
    d8c2:	d004      	beq.n	d8ce <_svfiprintf_r+0x1c6>
    d8c4:	696b      	ldr	r3, [r5, #20]
    d8c6:	9a03      	ldr	r2, [sp, #12]
    d8c8:	189b      	adds	r3, r3, r2
    d8ca:	616b      	str	r3, [r5, #20]
    d8cc:	e73d      	b.n	d74a <_svfiprintf_r+0x42>
    d8ce:	89b3      	ldrh	r3, [r6, #12]
    d8d0:	980b      	ldr	r0, [sp, #44]	; 0x2c
    d8d2:	065b      	lsls	r3, r3, #25
    d8d4:	d501      	bpl.n	d8da <_svfiprintf_r+0x1d2>
    d8d6:	2001      	movs	r0, #1
    d8d8:	4240      	negs	r0, r0
    d8da:	b01f      	add	sp, #124	; 0x7c
    d8dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    d8de:	46c0      	nop			; (mov r8, r8)
    d8e0:	00011f90 	.word	0x00011f90
    d8e4:	00011f96 	.word	0x00011f96
    d8e8:	00011f9a 	.word	0x00011f9a
    d8ec:	00000000 	.word	0x00000000
    d8f0:	0000d649 	.word	0x0000d649

0000d8f4 <_sungetc_r>:
    d8f4:	b538      	push	{r3, r4, r5, lr}
    d8f6:	1c14      	adds	r4, r2, #0
    d8f8:	1c4b      	adds	r3, r1, #1
    d8fa:	d102      	bne.n	d902 <_sungetc_r+0xe>
    d8fc:	2001      	movs	r0, #1
    d8fe:	4240      	negs	r0, r0
    d900:	e034      	b.n	d96c <_sungetc_r+0x78>
    d902:	8993      	ldrh	r3, [r2, #12]
    d904:	2220      	movs	r2, #32
    d906:	4393      	bics	r3, r2
    d908:	6b62      	ldr	r2, [r4, #52]	; 0x34
    d90a:	81a3      	strh	r3, [r4, #12]
    d90c:	b2cd      	uxtb	r5, r1
    d90e:	6863      	ldr	r3, [r4, #4]
    d910:	2a00      	cmp	r2, #0
    d912:	d00f      	beq.n	d934 <_sungetc_r+0x40>
    d914:	6ba2      	ldr	r2, [r4, #56]	; 0x38
    d916:	4293      	cmp	r3, r2
    d918:	da06      	bge.n	d928 <_sungetc_r+0x34>
    d91a:	6823      	ldr	r3, [r4, #0]
    d91c:	3b01      	subs	r3, #1
    d91e:	6023      	str	r3, [r4, #0]
    d920:	701d      	strb	r5, [r3, #0]
    d922:	6863      	ldr	r3, [r4, #4]
    d924:	3301      	adds	r3, #1
    d926:	e01f      	b.n	d968 <_sungetc_r+0x74>
    d928:	1c21      	adds	r1, r4, #0
    d92a:	f000 fc15 	bl	e158 <__submore>
    d92e:	2800      	cmp	r0, #0
    d930:	d0f3      	beq.n	d91a <_sungetc_r+0x26>
    d932:	e7e3      	b.n	d8fc <_sungetc_r+0x8>
    d934:	6921      	ldr	r1, [r4, #16]
    d936:	6822      	ldr	r2, [r4, #0]
    d938:	2900      	cmp	r1, #0
    d93a:	d009      	beq.n	d950 <_sungetc_r+0x5c>
    d93c:	428a      	cmp	r2, r1
    d93e:	d907      	bls.n	d950 <_sungetc_r+0x5c>
    d940:	1e51      	subs	r1, r2, #1
    d942:	7808      	ldrb	r0, [r1, #0]
    d944:	42a8      	cmp	r0, r5
    d946:	d103      	bne.n	d950 <_sungetc_r+0x5c>
    d948:	3301      	adds	r3, #1
    d94a:	6021      	str	r1, [r4, #0]
    d94c:	6063      	str	r3, [r4, #4]
    d94e:	e00d      	b.n	d96c <_sungetc_r+0x78>
    d950:	6423      	str	r3, [r4, #64]	; 0x40
    d952:	1c23      	adds	r3, r4, #0
    d954:	3344      	adds	r3, #68	; 0x44
    d956:	6363      	str	r3, [r4, #52]	; 0x34
    d958:	2303      	movs	r3, #3
    d95a:	63a3      	str	r3, [r4, #56]	; 0x38
    d95c:	1c23      	adds	r3, r4, #0
    d95e:	3346      	adds	r3, #70	; 0x46
    d960:	63e2      	str	r2, [r4, #60]	; 0x3c
    d962:	701d      	strb	r5, [r3, #0]
    d964:	6023      	str	r3, [r4, #0]
    d966:	2301      	movs	r3, #1
    d968:	1c28      	adds	r0, r5, #0
    d96a:	6063      	str	r3, [r4, #4]
    d96c:	bd38      	pop	{r3, r4, r5, pc}

0000d96e <__ssrefill_r>:
    d96e:	b510      	push	{r4, lr}
    d970:	1c0c      	adds	r4, r1, #0
    d972:	6b49      	ldr	r1, [r1, #52]	; 0x34
    d974:	2900      	cmp	r1, #0
    d976:	d00e      	beq.n	d996 <__ssrefill_r+0x28>
    d978:	1c23      	adds	r3, r4, #0
    d97a:	3344      	adds	r3, #68	; 0x44
    d97c:	4299      	cmp	r1, r3
    d97e:	d001      	beq.n	d984 <__ssrefill_r+0x16>
    d980:	f7fe fbb6 	bl	c0f0 <_free_r>
    d984:	2000      	movs	r0, #0
    d986:	6c23      	ldr	r3, [r4, #64]	; 0x40
    d988:	6360      	str	r0, [r4, #52]	; 0x34
    d98a:	6063      	str	r3, [r4, #4]
    d98c:	4283      	cmp	r3, r0
    d98e:	d002      	beq.n	d996 <__ssrefill_r+0x28>
    d990:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    d992:	6023      	str	r3, [r4, #0]
    d994:	e009      	b.n	d9aa <__ssrefill_r+0x3c>
    d996:	6923      	ldr	r3, [r4, #16]
    d998:	2220      	movs	r2, #32
    d99a:	6023      	str	r3, [r4, #0]
    d99c:	2300      	movs	r3, #0
    d99e:	2001      	movs	r0, #1
    d9a0:	6063      	str	r3, [r4, #4]
    d9a2:	89a3      	ldrh	r3, [r4, #12]
    d9a4:	4240      	negs	r0, r0
    d9a6:	4313      	orrs	r3, r2
    d9a8:	81a3      	strh	r3, [r4, #12]
    d9aa:	bd10      	pop	{r4, pc}

0000d9ac <__ssvfiscanf_r>:
    d9ac:	b5f0      	push	{r4, r5, r6, r7, lr}
    d9ae:	4cb5      	ldr	r4, [pc, #724]	; (dc84 <__ssvfiscanf_r+0x2d8>)
    d9b0:	1c07      	adds	r7, r0, #0
    d9b2:	44a5      	add	sp, r4
    d9b4:	9303      	str	r3, [sp, #12]
    d9b6:	2300      	movs	r3, #0
    d9b8:	2086      	movs	r0, #134	; 0x86
    d9ba:	9348      	str	r3, [sp, #288]	; 0x120
    d9bc:	9349      	str	r3, [sp, #292]	; 0x124
    d9be:	ab05      	add	r3, sp, #20
    d9c0:	934a      	str	r3, [sp, #296]	; 0x128
    d9c2:	23be      	movs	r3, #190	; 0xbe
    d9c4:	0040      	lsls	r0, r0, #1
    d9c6:	1c0d      	adds	r5, r1, #0
    d9c8:	9201      	str	r2, [sp, #4]
    d9ca:	a902      	add	r1, sp, #8
    d9cc:	4aae      	ldr	r2, [pc, #696]	; (dc88 <__ssvfiscanf_r+0x2dc>)
    d9ce:	005b      	lsls	r3, r3, #1
    d9d0:	1809      	adds	r1, r1, r0
    d9d2:	50ca      	str	r2, [r1, r3]
    d9d4:	4aad      	ldr	r2, [pc, #692]	; (dc8c <__ssvfiscanf_r+0x2e0>)
    d9d6:	a902      	add	r1, sp, #8
    d9d8:	3304      	adds	r3, #4
    d9da:	1809      	adds	r1, r1, r0
    d9dc:	50ca      	str	r2, [r1, r3]
    d9de:	9b01      	ldr	r3, [sp, #4]
    d9e0:	781c      	ldrb	r4, [r3, #0]
    d9e2:	2c00      	cmp	r4, #0
    d9e4:	d100      	bne.n	d9e8 <__ssvfiscanf_r+0x3c>
    d9e6:	e144      	b.n	dc72 <__ssvfiscanf_r+0x2c6>
    d9e8:	4ea9      	ldr	r6, [pc, #676]	; (dc90 <__ssvfiscanf_r+0x2e4>)
    d9ea:	6833      	ldr	r3, [r6, #0]
    d9ec:	191b      	adds	r3, r3, r4
    d9ee:	785a      	ldrb	r2, [r3, #1]
    d9f0:	2308      	movs	r3, #8
    d9f2:	4013      	ands	r3, r2
    d9f4:	d023      	beq.n	da3e <__ssvfiscanf_r+0x92>
    d9f6:	686b      	ldr	r3, [r5, #4]
    d9f8:	2b00      	cmp	r3, #0
    d9fa:	dd10      	ble.n	da1e <__ssvfiscanf_r+0x72>
    d9fc:	682b      	ldr	r3, [r5, #0]
    d9fe:	6831      	ldr	r1, [r6, #0]
    da00:	781a      	ldrb	r2, [r3, #0]
    da02:	188a      	adds	r2, r1, r2
    da04:	7852      	ldrb	r2, [r2, #1]
    da06:	0712      	lsls	r2, r2, #28
    da08:	d515      	bpl.n	da36 <__ssvfiscanf_r+0x8a>
    da0a:	9a49      	ldr	r2, [sp, #292]	; 0x124
    da0c:	3301      	adds	r3, #1
    da0e:	9202      	str	r2, [sp, #8]
    da10:	3201      	adds	r2, #1
    da12:	9249      	str	r2, [sp, #292]	; 0x124
    da14:	686a      	ldr	r2, [r5, #4]
    da16:	602b      	str	r3, [r5, #0]
    da18:	3a01      	subs	r2, #1
    da1a:	606a      	str	r2, [r5, #4]
    da1c:	e7eb      	b.n	d9f6 <__ssvfiscanf_r+0x4a>
    da1e:	2186      	movs	r1, #134	; 0x86
    da20:	23c0      	movs	r3, #192	; 0xc0
    da22:	0049      	lsls	r1, r1, #1
    da24:	aa02      	add	r2, sp, #8
    da26:	1852      	adds	r2, r2, r1
    da28:	005b      	lsls	r3, r3, #1
    da2a:	58d3      	ldr	r3, [r2, r3]
    da2c:	1c38      	adds	r0, r7, #0
    da2e:	1c29      	adds	r1, r5, #0
    da30:	4798      	blx	r3
    da32:	2800      	cmp	r0, #0
    da34:	d0e2      	beq.n	d9fc <__ssvfiscanf_r+0x50>
    da36:	9e01      	ldr	r6, [sp, #4]
    da38:	3601      	adds	r6, #1
    da3a:	9601      	str	r6, [sp, #4]
    da3c:	e7cf      	b.n	d9de <__ssvfiscanf_r+0x32>
    da3e:	9a01      	ldr	r2, [sp, #4]
    da40:	1c56      	adds	r6, r2, #1
    da42:	2c25      	cmp	r4, #37	; 0x25
    da44:	d14f      	bne.n	dae6 <__ssvfiscanf_r+0x13a>
    da46:	9347      	str	r3, [sp, #284]	; 0x11c
    da48:	9345      	str	r3, [sp, #276]	; 0x114
    da4a:	7853      	ldrb	r3, [r2, #1]
    da4c:	2b2a      	cmp	r3, #42	; 0x2a
    da4e:	d102      	bne.n	da56 <__ssvfiscanf_r+0xaa>
    da50:	3b1a      	subs	r3, #26
    da52:	9345      	str	r3, [sp, #276]	; 0x114
    da54:	3601      	adds	r6, #1
    da56:	1c34      	adds	r4, r6, #0
    da58:	7821      	ldrb	r1, [r4, #0]
    da5a:	1c0b      	adds	r3, r1, #0
    da5c:	3b30      	subs	r3, #48	; 0x30
    da5e:	2b09      	cmp	r3, #9
    da60:	d809      	bhi.n	da76 <__ssvfiscanf_r+0xca>
    da62:	9b47      	ldr	r3, [sp, #284]	; 0x11c
    da64:	3401      	adds	r4, #1
    da66:	9301      	str	r3, [sp, #4]
    da68:	230a      	movs	r3, #10
    da6a:	9a01      	ldr	r2, [sp, #4]
    da6c:	4353      	muls	r3, r2
    da6e:	3b30      	subs	r3, #48	; 0x30
    da70:	1859      	adds	r1, r3, r1
    da72:	9147      	str	r1, [sp, #284]	; 0x11c
    da74:	e7f0      	b.n	da58 <__ssvfiscanf_r+0xac>
    da76:	4e87      	ldr	r6, [pc, #540]	; (dc94 <__ssvfiscanf_r+0x2e8>)
    da78:	2203      	movs	r2, #3
    da7a:	1c30      	adds	r0, r6, #0
    da7c:	f7fe fb08 	bl	c090 <memchr>
    da80:	2800      	cmp	r0, #0
    da82:	d008      	beq.n	da96 <__ssvfiscanf_r+0xea>
    da84:	1b80      	subs	r0, r0, r6
    da86:	2601      	movs	r6, #1
    da88:	4086      	lsls	r6, r0
    da8a:	1c30      	adds	r0, r6, #0
    da8c:	9b45      	ldr	r3, [sp, #276]	; 0x114
    da8e:	3401      	adds	r4, #1
    da90:	4318      	orrs	r0, r3
    da92:	9301      	str	r3, [sp, #4]
    da94:	9045      	str	r0, [sp, #276]	; 0x114
    da96:	1c66      	adds	r6, r4, #1
    da98:	7824      	ldrb	r4, [r4, #0]
    da9a:	2c67      	cmp	r4, #103	; 0x67
    da9c:	d810      	bhi.n	dac0 <__ssvfiscanf_r+0x114>
    da9e:	2c65      	cmp	r4, #101	; 0x65
    daa0:	d300      	bcc.n	daa4 <__ssvfiscanf_r+0xf8>
    daa2:	e084      	b.n	dbae <__ssvfiscanf_r+0x202>
    daa4:	2c5b      	cmp	r4, #91	; 0x5b
    daa6:	d05a      	beq.n	db5e <__ssvfiscanf_r+0x1b2>
    daa8:	d805      	bhi.n	dab6 <__ssvfiscanf_r+0x10a>
    daaa:	2c00      	cmp	r4, #0
    daac:	d100      	bne.n	dab0 <__ssvfiscanf_r+0x104>
    daae:	e0e2      	b.n	dc76 <__ssvfiscanf_r+0x2ca>
    dab0:	2c25      	cmp	r4, #37	; 0x25
    dab2:	d018      	beq.n	dae6 <__ssvfiscanf_r+0x13a>
    dab4:	e07d      	b.n	dbb2 <__ssvfiscanf_r+0x206>
    dab6:	2c63      	cmp	r4, #99	; 0x63
    dab8:	d05f      	beq.n	db7a <__ssvfiscanf_r+0x1ce>
    daba:	2c64      	cmp	r4, #100	; 0x64
    dabc:	d046      	beq.n	db4c <__ssvfiscanf_r+0x1a0>
    dabe:	e078      	b.n	dbb2 <__ssvfiscanf_r+0x206>
    dac0:	2c70      	cmp	r4, #112	; 0x70
    dac2:	d034      	beq.n	db2e <__ssvfiscanf_r+0x182>
    dac4:	d807      	bhi.n	dad6 <__ssvfiscanf_r+0x12a>
    dac6:	2c6e      	cmp	r4, #110	; 0x6e
    dac8:	d05f      	beq.n	db8a <__ssvfiscanf_r+0x1de>
    daca:	d841      	bhi.n	db50 <__ssvfiscanf_r+0x1a4>
    dacc:	2c69      	cmp	r4, #105	; 0x69
    dace:	d170      	bne.n	dbb2 <__ssvfiscanf_r+0x206>
    dad0:	2300      	movs	r3, #0
    dad2:	9346      	str	r3, [sp, #280]	; 0x118
    dad4:	e041      	b.n	db5a <__ssvfiscanf_r+0x1ae>
    dad6:	2c75      	cmp	r4, #117	; 0x75
    dad8:	d038      	beq.n	db4c <__ssvfiscanf_r+0x1a0>
    dada:	2c78      	cmp	r4, #120	; 0x78
    dadc:	d02d      	beq.n	db3a <__ssvfiscanf_r+0x18e>
    dade:	2c73      	cmp	r4, #115	; 0x73
    dae0:	d167      	bne.n	dbb2 <__ssvfiscanf_r+0x206>
    dae2:	2302      	movs	r3, #2
    dae4:	e047      	b.n	db76 <__ssvfiscanf_r+0x1ca>
    dae6:	686b      	ldr	r3, [r5, #4]
    dae8:	2b00      	cmp	r3, #0
    daea:	dd0e      	ble.n	db0a <__ssvfiscanf_r+0x15e>
    daec:	682b      	ldr	r3, [r5, #0]
    daee:	781a      	ldrb	r2, [r3, #0]
    daf0:	42a2      	cmp	r2, r4
    daf2:	d000      	beq.n	daf6 <__ssvfiscanf_r+0x14a>
    daf4:	e0bd      	b.n	dc72 <__ssvfiscanf_r+0x2c6>
    daf6:	3301      	adds	r3, #1
    daf8:	686a      	ldr	r2, [r5, #4]
    dafa:	602b      	str	r3, [r5, #0]
    dafc:	9b49      	ldr	r3, [sp, #292]	; 0x124
    dafe:	3a01      	subs	r2, #1
    db00:	9301      	str	r3, [sp, #4]
    db02:	3301      	adds	r3, #1
    db04:	606a      	str	r2, [r5, #4]
    db06:	9349      	str	r3, [sp, #292]	; 0x124
    db08:	e797      	b.n	da3a <__ssvfiscanf_r+0x8e>
    db0a:	2186      	movs	r1, #134	; 0x86
    db0c:	23c0      	movs	r3, #192	; 0xc0
    db0e:	0049      	lsls	r1, r1, #1
    db10:	aa02      	add	r2, sp, #8
    db12:	1852      	adds	r2, r2, r1
    db14:	005b      	lsls	r3, r3, #1
    db16:	58d3      	ldr	r3, [r2, r3]
    db18:	1c38      	adds	r0, r7, #0
    db1a:	1c29      	adds	r1, r5, #0
    db1c:	4798      	blx	r3
    db1e:	2800      	cmp	r0, #0
    db20:	d0e4      	beq.n	daec <__ssvfiscanf_r+0x140>
    db22:	9848      	ldr	r0, [sp, #288]	; 0x120
    db24:	2800      	cmp	r0, #0
    db26:	d000      	beq.n	db2a <__ssvfiscanf_r+0x17e>
    db28:	e09f      	b.n	dc6a <__ssvfiscanf_r+0x2be>
    db2a:	3801      	subs	r0, #1
    db2c:	e0a5      	b.n	dc7a <__ssvfiscanf_r+0x2ce>
    db2e:	9b45      	ldr	r3, [sp, #276]	; 0x114
    db30:	9301      	str	r3, [sp, #4]
    db32:	2320      	movs	r3, #32
    db34:	9a01      	ldr	r2, [sp, #4]
    db36:	4313      	orrs	r3, r2
    db38:	9345      	str	r3, [sp, #276]	; 0x114
    db3a:	9b45      	ldr	r3, [sp, #276]	; 0x114
    db3c:	9301      	str	r3, [sp, #4]
    db3e:	2380      	movs	r3, #128	; 0x80
    db40:	9a01      	ldr	r2, [sp, #4]
    db42:	009b      	lsls	r3, r3, #2
    db44:	4313      	orrs	r3, r2
    db46:	9345      	str	r3, [sp, #276]	; 0x114
    db48:	2310      	movs	r3, #16
    db4a:	e002      	b.n	db52 <__ssvfiscanf_r+0x1a6>
    db4c:	230a      	movs	r3, #10
    db4e:	e000      	b.n	db52 <__ssvfiscanf_r+0x1a6>
    db50:	2308      	movs	r3, #8
    db52:	9346      	str	r3, [sp, #280]	; 0x118
    db54:	2304      	movs	r3, #4
    db56:	2c6e      	cmp	r4, #110	; 0x6e
    db58:	dc0d      	bgt.n	db76 <__ssvfiscanf_r+0x1ca>
    db5a:	2303      	movs	r3, #3
    db5c:	e00b      	b.n	db76 <__ssvfiscanf_r+0x1ca>
    db5e:	1c31      	adds	r1, r6, #0
    db60:	a805      	add	r0, sp, #20
    db62:	f000 fa43 	bl	dfec <__sccl>
    db66:	9b45      	ldr	r3, [sp, #276]	; 0x114
    db68:	1c06      	adds	r6, r0, #0
    db6a:	9301      	str	r3, [sp, #4]
    db6c:	2340      	movs	r3, #64	; 0x40
    db6e:	9a01      	ldr	r2, [sp, #4]
    db70:	4313      	orrs	r3, r2
    db72:	9345      	str	r3, [sp, #276]	; 0x114
    db74:	2301      	movs	r3, #1
    db76:	934b      	str	r3, [sp, #300]	; 0x12c
    db78:	e01f      	b.n	dbba <__ssvfiscanf_r+0x20e>
    db7a:	9b45      	ldr	r3, [sp, #276]	; 0x114
    db7c:	9301      	str	r3, [sp, #4]
    db7e:	2340      	movs	r3, #64	; 0x40
    db80:	9a01      	ldr	r2, [sp, #4]
    db82:	4313      	orrs	r3, r2
    db84:	9345      	str	r3, [sp, #276]	; 0x114
    db86:	2300      	movs	r3, #0
    db88:	e7f5      	b.n	db76 <__ssvfiscanf_r+0x1ca>
    db8a:	9945      	ldr	r1, [sp, #276]	; 0x114
    db8c:	06cb      	lsls	r3, r1, #27
    db8e:	d500      	bpl.n	db92 <__ssvfiscanf_r+0x1e6>
    db90:	e753      	b.n	da3a <__ssvfiscanf_r+0x8e>
    db92:	9b03      	ldr	r3, [sp, #12]
    db94:	9a49      	ldr	r2, [sp, #292]	; 0x124
    db96:	07c8      	lsls	r0, r1, #31
    db98:	d504      	bpl.n	dba4 <__ssvfiscanf_r+0x1f8>
    db9a:	1d19      	adds	r1, r3, #4
    db9c:	9103      	str	r1, [sp, #12]
    db9e:	681b      	ldr	r3, [r3, #0]
    dba0:	801a      	strh	r2, [r3, #0]
    dba2:	e74a      	b.n	da3a <__ssvfiscanf_r+0x8e>
    dba4:	1d19      	adds	r1, r3, #4
    dba6:	9103      	str	r1, [sp, #12]
    dba8:	681b      	ldr	r3, [r3, #0]
    dbaa:	601a      	str	r2, [r3, #0]
    dbac:	e745      	b.n	da3a <__ssvfiscanf_r+0x8e>
    dbae:	2305      	movs	r3, #5
    dbb0:	e7e1      	b.n	db76 <__ssvfiscanf_r+0x1ca>
    dbb2:	2303      	movs	r3, #3
    dbb4:	934b      	str	r3, [sp, #300]	; 0x12c
    dbb6:	3307      	adds	r3, #7
    dbb8:	9346      	str	r3, [sp, #280]	; 0x118
    dbba:	686b      	ldr	r3, [r5, #4]
    dbbc:	2b00      	cmp	r3, #0
    dbbe:	dd04      	ble.n	dbca <__ssvfiscanf_r+0x21e>
    dbc0:	9b45      	ldr	r3, [sp, #276]	; 0x114
    dbc2:	9301      	str	r3, [sp, #4]
    dbc4:	065b      	lsls	r3, r3, #25
    dbc6:	d518      	bpl.n	dbfa <__ssvfiscanf_r+0x24e>
    dbc8:	e01f      	b.n	dc0a <__ssvfiscanf_r+0x25e>
    dbca:	2186      	movs	r1, #134	; 0x86
    dbcc:	23c0      	movs	r3, #192	; 0xc0
    dbce:	0049      	lsls	r1, r1, #1
    dbd0:	aa02      	add	r2, sp, #8
    dbd2:	1852      	adds	r2, r2, r1
    dbd4:	005b      	lsls	r3, r3, #1
    dbd6:	58d3      	ldr	r3, [r2, r3]
    dbd8:	1c38      	adds	r0, r7, #0
    dbda:	1c29      	adds	r1, r5, #0
    dbdc:	4798      	blx	r3
    dbde:	2800      	cmp	r0, #0
    dbe0:	d0ee      	beq.n	dbc0 <__ssvfiscanf_r+0x214>
    dbe2:	e79e      	b.n	db22 <__ssvfiscanf_r+0x176>
    dbe4:	9a49      	ldr	r2, [sp, #292]	; 0x124
    dbe6:	9201      	str	r2, [sp, #4]
    dbe8:	3201      	adds	r2, #1
    dbea:	9249      	str	r2, [sp, #292]	; 0x124
    dbec:	686a      	ldr	r2, [r5, #4]
    dbee:	3a01      	subs	r2, #1
    dbf0:	606a      	str	r2, [r5, #4]
    dbf2:	2a00      	cmp	r2, #0
    dbf4:	dd13      	ble.n	dc1e <__ssvfiscanf_r+0x272>
    dbf6:	3301      	adds	r3, #1
    dbf8:	602b      	str	r3, [r5, #0]
    dbfa:	682b      	ldr	r3, [r5, #0]
    dbfc:	4924      	ldr	r1, [pc, #144]	; (dc90 <__ssvfiscanf_r+0x2e4>)
    dbfe:	781a      	ldrb	r2, [r3, #0]
    dc00:	6809      	ldr	r1, [r1, #0]
    dc02:	188a      	adds	r2, r1, r2
    dc04:	7852      	ldrb	r2, [r2, #1]
    dc06:	0712      	lsls	r2, r2, #28
    dc08:	d4ec      	bmi.n	dbe4 <__ssvfiscanf_r+0x238>
    dc0a:	9b4b      	ldr	r3, [sp, #300]	; 0x12c
    dc0c:	2b02      	cmp	r3, #2
    dc0e:	dc13      	bgt.n	dc38 <__ssvfiscanf_r+0x28c>
    dc10:	1c38      	adds	r0, r7, #0
    dc12:	a945      	add	r1, sp, #276	; 0x114
    dc14:	1c2a      	adds	r2, r5, #0
    dc16:	ab03      	add	r3, sp, #12
    dc18:	f000 f840 	bl	dc9c <_scanf_chars>
    dc1c:	e01f      	b.n	dc5e <__ssvfiscanf_r+0x2b2>
    dc1e:	2186      	movs	r1, #134	; 0x86
    dc20:	23c0      	movs	r3, #192	; 0xc0
    dc22:	0049      	lsls	r1, r1, #1
    dc24:	aa02      	add	r2, sp, #8
    dc26:	1852      	adds	r2, r2, r1
    dc28:	005b      	lsls	r3, r3, #1
    dc2a:	58d3      	ldr	r3, [r2, r3]
    dc2c:	1c38      	adds	r0, r7, #0
    dc2e:	1c29      	adds	r1, r5, #0
    dc30:	4798      	blx	r3
    dc32:	2800      	cmp	r0, #0
    dc34:	d0e1      	beq.n	dbfa <__ssvfiscanf_r+0x24e>
    dc36:	e774      	b.n	db22 <__ssvfiscanf_r+0x176>
    dc38:	2b04      	cmp	r3, #4
    dc3a:	dc06      	bgt.n	dc4a <__ssvfiscanf_r+0x29e>
    dc3c:	1c38      	adds	r0, r7, #0
    dc3e:	a945      	add	r1, sp, #276	; 0x114
    dc40:	1c2a      	adds	r2, r5, #0
    dc42:	ab03      	add	r3, sp, #12
    dc44:	f000 f888 	bl	dd58 <_scanf_i>
    dc48:	e009      	b.n	dc5e <__ssvfiscanf_r+0x2b2>
    dc4a:	4b13      	ldr	r3, [pc, #76]	; (dc98 <__ssvfiscanf_r+0x2ec>)
    dc4c:	2b00      	cmp	r3, #0
    dc4e:	d100      	bne.n	dc52 <__ssvfiscanf_r+0x2a6>
    dc50:	e6f3      	b.n	da3a <__ssvfiscanf_r+0x8e>
    dc52:	1c38      	adds	r0, r7, #0
    dc54:	a945      	add	r1, sp, #276	; 0x114
    dc56:	1c2a      	adds	r2, r5, #0
    dc58:	ab03      	add	r3, sp, #12
    dc5a:	e000      	b.n	dc5e <__ssvfiscanf_r+0x2b2>
    dc5c:	bf00      	nop
    dc5e:	2801      	cmp	r0, #1
    dc60:	d007      	beq.n	dc72 <__ssvfiscanf_r+0x2c6>
    dc62:	2802      	cmp	r0, #2
    dc64:	d000      	beq.n	dc68 <__ssvfiscanf_r+0x2bc>
    dc66:	e6e8      	b.n	da3a <__ssvfiscanf_r+0x8e>
    dc68:	e75b      	b.n	db22 <__ssvfiscanf_r+0x176>
    dc6a:	89ab      	ldrh	r3, [r5, #12]
    dc6c:	065b      	lsls	r3, r3, #25
    dc6e:	d504      	bpl.n	dc7a <__ssvfiscanf_r+0x2ce>
    dc70:	e001      	b.n	dc76 <__ssvfiscanf_r+0x2ca>
    dc72:	9848      	ldr	r0, [sp, #288]	; 0x120
    dc74:	e001      	b.n	dc7a <__ssvfiscanf_r+0x2ce>
    dc76:	2001      	movs	r0, #1
    dc78:	4240      	negs	r0, r0
    dc7a:	23a7      	movs	r3, #167	; 0xa7
    dc7c:	009b      	lsls	r3, r3, #2
    dc7e:	449d      	add	sp, r3
    dc80:	bdf0      	pop	{r4, r5, r6, r7, pc}
    dc82:	46c0      	nop			; (mov r8, r8)
    dc84:	fffffd64 	.word	0xfffffd64
    dc88:	0000d8f5 	.word	0x0000d8f5
    dc8c:	0000d96f 	.word	0x0000d96f
    dc90:	200000c4 	.word	0x200000c4
    dc94:	00011f96 	.word	0x00011f96
    dc98:	00000000 	.word	0x00000000

0000dc9c <_scanf_chars>:
    dc9c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    dc9e:	1c15      	adds	r5, r2, #0
    dca0:	688a      	ldr	r2, [r1, #8]
    dca2:	9001      	str	r0, [sp, #4]
    dca4:	1c0c      	adds	r4, r1, #0
    dca6:	2a00      	cmp	r2, #0
    dca8:	d106      	bne.n	dcb8 <_scanf_chars+0x1c>
    dcaa:	698a      	ldr	r2, [r1, #24]
    dcac:	1e51      	subs	r1, r2, #1
    dcae:	418a      	sbcs	r2, r1
    dcb0:	2101      	movs	r1, #1
    dcb2:	4252      	negs	r2, r2
    dcb4:	430a      	orrs	r2, r1
    dcb6:	60a2      	str	r2, [r4, #8]
    dcb8:	6822      	ldr	r2, [r4, #0]
    dcba:	06d2      	lsls	r2, r2, #27
    dcbc:	d403      	bmi.n	dcc6 <_scanf_chars+0x2a>
    dcbe:	681a      	ldr	r2, [r3, #0]
    dcc0:	1d11      	adds	r1, r2, #4
    dcc2:	6019      	str	r1, [r3, #0]
    dcc4:	6817      	ldr	r7, [r2, #0]
    dcc6:	2600      	movs	r6, #0
    dcc8:	69a0      	ldr	r0, [r4, #24]
    dcca:	2800      	cmp	r0, #0
    dccc:	d11d      	bne.n	dd0a <_scanf_chars+0x6e>
    dcce:	6823      	ldr	r3, [r4, #0]
    dcd0:	3601      	adds	r6, #1
    dcd2:	06db      	lsls	r3, r3, #27
    dcd4:	d403      	bmi.n	dcde <_scanf_chars+0x42>
    dcd6:	682b      	ldr	r3, [r5, #0]
    dcd8:	781b      	ldrb	r3, [r3, #0]
    dcda:	703b      	strb	r3, [r7, #0]
    dcdc:	3701      	adds	r7, #1
    dcde:	682a      	ldr	r2, [r5, #0]
    dce0:	686b      	ldr	r3, [r5, #4]
    dce2:	3201      	adds	r2, #1
    dce4:	602a      	str	r2, [r5, #0]
    dce6:	68a2      	ldr	r2, [r4, #8]
    dce8:	3b01      	subs	r3, #1
    dcea:	3a01      	subs	r2, #1
    dcec:	606b      	str	r3, [r5, #4]
    dcee:	60a2      	str	r2, [r4, #8]
    dcf0:	2a00      	cmp	r2, #0
    dcf2:	d01f      	beq.n	dd34 <_scanf_chars+0x98>
    dcf4:	2b00      	cmp	r3, #0
    dcf6:	dce7      	bgt.n	dcc8 <_scanf_chars+0x2c>
    dcf8:	23c0      	movs	r3, #192	; 0xc0
    dcfa:	005b      	lsls	r3, r3, #1
    dcfc:	58e3      	ldr	r3, [r4, r3]
    dcfe:	9801      	ldr	r0, [sp, #4]
    dd00:	1c29      	adds	r1, r5, #0
    dd02:	4798      	blx	r3
    dd04:	2800      	cmp	r0, #0
    dd06:	d0df      	beq.n	dcc8 <_scanf_chars+0x2c>
    dd08:	e014      	b.n	dd34 <_scanf_chars+0x98>
    dd0a:	2801      	cmp	r0, #1
    dd0c:	d108      	bne.n	dd20 <_scanf_chars+0x84>
    dd0e:	682b      	ldr	r3, [r5, #0]
    dd10:	6962      	ldr	r2, [r4, #20]
    dd12:	781b      	ldrb	r3, [r3, #0]
    dd14:	5cd3      	ldrb	r3, [r2, r3]
    dd16:	2b00      	cmp	r3, #0
    dd18:	d1d9      	bne.n	dcce <_scanf_chars+0x32>
    dd1a:	2e00      	cmp	r6, #0
    dd1c:	d019      	beq.n	dd52 <_scanf_chars+0xb6>
    dd1e:	e009      	b.n	dd34 <_scanf_chars+0x98>
    dd20:	2802      	cmp	r0, #2
    dd22:	d107      	bne.n	dd34 <_scanf_chars+0x98>
    dd24:	682b      	ldr	r3, [r5, #0]
    dd26:	4a0b      	ldr	r2, [pc, #44]	; (dd54 <_scanf_chars+0xb8>)
    dd28:	781b      	ldrb	r3, [r3, #0]
    dd2a:	6812      	ldr	r2, [r2, #0]
    dd2c:	18d3      	adds	r3, r2, r3
    dd2e:	785b      	ldrb	r3, [r3, #1]
    dd30:	071b      	lsls	r3, r3, #28
    dd32:	d5cc      	bpl.n	dcce <_scanf_chars+0x32>
    dd34:	2310      	movs	r3, #16
    dd36:	6822      	ldr	r2, [r4, #0]
    dd38:	4013      	ands	r3, r2
    dd3a:	d106      	bne.n	dd4a <_scanf_chars+0xae>
    dd3c:	68e2      	ldr	r2, [r4, #12]
    dd3e:	3201      	adds	r2, #1
    dd40:	60e2      	str	r2, [r4, #12]
    dd42:	69a2      	ldr	r2, [r4, #24]
    dd44:	2a00      	cmp	r2, #0
    dd46:	d000      	beq.n	dd4a <_scanf_chars+0xae>
    dd48:	703b      	strb	r3, [r7, #0]
    dd4a:	2000      	movs	r0, #0
    dd4c:	6923      	ldr	r3, [r4, #16]
    dd4e:	199e      	adds	r6, r3, r6
    dd50:	6126      	str	r6, [r4, #16]
    dd52:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    dd54:	200000c4 	.word	0x200000c4

0000dd58 <_scanf_i>:
    dd58:	b5f0      	push	{r4, r5, r6, r7, lr}
    dd5a:	1c0c      	adds	r4, r1, #0
    dd5c:	b08b      	sub	sp, #44	; 0x2c
    dd5e:	9301      	str	r3, [sp, #4]
    dd60:	4b74      	ldr	r3, [pc, #464]	; (df34 <_scanf_i+0x1dc>)
    dd62:	9004      	str	r0, [sp, #16]
    dd64:	1c16      	adds	r6, r2, #0
    dd66:	aa07      	add	r2, sp, #28
    dd68:	cb23      	ldmia	r3!, {r0, r1, r5}
    dd6a:	c223      	stmia	r2!, {r0, r1, r5}
    dd6c:	4b72      	ldr	r3, [pc, #456]	; (df38 <_scanf_i+0x1e0>)
    dd6e:	9305      	str	r3, [sp, #20]
    dd70:	69a3      	ldr	r3, [r4, #24]
    dd72:	2b03      	cmp	r3, #3
    dd74:	d001      	beq.n	dd7a <_scanf_i+0x22>
    dd76:	4b71      	ldr	r3, [pc, #452]	; (df3c <_scanf_i+0x1e4>)
    dd78:	9305      	str	r3, [sp, #20]
    dd7a:	2200      	movs	r2, #0
    dd7c:	68a3      	ldr	r3, [r4, #8]
    dd7e:	9203      	str	r2, [sp, #12]
    dd80:	325d      	adds	r2, #93	; 0x5d
    dd82:	1e59      	subs	r1, r3, #1
    dd84:	32ff      	adds	r2, #255	; 0xff
    dd86:	4291      	cmp	r1, r2
    dd88:	d905      	bls.n	dd96 <_scanf_i+0x3e>
    dd8a:	3b5e      	subs	r3, #94	; 0x5e
    dd8c:	3bff      	subs	r3, #255	; 0xff
    dd8e:	9303      	str	r3, [sp, #12]
    dd90:	235e      	movs	r3, #94	; 0x5e
    dd92:	33ff      	adds	r3, #255	; 0xff
    dd94:	60a3      	str	r3, [r4, #8]
    dd96:	1c23      	adds	r3, r4, #0
    dd98:	331c      	adds	r3, #28
    dd9a:	9300      	str	r3, [sp, #0]
    dd9c:	23d0      	movs	r3, #208	; 0xd0
    dd9e:	2700      	movs	r7, #0
    dda0:	6822      	ldr	r2, [r4, #0]
    dda2:	011b      	lsls	r3, r3, #4
    dda4:	4313      	orrs	r3, r2
    dda6:	6023      	str	r3, [r4, #0]
    dda8:	9b00      	ldr	r3, [sp, #0]
    ddaa:	9302      	str	r3, [sp, #8]
    ddac:	6832      	ldr	r2, [r6, #0]
    ddae:	00bb      	lsls	r3, r7, #2
    ddb0:	7811      	ldrb	r1, [r2, #0]
    ddb2:	aa07      	add	r2, sp, #28
    ddb4:	5898      	ldr	r0, [r3, r2]
    ddb6:	2202      	movs	r2, #2
    ddb8:	f7fe f96a 	bl	c090 <memchr>
    ddbc:	2800      	cmp	r0, #0
    ddbe:	d039      	beq.n	de34 <_scanf_i+0xdc>
    ddc0:	2f01      	cmp	r7, #1
    ddc2:	d10d      	bne.n	dde0 <_scanf_i+0x88>
    ddc4:	6863      	ldr	r3, [r4, #4]
    ddc6:	2b00      	cmp	r3, #0
    ddc8:	d106      	bne.n	ddd8 <_scanf_i+0x80>
    ddca:	3308      	adds	r3, #8
    ddcc:	6822      	ldr	r2, [r4, #0]
    ddce:	6063      	str	r3, [r4, #4]
    ddd0:	33f9      	adds	r3, #249	; 0xf9
    ddd2:	33ff      	adds	r3, #255	; 0xff
    ddd4:	4313      	orrs	r3, r2
    ddd6:	6023      	str	r3, [r4, #0]
    ddd8:	4b59      	ldr	r3, [pc, #356]	; (df40 <_scanf_i+0x1e8>)
    ddda:	6822      	ldr	r2, [r4, #0]
    dddc:	4013      	ands	r3, r2
    ddde:	e00d      	b.n	ddfc <_scanf_i+0xa4>
    dde0:	2f02      	cmp	r7, #2
    dde2:	d10c      	bne.n	ddfe <_scanf_i+0xa6>
    dde4:	22c0      	movs	r2, #192	; 0xc0
    dde6:	2180      	movs	r1, #128	; 0x80
    dde8:	6823      	ldr	r3, [r4, #0]
    ddea:	00d2      	lsls	r2, r2, #3
    ddec:	401a      	ands	r2, r3
    ddee:	0089      	lsls	r1, r1, #2
    ddf0:	428a      	cmp	r2, r1
    ddf2:	d122      	bne.n	de3a <_scanf_i+0xe2>
    ddf4:	2210      	movs	r2, #16
    ddf6:	6062      	str	r2, [r4, #4]
    ddf8:	32f0      	adds	r2, #240	; 0xf0
    ddfa:	4313      	orrs	r3, r2
    ddfc:	6023      	str	r3, [r4, #0]
    ddfe:	68a3      	ldr	r3, [r4, #8]
    de00:	1e5a      	subs	r2, r3, #1
    de02:	60a2      	str	r2, [r4, #8]
    de04:	2b00      	cmp	r3, #0
    de06:	d015      	beq.n	de34 <_scanf_i+0xdc>
    de08:	9b02      	ldr	r3, [sp, #8]
    de0a:	1c5d      	adds	r5, r3, #1
    de0c:	6833      	ldr	r3, [r6, #0]
    de0e:	1c5a      	adds	r2, r3, #1
    de10:	6032      	str	r2, [r6, #0]
    de12:	781b      	ldrb	r3, [r3, #0]
    de14:	9a02      	ldr	r2, [sp, #8]
    de16:	9502      	str	r5, [sp, #8]
    de18:	7013      	strb	r3, [r2, #0]
    de1a:	6873      	ldr	r3, [r6, #4]
    de1c:	3b01      	subs	r3, #1
    de1e:	6073      	str	r3, [r6, #4]
    de20:	2b00      	cmp	r3, #0
    de22:	dc07      	bgt.n	de34 <_scanf_i+0xdc>
    de24:	23c0      	movs	r3, #192	; 0xc0
    de26:	005b      	lsls	r3, r3, #1
    de28:	58e3      	ldr	r3, [r4, r3]
    de2a:	9804      	ldr	r0, [sp, #16]
    de2c:	1c31      	adds	r1, r6, #0
    de2e:	4798      	blx	r3
    de30:	2800      	cmp	r0, #0
    de32:	d144      	bne.n	debe <_scanf_i+0x166>
    de34:	3701      	adds	r7, #1
    de36:	2f03      	cmp	r7, #3
    de38:	d1b8      	bne.n	ddac <_scanf_i+0x54>
    de3a:	6863      	ldr	r3, [r4, #4]
    de3c:	2b00      	cmp	r3, #0
    de3e:	d101      	bne.n	de44 <_scanf_i+0xec>
    de40:	330a      	adds	r3, #10
    de42:	6063      	str	r3, [r4, #4]
    de44:	2110      	movs	r1, #16
    de46:	2700      	movs	r7, #0
    de48:	6863      	ldr	r3, [r4, #4]
    de4a:	6960      	ldr	r0, [r4, #20]
    de4c:	1ac9      	subs	r1, r1, r3
    de4e:	4b3d      	ldr	r3, [pc, #244]	; (df44 <_scanf_i+0x1ec>)
    de50:	18c9      	adds	r1, r1, r3
    de52:	f000 f8cb 	bl	dfec <__sccl>
    de56:	9d02      	ldr	r5, [sp, #8]
    de58:	68a3      	ldr	r3, [r4, #8]
    de5a:	2b00      	cmp	r3, #0
    de5c:	d030      	beq.n	dec0 <_scanf_i+0x168>
    de5e:	6832      	ldr	r2, [r6, #0]
    de60:	6960      	ldr	r0, [r4, #20]
    de62:	7811      	ldrb	r1, [r2, #0]
    de64:	5c40      	ldrb	r0, [r0, r1]
    de66:	2800      	cmp	r0, #0
    de68:	d02a      	beq.n	dec0 <_scanf_i+0x168>
    de6a:	2930      	cmp	r1, #48	; 0x30
    de6c:	d10b      	bne.n	de86 <_scanf_i+0x12e>
    de6e:	6821      	ldr	r1, [r4, #0]
    de70:	0509      	lsls	r1, r1, #20
    de72:	d508      	bpl.n	de86 <_scanf_i+0x12e>
    de74:	9a03      	ldr	r2, [sp, #12]
    de76:	3701      	adds	r7, #1
    de78:	2a00      	cmp	r2, #0
    de7a:	d00b      	beq.n	de94 <_scanf_i+0x13c>
    de7c:	3a01      	subs	r2, #1
    de7e:	3301      	adds	r3, #1
    de80:	9203      	str	r2, [sp, #12]
    de82:	60a3      	str	r3, [r4, #8]
    de84:	e006      	b.n	de94 <_scanf_i+0x13c>
    de86:	6821      	ldr	r1, [r4, #0]
    de88:	4b2f      	ldr	r3, [pc, #188]	; (df48 <_scanf_i+0x1f0>)
    de8a:	400b      	ands	r3, r1
    de8c:	6023      	str	r3, [r4, #0]
    de8e:	7813      	ldrb	r3, [r2, #0]
    de90:	702b      	strb	r3, [r5, #0]
    de92:	3501      	adds	r5, #1
    de94:	6873      	ldr	r3, [r6, #4]
    de96:	3b01      	subs	r3, #1
    de98:	6073      	str	r3, [r6, #4]
    de9a:	2b00      	cmp	r3, #0
    de9c:	dd03      	ble.n	dea6 <_scanf_i+0x14e>
    de9e:	6833      	ldr	r3, [r6, #0]
    dea0:	3301      	adds	r3, #1
    dea2:	6033      	str	r3, [r6, #0]
    dea4:	e007      	b.n	deb6 <_scanf_i+0x15e>
    dea6:	23c0      	movs	r3, #192	; 0xc0
    dea8:	005b      	lsls	r3, r3, #1
    deaa:	58e3      	ldr	r3, [r4, r3]
    deac:	9804      	ldr	r0, [sp, #16]
    deae:	1c31      	adds	r1, r6, #0
    deb0:	4798      	blx	r3
    deb2:	2800      	cmp	r0, #0
    deb4:	d104      	bne.n	dec0 <_scanf_i+0x168>
    deb6:	68a3      	ldr	r3, [r4, #8]
    deb8:	3b01      	subs	r3, #1
    deba:	60a3      	str	r3, [r4, #8]
    debc:	e7cc      	b.n	de58 <_scanf_i+0x100>
    debe:	2700      	movs	r7, #0
    dec0:	6823      	ldr	r3, [r4, #0]
    dec2:	05db      	lsls	r3, r3, #23
    dec4:	d50e      	bpl.n	dee4 <_scanf_i+0x18c>
    dec6:	9b00      	ldr	r3, [sp, #0]
    dec8:	429d      	cmp	r5, r3
    deca:	d907      	bls.n	dedc <_scanf_i+0x184>
    decc:	23be      	movs	r3, #190	; 0xbe
    dece:	3d01      	subs	r5, #1
    ded0:	005b      	lsls	r3, r3, #1
    ded2:	7829      	ldrb	r1, [r5, #0]
    ded4:	58e3      	ldr	r3, [r4, r3]
    ded6:	9804      	ldr	r0, [sp, #16]
    ded8:	1c32      	adds	r2, r6, #0
    deda:	4798      	blx	r3
    dedc:	9b00      	ldr	r3, [sp, #0]
    dede:	2001      	movs	r0, #1
    dee0:	429d      	cmp	r5, r3
    dee2:	d025      	beq.n	df30 <_scanf_i+0x1d8>
    dee4:	2210      	movs	r2, #16
    dee6:	6823      	ldr	r3, [r4, #0]
    dee8:	401a      	ands	r2, r3
    deea:	d11a      	bne.n	df22 <_scanf_i+0x1ca>
    deec:	702a      	strb	r2, [r5, #0]
    deee:	6863      	ldr	r3, [r4, #4]
    def0:	9804      	ldr	r0, [sp, #16]
    def2:	9900      	ldr	r1, [sp, #0]
    def4:	9e05      	ldr	r6, [sp, #20]
    def6:	47b0      	blx	r6
    def8:	9b01      	ldr	r3, [sp, #4]
    defa:	6822      	ldr	r2, [r4, #0]
    defc:	681b      	ldr	r3, [r3, #0]
    defe:	0691      	lsls	r1, r2, #26
    df00:	d407      	bmi.n	df12 <_scanf_i+0x1ba>
    df02:	07d1      	lsls	r1, r2, #31
    df04:	d505      	bpl.n	df12 <_scanf_i+0x1ba>
    df06:	9901      	ldr	r1, [sp, #4]
    df08:	1d1a      	adds	r2, r3, #4
    df0a:	600a      	str	r2, [r1, #0]
    df0c:	681b      	ldr	r3, [r3, #0]
    df0e:	8018      	strh	r0, [r3, #0]
    df10:	e004      	b.n	df1c <_scanf_i+0x1c4>
    df12:	9901      	ldr	r1, [sp, #4]
    df14:	1d1a      	adds	r2, r3, #4
    df16:	600a      	str	r2, [r1, #0]
    df18:	681b      	ldr	r3, [r3, #0]
    df1a:	6018      	str	r0, [r3, #0]
    df1c:	68e3      	ldr	r3, [r4, #12]
    df1e:	3301      	adds	r3, #1
    df20:	60e3      	str	r3, [r4, #12]
    df22:	2000      	movs	r0, #0
    df24:	9b00      	ldr	r3, [sp, #0]
    df26:	1aed      	subs	r5, r5, r3
    df28:	6923      	ldr	r3, [r4, #16]
    df2a:	19ed      	adds	r5, r5, r7
    df2c:	195d      	adds	r5, r3, r5
    df2e:	6125      	str	r5, [r4, #16]
    df30:	b00b      	add	sp, #44	; 0x2c
    df32:	bdf0      	pop	{r4, r5, r6, r7, pc}
    df34:	000127bc 	.word	0x000127bc
    df38:	0000ce79 	.word	0x0000ce79
    df3c:	0000e055 	.word	0x0000e055
    df40:	fffffaff 	.word	0xfffffaff
    df44:	000127c8 	.word	0x000127c8
    df48:	fffff6ff 	.word	0xfffff6ff

0000df4c <_putc_r>:
    df4c:	b570      	push	{r4, r5, r6, lr}
    df4e:	1c05      	adds	r5, r0, #0
    df50:	1c0e      	adds	r6, r1, #0
    df52:	1c14      	adds	r4, r2, #0
    df54:	2800      	cmp	r0, #0
    df56:	d004      	beq.n	df62 <_putc_r+0x16>
    df58:	6983      	ldr	r3, [r0, #24]
    df5a:	2b00      	cmp	r3, #0
    df5c:	d101      	bne.n	df62 <_putc_r+0x16>
    df5e:	f7ff fa4f 	bl	d400 <__sinit>
    df62:	4b15      	ldr	r3, [pc, #84]	; (dfb8 <_putc_r+0x6c>)
    df64:	429c      	cmp	r4, r3
    df66:	d101      	bne.n	df6c <_putc_r+0x20>
    df68:	686c      	ldr	r4, [r5, #4]
    df6a:	e008      	b.n	df7e <_putc_r+0x32>
    df6c:	4b13      	ldr	r3, [pc, #76]	; (dfbc <_putc_r+0x70>)
    df6e:	429c      	cmp	r4, r3
    df70:	d101      	bne.n	df76 <_putc_r+0x2a>
    df72:	68ac      	ldr	r4, [r5, #8]
    df74:	e003      	b.n	df7e <_putc_r+0x32>
    df76:	4b12      	ldr	r3, [pc, #72]	; (dfc0 <_putc_r+0x74>)
    df78:	429c      	cmp	r4, r3
    df7a:	d100      	bne.n	df7e <_putc_r+0x32>
    df7c:	68ec      	ldr	r4, [r5, #12]
    df7e:	68a3      	ldr	r3, [r4, #8]
    df80:	3b01      	subs	r3, #1
    df82:	60a3      	str	r3, [r4, #8]
    df84:	2b00      	cmp	r3, #0
    df86:	da10      	bge.n	dfaa <_putc_r+0x5e>
    df88:	69a2      	ldr	r2, [r4, #24]
    df8a:	4293      	cmp	r3, r2
    df8c:	db07      	blt.n	df9e <_putc_r+0x52>
    df8e:	6823      	ldr	r3, [r4, #0]
    df90:	701e      	strb	r6, [r3, #0]
    df92:	6823      	ldr	r3, [r4, #0]
    df94:	7819      	ldrb	r1, [r3, #0]
    df96:	290a      	cmp	r1, #10
    df98:	d10a      	bne.n	dfb0 <_putc_r+0x64>
    df9a:	1c28      	adds	r0, r5, #0
    df9c:	e001      	b.n	dfa2 <_putc_r+0x56>
    df9e:	1c28      	adds	r0, r5, #0
    dfa0:	1c31      	adds	r1, r6, #0
    dfa2:	1c22      	adds	r2, r4, #0
    dfa4:	f7ff f842 	bl	d02c <__swbuf_r>
    dfa8:	e005      	b.n	dfb6 <_putc_r+0x6a>
    dfaa:	6823      	ldr	r3, [r4, #0]
    dfac:	701e      	strb	r6, [r3, #0]
    dfae:	6823      	ldr	r3, [r4, #0]
    dfb0:	1c5a      	adds	r2, r3, #1
    dfb2:	6022      	str	r2, [r4, #0]
    dfb4:	7818      	ldrb	r0, [r3, #0]
    dfb6:	bd70      	pop	{r4, r5, r6, pc}
    dfb8:	0001275c 	.word	0x0001275c
    dfbc:	0001277c 	.word	0x0001277c
    dfc0:	0001279c 	.word	0x0001279c

0000dfc4 <_read_r>:
    dfc4:	b538      	push	{r3, r4, r5, lr}
    dfc6:	1c05      	adds	r5, r0, #0
    dfc8:	2000      	movs	r0, #0
    dfca:	4c07      	ldr	r4, [pc, #28]	; (dfe8 <_read_r+0x24>)
    dfcc:	6020      	str	r0, [r4, #0]
    dfce:	1c08      	adds	r0, r1, #0
    dfd0:	1c11      	adds	r1, r2, #0
    dfd2:	1c1a      	adds	r2, r3, #0
    dfd4:	f7fa ff60 	bl	8e98 <_read>
    dfd8:	1c43      	adds	r3, r0, #1
    dfda:	d103      	bne.n	dfe4 <_read_r+0x20>
    dfdc:	6823      	ldr	r3, [r4, #0]
    dfde:	2b00      	cmp	r3, #0
    dfe0:	d000      	beq.n	dfe4 <_read_r+0x20>
    dfe2:	602b      	str	r3, [r5, #0]
    dfe4:	bd38      	pop	{r3, r4, r5, pc}
    dfe6:	46c0      	nop			; (mov r8, r8)
    dfe8:	20000b2c 	.word	0x20000b2c

0000dfec <__sccl>:
    dfec:	b5f0      	push	{r4, r5, r6, r7, lr}
    dfee:	780a      	ldrb	r2, [r1, #0]
    dff0:	2a5e      	cmp	r2, #94	; 0x5e
    dff2:	d002      	beq.n	dffa <__sccl+0xe>
    dff4:	1c4b      	adds	r3, r1, #1
    dff6:	2400      	movs	r4, #0
    dff8:	e002      	b.n	e000 <__sccl+0x14>
    dffa:	2401      	movs	r4, #1
    dffc:	784a      	ldrb	r2, [r1, #1]
    dffe:	1c8b      	adds	r3, r1, #2
    e000:	1c01      	adds	r1, r0, #0
    e002:	1c45      	adds	r5, r0, #1
    e004:	35ff      	adds	r5, #255	; 0xff
    e006:	700c      	strb	r4, [r1, #0]
    e008:	3101      	adds	r1, #1
    e00a:	42a9      	cmp	r1, r5
    e00c:	d1fb      	bne.n	e006 <__sccl+0x1a>
    e00e:	2a00      	cmp	r2, #0
    e010:	d101      	bne.n	e016 <__sccl+0x2a>
    e012:	1e58      	subs	r0, r3, #1
    e014:	e01c      	b.n	e050 <__sccl+0x64>
    e016:	2101      	movs	r1, #1
    e018:	1b0c      	subs	r4, r1, r4
    e01a:	b2e7      	uxtb	r7, r4
    e01c:	5487      	strb	r7, [r0, r2]
    e01e:	7819      	ldrb	r1, [r3, #0]
    e020:	1c5e      	adds	r6, r3, #1
    e022:	292d      	cmp	r1, #45	; 0x2d
    e024:	d006      	beq.n	e034 <__sccl+0x48>
    e026:	295d      	cmp	r1, #93	; 0x5d
    e028:	d00f      	beq.n	e04a <__sccl+0x5e>
    e02a:	2900      	cmp	r1, #0
    e02c:	d00f      	beq.n	e04e <__sccl+0x62>
    e02e:	1c0a      	adds	r2, r1, #0
    e030:	1c33      	adds	r3, r6, #0
    e032:	e7f2      	b.n	e01a <__sccl+0x2e>
    e034:	785d      	ldrb	r5, [r3, #1]
    e036:	2d5d      	cmp	r5, #93	; 0x5d
    e038:	d0f9      	beq.n	e02e <__sccl+0x42>
    e03a:	4295      	cmp	r5, r2
    e03c:	dbf7      	blt.n	e02e <__sccl+0x42>
    e03e:	3302      	adds	r3, #2
    e040:	3201      	adds	r2, #1
    e042:	5487      	strb	r7, [r0, r2]
    e044:	42aa      	cmp	r2, r5
    e046:	dbfb      	blt.n	e040 <__sccl+0x54>
    e048:	e7e9      	b.n	e01e <__sccl+0x32>
    e04a:	1c30      	adds	r0, r6, #0
    e04c:	e000      	b.n	e050 <__sccl+0x64>
    e04e:	1c18      	adds	r0, r3, #0
    e050:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0000e054 <_strtoul_r>:
    e054:	b5f0      	push	{r4, r5, r6, r7, lr}
    e056:	1c1e      	adds	r6, r3, #0
    e058:	4b3e      	ldr	r3, [pc, #248]	; (e154 <_strtoul_r+0x100>)
    e05a:	b087      	sub	sp, #28
    e05c:	681b      	ldr	r3, [r3, #0]
    e05e:	1c17      	adds	r7, r2, #0
    e060:	9302      	str	r3, [sp, #8]
    e062:	1c0b      	adds	r3, r1, #0
    e064:	9005      	str	r0, [sp, #20]
    e066:	9104      	str	r1, [sp, #16]
    e068:	781c      	ldrb	r4, [r3, #0]
    e06a:	9a02      	ldr	r2, [sp, #8]
    e06c:	1c5d      	adds	r5, r3, #1
    e06e:	1912      	adds	r2, r2, r4
    e070:	7851      	ldrb	r1, [r2, #1]
    e072:	2208      	movs	r2, #8
    e074:	400a      	ands	r2, r1
    e076:	d001      	beq.n	e07c <_strtoul_r+0x28>
    e078:	1c2b      	adds	r3, r5, #0
    e07a:	e7f5      	b.n	e068 <_strtoul_r+0x14>
    e07c:	2c2d      	cmp	r4, #45	; 0x2d
    e07e:	d104      	bne.n	e08a <_strtoul_r+0x36>
    e080:	1c9d      	adds	r5, r3, #2
    e082:	785c      	ldrb	r4, [r3, #1]
    e084:	2301      	movs	r3, #1
    e086:	9301      	str	r3, [sp, #4]
    e088:	e004      	b.n	e094 <_strtoul_r+0x40>
    e08a:	9201      	str	r2, [sp, #4]
    e08c:	2c2b      	cmp	r4, #43	; 0x2b
    e08e:	d101      	bne.n	e094 <_strtoul_r+0x40>
    e090:	785c      	ldrb	r4, [r3, #1]
    e092:	1c9d      	adds	r5, r3, #2
    e094:	2e00      	cmp	r6, #0
    e096:	d002      	beq.n	e09e <_strtoul_r+0x4a>
    e098:	2e10      	cmp	r6, #16
    e09a:	d10a      	bne.n	e0b2 <_strtoul_r+0x5e>
    e09c:	e054      	b.n	e148 <_strtoul_r+0xf4>
    e09e:	2c30      	cmp	r4, #48	; 0x30
    e0a0:	d150      	bne.n	e144 <_strtoul_r+0xf0>
    e0a2:	2220      	movs	r2, #32
    e0a4:	782b      	ldrb	r3, [r5, #0]
    e0a6:	4393      	bics	r3, r2
    e0a8:	2b58      	cmp	r3, #88	; 0x58
    e0aa:	d146      	bne.n	e13a <_strtoul_r+0xe6>
    e0ac:	2610      	movs	r6, #16
    e0ae:	786c      	ldrb	r4, [r5, #1]
    e0b0:	3502      	adds	r5, #2
    e0b2:	2001      	movs	r0, #1
    e0b4:	1c31      	adds	r1, r6, #0
    e0b6:	4240      	negs	r0, r0
    e0b8:	f7fb fddc 	bl	9c74 <__aeabi_uidiv>
    e0bc:	9003      	str	r0, [sp, #12]
    e0be:	2001      	movs	r0, #1
    e0c0:	1c31      	adds	r1, r6, #0
    e0c2:	4240      	negs	r0, r0
    e0c4:	f7fb fe5c 	bl	9d80 <__aeabi_uidivmod>
    e0c8:	2200      	movs	r2, #0
    e0ca:	468c      	mov	ip, r1
    e0cc:	1c13      	adds	r3, r2, #0
    e0ce:	9902      	ldr	r1, [sp, #8]
    e0d0:	1909      	adds	r1, r1, r4
    e0d2:	7849      	ldrb	r1, [r1, #1]
    e0d4:	0748      	lsls	r0, r1, #29
    e0d6:	d501      	bpl.n	e0dc <_strtoul_r+0x88>
    e0d8:	3c30      	subs	r4, #48	; 0x30
    e0da:	e007      	b.n	e0ec <_strtoul_r+0x98>
    e0dc:	2003      	movs	r0, #3
    e0de:	4008      	ands	r0, r1
    e0e0:	d017      	beq.n	e112 <_strtoul_r+0xbe>
    e0e2:	2137      	movs	r1, #55	; 0x37
    e0e4:	2801      	cmp	r0, #1
    e0e6:	d000      	beq.n	e0ea <_strtoul_r+0x96>
    e0e8:	3120      	adds	r1, #32
    e0ea:	1a64      	subs	r4, r4, r1
    e0ec:	42b4      	cmp	r4, r6
    e0ee:	da10      	bge.n	e112 <_strtoul_r+0xbe>
    e0f0:	1c51      	adds	r1, r2, #1
    e0f2:	d00b      	beq.n	e10c <_strtoul_r+0xb8>
    e0f4:	9a03      	ldr	r2, [sp, #12]
    e0f6:	4293      	cmp	r3, r2
    e0f8:	d806      	bhi.n	e108 <_strtoul_r+0xb4>
    e0fa:	d101      	bne.n	e100 <_strtoul_r+0xac>
    e0fc:	4564      	cmp	r4, ip
    e0fe:	dc03      	bgt.n	e108 <_strtoul_r+0xb4>
    e100:	4373      	muls	r3, r6
    e102:	2201      	movs	r2, #1
    e104:	18e3      	adds	r3, r4, r3
    e106:	e001      	b.n	e10c <_strtoul_r+0xb8>
    e108:	2201      	movs	r2, #1
    e10a:	4252      	negs	r2, r2
    e10c:	782c      	ldrb	r4, [r5, #0]
    e10e:	3501      	adds	r5, #1
    e110:	e7dd      	b.n	e0ce <_strtoul_r+0x7a>
    e112:	1c18      	adds	r0, r3, #0
    e114:	1c51      	adds	r1, r2, #1
    e116:	d104      	bne.n	e122 <_strtoul_r+0xce>
    e118:	2322      	movs	r3, #34	; 0x22
    e11a:	9905      	ldr	r1, [sp, #20]
    e11c:	1c10      	adds	r0, r2, #0
    e11e:	600b      	str	r3, [r1, #0]
    e120:	e003      	b.n	e12a <_strtoul_r+0xd6>
    e122:	9901      	ldr	r1, [sp, #4]
    e124:	2900      	cmp	r1, #0
    e126:	d000      	beq.n	e12a <_strtoul_r+0xd6>
    e128:	4258      	negs	r0, r3
    e12a:	2f00      	cmp	r7, #0
    e12c:	d00f      	beq.n	e14e <_strtoul_r+0xfa>
    e12e:	9b04      	ldr	r3, [sp, #16]
    e130:	2a00      	cmp	r2, #0
    e132:	d000      	beq.n	e136 <_strtoul_r+0xe2>
    e134:	1e6b      	subs	r3, r5, #1
    e136:	603b      	str	r3, [r7, #0]
    e138:	e009      	b.n	e14e <_strtoul_r+0xfa>
    e13a:	2430      	movs	r4, #48	; 0x30
    e13c:	2e00      	cmp	r6, #0
    e13e:	d1b8      	bne.n	e0b2 <_strtoul_r+0x5e>
    e140:	2608      	movs	r6, #8
    e142:	e7b6      	b.n	e0b2 <_strtoul_r+0x5e>
    e144:	260a      	movs	r6, #10
    e146:	e7b4      	b.n	e0b2 <_strtoul_r+0x5e>
    e148:	2c30      	cmp	r4, #48	; 0x30
    e14a:	d1b2      	bne.n	e0b2 <_strtoul_r+0x5e>
    e14c:	e7a9      	b.n	e0a2 <_strtoul_r+0x4e>
    e14e:	b007      	add	sp, #28
    e150:	bdf0      	pop	{r4, r5, r6, r7, pc}
    e152:	46c0      	nop			; (mov r8, r8)
    e154:	200000c4 	.word	0x200000c4

0000e158 <__submore>:
    e158:	1c0b      	adds	r3, r1, #0
    e15a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    e15c:	6b4d      	ldr	r5, [r1, #52]	; 0x34
    e15e:	3344      	adds	r3, #68	; 0x44
    e160:	1c0c      	adds	r4, r1, #0
    e162:	429d      	cmp	r5, r3
    e164:	d11b      	bne.n	e19e <__submore+0x46>
    e166:	2680      	movs	r6, #128	; 0x80
    e168:	00f6      	lsls	r6, r6, #3
    e16a:	1c31      	adds	r1, r6, #0
    e16c:	f7fe f806 	bl	c17c <_malloc_r>
    e170:	2800      	cmp	r0, #0
    e172:	d102      	bne.n	e17a <__submore+0x22>
    e174:	2001      	movs	r0, #1
    e176:	4240      	negs	r0, r0
    e178:	e025      	b.n	e1c6 <__submore+0x6e>
    e17a:	1c23      	adds	r3, r4, #0
    e17c:	6360      	str	r0, [r4, #52]	; 0x34
    e17e:	63a6      	str	r6, [r4, #56]	; 0x38
    e180:	3346      	adds	r3, #70	; 0x46
    e182:	781a      	ldrb	r2, [r3, #0]
    e184:	4b10      	ldr	r3, [pc, #64]	; (e1c8 <__submore+0x70>)
    e186:	54c2      	strb	r2, [r0, r3]
    e188:	1c23      	adds	r3, r4, #0
    e18a:	3345      	adds	r3, #69	; 0x45
    e18c:	781a      	ldrb	r2, [r3, #0]
    e18e:	4b0f      	ldr	r3, [pc, #60]	; (e1cc <__submore+0x74>)
    e190:	54c2      	strb	r2, [r0, r3]
    e192:	782a      	ldrb	r2, [r5, #0]
    e194:	4b0e      	ldr	r3, [pc, #56]	; (e1d0 <__submore+0x78>)
    e196:	54c2      	strb	r2, [r0, r3]
    e198:	18c0      	adds	r0, r0, r3
    e19a:	6020      	str	r0, [r4, #0]
    e19c:	e012      	b.n	e1c4 <__submore+0x6c>
    e19e:	6b8e      	ldr	r6, [r1, #56]	; 0x38
    e1a0:	1c29      	adds	r1, r5, #0
    e1a2:	0073      	lsls	r3, r6, #1
    e1a4:	1c1a      	adds	r2, r3, #0
    e1a6:	9301      	str	r3, [sp, #4]
    e1a8:	f7ff fa28 	bl	d5fc <_realloc_r>
    e1ac:	1e05      	subs	r5, r0, #0
    e1ae:	d0e1      	beq.n	e174 <__submore+0x1c>
    e1b0:	1987      	adds	r7, r0, r6
    e1b2:	1c38      	adds	r0, r7, #0
    e1b4:	1c29      	adds	r1, r5, #0
    e1b6:	1c32      	adds	r2, r6, #0
    e1b8:	f7fd ff75 	bl	c0a6 <memcpy>
    e1bc:	9b01      	ldr	r3, [sp, #4]
    e1be:	6027      	str	r7, [r4, #0]
    e1c0:	6365      	str	r5, [r4, #52]	; 0x34
    e1c2:	63a3      	str	r3, [r4, #56]	; 0x38
    e1c4:	2000      	movs	r0, #0
    e1c6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    e1c8:	000003ff 	.word	0x000003ff
    e1cc:	000003fe 	.word	0x000003fe
    e1d0:	000003fd 	.word	0x000003fd

0000e1d4 <_fstat_r>:
    e1d4:	b538      	push	{r3, r4, r5, lr}
    e1d6:	2300      	movs	r3, #0
    e1d8:	4c06      	ldr	r4, [pc, #24]	; (e1f4 <_fstat_r+0x20>)
    e1da:	1c05      	adds	r5, r0, #0
    e1dc:	1c08      	adds	r0, r1, #0
    e1de:	1c11      	adds	r1, r2, #0
    e1e0:	6023      	str	r3, [r4, #0]
    e1e2:	f7fa feb9 	bl	8f58 <_fstat>
    e1e6:	1c43      	adds	r3, r0, #1
    e1e8:	d103      	bne.n	e1f2 <_fstat_r+0x1e>
    e1ea:	6823      	ldr	r3, [r4, #0]
    e1ec:	2b00      	cmp	r3, #0
    e1ee:	d000      	beq.n	e1f2 <_fstat_r+0x1e>
    e1f0:	602b      	str	r3, [r5, #0]
    e1f2:	bd38      	pop	{r3, r4, r5, pc}
    e1f4:	20000b2c 	.word	0x20000b2c

0000e1f8 <_isatty_r>:
    e1f8:	b538      	push	{r3, r4, r5, lr}
    e1fa:	2300      	movs	r3, #0
    e1fc:	4c06      	ldr	r4, [pc, #24]	; (e218 <_isatty_r+0x20>)
    e1fe:	1c05      	adds	r5, r0, #0
    e200:	1c08      	adds	r0, r1, #0
    e202:	6023      	str	r3, [r4, #0]
    e204:	f7fa feae 	bl	8f64 <_isatty>
    e208:	1c43      	adds	r3, r0, #1
    e20a:	d103      	bne.n	e214 <_isatty_r+0x1c>
    e20c:	6823      	ldr	r3, [r4, #0]
    e20e:	2b00      	cmp	r3, #0
    e210:	d000      	beq.n	e214 <_isatty_r+0x1c>
    e212:	602b      	str	r3, [r5, #0]
    e214:	bd38      	pop	{r3, r4, r5, pc}
    e216:	46c0      	nop			; (mov r8, r8)
    e218:	20000b2c 	.word	0x20000b2c

0000e21c <_malloc_usable_size_r>:
    e21c:	1f0b      	subs	r3, r1, #4
    e21e:	681a      	ldr	r2, [r3, #0]
    e220:	1f10      	subs	r0, r2, #4
    e222:	2a00      	cmp	r2, #0
    e224:	da04      	bge.n	e230 <_malloc_usable_size_r+0x14>
    e226:	1889      	adds	r1, r1, r2
    e228:	3904      	subs	r1, #4
    e22a:	680b      	ldr	r3, [r1, #0]
    e22c:	18d0      	adds	r0, r2, r3
    e22e:	3804      	subs	r0, #4
    e230:	4770      	bx	lr
	...

0000e234 <__gnu_thumb1_case_uqi>:
    e234:	b402      	push	{r1}
    e236:	4671      	mov	r1, lr
    e238:	0849      	lsrs	r1, r1, #1
    e23a:	0049      	lsls	r1, r1, #1
    e23c:	5c09      	ldrb	r1, [r1, r0]
    e23e:	0049      	lsls	r1, r1, #1
    e240:	448e      	add	lr, r1
    e242:	bc02      	pop	{r1}
    e244:	4770      	bx	lr
    e246:	46c0      	nop			; (mov r8, r8)
    e248:	0000108a 	.word	0x0000108a
    e24c:	00001084 	.word	0x00001084
    e250:	0000107e 	.word	0x0000107e
    e254:	00001078 	.word	0x00001078
    e258:	00001090 	.word	0x00001090
    e25c:	00001098 	.word	0x00001098
    e260:	00001090 	.word	0x00001090
    e264:	00001072 	.word	0x00001072
    e268:	0000106c 	.word	0x0000106c
    e26c:	00001090 	.word	0x00001090
    e270:	00001066 	.word	0x00001066
    e274:	00001066 	.word	0x00001066
    e278:	00001060 	.word	0x00001060
    e27c:	0000105a 	.word	0x0000105a
    e280:	00001098 	.word	0x00001098
    e284:	0000112a 	.word	0x0000112a
    e288:	00001124 	.word	0x00001124
    e28c:	0000111e 	.word	0x0000111e
    e290:	00001118 	.word	0x00001118
    e294:	00001130 	.word	0x00001130
    e298:	0000113a 	.word	0x0000113a
    e29c:	00001130 	.word	0x00001130
    e2a0:	00001112 	.word	0x00001112
    e2a4:	0000110c 	.word	0x0000110c
    e2a8:	00001130 	.word	0x00001130
    e2ac:	00001106 	.word	0x00001106
    e2b0:	00001106 	.word	0x00001106
    e2b4:	00001100 	.word	0x00001100
    e2b8:	000010fa 	.word	0x000010fa
    e2bc:	0000113a 	.word	0x0000113a
    e2c0:	0000119a 	.word	0x0000119a
    e2c4:	00001194 	.word	0x00001194
    e2c8:	0000118e 	.word	0x0000118e
    e2cc:	00001188 	.word	0x00001188
    e2d0:	000011a0 	.word	0x000011a0
    e2d4:	000011a0 	.word	0x000011a0
    e2d8:	000011a0 	.word	0x000011a0
    e2dc:	00001182 	.word	0x00001182
    e2e0:	0000117c 	.word	0x0000117c
    e2e4:	000011a0 	.word	0x000011a0
    e2e8:	00001176 	.word	0x00001176
    e2ec:	00001176 	.word	0x00001176
    e2f0:	00001170 	.word	0x00001170
    e2f4:	0000116a 	.word	0x0000116a
    e2f8:	33323130 	.word	0x33323130
    e2fc:	37363534 	.word	0x37363534
    e300:	62613938 	.word	0x62613938
    e304:	66656463 	.word	0x66656463
    e308:	200a0a0a 	.word	0x200a0a0a
    e30c:	646e6553 	.word	0x646e6553
    e310:	20676e69 	.word	0x20676e69
    e314:	73696854 	.word	0x73696854
    e318:	66754220 	.word	0x66754220
    e31c:	20726566 	.word	0x20726566
    e320:	7265766f 	.word	0x7265766f
    e324:	65687420 	.word	0x65687420
    e328:	636f7320 	.word	0x636f7320
    e32c:	2074656b 	.word	0x2074656b
    e330:	0a73250a 	.word	0x0a73250a
    e334:	00000a0a 	.word	0x00000a0a
    e338:	656d7461 	.word	0x656d7461
    e33c:	2e312f6c 	.word	0x2e312f6c
    e340:	00322e30 	.word	0x00322e30
    e344:	20544547 	.word	0x20544547
    e348:	00000000 	.word	0x00000000
    e34c:	54534f50 	.word	0x54534f50
    e350:	00000020 	.word	0x00000020
    e354:	454c4544 	.word	0x454c4544
    e358:	00204554 	.word	0x00204554
    e35c:	20545550 	.word	0x20545550
    e360:	00000000 	.word	0x00000000
    e364:	4954504f 	.word	0x4954504f
    e368:	20534e4f 	.word	0x20534e4f
    e36c:	00000000 	.word	0x00000000
    e370:	44414548 	.word	0x44414548
    e374:	00000020 	.word	0x00000020
    e378:	54544820 	.word	0x54544820
    e37c:	2e312f50 	.word	0x2e312f50
    e380:	000a0d31 	.word	0x000a0d31
    e384:	72657355 	.word	0x72657355
    e388:	6567412d 	.word	0x6567412d
    e38c:	203a746e 	.word	0x203a746e
    e390:	00000000 	.word	0x00000000
    e394:	74736f48 	.word	0x74736f48
    e398:	0000203a 	.word	0x0000203a
    e39c:	6e6e6f43 	.word	0x6e6e6f43
    e3a0:	69746365 	.word	0x69746365
    e3a4:	203a6e6f 	.word	0x203a6e6f
    e3a8:	7065654b 	.word	0x7065654b
    e3ac:	696c412d 	.word	0x696c412d
    e3b0:	0a0d6576 	.word	0x0a0d6576
    e3b4:	00000000 	.word	0x00000000
    e3b8:	746e6f43 	.word	0x746e6f43
    e3bc:	2d746e65 	.word	0x2d746e65
    e3c0:	65707954 	.word	0x65707954
    e3c4:	0000203a 	.word	0x0000203a
    e3c8:	65636341 	.word	0x65636341
    e3cc:	452d7470 	.word	0x452d7470
    e3d0:	646f636e 	.word	0x646f636e
    e3d4:	3a676e69 	.word	0x3a676e69
    e3d8:	000a0d20 	.word	0x000a0d20
    e3dc:	65636341 	.word	0x65636341
    e3e0:	432d7470 	.word	0x432d7470
    e3e4:	73726168 	.word	0x73726168
    e3e8:	203a7465 	.word	0x203a7465
    e3ec:	2d667475 	.word	0x2d667475
    e3f0:	000a0d38 	.word	0x000a0d38
    e3f4:	6e617254 	.word	0x6e617254
    e3f8:	72656673 	.word	0x72656673
    e3fc:	636e452d 	.word	0x636e452d
    e400:	6e69646f 	.word	0x6e69646f
    e404:	63203a67 	.word	0x63203a67
    e408:	6b6e7568 	.word	0x6b6e7568
    e40c:	0a0d6465 	.word	0x0a0d6465
    e410:	00000000 	.word	0x00000000
    e414:	00007525 	.word	0x00007525
    e418:	746e6f43 	.word	0x746e6f43
    e41c:	2d746e65 	.word	0x2d746e65
    e420:	676e654c 	.word	0x676e654c
    e424:	203a6874 	.word	0x203a6874
    e428:	00000000 	.word	0x00000000
    e42c:	72570a0a 	.word	0x72570a0a
    e430:	72657469 	.word	0x72657469
    e434:	6675622e 	.word	0x6675622e
    e438:	3a726566 	.word	0x3a726566
    e43c:	73250a20 	.word	0x73250a20
    e440:	00000a0a 	.word	0x00000a0a
    e444:	6c410a0a 	.word	0x6c410a0a
    e448:	53206f73 	.word	0x53206f73
    e44c:	69646e65 	.word	0x69646e65
    e450:	250a676e 	.word	0x250a676e
    e454:	64250a73 	.word	0x64250a73
    e458:	00000a0a 	.word	0x00000a0a
    e45c:	70747468 	.word	0x70747468
    e460:	002f2f3a 	.word	0x002f2f3a
    e464:	70747468 	.word	0x70747468
    e468:	2f2f3a73 	.word	0x2f2f3a73
    e46c:	00000000 	.word	0x00000000
    e470:	6e617254 	.word	0x6e617254
    e474:	72656673 	.word	0x72656673
    e478:	636e452d 	.word	0x636e452d
    e47c:	6e69646f 	.word	0x6e69646f
    e480:	00203a67 	.word	0x00203a67
    e484:	6e6e6f43 	.word	0x6e6e6f43
    e488:	69746365 	.word	0x69746365
    e48c:	203a6e6f 	.word	0x203a6e6f
    e490:	00000000 	.word	0x00000000
    e494:	50545448 	.word	0x50545448
    e498:	0000002f 	.word	0x0000002f
    e49c:	42002000 	.word	0x42002000
    e4a0:	42002400 	.word	0x42002400
    e4a4:	42002800 	.word	0x42002800

0000e4a8 <gacHttpProvDomainName>:
    e4a8:	656d7461 6e6f636c 2e676966 006d6f63     atmelconfig.com.
    e4b8:	69666977 3a62635f 54535b20 4d205d41     wifi_cb: [STA] M
    e4c8:	575f4d32 5f494649 50534552 4e4f435f     2M_WIFI_RESP_CON
    e4d8:	4154535f 435f4554 474e4148 203a4445     _STATE_CHANGED: 
    e4e8:	4e4e4f43 45544345 000a0d44 69666977     CONNECTED...wifi
    e4f8:	3a62635f 54535b20 4d205d41 575f4d32     _cb: [STA] M2M_W
    e508:	5f494649 50534552 4e4f435f 4154535f     IFI_RESP_CON_STA
    e518:	435f4554 474e4148 203a4445 43534944     TE_CHANGED: DISC
    e528:	454e4e4f 44455443 00000a0d 69666977     ONNECTED....wifi
    e538:	3a62635f 54535b20 4d205d41 575f4d32     _cb: [STA] M2M_W
    e548:	5f494649 50534552 4e4f435f 4154535f     IFI_RESP_CON_STA
    e558:	435f4554 474e4148 203a4445 6f636552     TE_CHANGED: Reco
    e568:	63656e6e 676e6974 2e2e2e2e 00000a0d     nnecting........
    e578:	69666977 3a62635f 54535b20 4d205d41     wifi_cb: [STA] M
    e588:	575f4d32 5f494649 5f514552 50434844     2M_WIFI_REQ_DHCP
    e598:	4e4f435f 49203a46 73692050 2e752520     _CONF: IP is %u.
    e5a8:	252e7525 75252e75 00000a0d 252e6425     %u.%u.%u....%d.%
    e5b8:	64252e64 0064252e 69666977 3a62635f     d.%d.%d.wifi_cb:
    e5c8:	50415b20 324d205d 49575f4d 525f4946      [AP] M2M_WIFI_R
    e5d8:	445f5145 4f435349 43454e4e 000a0d54     EQ_DISCONNECT...
    e5e8:	69666977 3a62635f 4d324d20 4649575f     wifi_cb: M2M_WIF
    e5f8:	45525f49 505f5053 49564f52 4e4f4953     I_RESP_PROVISION
    e608:	464e495f 0a0d2e4f 00000000 53537061     _INFO.......apSS
    e618:	203a4449 202c7325 203a5750 000a7325     ID: %s, PW: %s..
    e628:	69666977 3a62635f 6f725020 69736976     wifi_cb: Provisi
    e638:	66206e6f 656c6961 0a0d2e64 00000000     on failed.......
    e648:	69666977 3a62635f 50415b20 324d205d     wifi_cb: [AP] M2
    e658:	49575f4d 525f4946 455f5145 4c42414e     M_WIFI_REQ_ENABL
    e668:	50415f45 00000a0d 69666977 3a62635f     E_AP....wifi_cb:
    e678:	50415b20 324d205d 49575f4d 525f4946      [AP] M2M_WIFI_R
    e688:	445f5145 42415349 415f454c 000a0d50     EQ_DISABLE_AP...
    e698:	66756c66 735f7966 685f7465 5f656d6f     fluffy_set_home_
    e6a8:	695f7061 206f666e 6e49202f 20747570     ap_info / Input 
    e6b8:	61726170 7265206d 20726f72 21212121     param error !!!!
    e6c8:	000a0d21 66756c66 735f7966 685f7465     !...fluffy_set_h
    e6d8:	5f656d6f 695f7061 206f666e 766e202f     ome_ap_info / nv
    e6e8:	7277206d 20657469 6f727245 21212172     m write Error!!!
    e6f8:	0a0d2121 00000000 66756c66 725f7966     !!......fluffy_r
    e708:	766f6d65 6f685f65 615f656d 6e695f70     emove_home_ap_in
    e718:	2f206f66 6d766e20 61726520 45206573     fo / nvm erase E
    e728:	726f7272 21212121 000a0d21 66756c66     rror!!!!!...fluf
    e738:	725f7966 766f6d65 6c665f65 79666675     fy_remove_fluffy
    e748:	666e695f 202f206f 206d766e 73617265     _info / nvm eras
    e758:	72652065 21726f72 0d202121 0000000a     e error!!! .....
    e768:	66756c66 735f7966 665f7465 6666756c     fluffy_set_fluff
    e778:	6e695f79 2f206f66 6d766e20 69727720     y_info / nvm wri
    e788:	65206574 726f7272 25202820 20292064     te error ( %d ) 
    e798:	6f727245 21212172 0a0d2121 00000000     Error!!!!!......
    e7a8:	66756c66 6c5f7966 5f64616f 66756c66     fluffy_load_fluf
    e7b8:	695f7966 206f666e 766e202f 65725f6d     fy_info / nvm_re
    e7c8:	625f6461 65666675 72652072 20726f72     ad_buffer error 
    e7d8:	29642528 69616620 000a0d6c 66756c66     (%d) fail...fluf
    e7e8:	6c5f7966 5f64616f 66756c66 695f7966     fy_load_fluffy_i
    e7f8:	206f666e 6c66202f 79666675 666e6920     nfo / fluffy inf
    e808:	7369206f 746f6e20 69786520 69207473     o is not exist i
    e818:	766e206e 0a0d2e6d 00000000 66756c66     n nvm.......fluf
    e828:	6c5f7966 5f64616f 66756c66 695f7966     fy_load_fluffy_i
    e838:	206f666e 6572202f 4e206461 415f4d56     nfo / read NVM_A
    e848:	5f524444 46554c46 4b5f5946 65205945     DDR_FLUFFY_KEY e
    e858:	726f7272 78302820 0d297825 0000000a     rror (0x%x).....
    e868:	66756c66 6c5f7966 5f64616f 66756c66     fluffy_load_fluf
    e878:	695f7966 206f666e 6572202f 4e206461     fy_info / read N
    e888:	415f4d56 5f524444 46554c46 4b5f5946     VM_ADDR_FLUFFY_K
    e898:	565f5945 45554c41 72726520 2820726f     EY_VALUE error (
    e8a8:	78257830 000a0d29 66756c66 6c5f7966     0x%x)...fluffy_l
    e8b8:	5f64616f 66756c66 695f7966 206f666e     oad_fluffy_info 
    e8c8:	6425202f 00000a0d 64616f6c 6d6f685f     / %d....load_hom
    e8d8:	70615f65 666e695f 202f206f 64616572     e_ap_info / read
    e8e8:	6d766e20 72726520 2820726f 78257830      nvm error (0x%x
    e8f8:	0a0d2029 00000000 64616f6c 6d6f685f     ) ......load_hom
    e908:	70615f65 666e695f 202f206f 69207061     e_ap_info / ap i
    e918:	206f666e 6e207369 6520746f 74736978     nfo is not exist
    e928:	206e6920 2e6d766e 000a0d20 64616f6c      in nvm. ...load
    e938:	6d6f685f 70615f65 666e695f 202f206f     _home_ap_info / 
    e948:	64616572 4d4f4820 50415f45 4953535f     read HOME_AP_SSI
    e958:	72652044 20726f72 25783028 0a0d2978     D error (0x%x)..
    e968:	00000000 64616f6c 6d6f685f 70615f65     ....load_home_ap
    e978:	666e695f 202f206f 64616572 4d4f4820     _info / read HOM
    e988:	50415f45 4345535f 45505954 72726520     E_AP_SECTYPE err
    e998:	2820726f 78257830 000a0d29 64616f6c     or (0x%x)...load
    e9a8:	6d6f685f 70615f65 666e695f 202f206f     _home_ap_info / 
    e9b8:	64616572 4d4f4820 50415f45 5341505f     read HOME_AP_PAS
    e9c8:	524f5753 72652044 20726f72 25783028     SWORD error (0x%
    e9d8:	0a0d2978 00000000 64616f6c 6d6f685f     x)......load_hom
    e9e8:	70615f65 666e695f 202f206f 44495353     e_ap_info / SSID
    e9f8:	73252820 000a0d29 64616f6c 6d6f685f      (%s)...load_hom
    ea08:	70615f65 666e695f 202f206f 28205750     e_ap_info / PW (
    ea18:	0d297325 0000000a 64616f6c 6d6f685f     %s).....load_hom
    ea28:	70615f65 666e695f 202f206f 54636553     e_ap_info / SecT
    ea38:	20657079 29642528 00000a0d 203d3d3d     ype (%d)....=== 
    ea48:	4d205041 2c65646f 61745320 3d207472     AP Mode, Start =
    ea58:	0a0d3d3d 00000000 30257325 30255832     ==......%s%02X%0
    ea68:	00005832 75747546 69416572 00005f72     2X..FutureAir_..
    ea78:	64697373 25203a20 000a0d73 20756f59     ssid : %s...You 
    ea88:	206e6163 6e6e6f63 20746365 25206f74     can connect to %
    ea98:	0a0d2e73 00000000 58587325 00005959     s.......%sXXYY..
    eaa8:	6e6f7257 4d202c67 41204341 65726464     Wrong, MAC Addre
    eab8:	69207373 554e2073 0a0d4c4c 00000000     ss is NULL......
    eac8:	203d3d3d 74617453 206e6f69 65646f4d     === Station Mode
    ead8:	7453202c 2c747261 20732520 0d3d3d3d     , Start, %s ===.
    eae8:	0000000a 5f6d326d 69666977 6e6f635f     ....m2m_wifi_con
    eaf8:	7463656e 6c616320 7265206c 21726f72     nect call error!
    eb08:	00000a0d 5f6d326d 69666977 7369645f     ....m2m_wifi_dis
    eb18:	6e6e6f63 20746365 6c6c6163 72726520     connect call err
    eb28:	0d21726f 0000000a 203d3d3d 74617453     or!.....=== Stat
    eb38:	206e6f69 65646f4d 6e45202c 3d3d2064     ion Mode, End ==
    eb48:	000a0d3d 70747468 6f72705f 73736563     =...http_process
    eb58:	5f70615f 76636572 7461645f 202f2061     _ap_recv_data / 
    eb68:	6b636f73 25207465 70202c64 6f6c7961     socket %d, paylo
    eb78:	69536461 2520657a 72202c64 69616d65     adSize %d, remai
    eb88:	676e696e 657a6953 0d642520 0000000a     ningSize %d.....
    eb98:	20544547 5448202f 312f5054 0000312e     GET / HTTP/1.1..
    eba8:	70747468 6f72705f 73736563 5f70615f     http_process_ap_
    ebb8:	76636572 7461645f 202f2061 70747448     recv_data / Http
    ebc8:	6f725020 69736976 6e696e6f 00000d67      Provisioning...
    ebd8:	70747468 6f72705f 73736563 5f70615f     http_process_ap_
    ebe8:	76636572 7461645f 202f2061 202c7325     recv_data / %s, 
    ebf8:	0a0d7325 00000000 3e72743c 2064743c     %s......<tr><td 
    ec08:	67696c61 72223d6e 74686769 73253e22     align="right">%s
    ec18:	64742f3c 64743c3e 696c6120 223d6e67     </td><td align="
    ec28:	7466656c 693c3e22 7475706e 70797420     left"><input typ
    ec38:	74223d65 22747865 6d616e20 25223d65     e="text" name="%
    ec48:	73202273 3d657a69 22343622 742f3c3e     s" size="64"></t
    ec58:	2f3c3e64 003e7274 70747468 6f72705f     d></tr>.http_pro
    ec68:	73736563 5f70615f 76636572 7461645f     cess_ap_recv_dat
    ec78:	202f2061 6769724f 6c616e69 6f725020     a / Original Pro
    ec88:	69736976 6e696e6f 69662067 7320656c     visioning file s
    ec98:	20657a69 202c6425 4b646461 53737965     ize %d, addKeysS
    eca8:	20657a69 0a0d6425 00000000 2d2d213c     ize %d......<!--
    ecb8:	64646120 6f697469 206c616e 7379656b      additional keys
    ecc8:	206f6720 65726568 3e2d2d20 00000000      go here -->....
    ecd8:	70747468 6f72705f 73736563 5f70615f     http_process_ap_
    ece8:	76636572 7461645f 202f2061 72616572     recv_data / rear
    ecf8:	61746144 7a697320 64252065 00000a0d     Data size %d....
    ed08:	70747468 6f72705f 73736563 5f70615f     http_process_ap_
    ed18:	76636572 7461645f 202f2061 2d2d213c     recv_data / <!--
    ed28:	64646120 6f697469 206c616e 7379656b      additional keys
    ed38:	206f6720 65726568 3e2d2d20 746f6e20      go here --> not
    ed48:	756f6620 4520646e 726f7272 21212120      found Error !!!
    ed58:	000d2121 50545448 312e312f 30303220     !!..HTTP/1.1 200
    ed68:	0d4b4f20 6e6f430a 746e6574 6e654c2d      OK..Content-Len
    ed78:	3a687467 0d642520 6e6f430a 746e6574     gth: %d..Content
    ed88:	7079542d 74203a65 2f747865 6c6d7468     -Type: text/html
    ed98:	0a0d0a0d 00000000 70747468 6f72705f     ........http_pro
    eda8:	73736563 5f70615f 76636572 7461645f     cess_ap_recv_dat
    edb8:	202f2061 70747448 6f725020 69736976     a / Http Provisi
    edc8:	6e696e6f 6e652067 79746974 66202f20     oning entity / f
    edd8:	53656c69 20657a69 6425203a 67202f20     ileSize : %d / g
    ede8:	746e6553 676e654c 3a206874 0d642520     SentLength : %d.
    edf8:	0000000a 70747468 6f72705f 73736563     ....http_process
    ee08:	5f70615f 76636572 7461645f 202f2061     _ap_recv_data / 
    ee18:	70747448 6f725020 69736976 6e696e6f     Http Provisionin
    ee28:	6e652067 79746974 67202f20 746e6553     g entity / gSent
    ee38:	676e654c 3a206874 0d642520 0000000a     Length : %d.....
    ee48:	70747468 6f72705f 73736563 5f70615f     http_process_ap_
    ee58:	76636572 7461645f 202f2061 70747448     recv_data / Http
    ee68:	6f725020 69736976 6e696e6f 6e652067      Provisioning en
    ee78:	79746974 67202f20 746e6553 676e654c     tity / gSentLeng
    ee88:	3a206874 2c642520 74486720 61447074     th : %d, gHttpDa
    ee98:	75426174 72656666 676e654c 25206874     taBufferLength %
    eea8:	000a0d64 20544547 7661662f 6e6f6369     d...GET /favicon
    eeb8:	6f63692e 54544820 2e312f50 00000031     .ico HTTP/1.1...
    eec8:	50545448 312e312f 34303420 746f4e20     HTTP/1.1 404 Not
    eed8:	756f4620 0a0d646e 746e6f43 2d746e65      Found..Content-
    eee8:	676e654c 203a6874 430a0d30 656e6e6f     Length: 0..Conne
    eef8:	6f697463 4b203a6e 2d706565 76696c41     ction: Keep-Aliv
    ef08:	0d0a0d65 0000000a 54534f50 00000000     e.......POST....
    ef18:	70747468 6f72705f 73736563 5f70615f     http_process_ap_
    ef28:	76636572 7461645f 202f2061 746e6f43     recv_data / Cont
    ef38:	2d746e65 676e654c 69206874 20302073     ent-Length is 0 
    ef48:	6f727245 21212072 0d212121 00000000     Error !!!!!.....
    ef58:	50545448 312e312f 30303420 64614220     HTTP/1.1 400 Bad
    ef68:	71655220 74736575 6f430a0d 6e65746e      Request..Conten
    ef78:	654c2d74 6874676e 0d30203a 6e6f430a     t-Length: 0..Con
    ef88:	7463656e 3a6e6f69 65654b20 6c412d70     nection: Keep-Al
    ef98:	0d657669 000a0d0a 70747468 6f72705f     ive.....http_pro
    efa8:	73736563 5f70615f 76636572 7461645f     cess_ap_recv_dat
    efb8:	202f2061 746e6f43 2d746e65 676e654c     a / Content-Leng
    efc8:	3a206874 0d642520 0000000a 44495353     th : %d.....SSID
    efd8:	00000000 53534150 44524f57 00000000     ....PASSWORD....
    efe8:	55434553 59544952 00000000 656e6f6e     SECURITY....none
    eff8:	00000000 5f617077 73726570 6c616e6f     ....wpa_personal
    f008:	00000000 00706577 5f617077 65746e65     ....wep.wpa_ente
    f018:	69727072 00006573 70747468 6f72705f     rprise..http_pro
    f028:	73736563 5f70615f 76636572 7461645f     cess_ap_recv_dat
    f038:	202f2061 202c7325 202c7325 0a0d6425     a / %s, %s, %d..
    f048:	00000000 50545448 312e312f 30303220     ....HTTP/1.1 200
    f058:	0d4b4f20 6e6f430a 746e6574 6e654c2d      OK..Content-Len
    f068:	3a687467 0d393220 6e6f430a 7463656e     gth: 29..Connect
    f078:	3a6e6f69 6f6c6320 0a0d6573 72500a0d     ion: close....Pr
    f088:	7369766f 206e6f69 20736168 6e656562     ovision has been
    f098:	6d6f6320 74656c70 0d2e6465 0000000a      completed......
    f0a8:	70747468 6f72705f 73736563 6174735f     http_process_sta
    f0b8:	6365725f 61645f76 2f206174 72724520     _recv_data / Err
    f0c8:	2120726f 21212121 0000000d              or !!!!!....

0000f0d4 <provisiongHtmlData>:
    f0d4:	6d74683c 00003e6c 00000000 00000000     <html>..........
	...
    f138:	683c2020 3e646165 00000000 00000000       <head>........
	...
    f19c:	743c2020 656c7469 7665643e 20656369       <title>device 
    f1ac:	666e6f63 2f3c6769 6c746974 00003e65     config</title>..
	...
    f200:	2f3c2020 64616568 0000003e 00000000       </head>.......
	...
    f264:	623c2020 3e79646f 00000000 00000000       <body>........
	...
    f2c8:	20202020 3e31683c 69766564 63206563         <h1>device c
    f2d8:	69666e6f 682f3c67 00003e31 00000000     onfig</h1>......
	...
    f32c:	20202020 726f663c 6361206d 6e6f6974         <form action
    f33c:	7270223d 7369766f 696e6f69 2022676e     ="provisioning" 
    f34c:	6874656d 223d646f 54534f50 00003e22     method="POST">..
	...
    f390:	20202020 743c2020 656c6261 64697720           <table wid
    f3a0:	223d6874 25303031 00003e22 00000000     th="100%">......
	...
    f3f4:	20202020 20202020 3e72743c 00000000             <tr>....
	...
    f458:	20202020 20202020 743c2020 6c612064               <td al
    f468:	3d6e6769 67697222 3e227468 44495353     ign="right">SSID
    f478:	64742f3c 0000003e 00000000 00000000     </td>...........
	...
    f4bc:	20202020 20202020 743c2020 6c612064               <td al
    f4cc:	3d6e6769 66656c22 3c3e2274 75706e69     ign="left"><inpu
    f4dc:	79742074 223d6570 74786574 616e2022     t type="text" na
    f4ec:	223d656d 44495353 69732022 223d657a     me="SSID" size="
    f4fc:	3e223436 64742f3c 0000003e 00000000     64"></td>.......
	...
    f520:	20202020 20202020 72742f3c 0000003e             </tr>...
	...
    f584:	20202020 20202020 3e72743c 00000000             <tr>....
	...
    f5e8:	20202020 20202020 743c2020 6c612064               <td al
    f5f8:	3d6e6769 67697222 3e227468 53534150     ign="right">PASS
    f608:	44524f57 64742f3c 0000003e 00000000     WORD</td>.......
	...
    f64c:	20202020 20202020 743c2020 6c612064               <td al
    f65c:	3d6e6769 66656c22 3c3e2274 75706e69     ign="left"><inpu
    f66c:	79742074 223d6570 74786574 616e2022     t type="text" na
    f67c:	223d656d 53534150 44524f57 69732022     me="PASSWORD" si
    f68c:	223d657a 3e223436 64742f3c 0000003e     ze="64"></td>...
	...
    f6b0:	20202020 20202020 72742f3c 0000003e             </tr>...
	...
    f714:	20202020 20202020 3e72743c 00000000             <tr>....
	...
    f778:	20202020 20202020 743c2020 6c612064               <td al
    f788:	3d6e6769 67697222 3e227468 55434553     ign="right">SECU
    f798:	59544952 64742f3c 0000003e 00000000     RITY</td>.......
	...
    f7dc:	20202020 20202020 743c2020 6c612064               <td al
    f7ec:	3d6e6769 66656c22 003e2274 00000000     ign="left">.....
	...
    f840:	20202020 20202020 20202020 6c65733c                 <sel
    f850:	20746365 656d616e 4553223d 49525543     ect name="SECURI
    f860:	3e225954 00000000 00000000 00000000     TY">............
	...
    f8a4:	20202020 20202020 20202020 6f3c2020                   <o
    f8b4:	6f697470 6176206e 3d65756c 6e6f6e22     ption value="non
    f8c4:	6e3e2265 3c656e6f 74706f2f 3e6e6f69     e">none</option>
	...
    f908:	20202020 20202020 20202020 6f3c2020                   <o
    f918:	6f697470 6176206e 3d65756c 61707722     ption value="wpa
    f928:	7265705f 616e6f73 573e226c 572f4150     _personal">WPA/W
    f938:	20324150 73726570 6c616e6f 706f2f3c     PA2 personal</op
    f948:	6e6f6974 0000003e 00000000 00000000     tion>...........
	...
    f96c:	20202020 20202020 20202020 6f3c2020                   <o
    f97c:	6f697470 6176206e 3d65756c 70657722     ption value="wep
    f98c:	45573e22 6f2f3c50 6f697470 00003e6e     ">WEP</option>..
	...
    f9d0:	20202020 20202020 20202020 6f3c2020                   <o
    f9e0:	6f697470 6176206e 3d65756c 61707722     ption value="wpa
    f9f0:	746e655f 72707265 22657369 4150573e     _enterprise">WPA
    fa00:	4150572f 6e652032 70726574 65736972     /WPA2 enterprise
    fa10:	706f2f3c 6e6f6974 0000003e 00000000     </option>.......
	...
    fa34:	20202020 20202020 20202020 65732f3c                 </se
    fa44:	7463656c 0000003e 00000000 00000000     lect>...........
	...
    fa98:	20202020 20202020 2f3c2020 003e6474               </td>.
	...
    fafc:	20202020 20202020 2f3c2020 003e6474               </td>.
	...
    fb60:	20202020 20202020 72742f3c 0000003e             </tr>...
	...
    fbc4:	2d2d213c 64646120 6f697469 206c616e     <!-- additional 
    fbd4:	7379656b 206f6720 65726568 3e2d2d20     keys go here -->
	...
    fc28:	20202020 20202020 3e72743c 00000000             <tr>....
	...
    fc8c:	20202020 20202020 743c2020 6c612064               <td al
    fc9c:	3d6e6769 67697222 3e227468 73626e26     ign="right">&nbs
    fcac:	2f3c3b70 003e6474 00000000 00000000     p;</td>.........
	...
    fcf0:	20202020 20202020 743c2020 6c612064               <td al
    fd00:	3d6e6769 66656c22 3c3e2274 75706e69     ign="left"><inpu
    fd10:	79742074 223d6570 6d627573 3e227469     t type="submit">
    fd20:	64742f3c 0000003e 00000000 00000000     </td>...........
	...
    fd54:	20202020 20202020 72742f3c 0000003e             </tr>...
	...
    fdb8:	20202020 2f3c2020 6c626174 00003e65           </table>..
	...
    fe1c:	20202020 6f662f3c 003e6d72 00000000         </form>.....
	...
    fe80:	2f3c2020 79646f62 0000003e 00000000       </body>.......
	...
    fee4:	74682f3c 003e6c6d 00000000 00000000     </html>.........
	...
    ff48:	00002e20 00002c02 00002c26 00002e20      ....,..&,.. ...
    ff58:	00002c52 00002cc8 00002d3c 00002d20     R,...,..<-.. -..
    ff68:	00002df0 00002df0 00002df0 00002df0     .-...-...-...-..
    ff78:	00002e20 00002df0 00002e20 00002df0      ....-.. ....-..
    ff88:	00002df0 00002e20 00002df0 00002df0     .-.. ....-...-..
    ff98:	00002df0 00002df0 6c707061 74616369     .-...-..applicat
    ffa8:	2f6e6f69 6e6f736a 00000000 5f746573     ion/json....set_
    ffb8:	6b636f73 695f7465 206f666e 6f73202f     socket_info / so
    ffc8:	6f206b63 66726576 20776f6c 6f727245     ck overflow Erro
    ffd8:	21212072 0d212121 0000000a 74736f48     r !!!!!.....Host
    ffe8:	6d614e20 73692065 0d732520 0000000a      Name is %s.....
    fff8:	74736f48 20504920 25207369 64252e64     Host IP is %d.%d
   10008:	2e64252e 0a0d6425 00000000 68737570     .%d.%d......push
   10018:	7261702e 632e6573 00006d6f 6f727245     .parse.com..Erro
   10028:	4f202c72 66726576 20776f6c 6b636f73     r, Overflow sock
   10038:	69207465 0d6f666e 0000000a 6e69616d     et info.....main
   10048:	6166203a 64656c69 206f7420 61657263     : failed to crea
   10058:	54206574 73205043 65767265 6f732072     te TCP server so
   10068:	74656b63 72726520 0d21726f 0000000a     cket error!.....
   10078:	322e3235 31312e33 39372e33 00000000     52.23.113.79....
   10088:	75626564 2a2a2a67 6f73203a 74656b63     debug***: socket
   10098:	73657220 65766c6f 6e616820 72656c64      resolve handler
   100a8:	726f6620 46454420 544c5541 5241505f      for DEFAULT_PAR
   100b8:	535f4553 45565245 414e5f52 0a0a454d     SE_SERVER_NAME..
   100c8:	00000000 6f727245 21212072 2c212121     ....Error !!!!!,
   100d8:	636f7320 5f74656b 6f736572 5f65766c      socket_resolve_
   100e8:	000a6263 6f727245 21212072 2c212121     cb..Error !!!!!,
   100f8:	65726320 20657461 20617453 76726553      create Sta Serv
   10108:	53207265 656b636f 000a2e74 6e6e6f43     er Socket...Conn
   10118:	65746365 000a0d64 75716552 20747365     ected...Request 
   10128:	706d6f63 6574656c 00000a0d 65636552     complete....Rece
   10138:	64657669 73657220 736e6f70 75252065     ived response %u
   10148:	74616420 69732061 2520657a 000a0d75      data size %u...
   10158:	63736944 656e6e6f 64657463 61657220     Disconnected rea
   10168:	3a6e6f73 0a0d6425 00000000 2a2a2a2a     son:%d......****
   10178:	2a2a2a2a 2a2a2a2a 2a2a2a2a 656c5020     ************ Ple
   10188:	20657361 63656863 6874206b 6c207369     ase check this l
   10198:	2a20676f 2a2a2a2a 2a2a2a2a 2a2a2a2a     og *************
   101a8:	202a2a2a 00000a0d 73726150 54482065     *** ....Parse HT
   101b8:	63205054 6e65696c 6e692074 61697469     TP client initia
   101c8:	617a696c 6e6f6974 73616820 69616620     lization has fai
   101d8:	2864656c 0d297325 0000000a 49464957     led(%s).....WIFI
   101e8:	6f725020 69736976 4d206e6f 0d65646f      Provision Mode.
   101f8:	0000000a 766f7250 6f697369 6f4d206e     ....Provision Mo
   10208:	73206564 74726174 0d2e6465 6e6f430a     de started...Con
   10218:	7463656e 206f7420 5d73255b 61697620     nect to [%s] via
   10228:	5b504120 205d7325 20646e61 6c6c6966      AP[%s] and fill
   10238:	20707520 20656874 65676170 000a0d2e      up the page....
   10248:	656d7461 6e6f636c 2e676966 006d6f63     atmelconfig.com.
   10258:	69746e65 705f7974 65737261 72703e2d     entity_parse->pr
   10268:	645f7669 20617461 7325203d 00000a0a     iv_data = %s....
   10278:	72657355 6567412d 733a746e 32646d61     User-Agent:samd2
   10288:	580a0d31 7261502d 432d6573 6e65696c     1..X-Parse-Clien
   10298:	65562d74 6f697372 2e313a6e 580a0d30     t-Version:1.0..X
   102a8:	7261502d 412d6573 696c7070 69746163     -Parse-Applicati
   102b8:	492d6e6f 25203a64 580a0d73 7261502d     on-Id: %s..X-Par
   102c8:	432d6573 6e65696c 654b2d74 25203a79     se-Client-Key: %
   102d8:	000a0d73 61502d58 2d657372 74736e49     s...X-Parse-Inst
   102e8:	616c6c61 6e6f6974 3a64492d 0a0d7325     allation-Id:%s..
   102f8:	00000000 61502d58 2d657372 73736553     ....X-Parse-Sess
   10308:	2d6e6f69 656b6f54 73253a6e 00000a0d     ion-Token:%s....
   10318:	73257325 00000000 70747468 352f2f3a     %s%s....http://5
   10328:	33322e32 3331312e 0039372e 00544547     2.23.113.79.GET.
   10338:	00545550 454c4544 00004554 6e69227b     PUT.DELETE..{"in
   10348:	6c617473 6974616c 695f6e6f 223a2264     stallation_id":"
   10358:	2c227325 616f2220 5f687475 2279656b     %s", "oauth_key"
   10368:	7325223a 22202c22 203a2276 2e316122     :"%s", "v": "a1.
   10378:	22312e34 6c22202c 22747361 756e203a     4.1", "last": nu
   10388:	202c6c6c 6b636122 65656b5f 6c615f70     ll, "ack_keep_al
   10398:	22657669 7274203a 0d7d6575 0000000a     ive": true}.....
   103a8:	646e6573 67736d20 206f7420 68737550     send msg to Push
   103b8:	72655320 0d726576 0d73250a 0000000a      Server..%s.....
   103c8:	646e6573 7461645f 6f665f61 65725f72     send_data_for_re
   103d8:	6e6f7073 203a6573 6e6b6e55 206e776f     sponse: Unknown 
   103e8:	65707974 29642528 00000a0d 6b636f73     type(%d)....sock
   103f8:	635f7465 62203a62 20646e69 6f727245     et_cb: bind Erro
   10408:	21212072 0d212121 0000000a 6b636f73     r !!!!!.....sock
   10418:	635f7465 52203a62 79646165 206f7420     et_cb: Ready to 
   10428:	7473696c 0d2e6e65 0000000a 6b636f73     listen......sock
   10438:	635f7465 6c203a62 65747369 7245206e     et_cb: listen Er
   10448:	20726f72 21212121 000a0d21 6b636f73     ror !!!!!...sock
   10458:	635f7465 41203a62 63412050 74706563     et_cb: AP Accept
   10468:	73206465 656b636f 64252874 73692029     ed socket(%d) is
   10478:	65726320 64657461 000a0d2e 6b636f73      created....sock
   10488:	635f7465 53203a62 41204154 70656363     et_cb: STA Accep
   10498:	20646574 6b636f73 25287465 69202964     ted socket(%d) i
   104a8:	72632073 65746165 0a0d2e64 00000000     s created.......
   104b8:	6b636f73 635f7465 61203a62 70656363     socket_cb: accep
   104c8:	72452074 20726f72 21212121 202f2021     t Error !!!!! / 
   104d8:	6b636f73 25203a20 000a0d64 6b636f73     sock : %d...sock
   104e8:	635f7465 50203a62 20485355 76726573     et_cb: PUSH serv
   104f8:	63207265 656e6e6f 73207463 65636375     er connect succe
   10508:	2f207373 636f7320 203a206b 202c6425     ss / sock : %d, 
   10518:	65707974 25203a20 000a0d64 6b636f73     type : %d...sock
   10528:	635f7465 63203a62 656e6e6f 45207463     et_cb: connect E
   10538:	726f7272 21212120 20202121 6b636f73     rror !!!!!  sock
   10548:	6f6c6320 202c6573 6b636f73 202c7465      close, socket, 
   10558:	6e6e6f63 2e746365 28202e2e 6b636f73     connect... (sock
   10568:	2c64253a 72726520 253a726f 0a0d2964     :%d, error:%d)..
   10578:	00000000 6b636f73 635f7465 63203a62     ....socket_cb: c
   10588:	656e6e6f 45207463 726f7272 21212120     onnect Error !!!
   10598:	20202121 6b636f73 6f6c6320 202c6573     !!  sock close, 
   105a8:	6b636f73 202c7465 6e6e6f63 2e746365     socket, connect.
   105b8:	28202e2e 6b636f73 2c64253a 72726520     .. (sock:%d, err
   105c8:	553a726f 4f4e4b4e 0d294e57 0000000a     or:UNKNOWN).....
   105d8:	6b636f73 635f7465 73203a62 20646e65     socket_cb: send 
   105e8:	63637573 20737365 6f73202f 3a206b63     success / sock :
   105f8:	2c642520 70797420 203a2065 0a0d6425      %d, type : %d..
   10608:	00000000 6b636f73 635f7465 72203a62     ....socket_cb: r
   10618:	20766365 63637573 20737365 6f73202f     ecv success / so
   10628:	3a206b63 2c642520 70797420 203a2065     ck : %d, type : 
   10638:	0a0d6425 00000000 6b636f73 635f7465     %d......socket_c
   10648:	4f533a62 54454b43 47534d5f 4345525f     b:SOCKET_MSG_REC
   10658:	55202c56 6f6e6b6e 74206e77 28657079     V, Unknown type(
   10668:	20296425 6f727245 21212072 0d212121     %d) Error !!!!!.
   10678:	0000000a 6b636f73 635f7465 6e203a62     ....socket_cb: n
   10688:	74616765 20657669 6f727245 21212072     egative Error !!
   10698:	20212121 6f73202f 3a206b63 2c642520     !!! / sock : %d,
   106a8:	70797420 203a2065 202c6425 72747370      type : %d, pstr
   106b8:	76636552 31733e2d 66754236 53726566     Recv->s16BufferS
   106c8:	20657a69 6425203a 00000a0d 6b636f73     ize : %d....sock
   106d8:	635f7465 50203a62 20687375 6b636f73     et_cb: Push sock
   106e8:	72207465 69656365 20736576 6f727245     et receives Erro
   106f8:	25202872 20292064 21212121 202f2021     r( %d ) !!!!! / 
   10708:	6b636f73 6f6c6320 202c6573 6f636572     sock close, reco
   10718:	63656e6e 2e2e2e74 00000a0d 656a626f     nnect.......obje
   10728:	64497463 00000000 74736e69 616c6c61     ctId....installa
   10738:	6e6f6974 656a624f 64497463 00000000     tionObjectId....
   10748:	7261505b 205d6573 74736e49 616c6c61     [Parse] Installa
   10758:	6e6f6974 6a626f20 20746365 203a6469     tion object id: 
   10768:	0d2e7325 0000000a 7261505b 205d6573     %s......[Parse] 
   10778:	6c696146 74206465 7263206f 65746165     Failed to create
   10788:	736e6920 6c6c6174 6f697461 45202e6e      installation. E
   10798:	726f7272 6425203a 5448202c 73205054     rror: %d, HTTP s
   107a8:	75746174 25203a73 000a0d64 75626564     tatus: %d...debu
   107b8:	69203a67 726f6e67 61702065 43657372     g: ignore parseC
   107c8:	6e65696c 613e2d74 696c7070 69746163     lient->applicati
   107d8:	44496e6f 00000a0a 7261505b 205d6573     onID....[Parse] 
   107e8:	73726170 6e655365 71655264 74736575     parseSendRequest
   107f8:	7325203a 20732520 22732522 000a0d2e     : %s %s "%s"....
   10808:	74736e69 616c6c61 6e6f6974 00006449     installationId..
   10818:	7261505b 205d6573 74736e49 616c6c61     [Parse] Installa
   10828:	6e6f6974 3a646920 2e732520 00000a0d     tion id: %s.....
   10838:	7261505b 205d6573 6c696146 74206465     [Parse] Failed t
   10848:	6567206f 6e692074 6c617473 6974616c     o get installati
   10858:	202e6e6f 6f727245 25203a72 48202c64     on. Error: %d, H
   10868:	20505454 74617473 203a7375 0a0d6425     TTP status: %d..
   10878:	00000000 75736572 0073746c 78257825     ....results.%x%x
   10888:	78257825 78257825 78257825 2578252d     %x%x%x%x%x%x-%x%
   10898:	25782578 78252d78 78257825 252d7825     x%x%x-%x%x%x%x-%
   108a8:	25782578 2d782578 78257825 78257825     x%x%x%x-%x%x%x%x
   108b8:	78257825 78257825 78257825 78257825     %x%x%x%x%x%x%x%x
   108c8:	00000000 692f312f 6174736e 74616c6c     ..../1/installat
   108d8:	736e6f69 0073252f 692f312f 6174736e     ions/%s./1/insta
   108e8:	74616c6c 736e6f69 6568773f 253d6572     llations?where=%
   108f8:	25623725 69323225 6174736e 74616c6c     %7b%%22installat
   10908:	496e6f69 32252564 33252532 25252b61     ionId%%22%%3a+%%
   10918:	73253232 32322525 64372525 00000000     22%s%%22%%7d....
   10928:	6e69227b 6c617473 6974616c 64496e6f     {"installationId
   10938:	22203a22 2c227325 65642220 65636976     ": "%s", "device
   10948:	65707954 22203a22 65626d65 64656464     Type": "embedded
   10958:	22202c22 73726170 72655665 6e6f6973     ", "parseVersion
   10968:	22203a22 2e302e31 007d2230 692f312f     ": "1.0.0"}./1/i
   10978:	6174736e 74616c6c 736e6f69 00000000     nstallations....
   10988:	6c707061 74616369 496e6f69 00000064     applicationId...
   10998:	65696c63 654b746e 00000079 73736573     clientKey...sess
   109a8:	546e6f69 6e656b6f 00000000 65646f63     ionToken....code
   109b8:	00000000 000032d6 00003244 000032ca     .....2..D2...2..
   109c8:	000032ca 0000328c 0000329c 000032ae     .2...2...2...2..
   109d8:	74696e69 69666957 75646f4d 2f20656c     initWifiModule /
   109e8:	6d326d20 6669775f 6e695f69 63207469      m2m_wifi_init c
   109f8:	206c6c61 6f727265 25282172 0a0d2964     all error!(%d)..
   10a08:	00000000 61636f6c 7261506c 65536573     ....localParseSe
   10a18:	6552646e 73657571 202f2074 66756c66     ndRequest / fluf
   10a28:	745f7966 736e6172 6e65735f 61632064     fy_trans_send ca
   10a38:	65206c6c 726f7272 21212120 0a0d2121     ll error !!!!!..
   10a48:	00000000 6e6b6e55 206e776f 49464957     ....Unknown WIFI
   10a58:	646f4d20 203a2065 0a0d6425 00000000      Mode : %d......
   10a68:	61746164 205d325b 74617473 3d207375     data[2] status =
   10a78:	25783020 00000a78 0000357c 0000357c      0x%x...|5..|5..
   10a88:	00003558 0000357c 00003558 00003544     X5..|5..X5..D5..
   10a98:	00003544 0000357c 0000357c 0000357c     D5..|5..|5..|5..
   10aa8:	0000357c 0000357c 0000357c 0000357c     |5..|5..|5..|5..
   10ab8:	0000357c 0000357c 0000357c 0000357c     |5..|5..|5..|5..
   10ac8:	0000357c 0000357c 0000357c 0000357c     |5..|5..|5..|5..
   10ad8:	0000357c 0000357c 0000357c 0000357c     |5..|5..|5..|5..
   10ae8:	0000357c 0000357c 0000357c 0000357c     |5..|5..|5..|5..
   10af8:	0000357c 0000357c 0000357c 0000357c     |5..|5..|5..|5..
   10b08:	0000357c 0000357c 0000357c 0000357c     |5..|5..|5..|5..
   10b18:	0000357c 0000357c 0000357c 0000357c     |5..|5..|5..|5..
   10b28:	0000357c 0000357c 0000357c 0000357c     |5..|5..|5..|5..
   10b38:	0000357c 0000357c 0000357c 0000357c     |5..|5..|5..|5..
   10b48:	0000357c 0000357c 0000357c 0000357c     |5..|5..|5..|5..
   10b58:	0000357c 0000357c 0000357c 0000357c     |5..|5..|5..|5..
   10b68:	0000357c 0000357c 0000357c 0000357c     |5..|5..|5..|5..
   10b78:	0000357c 0000357c 00003558 00003558     |5..|5..X5..X5..
   10b88:	00003560 00003560 00003560 00003560     `5..`5..`5..`5..

00010b98 <CMD_READ_ID_REG>:
   10b98:	0000c8ef                                ....

00010b9c <CMD_MEASURE_HPM_CS>:
   10b9c:	0000a27c                                |...

00010ba0 <_tcc_gclk_ids>:
   10ba0:	001b1a1a                                ....

00010ba4 <_tcc_apbcmasks>:
   10ba4:	00000100 00000200 00000400              ............

00010bb0 <_tcc_maxs>:
   10bb0:	00ffffff 00ffffff 0000ffff              ............

00010bbc <_tcc_cc_nums>:
   10bbc:	00020204                                ....

00010bc0 <_tcc_ow_nums>:
   10bc0:	00020408                                ....

00010bc4 <tcc_interrupt_vectors.12377>:
   10bc4:	0011100f                                ....

00010bc8 <_tcc_intflag>:
   10bc8:	00000001 00000002 00000004 00000008     ................
   10bd8:	00001000 00002000 00004000 00008000     ..... ...@......
   10be8:	00010000 00020000 00040000 00080000     ................
   10bf8:	21495053 0a212121 00000000 50504128     SPI!!!!.....(APP
   10c08:	52452829 255b2952 255b5d73 00005d64     )(ERR)[%s][%d]..
   10c18:	61766e69 6564696c 636f6920 6320746c     invalide ioclt c
   10c28:	000a646d                                md..

00010c2c <__FUNCTION__.14119>:
   10c2c:	625f6d6e 695f7375 6c74636f 00000000     nm_bus_ioctl....

00010c3c <__FUNCTION__.12377>:
   10c3c:	5f666968 65636572 00657669              hif_receive.

00010c48 <__FUNCTION__.12390>:
   10c48:	5f666968 69676572 72657473 0062635f     hif_register_cb.

00010c58 <__FUNCTION__.12355>:
   10c58:	5f666968 00727369 46494828 69614629     hif_isr.(HIF)Fai
   10c68:	6f74206c 6b617720 74207075 63206568     l to wakup the c
   10c78:	00706968 66696828 49572029 485f4946     hip.(hif) WIFI_H
   10c88:	5f54534f 5f564352 4c525443 6220305f     OST_RCV_CTRL_0 b
   10c98:	66207375 006c6961 66696828 49572029     us fail.(hif) WI
   10ca8:	485f4946 5f54534f 5f564352 4c525443     FI_HOST_RCV_CTRL
   10cb8:	6220315f 66207375 006c6961 66696828     _1 bus fail.(hif
   10cc8:	64612029 73657264 75622073 61662073     ) address bus fa
   10cd8:	00006c69 66696828 6f432029 70757272     il..(hif) Corrup
   10ce8:	20646574 6b636170 53207465 20657a69     ted packet Size 
   10cf8:	7525203d 204c3c20 7525203d 2047202c     = %u <L = %u, G 
   10d08:	7525203d 504f202c 25203d20 3e583230     = %u, OP = %02X>
   10d18:	0000000a 66696828 6e692029 696c6176     ....(hif) invali
   10d28:	72672064 2070756f 00004449 66696828     d group ID..(hif
   10d38:	6f682029 61207473 64207070 276e6469     ) host app didn'
   10d48:	65732074 58522074 6e6f4420 00000065     t set RX Done...
   10d58:	66696828 72572029 20676e6f 657a6953     (hif) Wrong Size
   10d68:	00000000 66696828 61462029 2065736c     ....(hif) False 
   10d78:	65746e69 70757272 6c252074 00000078     interrupt %lx...
   10d88:	66696828 61462029 74206c69 6552206f     (hif) Fail to Re
   10d98:	69206461 7265746e 74707572 67657220     ad interrupt reg
   10da8:	00000000 66696828 41462029 74204c49     ....(hif) FAIL t
   10db8:	6177206f 7075656b 65687420 69686320     o wakeup the chi
   10dc8:	00000070 46494828 61462029 74206c69     p...(HIF) Fail t
   10dd8:	6168206f 656c646e 746e6920 75727265     o handle interru
   10de8:	25207470 72742064 67412079 2e6e6961     pt %d try Again.
   10df8:	00000a2e 66696820 6365725f 65766965     .... hif_receive
   10e08:	6e49203a 696c6176 72612064 656d7567     : Invalid argume
   10e18:	0000746e 20505041 75716552 65747365     nt..APP Requeste
   10e28:	69532064 6920657a 616c2073 72656772     d Size is larger
   10e38:	61687420 6874206e 65722065 65766963      than the recive
   10e48:	75622064 72656666 7a697320 253c2065     d buffer size <%
   10e58:	253c3e64 000a3e64 20505041 75716552     d><%d>..APP Requ
   10e68:	65747365 64412064 73657264 65622073     ested Address be
   10e78:	646e6f79 65687420 63657220 64657669     yond the recived
   10e88:	66756220 20726566 72646461 20737365      buffer address 
   10e98:	20646e61 676e656c 00006874 20705247     and length..GRp 
   10ea8:	6425203f 0000000a                       ? %d....

00010eb0 <__FUNCTION__.12346>:
   10eb0:	5f666968 646e6573 00000000              hif_send....

00010ebc <__FUNCTION__.12362>:
   10ebc:	5f666968 646e6168 695f656c 00007273     hif_handle_isr..

00010ecc <__FUNCTION__.12314>:
   10ecc:	5f6d326d 69666977 0062635f              m2m_wifi_cb.

00010ed8 <__FUNCTION__.12323>:
   10ed8:	5f6d326d 696c6176 65746164 5f70615f     m2m_validate_ap_
   10ee8:	61726170 6574656d 00007372              parameters..

00010ef4 <__FUNCTION__.12497>:
   10ef4:	5f6d326d 69666977 6174735f 705f7472     m2m_wifi_start_p
   10f04:	69766f72 6e6f6973 646f6d5f 00000065     rovision_mode...
   10f14:	50504128 4e492829 00294f46 666e6f43     (APP)(INFO).Conf
   10f24:	7463696c 49206465 20222050 252e7525     licted IP " %u.%
   10f34:	75252e75 2075252e 000a2022 20514552     u.%u.%u " ..REQ 
   10f44:	20746f4e 69666564 2064656e 000a6425     Not defined %d..
   10f54:	41564e49 2044494c 4e494f50 0a524554     INVALID POINTER.
   10f64:	00000000 41564e49 2044494c 44495353     ....INVALID SSID
   10f74:	0000000a 41564e49 2044494c 000a4843     ....INVALID CH..
   10f84:	41564e49 2044494c 50434844 52455320     INVALID DHCP SER
   10f94:	20524556 000a5049 41564e49 2044494c     VER IP..INVALID 
   10fa4:	2059454b 45444e49 00000a58 41564e49     KEY INDEX...INVA
   10fb4:	2044494c 2059454b 455a4953 0000000a     LID KEY SIZE....
   10fc4:	41564e49 2044494c 20504557 0a59454b     INVALID WEP KEY.
   10fd4:	00000000 41564e49 2044494c 48545541     ....INVALID AUTH
   10fe4:	49544e45 49544143 4d204e4f 0a45444f     ENTICATION MODE.
   10ff4:	00000000 204b5350 204e454c 41564e49     ....PSK LEN INVA
   11004:	0a44494c 00000000 44495353 4e454c20     LID.....SSID LEN
   11014:	564e4920 44494c41 0000000a 49204843      INVALID....CH I
   11024:	4c41564e 000a4449 61766e49 2064696c     NVALID..Invalid 
   11034:	20706557 2079656b 65646e69 64252078     Wep key index %d
   11044:	0000000a 61766e49 2064696c 20706557     ....Invalid Wep 
   11054:	2079656b 676e656c 25206874 00000a64     key length %d...
   11064:	65646e75 656e6966 65732064 79742063     undefined sec ty
   11074:	000a6570 4e414353 69614620 2064656c     pe..SCAN Failed 
   11084:	20746552 6425203d 0000000a 5f53505f     Ret = %d...._PS_
   11094:	56524553 205f5245 6e207369 6420746f     SERVER_ is not d
   110a4:	6e696665 000a6465 7473694c 63206e65     efined..Listen c
   110b4:	6e6e6168 73206c65 6c756f68 6e6f2064     hannel should on
   110c4:	6220796c 2c312065 6f203620 31312072     ly be 1, 6 or 11
   110d4:	0000000a 45574f50 41532052 25204556     ....POWER SAVE %
   110e4:	00000a64 41564e49 2044494c 414d4f44     d...INVALID DOMA
   110f4:	4e204e49 0a454d41 00000000              IN NAME.....

00011100 <__FUNCTION__.12358>:
   11100:	5f6d326d 69666977 6e6f635f 7463656e     m2m_wifi_connect
   11110:	0063735f                                _sc.

00011114 <__FUNCTION__.11824>:
   11114:	70696863 6965645f 0074696e 20737542     chip_deinit.Bus 
   11124:	6f727265 31282072 57202e29 20656b61     error (1). Wake 
   11134:	66207075 656c6961 00000064 20737542     up failed...Bus 
   11144:	6f727265 32282072 57202e29 20656b61     error (2). Wake 
   11154:	66207075 656c6961 00000064 636f6c63     up failed...cloc
   11164:	7320736b 6c6c6974 46464f20 6157202e     ks still OFF. Wa
   11174:	7520656b 61662070 64656c69 00000000     ke up failed....
   11184:	696d6e5b 61747320 3a5d7472 69616620     [nmi start]: fai
   11194:	6572206c 72206461 30206765 31313178     l read reg 0x111
   111a4:	2e2e2038 0000002e 6c696166 74206465     8 ......failed t
   111b4:	6564206f 696e692d 6c616974 00657a69     o de-initialize.
   111c4:	6f727245 68772072 20656c69 74697277     Error while writ
   111d4:	20676e69 00676572 6f727245 68772072     ing reg.Error wh
   111e4:	20656c69 64616572 20676e69 00676572     ile reading reg.
   111f4:	6c75705b 5f70756c 6c727463 66203a5d     [pullup_ctrl]: f
   11204:	656c6961 6f742064 61657220 00000064     ailed to read...
   11214:	6c75705b 5f70756c 6c727463 66203a5d     [pullup_ctrl]: f
   11224:	656c6961 6f742064 69727720 00006574     ailed to write..

00011234 <__FUNCTION__.11735>:
   11234:	635f6d6e 656c6b6c 775f7373 00656b61     nm_clkless_wake.

00011244 <__FUNCTION__.12389>:
   11244:	645f6d6e 695f7672 0074696e              nm_drv_init.

00011250 <__FUNCTION__.12396>:
   11250:	645f6d6e 645f7672 696e6965 00000074     nm_drv_deinit...
   11260:	696d6e5b 61747320 3a5d7472 69616620     [nmi start]: fai
   11270:	6e69206c 62207469 000a7375 70696843     l init bus..Chip
   11280:	20444920 0a786c25 00000000 6c696166      ID %lx.....fail
   11290:	74206465 6e65206f 656c6261 746e6920     ed to enable int
   112a0:	75727265 2e737470 00000a2e 6d726946     errupts.....Firm
   112b0:	65726177 72657620 3a202020 2e752520     ware ver   : %u.
   112c0:	252e7525 00000a75 206e694d 76697264     %u.%u...Min driv
   112d0:	76207265 3a207265 2e752520 252e7525     er ver : %u.%u.%
   112e0:	00000a75 72727543 69726420 20726576     u...Curr driver 
   112f0:	3a726576 2e752520 252e7525 00000a75     ver: %u.%u.%u...
   11300:	6d73694d 68637461 72694620 7277616d     Mismatch Firmawr
   11310:	65562065 6f697372 00000a6e 696d6e5b     e Version...[nmi
   11320:	6f747320 203a5d70 70696863 6965645f      stop]: chip_dei
   11330:	2074696e 6c696166 0000000a 696d6e5b     nit fail....[nmi
   11340:	6f747320 203a5d70 6c696166 696e6920      stop]: fail ini
   11350:	75622074 00000a73 000065f4 000065f4     t bus....e...e..
   11360:	00006624 000065a6 000065ca 000065d8     $f...e...e...e..
   11370:	0000660a 0000660a 00006652 00006596     .f...f..Rf...e..
   11380:	000066b4 000066b4 000066b4 000066b4     .f...f...f...f..
   11390:	000065e6                                .e..

00011394 <__FUNCTION__.11751>:
   11394:	5f697073 74697277 65725f65 00000067     spi_write_reg...

000113a4 <__FUNCTION__.11702>:
   113a4:	5f697073 00646d63                       spi_cmd.

000113ac <__FUNCTION__.11759>:
   113ac:	735f6d6e 775f6970 65746972 00000000     nm_spi_write....

000113bc <__FUNCTION__.11710>:
   113bc:	5f697073 5f646d63 00707372              spi_cmd_rsp.

000113c8 <__FUNCTION__.11768>:
   113c8:	5f697073 64616572 6765725f 00000000     spi_read_reg....

000113d8 <__FUNCTION__.11776>:
   113d8:	735f6d6e 725f6970 00646165 696d6e5b     nm_spi_read.[nmi
   113e8:	69707320 46203a5d 656c6961 6d632064      spi]: Failed cm
   113f8:	65722064 6e6f7073 72206573 2c646165     d response read,
   11408:	73756220 72726520 2e2e726f 0000002e      bus error......
   11418:	696d6e5b 69707320 46203a5d 656c6961     [nmi spi]: Faile
   11428:	61642064 72206174 6f707365 2065736e     d data response 
   11438:	64616572 7562202c 72652073 2e726f72     read, bus error.
   11448:	00002e2e 696d6e5b 69707320 46203a5d     ....[nmi spi]: F
   11458:	656c6961 61642064 72206174 6f707365     ailed data respo
   11468:	2065736e 64616572 282e2e2e 78323025     nse read...(%02x
   11478:	00000a29 696d6e5b 69707320 46203a5d     )...[nmi spi]: F
   11488:	656c6961 61642064 62206174 6b636f6c     ailed data block
   11498:	61657220 62202c64 65207375 726f7272      read, bus error
   114a8:	002e2e2e 696d6e5b 69707320 46203a5d     ....[nmi spi]: F
   114b8:	656c6961 61642064 62206174 6b636f6c     ailed data block
   114c8:	63726320 61657220 62202c64 65207375      crc read, bus e
   114d8:	726f7272 002e2e2e 696d6e5b 69707320     rror....[nmi spi
   114e8:	46203a5d 656c6961 6d632064 72772064     ]: Failed cmd wr
   114f8:	2c657469 73756220 72726520 2e2e726f     ite, bus error..
   11508:	0000002e 696d6e5b 69707320 46203a5d     ....[nmi spi]: F
   11518:	656c6961 6d632064 77202c64 65746972     ailed cmd, write
   11528:	67657220 30252820 2e297838 000a2e2e      reg (%08x).....
   11538:	696d6e5b 69707320 46203a5d 656c6961     [nmi spi]: Faile
   11548:	6d632064 65722064 6e6f7073 202c6573     d cmd response, 
   11558:	74697277 65722065 25282067 29783830     write reg (%08x)
   11568:	0a2e2e2e 00000000 696d6e5b 69707320     ........[nmi spi
   11578:	46203a5d 656c6961 6d632064 72202c64     ]: Failed cmd, r
   11588:	20646165 20676572 38302528 2e2e2978     ead reg (%08x)..
   11598:	00000a2e 696d6e5b 69707320 46203a5d     ....[nmi spi]: F
   115a8:	656c6961 6d632064 65722064 6e6f7073     ailed cmd respon
   115b8:	202c6573 64616572 67657220 30252820     se, read reg (%0
   115c8:	2e297838 000a2e2e 696d6e5b 69707320     8x).....[nmi spi
   115d8:	46203a5d 656c6961 61642064 72206174     ]: Failed data r
   115e8:	2e646165 00002e2e 696d6e5b 69707320     ead.....[nmi spi
   115f8:	46203a5d 656c6961 6e692064 6e726574     ]: Failed intern
   11608:	72206c61 20646165 746f7270 6c6f636f     al read protocol
   11618:	74697720 52432068 6e6f2043 6572202c      with CRC on, re
   11628:	69727974 7720676e 20687469 20435243     tyring with CRC 
   11638:	2e66666f 00002e2e 696d6e5b 69707320     off.....[nmi spi
   11648:	46203a5d 656c6961 6e692064 6e726574     ]: Failed intern
   11658:	72206c61 20646165 746f7270 6c6f636f     al read protocol
   11668:	002e2e2e 696d6e5b 69707320 46203a5d     ....[nmi spi]: F
   11678:	656c6961 6e692064 6e726574 77206c61     ailed internal w
   11688:	65746972 6f727020 6f636f74 6572206c     rite protocol re
   11698:	2e2e2e67 00000000 696d6e5b 69707320     g.......[nmi spi
   116a8:	46203a5d 206c6961 20646d63 64616572     ]: Fail cmd read
   116b8:	69686320 64692070 002e2e2e 696d6e5b      chip id....[nmi
   116c8:	69707320 46203a5d 656c6961 6d632064      spi]: Failed cm
   116d8:	72202c64 20646165 636f6c62 2528206b     d, read block (%
   116e8:	29783830 0a2e2e2e 00000000 696d6e5b     08x)........[nmi
   116f8:	69707320 46203a5d 656c6961 6d632064      spi]: Failed cm
   11708:	65722064 6e6f7073 202c6573 64616572     d response, read
   11718:	6f6c6220 28206b63 78383025 2e2e2e29      block (%08x)...
   11728:	0000000a 696d6e5b 69707320 46203a5d     ....[nmi spi]: F
   11738:	656c6961 6c622064 206b636f 61746164     ailed block data
   11748:	61657220 2e2e2e64 00000000 696d6e5b      read.......[nmi
   11758:	69707320 46203a5d 656c6961 6d632064      spi]: Failed cm
   11768:	77202c64 65746972 6f6c6220 28206b63     d, write block (
   11778:	78383025 2e2e2e29 0000000a 696d6e5b     %08x).......[nmi
   11788:	69707320 203a5d20 6c696146 63206465      spi ]: Failed c
   11798:	7220646d 6f707365 2c65736e 69727720     md response, wri
   117a8:	62206574 6b636f6c 30252820 2e297838     te block (%08x).
   117b8:	000a2e2e 696d6e5b 69707320 46203a5d     ....[nmi spi]: F
   117c8:	656c6961 61642064 62206174 6b636f6c     ailed data block
   117d8:	646d6320 69727720 202c6574 20737562      cmd write, bus 
   117e8:	6f727265 2e2e2e72 00000000 696d6e5b     error.......[nmi
   117f8:	69707320 46203a5d 656c6961 61642064      spi]: Failed da
   11808:	62206174 6b636f6c 69727720 202c6574     ta block write, 
   11818:	20737562 6f727265 2e2e2e72 00000000     bus error.......
   11828:	696d6e5b 69707320 46203a5d 656c6961     [nmi spi]: Faile
   11838:	61642064 62206174 6b636f6c 63726320     d data block crc
   11848:	69727720 202c6574 20737562 6f727265      write, bus erro
   11858:	2e2e2e72 00000000 696d6e5b 69707320     r.......[nmi spi
   11868:	46203a5d 656c6961 6c622064 206b636f     ]: Failed block 
   11878:	61746164 69727720 2e2e6574 0000002e     data write......

00011888 <__FUNCTION__.11741>:
   11888:	5f697073 61746164 6972775f 00006574     spi_data_write..

00011898 <crc7_syndrome_table>:
   11898:	1b120900 3f362d24 535a4148 777e656c     ....$-6?HAZSle~w
   118a8:	020b1019 262f343d 4a435851 6e677c75     ....=4/&QXCJu|gn
   118b8:	29203b32 0d041f16 6168737a 454c575e     2; )....zsha^WLE
   118c8:	3039222b 141d060f 78716a63 5c554e47     +"90....cjqxGNU\
   118d8:	7f766d64 5b524940 373e252c 131a0108     dmv.@IR[,%>7....
   118e8:	666f747d 424b5059 2e273c35 0a031811     }tofYPKB5<'.....
   118f8:	4d445f56 69607b72 050c171e 2128333a     V_DMr{`i....:3(!
   11908:	545d464f 7079626b 1c150e07 38312a23     OF]Tkbyp....#*18
   11918:	5a534841 7e776c65 121b0009 363f242d     AHSZelw~....-$?6
   11928:	434a5158 676e757c 0b021910 2f263d34     XQJC|ung....4=&/
   11938:	68617a73 4c455e57 2029323b 040d161f     szahW^EL;2) ....
   11948:	7178636a 555c474e 39302b22 1d140f06     jcxqNG\U"+09....
   11958:	3e372c25 1a130801 767f646d 525b4049     %,7>....md.vI@[R
   11968:	272e353c 030a1118 6f667d74 4b425950     <5.'....t}foPYBK
   11978:	0c051e17 28213a33 444d565f 6069727b     ....3:!(_VMD{ri`
   11988:	151c070e 3138232a 5d544f46 79706b62     ....*#81FOT]bkpy

00011998 <__FUNCTION__.11726>:
   11998:	5f697073 61746164 6165725f 00000064     spi_data_read...
   119a8:	52524528 75432952 6e657272 253c2074     (ERRR)Current <%
   119b8:	000a3e64 20494e53 65637845 20736465     d>..SNI Exceeds 
   119c8:	2078614d 676e654c 00006874 6e6b6e55     Max Length..Unkn
   119d8:	206e776f 204c5353 6b636f53 4f207465     own SSL Socket O
   119e8:	6f697470 6425206e 0000000a 20746f4e     ption %d....Not 
   119f8:	204c5353 6b636f53 00007465 42000800     SSL Socket.....B
   11a08:	42000c00 42001000 42001400 42001800     ...B...B...B...B
   11a18:	42001c00 0c0b0a09 00000e0d 0000861e     ...B............
   11a28:	0000861a 0000861a 0000867a 0000867a     ........z...z...
   11a38:	00008634 00008624 0000863a 00008668     4...$...:...h...
   11a48:	0000884c 0000882c 0000882c 000088ac     L...,...,.......
   11a58:	0000883e 0000885a 00008830 00008868     >...Z...0...h...
   11a68:	0000889c 00783225 30257830 30257832     ....%2x.0x%02x%0
   11a78:	30257832 30257832 30257832 30257832     2x%02x%02x%02x%0
   11a88:	00007832 75716572 43747365 626c6c61     2x..requestCallb
   11a98:	206b6361 7265202f 20726f72 65646f63     ack / error code
   11aa8:	20642520 7245202f 20726f72 21212121      %d / Error !!!!
   11ab8:	000a0d21 75716572 43747365 626c6c61     !...requestCallb
   11ac8:	206b6361 7830203a 202c7825 202c6425     ack : 0x%x, %d, 
   11ad8:	202c6425 0a0d7325 00000a0d 204d564e     %d, %s......NVM 
   11ae8:	74696e69 72726520 000d726f 68737570     init error..push
   11af8:	6c6c6143 6b636162 65202f20 726f7272     Callback / error
   11b08:	646f6320 64252065 45202f20 726f7272      code %d / Error
   11b18:	21212120 0a0d2121 00000000 68737570      !!!!!......push
   11b28:	6c6c6143 6b636162 30203a20 2c782578     Callback : 0x%x,
   11b38:	0d732520 0000000a 20746f6e 73657270      %s.....not pres
   11b48:	00746e65 20415057 75207369 0a646573     ent.WPA is used.
   11b58:	00000000 41202d2d 6c656d74 4e495720     ....-- Atmel WIN
   11b68:	30353143 203a2030 66756c46 2d207966     C1500 : Fluffy -
   11b78:	2d0a0d2d 4153202d 3132444d 4c50585f     -..-- SAMD21_XPL
   11b88:	454e4941 52505f44 2d2d204f 2d2d0a0d     AINED_PRO --..--
   11b98:	6d6f4320 656c6970 41203a64 20207270      Compiled: Apr  
   11ba8:	30322031 31203631 33303a32 2033353a     1 2016 12:03:53 
   11bb8:	0a0d2d2d 00000000 74687320 73203163     --...... shtc1 s
   11bc8:	6f736e65 73692072 0d732520 00000a0a     ensor is %s.....
   11bd8:	6e69616d 69202f20 5774696e 4d696669     main / initWifiM
   11be8:	6c75646f 72452065 20726f72 21212121     odule Error !!!!
   11bf8:	000a0d21 75626564 3a325f67 616f6c20     !...debug_2: loa
   11c08:	74655364 676e6974 50724f73 69766f72     dSettingsOrProvi
   11c18:	6e6f6973 72616f42 65722064 6e727574     sionBoard return
   11c28:	6c617620 3d206575 0d642520 00000a0a      value = %d.....
   11c38:	6e69616d 57202f20 20694669 6e6e6f63     main / WiFi conn
   11c48:	69746365 69206e6f 6f642073 0a0d656e     ection is done..
   11c58:	00000000 62616e55 7420656c 6572206f     ....Unable to re
   11c68:	4d206461 61204341 65726464 0d217373     ad MAC address!.
   11c78:	0000000a 2063616d 72646461 20737365     ....mac address 
   11c88:	5d64255b 30203d20 0a782578 00000000     [%d] = 0x%x.....
   11c98:	2063616d 72646461 20737365 7325203d     mac address = %s
   11ca8:	0000000a 716d4936 506f7a48 5a625754     ....6ImqHzoPTWbZ
   11cb8:	38785450 4d555065 7970784a 53715277     PTx8ePUMJxpywRqS
   11cc8:	6c366371 5a4f4d65 4a4d3870 00000000     qc6leMOZp8MJ....
   11cd8:	32516a6b 6d714837 37394832 62584266     kjQ27Hqm2H97fBXb
   11ce8:	62596d55 6e624347 48656465 745a5733     UmYbGCbnedeH3WZt
   11cf8:	76473258 6a433255 00000000 616c6564     X2GvU2Cj....dela
   11d08:	20646579 65732033 00000a63 20636f76     yed 3 sec...voc 
   11d18:	6425203d 62707020 00000009 20326f63     = %d ppb....co2 
   11d28:	6425203d 6d707020 0000000a 20534d41     = %d ppm....AMS 
   11d38:	7361654d 6d657275 20746e65 6c696166     Measurement fail
   11d48:	202e6465 65747845 6f69736e 6f422d6e     ed. Extension-Bo
   11d58:	20647261 63736964 656e6e6f 64657463     ard disconnected
   11d68:	00000a3f 706d6574 25203d20 00000964     ?...temp = %d...
   11d78:	3d206872 09642520 00000000 20776564     rh = %d.....dew 
   11d88:	6425203d 00000a0a 43544853 654d2031     = %d....SHTC1 Me
   11d98:	72757361 6e656d65 61662074 64656c69     asurement failed
   11da8:	7845202e 736e6574 2d6e6f69 72616f42     . Extension-Boar
   11db8:	69642064 6e6f6373 7463656e 0a3f6465     d disconnected?.
   11dc8:	00000000 6574227b 7265706d 72757461     ....{"temperatur
   11dd8:	203a2265 222c6425 696d7568 79746964     e": %d,"humidity
   11de8:	25203a22 64222c64 6f707765 22746e69     ": %d,"dewpoint"
   11df8:	6425203a 6322202c 3a22326f 2c642520     : %d, "co2": %d,
   11e08:	6f762220 203a2263 202c6425 76656422      "voc": %d, "dev
   11e18:	22656369 2522203a 007d2273 202a2a2a     ice": "%s"}.*** 
   11e28:	54534f50 4d4f4320 444e414d 2a2a2a20     POST COMMAND ***
   11e38:	73250a20 00000000 742f312f 31747365      .%s..../1/test1
   11e48:	61746164 00000000 204e5552 4e554f43     data....RUN COUN
   11e58:	20524554 25203e3d 00000a64 69766943     TER => %d...Civi
   11e68:	61482063 00006c6c 6c363531 79616661     c Hall..156lafay
   11e78:	65747465 00000000 31676f6c 00000030     ette....log10...
   11e88:	0000a19e 0000a166 0000a182 0000a15a     ....f.......Z...
   11e98:	0000a182 0000a0c6 0000a182 0000a15a     ............Z...
   11ea8:	0000a166 0000a166 0000a0c6 0000a15a     f...f.......Z...
   11eb8:	0000a204 0000a204 0000a204 0000a188     ................
   11ec8:	0000a166 0000a166 0000a24e 0000a158     f...f...N...X...
   11ed8:	0000a24e 0000a0c6 0000a24e 0000a158     N.......N...X...
   11ee8:	0000a166 0000a166 0000a0c6 0000a158     f...f.......X...
   11ef8:	0000a204 0000a204 0000a204 0000a232     ............2...
   11f08:	0000ab6c 0000aa5a 0000ab40 0000aa46     l...Z...@...F...
   11f18:	0000ab40 0000ab4a 0000ab40 0000aa46     @...J...@...F...
   11f28:	0000aa5a 0000aa5a 0000ab4a 0000aa46     Z...Z...J...F...
   11f38:	0000aa50 0000aa50 0000aa50 0000adb2     P...P...P.......
   11f48:	0000b400 0000b3de 0000b3de 0000b3d2     ................
   11f58:	0000b2c6 0000b2c6 0000b3c6 0000b3d2     ................
   11f68:	0000b2c6 0000b3c6 0000b2c6 0000b3d2     ................
   11f78:	0000b2ca 0000b2ca 0000b2ca 0000b5e0     ................
   11f88:	00000043                                C...

00011f8c <_global_impure_ptr>:
   11f8c:	20000060 2b302d23 6c680020 6665004c     `.. #-0+ .hlL.ef
   11f9c:	47464567 32313000 36353433 41393837     gEFG.0123456789A
   11fac:	45444342 31300046 35343332 39383736     BCDEF.0123456789
   11fbc:	64636261 53006665 65636375 4e007373     abcdef.Success.N
   11fcc:	6f20746f 72656e77 206f4e00 68637573     ot owner.No such
   11fdc:	6c696620 726f2065 72696420 6f746365      file or directo
   11fec:	4e007972 7573206f 70206863 65636f72     ry.No such proce
   11ffc:	49007373 7265746e 74707572 73206465     ss.Interrupted s
   1200c:	65747379 6163206d 49006c6c 65204f2f     ystem call.I/O e
   1201c:	726f7272 206f4e00 68637573 76656420     rror.No such dev
   1202c:	20656369 6120726f 65726464 41007373     ice or address.A
   1203c:	6c206772 20747369 206f6f74 676e6f6c     rg list too long
   1204c:	65784500 6f662063 74616d72 72726520     .Exec format err
   1205c:	5300726f 656b636f 6c612074 64616572     or.Socket alread
   1206c:	6f632079 63656e6e 00646574 20646142     y connected.Bad 
   1207c:	656c6966 6d756e20 00726562 63206f4e     file number.No c
   1208c:	646c6968 006e6572 74736544 74616e69     hildren.Destinat
   1209c:	206e6f69 72646461 20737365 75716572     ion address requ
   120ac:	64657269 206f4e00 65726f6d 6f727020     ired.No more pro
   120bc:	73736563 4e007365 6520746f 67756f6e     cesses.Not enoug
   120cc:	70732068 00656361 6d726550 69737369     h space.Permissi
   120dc:	64206e6f 65696e65 61420064 64612064     on denied.Bad ad
   120ec:	73657264 65440073 65636976 20726f20     dress.Device or 
   120fc:	6f736572 65637275 73756220 69460079     resource busy.Fi
   1210c:	6520656c 74736978 72430073 2d73736f     le exists.Cross-
   1211c:	69766564 6c206563 006b6e69 73206f4e     device link.No s
   1212c:	20686375 69766564 4e006563 6120746f     uch device.Not a
   1213c:	72696420 6f746365 48007972 2074736f      directory.Host 
   1214c:	64207369 006e776f 6e6e6f43 69746365     is down.Connecti
   1215c:	61206e6f 6165726c 69207964 7270206e     on already in pr
   1216c:	6572676f 49007373 20612073 65726964     ogress.Is a dire
   1217c:	726f7463 6e490079 696c6176 72612064     ctory.Invalid ar
   1218c:	656d7567 4e00746e 6f777465 69206b72     gument.Network i
   1219c:	7265746e 65636166 20736920 20746f6e     nterface is not 
   121ac:	666e6f63 72756769 43006465 656e6e6f     configured.Conne
   121bc:	6f697463 6261206e 6574726f 79622064     ction aborted by
   121cc:	74656e20 6b726f77 6f6f5400 6e616d20      network.Too man
   121dc:	706f2079 66206e65 73656c69 206e6920     y open files in 
   121ec:	74737973 46006d65 20656c69 63736564     system.File desc
   121fc:	74706972 7620726f 65756c61 6f6f7420     riptor value too
   1220c:	72616c20 4e006567 6120746f 61686320      large.Not a cha
   1221c:	74636172 64207265 63697665 65540065     racter device.Te
   1222c:	66207478 20656c69 79737562 6c694600     xt file busy.Fil
   1223c:	6f742065 616c206f 00656772 74736f48     e too large.Host
   1224c:	20736920 65726e75 61686361 00656c62      is unreachable.
   1225c:	73206f4e 65636170 66656c20 6e6f2074     No space left on
   1226c:	76656420 00656369 20746f4e 70707573      device.Not supp
   1227c:	6574726f 6c490064 6167656c 6573206c     orted.Illegal se
   1228c:	52006b65 2d646165 796c6e6f 6c696620     ek.Read-only fil
   1229c:	79732065 6d657473 6f6f5400 6e616d20     e system.Too man
   122ac:	696c2079 00736b6e 6b6f7242 70206e65     y links.Broken p
   122bc:	00657069 6874614d 74616d65 20736369     ipe.Mathematics 
   122cc:	75677261 746e656d 74756f20 20666f20     argument out of 
   122dc:	616d6f64 6f206e69 75662066 6974636e     domain of functi
   122ec:	52006e6f 6c757365 6f742074 616c206f     on.Result too la
   122fc:	00656772 6d206f4e 61737365 6f206567     rge.No message o
   1230c:	65642066 65726973 79742064 49006570     f desired type.I
   1231c:	746e6564 65696669 65722072 65766f6d     dentifier remove
   1232c:	6c490064 6167656c 7962206c 73206574     d.Illegal byte s
   1233c:	65757165 0065636e 64616544 6b636f6c     equence.Deadlock
   1234c:	74654e00 6b726f77 20736920 65726e75     .Network is unre
   1235c:	61686361 00656c62 6c206f4e 006b636f     achable.No lock.
   1236c:	20746f4e 74732061 6d616572 72745300     Not a stream.Str
   1237c:	206d6165 74636f69 6974206c 756f656d     eam ioctl timeou
   1238c:	6f4e0074 72747320 206d6165 6f736572     t.No stream reso
   1239c:	65637275 69560073 61757472 6963206c     urces.Virtual ci
   123ac:	69756372 73692074 6e6f6720 72500065     rcuit is gone.Pr
   123bc:	636f746f 65206c6f 726f7272 6b6e5500     otocol error.Unk
   123cc:	6e776f6e 6f727020 6f636f74 754d006c     nown protocol.Mu
   123dc:	6869746c 6120706f 6d657474 64657470     ltihop attempted
   123ec:	64614200 73656d20 65676173 6e754600     .Bad message.Fun
   123fc:	6f697463 6f6e206e 6d692074 6d656c70     ction not implem
   1240c:	65746e65 69440064 74636572 2079726f     ented.Directory 
   1241c:	20746f6e 74706d65 69460079 6f20656c     not empty.File o
   1242c:	61702072 6e206874 20656d61 206f6f74     r path name too 
   1243c:	676e6f6c 6f6f5400 6e616d20 79732079     long.Too many sy
   1244c:	6c6f626d 6c206369 736b6e69 206f4e00     mbolic links.No 
   1245c:	66667562 73207265 65636170 61766120     buffer space ava
   1246c:	62616c69 4e00656c 6164206f 41006174     ilable.No data.A
   1247c:	65726464 66207373 6c696d61 6f6e2079     ddress family no
   1248c:	75732074 726f7070 20646574 70207962     t supported by p
   1249c:	6f746f72 206c6f63 696d6166 5000796c     rotocol family.P
   124ac:	6f746f72 206c6f63 6e6f7277 79742067     rotocol wrong ty
   124bc:	66206570 7320726f 656b636f 6f530074     pe for socket.So
   124cc:	74656b63 65706f20 69746172 6f206e6f     cket operation o
   124dc:	6f6e206e 6f732d6e 74656b63 6f725000     n non-socket.Pro
   124ec:	6f636f74 6f6e206c 76612074 616c6961     tocol not availa
   124fc:	00656c62 6e6e6f43 69746365 72206e6f     ble.Connection r
   1250c:	73756665 43006465 656e6e6f 6f697463     efused.Connectio
   1251c:	6572206e 20746573 70207962 00726565     n reset by peer.
   1252c:	72646441 20737365 65726c61 20796461     Address already 
   1253c:	75206e69 41006573 65726464 6e207373     in use.Address n
   1254c:	6120746f 6c696176 656c6261 666f5300     ot available.Sof
   1255c:	72617774 61632065 64657375 6e6f6320     tware caused con
   1256c:	7463656e 206e6f69 726f6261 6f530074     nection abort.So
   1257c:	74656b63 20736920 20746f6e 6e6e6f63     cket is not conn
   1258c:	65746365 6f530064 74656b63 20736920     ected.Socket is 
   1259c:	65726c61 20796461 6e6e6f63 65746365     already connecte
   125ac:	704f0064 74617265 206e6f69 636e6163     d.Operation canc
   125bc:	64656c65 61745300 6e206574 7220746f     eled.State not r
   125cc:	766f6365 62617265 5000656c 69766572     ecoverable.Previ
   125dc:	2073756f 656e776f 69642072 4f006465     ous owner died.O
   125ec:	61726570 6e6f6974 746f6e20 70757320     peration not sup
   125fc:	74726f70 6f206465 6f73206e 74656b63     ported on socket
   1260c:	6c615600 74206575 6c206f6f 65677261     .Value too large
   1261c:	726f6620 66656420 64656e69 74616420      for defined dat
   1262c:	79742061 4d006570 61737365 74206567     a type.Message t
   1263c:	6c206f6f 00676e6f 6e6e6f43 69746365     oo long.Connecti
   1264c:	74206e6f 64656d69 74756f20 20200000              on timed out.

00012659 <_ctype_>:
   12659:	20202000 20202020 28282020 20282828     .         ((((( 
   12669:	20202020 20202020 20202020 20202020                     
   12679:	10108820 10101010 10101010 10101010      ...............
   12689:	04040410 04040404 10040404 10101010     ................
   12699:	41411010 41414141 01010101 01010101     ..AAAAAA........
   126a9:	01010101 01010101 01010101 10101010     ................
   126b9:	42421010 42424242 02020202 02020202     ..BBBBBB........
   126c9:	02020202 02020202 02020202 10101010     ................
   126d9:	00000020 00000000 00000000 00000000      ...............
	...

0001275c <__sf_fake_stdin>:
	...

0001277c <__sf_fake_stdout>:
	...

0001279c <__sf_fake_stderr>:
	...
   127bc:	000127da 000127dd 000127e0 61462d41     .'...'...'..A-Fa
   127cc:	3938662d 33323130 37363534 2d2b005d     -f8901234567].+-
   127dc:	00303000 00005878                       .00.xX..

000127e4 <_init>:
   127e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   127e6:	46c0      	nop			; (mov r8, r8)
   127e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
   127ea:	bc08      	pop	{r3}
   127ec:	469e      	mov	lr, r3
   127ee:	4770      	bx	lr

000127f0 <__init_array_start>:
   127f0:	000000d9 	.word	0x000000d9

000127f4 <_fini>:
   127f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   127f6:	46c0      	nop			; (mov r8, r8)
   127f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
   127fa:	bc08      	pop	{r3}
   127fc:	469e      	mov	lr, r3
   127fe:	4770      	bx	lr

00012800 <__fini_array_start>:
   12800:	000000b1 	.word	0x000000b1
